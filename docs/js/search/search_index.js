var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.555,1,1.228]],["body/components/AppComponent.html",[0,0.904,1,2.134,2,1.956,3,0.138,4,0.097,5,1.516,6,1.516,7,1.516,8,0.111,9,3.939,10,1.516,11,2.918,12,2.652,13,3.14,14,2.02,15,5.998,16,0.289,17,1.392,18,7.193,19,1.35,20,3.568,21,3.298,22,5.749,23,6.233,24,2.887,25,4.137,26,6.233,27,3.696,28,3.458,29,1.301,30,3.458,31,1.27,32,4.502,33,1.013,34,0.012,35,0.457,36,0.289,37,0.896,38,4.502,39,1.045,40,1.336,41,0.249,42,0.625,43,1.674,44,1.674,45,1.674,46,1.858,47,1.181,48,3.116,49,3.568,50,3.939,51,3.568,52,3.939,53,2.467,54,2.164,55,2.256,56,3.939,57,2.467,58,0.138,59,0.582,60,2.334,61,4.502,62,4.502,63,7.492,64,2.357,65,2.256,66,2.467,67,4.502,68,4.384,69,4.502,70,4.502,71,4.502,72,3.939,73,3.939,74,0.501,75,4.09,76,2.886,77,3.568,78,4.502,79,4.502,80,1.674,81,4.502,82,2.467,83,4.502,84,4.754,85,3.939,86,3.939,87,4.502,88,4.502,89,4.502,90,0.372,91,2.02,92,2.02,93,1.516,94,2.423,95,1.516,96,1.516,97,1.336,98,1.516,99,1.516,100,1.336,101,1.516,102,1.516,103,1.336,104,1.516,105,1.336,106,1.516,107,1.336,108,0.521,109,1.516,110,1.336,111,1.516,112,1.516,113,1.336,114,1.468,115,1.422,116,2.272,117,1.336,118,1.468,119,1.516,120,1.336,121,1.516,122,1.336,123,1.573,124,0.68,125,2.02,126,1.378,127,0.623,128,1.336,129,1.295,130,1.516,131,1.336,132,1.516,133,1.336,134,1.516,135,1.336,136,0.541,137,1.336,138,1.516,139,1.336,140,1.516,141,1.295,142,1.516,143,1.336,144,1.516,145,1.378,146,1.336,147,2.02,148,1.336,149,1.336,150,1.516,151,1.336,152,1.516,153,1.516,154,0.006,155,0.008,156,0.006]],["title/modules/AppModule.html",[157,1.267,158,3.025]],["body/modules/AppModule.html",[1,2.422,3,0.125,4,0.088,8,0.157,22,4.095,23,4.439,26,4.439,34,0.012,41,0.268,42,0.565,43,2.083,44,1.513,47,1.067,48,3.77,49,3.225,50,3.561,51,3.225,52,3.561,56,3.561,58,0.172,59,0.526,90,0.337,103,2.219,105,2.316,107,2.219,113,2.316,115,1.77,117,2.316,135,2.316,137,2.316,139,2.316,149,2.316,154,0.006,155,0.008,156,0.006,157,1.246,158,6.32,159,1.68,160,1.809,161,3.079,162,3.079,163,2.846,164,1.809,165,3.561,166,3.561,167,3.561,168,3.561,169,3.561,170,5.099,171,3.595,172,4.793,173,2.398,174,1.88,175,1.809,176,3.225,177,5.602,178,2.587,179,5.602,180,4.682,181,5.602,182,2.13,183,2.587,184,5.602,185,4.901,186,2.775,187,5.602,188,4.07,189,5.602,190,1.416,191,3.819,192,3.561,193,3.561,194,3.819,195,3.561,196,2.775,197,2.341,198,2.341,199,2.04,200,5.602,201,2.13,202,5.602,203,4.07,204,3.561,205,3.819,206,3.59,207,3.225,208,3.59,209,3.225,210,4.095,211,2.975,212,3.225,213,4.07,214,4.901,215,3.561,216,4.07,217,4.901,218,3.225,219,3.561,220,4.901,221,3.225,222,3.561,223,4.901,224,4.07,225,4.07,226,3.225,227,4.901,228,3.561,229,4.07,230,4.095,231,3.561,232,3.819,233,2.608,234,2.775,235,4.07,236,4.07,237,4.07,238,3.561,239,4.07,240,3.561,241,2.975,242,4.901,243,3.561,244,2.975,245,3.561,246,4.07,247,4.07,248,3.225,249,4.07,250,4.07,251,3.225,252,4.07,253,4.07,254,3.225,255,4.07,256,3.225,257,3.561,258,1.566,259,1.742,260,4.07,261,4.07,262,4.07,263,4.07,264,3.561,265,4.07,266,4.07,267,2.312,268,4.07,269,6.406,270,4.07,271,3.225,272,4.07,273,4.07,274,5.602,275,4.07]],["title/modules/AppRoutingModule.html",[157,1.267,170,2.822]],["body/modules/AppRoutingModule.html",[3,0.19,4,0.133,8,0.152,12,2.241,34,0.012,41,0.225,42,0.857,58,0.19,59,0.798,154,0.009,155,0.01,156,0.009,159,2.549,164,2.744,170,4.99,178,2.852,183,3.381,190,2.148,267,2.549,276,6.175,277,6.175,278,3.831,279,4.083,280,1.571,281,4.887,282,5.403,283,5.403,284,4.894,285,6.825,286,6.175,287,6.175,288,7.319,289,5.35,290,7.319,291,6.175,292,6.175,293,1.229,294,1.083,295,6.175,296,6.175,297,6.175]],["title/injectables/CacheService.html",[298,1.394,299,2.822]],["body/injectables/CacheService.html",[3,0.134,4,0.094,8,0.107,13,2.287,16,0.28,17,1.364,19,1.323,31,1.68,33,1.669,34,0.012,35,0.45,36,0.526,37,1.322,39,1.364,41,0.218,42,0.606,58,0.134,59,0.565,60,2.411,74,0.825,80,2.186,82,3.221,154,0.006,155,0.008,156,0.006,180,5.194,182,2.287,258,2.556,259,2.844,280,1.111,298,1.98,299,4.008,300,2.394,301,3.822,302,0.654,303,5.632,304,2.303,305,7.935,306,6.644,307,6.644,308,7.416,309,5.878,310,3.462,311,5.878,312,4.856,313,5.878,314,1.077,315,4.53,316,4.369,317,5.143,318,0.954,319,1.694,320,5.878,321,7.106,322,1.328,323,4.369,324,2.647,325,3.221,326,2.27,327,4.369,328,1.031,329,5.878,330,4.369,331,4.659,332,6.217,333,4.659,334,4.369,335,4.753,336,4.369,337,2.8,338,1.624,339,2.8,340,4.369,341,5.878,342,4.369,343,4.53,344,2.394,345,2.394,346,5.878,347,4.369,348,4.369,349,4.369,350,5.813,351,4.369,352,4.369,353,4.369,354,4.369,355,6.644,356,5.878,357,6.644,358,7.106,359,5.878,360,5.878,361,4.369,362,3.462,363,4.369,364,4.369,365,4.369,366,4.369,367,1.111,368,4.369,369,4.369,370,6.644,371,4.369,372,4.369,373,3.822,374,6.644,375,5.878,376,4.369,377,4.369,378,6.644,379,3.822,380,4.369,381,4.369,382,4.369,383,3.193,384,4.369,385,4.369,386,1.111,387,4.369,388,4.369,389,4.369,390,4.369,391,4.369,392,2.8,393,2.8,394,3.822,395,4.369,396,4.369]],["title/components/CollapsibleListComponent.html",[0,0.555,97,1.228]],["body/components/CollapsibleListComponent.html",[0,0.879,1,1.263,2,1.884,3,0.131,4,0.092,5,1.434,6,1.434,7,1.434,8,0.105,10,1.434,11,2.906,12,2.641,14,1.946,16,0.273,17,1.341,19,1.476,31,1.74,34,0.012,35,0.391,36,0.497,39,1.341,40,1.714,41,0.178,42,0.591,58,0.131,59,0.55,74,0.818,80,2.148,90,0.352,91,1.946,92,1.946,93,1.434,94,2.368,95,1.434,96,1.434,97,2.086,98,2.657,99,1.434,100,1.263,101,1.434,102,1.434,103,1.263,104,1.434,105,1.263,106,1.434,107,1.263,108,0.492,109,1.434,110,1.263,111,1.434,112,1.434,113,1.263,114,1.389,115,1.345,116,2.208,117,1.263,118,1.389,119,1.434,120,1.263,121,1.434,122,1.263,123,1.515,124,0.665,125,1.946,126,1.303,127,0.609,128,1.263,129,1.225,130,1.434,131,1.263,132,1.434,133,1.263,134,1.434,135,1.263,136,0.511,137,1.263,138,1.434,139,1.263,140,1.434,141,1.225,142,1.434,143,1.263,144,1.434,145,1.303,146,1.263,147,1.946,148,1.263,149,1.263,150,1.434,151,1.263,152,1.434,153,1.434,154,0.006,155,0.008,156,0.006,302,0.643,304,2.293,314,0.942,317,6.632,326,2.25,397,1.481,398,7.241,399,6.559,400,3.725,401,1.946,402,3.286,403,3.703,404,2.01,405,6.557,406,5.777,407,6.557,408,6.557,409,6.632,410,3.125,411,7.032,412,3.166,413,1.928,414,6.557,415,6.557,416,3.973,417,6.557,418,1.928,419,5.777,420,4.258,421,4.223,422,4.258,423,7.032,424,4.258,425,4.258,426,6.557,427,4.258,428,4.258,429,4.258,430,4.258,431,4.258,432,4.258,433,2.223,434,4.249,435,4.223,436,3.725,437,3.725,438,5.737,439,4.258,440,4.258,441,4.258,442,4.258,443,4.258,444,4.258,445,4.258]],["title/components/ConnectErrorComponent.html",[0,0.555,100,1.228]],["body/components/ConnectErrorComponent.html",[0,0.932,1,1.423,2,2.039,3,0.147,4,0.103,5,1.615,6,1.615,7,1.615,8,0.118,10,1.615,11,2.931,12,2.664,14,2.106,16,0.308,19,1.566,31,1.66,34,0.012,35,0.423,36,0.308,41,0.147,42,0.666,58,0.147,59,0.62,74,0.821,90,0.397,91,2.106,92,2.106,93,1.615,94,2.483,95,1.615,96,1.615,97,1.423,98,1.615,99,1.615,100,2.188,101,2.728,102,1.615,103,1.423,104,1.615,105,1.423,106,1.615,107,1.423,108,0.555,109,1.615,110,1.423,111,1.615,112,1.615,113,1.423,114,1.564,115,1.515,116,2.343,117,1.423,118,1.564,119,1.615,120,1.423,121,1.615,122,1.423,123,1.64,124,0.697,125,2.106,126,1.468,127,0.638,128,1.423,129,1.38,130,1.615,131,1.423,132,1.615,133,1.423,134,1.615,135,1.423,136,0.576,137,1.423,138,1.615,139,1.423,140,1.615,141,1.38,142,1.615,143,1.423,144,1.615,145,1.468,146,1.423,147,2.106,148,1.423,149,1.423,150,1.615,151,1.423,152,1.615,153,1.615,154,0.007,155,0.009,156,0.007,259,2.053,304,2.133,326,2.257,335,4.459,397,1.669,404,2.176,412,3.427,434,4.191,446,6.988,447,6.33,448,4.196,449,4.264,450,6.958,451,6.254,452,7.648,453,1.887,454,5.027,455,1.887,456,4.264,457,6.958,458,6.254,459,4.796,460,4.796,461,4.796,462,4.796,463,4.264,464,4.571,465,3.506,466,4.796]],["title/interfaces/ContainsFilter.html",[467,0.408,468,1.021]],["body/interfaces/ContainsFilter.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.668,34,0.012,35,0.537,36,0.543,41,0.18,58,0.262,74,0.386,90,0.413,108,0.788,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.689,294,1.029,302,0.834,314,1.18,318,1.092,319,1.502,322,0.647,328,1.523,367,1.272,386,1.272,413,0.909,418,0.909,453,0.855,455,1.585,467,0.84,468,1.234,469,0.909,470,0.881,471,1.694,472,1.649,473,1.787,474,1.842,475,1.842,476,1.842,477,1.974,478,1.919,479,1.587,480,1.63,481,0.881,482,0.937,483,1.362,484,0.756,485,0.756,486,0.78,487,1.733,488,1.058,489,1.493,490,0.937,491,1.352,492,1.539,493,1.272,494,1.587,495,1.862,496,1.806,497,1.272,498,1.737,499,1.686,500,1.587,501,1.352,502,1.352,503,1.352,504,1.058,505,1.842,506,1.352,507,1.502,508,1.311,509,1.352,510,1.352,511,1.352,512,1.311,513,1.352,514,1.362,515,1.352,516,1.352,517,1.126,518,1.272,519,1.311,520,1.957,521,0.937,522,0.937,523,1.352,524,0.937,525,0.937,526,1.311,527,0.937,528,0.937,529,0.937,530,0.937,531,0.937,532,0.937,533,0.937,534,1.352,535,1.311,536,1.493,537,1.311,538,1.161,539,0.804,540,0.756,541,0.855,542,0.937,543,0.804,544,1.352,545,1.234,546,0.804,547,0.804,548,1.161,549,0.855,550,1.321,551,0.937,552,0.909,553,1.362,554,1.404,555,0.881,556,0.855,557,1.197,558,1.404,559,1.272,560,1.321,561,0.804,562,0.937,563,0.937,564,0.937,565,0.937,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.937,573,0.909,574,0.937,575,0.937,576,0.829,577,0.909,578,1.197,579,1.126,580,0.855,581,0.711,582,0.829]],["title/interfaces/DataSetting.html",[467,0.408,548,0.961]],["body/interfaces/DataSetting.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.55,36,0.542,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.59,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.03,302,0.834,314,1.181,318,1.093,319,1.503,322,0.649,328,1.523,367,1.274,386,1.274,413,0.911,418,0.911,453,0.857,455,1.587,467,0.84,468,0.857,469,0.911,470,0.883,471,1.679,472,1.649,473,1.541,474,1.589,475,1.589,476,1.589,477,1.975,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,0.782,487,1.734,488,1.06,489,1.494,490,0.939,491,1.354,492,1.541,493,1.274,494,1.589,495,1.863,496,1.807,497,1.274,498,1.739,499,1.687,500,1.589,501,1.354,502,1.354,503,1.354,504,1.06,505,1.844,506,1.354,507,1.503,508,1.314,509,1.354,510,1.354,511,1.354,512,1.314,513,1.354,514,1.364,515,1.354,516,1.354,517,1.127,518,1.274,519,1.314,520,1.991,521,0.939,522,0.939,523,1.354,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.354,535,1.314,536,1.494,537,1.788,538,1.162,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.354,545,1.236,546,0.806,547,0.806,548,1.364,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.406,555,0.883,556,0.857,557,1.198,558,1.406,559,1.274,560,1.322,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.198,579,1.127,580,0.857,581,0.713,582,0.831]],["title/interfaces/Filter.html",[108,0.479,467,0.408]],["body/interfaces/Filter.html",[3,0.105,4,0.074,8,0.084,16,0.219,29,0.657,34,0.012,35,0.549,36,0.547,41,0.179,58,0.262,74,0.379,90,0.409,108,0.783,124,0.322,127,0.586,136,0.594,154,0.005,155,0.007,156,0.005,293,0.678,294,1.019,302,0.83,314,1.181,318,1.079,319,1.494,322,0.637,328,1.522,367,1.257,386,1.257,413,1.672,418,1.672,453,0.841,455,1.573,467,0.839,468,0.841,469,0.894,470,0.867,471,1.673,472,1.646,473,1.525,474,1.572,475,1.572,476,1.572,477,1.969,478,1.91,479,1.572,480,1.62,481,0.867,482,0.922,483,1.349,484,0.744,485,0.744,486,0.767,487,1.722,488,1.046,489,1.479,490,0.922,491,1.337,492,1.525,493,1.257,494,1.572,495,1.851,496,1.796,497,1.257,498,1.724,499,1.679,500,1.572,501,1.337,502,1.337,503,1.337,504,1.046,505,1.831,506,1.337,507,1.494,508,1.296,509,1.337,510,1.337,511,1.337,512,1.296,513,1.337,514,1.349,515,1.337,516,1.337,517,1.113,518,1.257,519,1.296,520,1.951,521,0.922,522,0.922,523,1.337,524,0.922,525,0.922,526,1.296,527,0.922,528,0.922,529,0.922,530,0.922,531,0.922,532,0.922,533,0.922,534,1.337,535,1.672,536,1.722,537,1.775,538,1.48,539,0.791,540,0.744,541,0.841,542,0.922,543,0.791,544,1.337,545,1.219,546,0.791,547,0.791,548,1.147,549,0.841,550,1.309,551,0.922,552,0.894,553,1.349,554,1.391,555,0.867,556,0.841,557,1.183,558,1.391,559,1.257,560,1.309,561,0.791,562,0.922,563,0.922,564,0.922,565,0.922,566,0.894,567,0.894,568,0.894,569,0.894,570,0.894,571,0.894,572,0.922,573,0.894,574,0.922,575,0.922,576,0.816,577,0.894,578,1.183,579,1.113,580,0.841,581,0.7,582,0.816]],["title/components/FilterComponent.html",[0,0.555,103,1.228]],["body/components/FilterComponent.html",[0,0.908,1,1.347,2,1.968,3,0.14,4,0.098,5,1.529,6,1.529,7,1.529,8,0.112,10,1.529,11,2.92,12,2.654,14,2.032,16,0.291,17,1.4,19,1.525,31,1.668,33,1.022,34,0.012,35,0.459,36,0.505,37,0.904,39,1.4,40,2.01,41,0.208,42,0.63,58,0.14,59,0.587,80,1.689,90,0.375,91,2.032,92,2.032,93,1.529,94,2.431,95,1.529,96,1.529,97,1.347,98,1.529,99,1.529,100,1.347,101,1.529,102,1.529,103,2.142,104,1.529,105,1.347,106,1.529,107,1.347,108,0.946,109,1.529,110,1.347,111,1.529,112,1.529,113,1.347,114,1.481,115,1.435,116,2.282,117,1.347,118,1.481,119,1.529,120,1.347,121,1.529,122,1.347,123,1.582,124,0.682,125,2.032,126,1.39,127,0.625,128,1.347,129,1.306,130,1.529,131,1.347,132,1.529,133,1.347,134,1.529,135,1.347,136,0.545,137,1.347,138,1.529,139,1.347,140,1.529,141,1.306,142,1.529,143,1.347,144,1.529,145,1.39,146,1.347,147,2.032,148,1.347,149,1.347,150,1.529,151,1.347,152,1.529,153,1.529,154,0.006,155,0.008,156,0.006,259,1.944,267,1.874,302,0.671,304,2.316,314,0.808,325,3.306,326,2.3,335,4.342,397,1.58,401,2.032,402,3.395,404,2.099,409,5.927,410,3.208,412,3.306,434,3.712,435,4.41,436,3.973,437,3.973,438,3.973,456,4.113,463,4.113,507,1.39,538,1.4,543,1.744,581,1.39,583,3.973,584,6.775,585,6.033,586,6.775,587,5.927,588,6.033,589,4.542,590,4.542,591,4.542,592,4.542,593,4.542,594,4.542,595,1.435,596,4.542,597,4.542,598,6.033,599,4.542,600,3.32,601,3.973,602,6.033,603,4.542,604,4.113,605,4.542]],["title/injectables/FilterTreksService.html",[298,1.394,606,2.653]],["body/injectables/FilterTreksService.html",[3,0.113,4,0.079,8,0.091,13,1.93,16,0.236,17,1.213,19,0.83,29,1.008,30,3.177,31,1.682,33,1.768,34,0.012,35,0.532,36,0.509,37,1.563,39,1.798,41,0.223,42,0.512,57,2.02,58,0.113,59,0.477,60,2.458,74,0.41,76,2.363,80,2.458,82,3.971,108,0.978,123,0.967,124,0.625,154,0.005,155,0.007,156,0.005,258,3.187,267,1.522,280,1.681,298,1.761,300,2.02,302,0.582,304,2.079,319,1.563,322,1.468,324,2.234,328,1.418,338,1.371,344,2.02,345,2.02,367,0.938,433,1.418,468,1.788,477,1.839,480,0.882,486,1.488,488,1.682,507,1.356,535,0.967,536,0.938,539,1.798,540,1.141,541,1.839,549,1.911,561,0.856,595,1.165,600,2.695,606,3.351,607,6.358,608,5.142,609,2.514,610,6.075,611,8.432,612,5.228,613,5.228,614,5.228,615,5.228,616,5.228,617,6.075,618,3.687,619,3.687,620,3.687,621,3.687,622,5.228,623,3.687,624,5.228,625,3.687,626,5.228,627,3.687,628,5.228,629,3.226,630,5.228,631,3.226,632,5.228,633,3.687,634,5.228,635,3.226,636,3.687,637,5.238,638,3.687,639,3.687,640,2.922,641,2.922,642,2.514,643,2.922,644,5.228,645,3.687,646,4.574,647,3.687,648,3.687,649,5.228,650,3.687,651,3.687,652,3.687,653,3.687,654,5.228,655,3.687,656,5.228,657,3.687,658,5.228,659,5.228,660,3.687,661,3.687,662,3.687,663,3.687,664,5.228,665,3.687,666,5.315,667,3.687,668,3.687,669,3.687,670,2.695,671,6.075,672,5.228,673,3.226,674,3.687,675,2.234,676,3.687,677,3.687,678,3.687,679,3.226,680,3.687,681,3.687,682,3.687,683,3.687,684,2.514,685,3.687,686,3.687,687,3.687,688,3.687,689,3.226,690,3.687,691,3.687,692,3.687,693,3.687,694,3.226,695,3.687]],["title/interfaces/FilterValue.html",[467,0.408,538,0.961]],["body/interfaces/FilterValue.html",[3,0.105,4,0.073,8,0.084,16,0.218,29,0.655,34,0.012,35,0.548,36,0.544,37,1.403,41,0.178,58,0.262,74,0.378,90,0.408,108,0.737,124,0.321,127,0.585,136,0.592,154,0.005,155,0.007,156,0.005,293,0.676,294,1.018,302,0.829,314,1.181,318,1.077,319,1.493,322,0.635,328,1.528,367,1.255,386,1.255,413,0.892,418,0.892,453,0.839,455,1.571,467,0.838,468,0.839,469,0.892,470,0.865,471,1.673,472,1.645,473,1.522,474,1.57,475,1.57,476,1.57,477,1.968,478,1.908,479,1.57,480,1.618,481,0.865,482,0.919,483,1.347,484,0.742,485,0.742,486,0.765,487,1.72,488,1.044,489,1.477,490,0.919,491,1.334,492,1.522,493,1.255,494,1.57,495,1.85,496,1.794,497,1.255,498,1.722,499,1.678,500,1.57,501,1.334,502,1.334,503,1.334,504,1.044,505,1.829,506,1.334,507,1.559,508,1.294,509,1.334,510,1.334,511,1.334,512,1.294,513,1.334,514,1.347,515,1.334,516,1.334,517,1.11,518,1.255,519,1.294,520,1.949,521,0.919,522,0.919,523,1.334,524,0.919,525,0.919,526,1.294,527,0.919,528,0.919,529,0.919,530,0.919,531,0.919,532,0.919,533,0.919,534,1.334,535,1.294,536,1.794,537,1.294,538,1.347,539,0.789,540,0.742,541,0.839,542,0.919,543,1.478,544,1.829,545,1.668,546,0.789,547,0.789,548,1.145,549,0.839,550,1.307,551,0.919,552,0.892,553,1.347,554,1.389,555,0.865,556,0.839,557,1.18,558,1.389,559,1.255,560,1.307,561,0.789,562,0.919,563,0.919,564,0.919,565,0.919,566,0.892,567,0.892,568,0.892,569,0.892,570,0.892,571,0.892,572,0.919,573,0.892,574,0.919,575,0.919,576,0.813,577,0.892,578,1.18,579,1.11,580,0.839,581,0.698,582,0.813]],["title/components/FilterValueComponent.html",[0,0.555,107,1.228]],["body/components/FilterValueComponent.html",[0,0.92,1,1.386,2,2.005,3,0.144,4,0.101,5,1.574,6,1.574,7,1.574,8,0.115,10,1.574,11,2.925,12,2.659,14,2.07,16,0.3,17,1.427,19,1.546,31,1.648,33,1.052,34,0.012,35,0.465,36,0.468,37,0.93,39,1.427,40,1.824,41,0.189,42,0.648,58,0.144,59,0.604,90,0.386,91,2.07,92,2.07,93,1.574,94,2.458,95,1.574,96,1.574,97,1.386,98,1.574,99,1.574,100,1.386,101,1.574,102,1.574,103,1.386,104,1.574,105,1.386,106,1.574,107,2.166,108,0.932,109,1.574,110,1.386,111,1.574,112,1.574,113,1.386,114,1.524,115,1.476,116,2.314,117,1.386,118,1.524,119,1.574,120,1.386,121,1.574,122,1.386,123,1.612,124,0.69,125,2.07,126,1.43,127,0.632,128,1.386,129,1.344,130,1.574,131,1.386,132,1.574,133,1.386,134,1.574,135,1.386,136,0.561,137,1.386,138,1.574,139,1.386,140,1.574,141,1.344,142,1.574,143,1.386,144,1.574,145,1.43,146,1.386,147,2.07,148,1.386,149,1.386,150,1.574,151,1.386,152,1.574,153,1.574,154,0.006,155,0.008,156,0.006,251,6.29,259,2,304,2.036,314,0.824,326,2.518,335,4.403,397,1.626,401,2.07,402,3.443,404,2.139,410,3.244,412,3.368,434,3.764,456,4.191,463,4.191,538,1.807,543,1.084,581,1.41,587,6.011,595,1.476,601,4.088,696,6.944,697,4.088,698,6.87,699,6.147,700,6.147,701,6.147,702,4.672,703,4.672,704,4.672,705,6.147,706,6.87,707,4.672,708,2.687,709,4.672,710,6.147,711,3.703,712,3.703,713,3.703,714,2.342,715,3.703]],["title/components/FiltersComponent.html",[0,0.555,105,1.228]],["body/components/FiltersComponent.html",[0,0.772,1,0.996,2,1.593,3,0.103,4,0.072,5,1.13,6,1.13,7,1.13,8,0.082,10,1.13,11,2.848,12,2.589,14,1.646,16,0.313,17,1.134,19,1.1,21,3.102,24,3.005,27,3.157,28,3.043,29,1.297,30,3.234,31,1.731,33,1.297,34,0.012,35,0.456,36,0.486,37,1.146,39,1.757,40,2.361,41,0.237,42,0.466,47,0.88,53,1.839,54,1.613,55,2.888,57,1.839,58,0.103,59,0.434,60,1.996,74,0.544,80,2.142,82,2.677,90,0.277,91,1.646,92,2.364,93,1.13,94,2.132,95,1.13,96,1.13,97,0.996,98,1.13,99,1.13,100,0.996,101,1.13,102,1.13,103,0.996,104,1.13,105,1.878,106,1.13,107,0.996,108,0.92,109,1.13,110,0.996,111,1.13,112,1.13,113,0.996,114,1.094,115,1.06,116,1.941,117,0.996,118,1.094,119,1.13,120,0.996,121,1.13,122,0.996,123,1.282,124,0.685,125,1.646,126,1.027,127,0.548,128,0.996,129,0.965,130,1.13,131,0.996,132,1.13,133,0.996,134,1.13,135,0.996,136,0.403,137,0.996,138,1.13,139,0.996,140,1.13,141,0.965,142,1.13,143,0.996,144,1.13,145,1.027,146,0.996,147,1.646,148,0.996,149,0.996,150,1.13,151,0.996,152,1.13,153,1.13,154,0.005,155,0.007,156,0.005,258,1.291,259,2.091,280,1.711,284,2.659,302,0.544,304,2.384,314,0.848,322,1.183,326,2.059,328,1.11,338,1.248,397,1.167,401,1.646,402,2.888,404,1.7,410,3.22,433,1.291,471,1.034,486,1.1,507,1.381,538,1.629,549,1.732,581,1.183,595,1.06,600,2.453,606,2.151,608,2.151,640,2.659,689,2.936,714,2.449,716,2.936,717,3.375,718,3.314,719,5.762,720,4.886,721,4.566,722,6.727,723,7.247,724,2.677,725,2.677,726,6.329,727,4.315,728,6.329,729,4.886,730,3.835,731,4.886,732,2.888,733,2.453,734,4.056,735,3.314,736,3.468,737,4.644,738,4.886,739,3.571,740,3.356,741,3.356,742,3.356,743,4.886,744,3.356,745,4.886,746,3.356,747,3.356,748,4.886,749,3.356,750,3.314,751,1.93,752,1.93,753,3.356,754,3.356,755,3.356,756,3.356,757,3.693,758,3.356,759,1.491,760,1.93,761,2.151,762,2.659,763,2.033,764,2.659,765,1.93,766,1.756,767,1.93,768,2.288,769,5.762,770,2.936,771,3.356,772,3.356,773,2.151,774,3.356,775,3.356,776,1.93,777,2.659,778,2.936,779,3.356,780,4.886,781,3.356,782,3.356,783,4.886,784,3.356,785,3.356,786,4.886,787,3.356,788,3.356,789,3.356,790,2.936,791,3.356,792,3.356,793,2.936,794,3.356,795,4.886,796,3.356,797,3.356,798,3.356,799,2.936,800,2.453,801,3.356,802,4.886,803,4.275,804,4.886,805,4.886,806,4.886,807,4.886,808,4.886,809,4.886,810,2.453]],["title/components/GeolocateNotificationsComponent.html",[0,0.555,110,1.228]],["body/components/GeolocateNotificationsComponent.html",[0,0.749,1,0.944,2,1.533,3,0.098,4,0.069,5,1.072,6,1.072,7,1.072,8,0.078,10,1.072,11,2.834,12,2.576,14,1.583,16,0.204,17,1.091,19,1.058,20,2.523,21,3.198,24,3.051,25,3.55,31,1.735,33,1.258,34,0.012,35,0.467,36,0.5,37,1.112,39,1.698,40,2.217,41,0.234,42,0.442,43,1.184,44,1.184,45,1.184,46,1.314,47,1.233,48,1.47,58,0.098,59,0.411,60,1.953,64,2.46,65,2.356,66,3.906,68,2.327,74,0.354,82,1.744,90,0.263,91,1.583,92,1.583,93,1.072,94,2.078,95,1.072,96,1.072,97,0.944,98,1.072,99,1.072,100,0.944,101,1.072,102,1.072,103,0.944,104,1.072,105,0.944,106,1.072,107,0.944,108,0.368,109,1.072,110,1.831,111,2.595,112,1.072,113,0.944,114,1.038,115,1.006,116,1.882,117,0.944,118,1.038,119,1.072,120,0.944,121,1.072,122,0.944,123,1.233,124,0.583,125,1.583,126,0.974,127,0.534,128,0.944,129,0.916,130,1.072,131,0.944,132,1.072,133,0.944,134,1.072,135,0.944,136,0.565,137,0.944,138,1.072,139,0.944,140,1.072,141,0.916,142,1.072,143,0.944,144,1.072,145,0.974,146,0.944,147,1.583,148,0.944,149,0.944,150,1.072,151,0.944,152,1.072,153,1.072,154,0.004,155,0.006,156,0.004,217,6.648,218,2.523,219,2.785,259,1.363,267,2.717,280,1.861,293,0.935,302,0.523,304,2.083,314,0.63,315,3.205,326,0.974,328,0.98,333,2.523,335,3.582,338,1.184,397,1.107,401,1.583,402,2.801,404,1.635,410,2.743,412,2.576,433,2.15,434,3.062,454,2.17,455,0.785,456,3.205,463,3.205,472,1.112,477,0.785,480,0.762,496,0.81,550,1.258,595,1.006,641,2.523,642,2.17,643,2.523,718,3.214,732,3.093,759,2.926,811,6.525,812,6.018,813,2.523,814,4.429,815,4.112,816,5.589,817,4.701,818,6.022,819,5.589,820,5.589,821,4.429,822,5.589,823,3.963,824,6.172,825,4.701,826,6.172,827,6.172,828,3.725,829,6.172,830,4.889,831,5.589,832,4.889,833,4.208,834,4.701,835,3.183,836,3.183,837,3.183,838,3.183,839,4.701,840,3.183,841,3.183,842,3.183,843,3.183,844,3.725,845,4.891,846,3.183,847,2.523,848,3.183,849,3.183,850,3.183,851,3.183,852,3.183,853,3.183,854,3.183,855,3.183,856,3.183,857,4.112,858,2.785,859,3.183,860,3.183,861,3.183,862,3.183,863,3.183,864,3.183,865,3.183,866,4.701,867,3.183,868,3.183,869,3.725,870,2.523,871,3.183,872,3.183,873,3.183,874,3.183,875,3.183,876,3.183,877,3.183,878,2.785,879,3.183,880,3.183,881,4.701,882,4.701,883,6.172,884,3.183,885,3.183,886,3.183,887,4.701,888,3.183,889,4.701,890,3.183,891,2.785,892,3.183,893,3.183,894,3.183,895,3.183,896,3.183,897,3.183,898,3.183,899,3.183,900,3.183,901,3.183,902,3.183,903,3.183,904,4.701,905,4.112,906,3.81,907,3.183,908,3.183,909,3.183,910,3.183,911,3.183,912,3.183,913,3.183,914,3.183,915,3.183,916,3.183,917,3.183,918,3.183,919,3.183,920,2.523,921,1.928,922,3.183,923,2.785,924,3.183,925,2.523,926,3.183,927,2.523,928,2.523,929,2.523,930,2.523,931,3.183,932,2.523,933,3.183,934,3.183,935,4.701,936,4.701]],["title/injectables/GeolocateService.html",[298,1.394,833,2.822]],["body/injectables/GeolocateService.html",[3,0.147,4,0.103,8,0.118,13,2.508,16,0.307,17,1.45,19,1.407,21,3.536,24,2.977,25,4.24,31,1.748,33,1.407,34,0.012,35,0.423,36,0.49,37,1.243,39,1.82,40,2.064,41,0.241,42,0.665,43,1.782,44,1.782,45,1.782,46,1.978,47,1.257,48,2.213,58,0.147,59,0.619,60,1.422,64,3.271,65,3.132,66,4.189,74,0.533,80,2.324,154,0.007,155,0.009,156,0.007,186,3.267,210,5.984,211,3.502,212,3.797,258,2.404,259,2.675,267,2.579,280,1.945,298,2.105,300,2.625,302,0.695,304,2.283,314,0.988,326,1.467,338,1.782,345,2.625,433,1.843,757,4.457,821,5.512,823,4.709,833,4.261,937,4.192,938,7.371,939,7.371,940,7.371,941,7.371,942,6.249,943,7.371,944,4.791,945,6.249,946,4.791,947,4.791,948,4.791,949,4.791,950,6.249,951,4.791,952,6.249,953,4.791,954,4.791,955,4.953,956,4.791,957,6.249,958,4.791,959,4.791,960,4.261,961,6.249,962,4.791,963,4.791,964,6.249,965,4.791,966,4.791,967,4.791,968,4.791,969,4.791,970,3.797,971,4.791,972,4.791,973,4.791,974,4.791,975,4.791,976,4.791,977,4.192,978,4.192,979,4.791,980,4.192,981,4.791,982,4.791,983,4.791,984,4.791,985,4.791,986,3.071,987,4.791,988,4.791,989,4.192,990,4.791,991,4.791,992,4.791,993,4.791]],["title/interfaces/HydratedTrek.html",[467,0.408,517,0.932]],["body/interfaces/HydratedTrek.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.537,36,0.546,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.59,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.03,302,0.874,314,1.18,318,1.093,319,1.503,322,0.649,325,2.744,328,1.523,367,1.274,386,1.274,413,0.911,418,0.911,453,0.857,455,1.587,467,0.84,468,0.857,469,0.911,470,0.883,471,1.695,472,1.626,473,1.541,474,1.589,475,1.589,476,1.589,477,1.991,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,0.782,487,1.734,488,1.06,489,1.494,490,0.939,491,1.354,492,1.541,493,1.274,494,1.589,495,2.003,496,1.807,497,1.274,498,1.739,499,1.687,500,1.589,501,1.354,502,1.354,503,1.354,504,1.06,505,1.844,506,1.354,507,1.503,508,1.314,509,1.354,510,1.354,511,1.354,512,1.314,513,1.354,514,1.364,515,1.354,516,1.354,517,1.322,518,1.636,519,1.314,520,1.957,521,0.939,522,0.939,523,1.354,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.354,535,1.314,536,1.494,537,1.314,538,1.162,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.354,545,1.236,546,0.806,547,0.806,548,1.162,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.406,555,0.883,556,0.857,557,1.198,558,1.406,559,1.274,560,1.322,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.198,579,1.127,580,0.857,581,0.713,582,0.831]],["title/interfaces/HydratedTrekProperties.html",[467,0.408,518,1.053]],["body/interfaces/HydratedTrekProperties.html",[3,0.093,4,0.065,8,0.074,16,0.193,29,0.582,34,0.012,35,0.537,36,0.555,37,1.433,41,0.166,58,0.259,74,0.336,90,0.374,108,0.695,124,0.285,127,0.557,136,0.543,154,0.004,155,0.006,156,0.004,293,0.6,294,0.949,302,0.802,314,1.181,318,0.986,319,1.438,322,0.564,328,1.525,367,1.149,386,1.149,413,0.791,418,0.791,453,0.745,455,1.483,467,0.829,468,0.745,469,0.791,470,0.768,471,1.633,472,1.619,473,1.772,474,1.827,475,1.827,476,1.827,477,1.924,478,1.837,479,1.464,480,1.541,481,0.768,482,0.816,483,1.257,484,0.659,485,0.659,486,0.679,487,1.638,488,0.956,489,1.377,490,0.816,491,1.222,492,1.772,493,1.638,494,1.827,495,1.772,496,1.719,497,1.149,498,1.894,499,1.688,500,1.827,501,1.741,502,1.741,503,1.741,504,1.363,505,1.948,506,1.741,507,1.512,508,1.688,509,1.741,510,1.741,511,1.741,512,1.688,513,1.741,514,1.494,515,1.741,516,1.741,517,1.017,518,1.377,519,1.688,520,2.079,521,1.626,522,1.626,523,1.741,524,1.626,525,1.626,526,1.185,527,0.816,528,0.816,529,0.816,530,0.816,531,0.816,532,0.816,533,0.816,534,1.222,535,1.185,536,1.377,537,1.185,538,1.049,539,0.7,540,0.659,541,0.745,542,0.816,543,0.7,544,1.222,545,1.115,546,0.7,547,0.7,548,1.049,549,0.745,550,1.219,551,0.816,552,0.791,553,1.257,554,1.296,555,0.768,556,0.745,557,1.081,558,1.296,559,1.149,560,1.219,561,0.7,562,0.816,563,0.816,564,0.816,565,0.816,566,0.791,567,0.791,568,0.791,569,0.791,570,0.791,571,0.791,572,0.816,573,0.791,574,0.816,575,0.816,576,0.722,577,0.791,578,1.081,579,1.017,580,0.745,581,0.619,582,0.722]],["title/interfaces/InformationDesk.html",[467,0.408,514,0.961]],["body/interfaces/InformationDesk.html",[3,0.101,4,0.071,8,0.081,16,0.21,29,0.632,34,0.012,35,0.545,36,0.551,41,0.175,58,0.261,74,0.365,90,0.397,108,0.724,124,0.31,127,0.577,136,0.577,154,0.005,155,0.007,156,0.005,293,0.652,294,0.996,302,0.821,314,1.183,318,1.048,319,1.476,322,0.612,328,1.527,367,1.221,386,1.221,413,0.859,418,0.859,453,0.808,455,1.544,467,0.836,468,0.808,469,0.859,470,0.833,471,1.66,472,1.637,473,1.491,474,1.537,475,1.537,476,1.537,477,1.954,478,1.887,479,1.537,480,1.594,481,0.833,482,0.886,483,1.319,484,0.715,485,0.715,486,0.737,487,1.695,488,1.016,489,1.446,490,0.886,491,1.298,492,1.491,493,1.221,494,1.537,495,1.826,496,1.771,497,1.221,498,1.692,499,1.746,500,1.537,501,1.298,502,1.298,503,1.298,504,1.016,505,1.995,506,1.298,507,1.476,508,1.259,509,1.298,510,1.298,511,1.298,512,1.259,513,1.298,514,1.452,515,1.298,516,1.298,517,1.081,518,1.221,519,1.259,520,1.971,521,0.886,522,0.886,523,1.298,524,0.886,525,0.886,526,1.747,527,1.692,528,1.692,529,1.692,530,1.692,531,1.692,532,1.692,533,1.692,534,1.802,535,1.259,536,1.446,537,1.259,538,1.114,539,0.76,540,0.715,541,0.808,542,0.886,543,0.76,544,1.298,545,1.185,546,0.76,547,0.76,548,1.114,549,0.808,550,1.279,551,0.886,552,0.859,553,1.319,554,1.36,555,0.833,556,0.808,557,1.149,558,1.36,559,1.221,560,1.279,561,0.76,562,0.886,563,0.886,564,0.886,565,0.886,566,0.859,567,0.859,568,0.859,569,0.859,570,0.859,571,0.859,572,0.886,573,0.859,574,0.886,575,0.886,576,0.784,577,0.859,578,1.149,579,1.081,580,0.808,581,0.672,582,0.784]],["title/components/InformationDeskDetailsComponent.html",[0,0.555,113,1.228]],["body/components/InformationDeskDetailsComponent.html",[0,0.887,1,1.287,2,1.908,3,0.133,4,0.093,5,1.46,6,1.46,7,1.46,8,0.107,10,1.46,11,2.91,12,2.645,14,1.97,16,0.278,17,1.358,19,0.976,24,2.504,31,1.677,33,0.976,34,0.012,35,0.448,36,0.474,37,0.863,39,1.358,40,1.964,41,0.218,42,0.602,45,1.612,46,1.79,47,1.137,58,0.133,59,0.561,74,0.651,90,0.359,91,1.97,92,1.97,93,1.46,94,2.386,95,1.46,96,1.46,97,1.287,98,1.46,99,1.46,100,1.287,101,1.46,102,1.46,103,1.287,104,1.46,105,1.287,106,1.46,107,1.287,108,0.502,109,1.46,110,1.287,111,1.46,112,1.46,113,2.102,114,2.584,115,2.726,116,2.229,117,1.287,118,1.414,119,1.46,120,1.287,121,1.46,122,1.287,123,1.534,124,0.67,125,1.97,126,1.327,127,0.613,128,1.287,129,1.247,130,1.46,131,1.287,132,1.46,133,1.287,134,1.46,135,1.287,136,0.521,137,1.287,138,1.46,139,1.287,140,1.46,141,1.247,142,1.46,143,1.287,144,1.46,145,1.327,146,1.287,147,1.97,148,1.287,149,1.287,150,1.46,151,1.287,152,1.46,153,1.46,154,0.006,155,0.008,156,0.006,244,5.867,302,0.651,304,2.063,314,0.581,326,1.791,397,1.509,404,2.035,514,1.769,526,1.534,595,1.37,727,4.831,730,4.292,733,3.17,734,4.741,737,5.2,739,5.179,800,3.17,994,7.023,995,3.437,996,5.117,997,5.791,998,5.117,999,5.245,1000,6.619,1001,5.849,1002,4.336,1003,3.794,1004,3.749,1005,4.336,1006,4.336,1007,5.117,1008,2.957,1009,5.849,1010,4.336,1011,4.336,1012,4.336,1013,4.336,1014,5.849,1015,5.849,1016,5.849,1017,5.849,1018,5.849]],["title/interfaces/InformationIntro.html",[467,0.408,546,0.961]],["body/interfaces/InformationIntro.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.673,34,0.012,35,0.538,36,0.541,41,0.181,58,0.262,74,0.388,90,0.416,108,0.746,124,0.33,127,0.591,136,0.604,154,0.005,155,0.007,156,0.005,293,0.694,294,1.033,302,0.835,314,1.181,318,1.097,319,1.505,322,0.652,328,1.526,367,1.279,386,1.279,413,0.915,418,0.915,453,0.861,455,1.809,467,0.84,468,0.861,469,0.915,470,0.888,471,1.681,472,1.65,473,1.545,474,1.593,475,1.593,476,1.593,477,1.977,478,1.924,479,1.593,480,1.635,481,0.888,482,0.944,483,1.367,484,0.762,485,0.762,486,0.786,487,1.738,488,1.064,489,1.499,490,0.944,491,1.36,492,1.545,493,1.279,494,1.593,495,1.866,496,1.81,497,1.279,498,1.743,499,1.69,500,1.593,501,1.36,502,1.36,503,1.36,504,1.064,505,1.848,506,1.36,507,1.505,508,1.318,509,1.36,510,1.36,511,1.36,512,1.318,513,1.36,514,1.367,515,1.36,516,1.36,517,1.132,518,1.279,519,1.318,520,1.959,521,0.944,522,0.944,523,1.36,524,0.944,525,0.944,526,1.318,527,0.944,528,0.944,529,0.944,530,0.944,531,0.944,532,0.944,533,0.944,534,1.36,535,1.318,536,1.499,537,1.318,538,1.167,539,0.81,540,0.762,541,0.861,542,0.944,543,0.81,544,1.36,545,1.24,546,1.167,547,0.81,548,1.167,549,0.861,550,1.326,551,0.944,552,0.915,553,1.367,554,1.41,555,0.888,556,0.861,557,1.203,558,1.41,559,1.279,560,1.326,561,0.81,562,0.944,563,0.944,564,0.944,565,0.944,566,0.915,567,0.915,568,0.915,569,0.915,570,0.915,571,0.915,572,0.944,573,0.915,574,0.944,575,0.944,576,0.835,577,0.915,578,1.203,579,1.132,580,0.861,581,0.716,582,0.835]],["title/interfaces/InformationItem.html",[467,0.408,547,0.961]],["body/interfaces/InformationItem.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.537,36,0.542,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.59,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.03,302,0.834,314,1.181,318,1.093,319,1.503,322,0.649,328,1.526,367,1.274,386,1.274,413,0.911,418,0.911,453,1.587,455,1.807,467,0.84,468,0.857,469,0.911,470,0.883,471,1.679,472,1.649,473,1.541,474,1.589,475,1.589,476,1.589,477,1.975,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,0.782,487,1.734,488,1.06,489,1.494,490,0.939,491,1.354,492,1.541,493,1.274,494,1.589,495,1.863,496,1.807,497,1.274,498,1.739,499,1.687,500,1.589,501,1.354,502,1.354,503,1.354,504,1.06,505,1.844,506,1.354,507,1.503,508,1.314,509,1.354,510,1.354,511,1.354,512,1.314,513,1.354,514,1.364,515,1.354,516,1.354,517,1.127,518,1.274,519,1.314,520,1.957,521,0.939,522,0.939,523,1.354,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.354,535,1.314,536,1.494,537,1.314,538,1.162,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.354,545,1.236,546,0.806,547,1.162,548,1.162,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.406,555,0.883,556,0.857,557,1.198,558,1.406,559,1.274,560,1.322,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.198,579,1.127,580,0.857,581,0.713,582,0.831]],["title/interfaces/IntervalFilter.html",[467,0.408,541,1.021]],["body/interfaces/IntervalFilter.html",[3,0.108,4,0.076,8,0.086,16,0.225,29,0.676,34,0.012,35,0.538,36,0.542,41,0.182,58,0.263,74,0.39,90,0.417,108,0.792,124,0.331,127,0.592,136,0.606,154,0.005,155,0.007,156,0.005,293,0.697,294,1.036,302,0.836,314,1.18,318,1.101,319,1.507,322,0.655,328,1.524,367,1.283,386,1.283,413,0.919,418,0.919,453,0.865,455,1.594,467,0.841,468,0.865,469,0.919,470,0.892,471,1.697,472,1.651,473,1.549,474,1.597,475,1.597,476,1.597,477,1.978,478,1.926,479,1.597,480,1.638,481,0.892,482,0.948,483,1.371,484,0.765,485,0.765,486,0.789,487,1.741,488,1.068,489,1.503,490,0.948,491,1.364,492,1.549,493,1.283,494,1.597,495,1.869,496,1.813,497,1.283,498,1.747,499,1.692,500,1.597,501,1.364,502,1.364,503,1.364,504,1.068,505,1.851,506,1.364,507,1.507,508,1.323,509,1.364,510,1.364,511,1.364,512,1.323,513,1.364,514,1.371,515,1.364,516,1.364,517,1.135,518,1.283,519,1.323,520,1.961,521,0.948,522,0.948,523,1.364,524,0.948,525,0.948,526,1.323,527,0.948,528,0.948,529,0.948,530,0.948,531,0.948,532,0.948,533,0.948,534,1.364,535,1.323,536,1.503,537,1.323,538,1.171,539,0.814,540,0.765,541,1.244,542,0.948,543,0.814,544,1.364,545,1.244,546,0.814,547,0.814,548,1.171,549,0.865,550,1.33,551,0.948,552,0.919,553,1.371,554,1.413,555,0.892,556,0.865,557,1.207,558,1.413,559,1.283,560,1.33,561,0.814,562,0.948,563,0.948,564,0.948,565,0.948,566,0.919,567,0.919,568,0.919,569,0.919,570,0.919,571,0.919,572,0.948,573,0.919,574,0.948,575,0.948,576,0.839,577,0.919,578,1.207,579,1.135,580,0.865,581,0.719,582,0.839]],["title/components/LayersVisibilityComponent.html",[0,0.555,117,1.228]],["body/components/LayersVisibilityComponent.html",[0,0.933,1,1.426,2,2.042,3,0.148,4,0.104,5,1.619,6,1.619,7,1.619,8,0.118,10,1.619,11,2.931,12,2.664,14,2.109,16,0.308,17,1.453,19,1.082,31,1.62,33,1.41,34,0.012,35,0.5,36,0.473,37,1.246,39,1.453,40,1.858,41,0.193,42,0.667,47,1.26,58,0.148,59,0.621,90,0.397,91,2.109,92,2.109,93,1.619,94,2.485,95,1.619,96,1.619,97,1.426,98,1.619,99,1.619,100,1.426,101,1.619,102,1.619,103,1.426,104,1.619,105,1.426,106,1.619,107,1.426,108,0.556,109,1.619,110,1.426,111,1.619,112,1.619,113,1.426,114,1.567,115,1.518,116,2.346,117,2.19,118,2.715,119,1.619,120,1.426,121,1.619,122,1.426,123,1.642,124,0.698,125,2.109,126,1.471,127,0.639,128,1.426,129,1.382,130,1.619,131,1.426,132,1.619,133,1.426,134,1.619,135,1.426,136,0.577,137,1.426,138,1.619,139,1.426,140,1.619,141,1.382,142,1.619,143,1.426,144,1.619,145,1.471,146,1.426,147,2.109,148,1.426,149,1.426,150,1.619,151,1.426,152,1.619,153,1.619,154,0.007,155,0.009,156,0.007,248,6.218,302,0.697,304,1.942,397,1.672,404,2.179,684,3.277,708,2.764,711,3.809,712,3.809,713,3.809,714,2.409,715,3.809,730,4.471,737,5.029,1019,6.865,1020,4.205,1021,6.262,1022,6.965,1023,6.262,1024,6.965,1025,6.262,1026,4.205,1027,6.262,1028,4.806,1029,6.262,1030,4.806,1031,4.806,1032,4.806,1033,4.806,1034,4.806,1035,4.806,1036,4.806,1037,4.205,1038,6.262]],["title/components/LoaderComponent.html",[0,0.555,120,1.228]],["body/components/LoaderComponent.html",[0,0.906,1,1.344,2,1.964,3,0.139,4,0.098,5,1.525,6,1.525,7,1.525,8,0.111,10,1.525,11,2.919,12,2.653,14,2.028,16,0.386,17,1.398,19,1.019,31,1.667,33,1.019,34,0.012,35,0.458,36,0.481,37,0.901,39,1.051,40,1.787,41,0.222,42,0.628,58,0.139,59,0.585,60,2.007,74,0.67,90,0.374,91,2.028,92,2.028,93,1.525,94,2.428,95,1.525,96,1.525,97,1.344,98,1.525,99,1.525,100,1.344,101,1.525,102,1.525,103,1.344,104,1.525,105,1.344,106,1.525,107,1.344,108,0.524,109,1.525,110,1.344,111,1.525,112,1.525,113,1.344,114,1.477,115,1.431,116,2.278,117,1.344,118,1.477,119,1.525,120,2.139,121,1.525,122,1.344,123,1.579,124,0.682,125,2.028,126,1.386,127,0.624,128,1.344,129,1.303,130,1.525,131,1.344,132,1.525,133,1.344,134,1.525,135,1.344,136,0.544,137,1.344,138,1.525,139,1.344,140,1.525,141,1.303,142,1.525,143,1.344,144,1.525,145,1.386,146,1.344,147,2.028,148,1.344,149,1.344,150,1.525,151,1.344,152,1.525,153,1.525,154,0.006,155,0.008,156,0.006,196,3.087,205,4.916,302,0.67,304,2.197,322,1.347,326,1.843,338,1.684,344,2.481,383,4.401,397,1.575,401,2.028,404,2.095,412,3.299,416,2.743,434,3.707,453,1.117,507,1.48,543,1.051,604,3.087,714,3.018,718,3.891,732,3.613,759,3.006,810,4.401,960,3.087,986,2.902,1008,3.087,1039,3.962,1040,6.765,1041,6.021,1042,6.752,1043,4.368,1044,6.765,1045,6.765,1046,3.087,1047,4.317,1048,6.021,1049,4.528,1050,5.918,1051,4.528,1052,4.528,1053,4.528,1054,4.528,1055,3.962,1056,4.528,1057,4.528,1058,4.528,1059,5.268,1060,3.962,1061,4.528,1062,3.31,1063,2.743,1064,3.087,1065,4.528,1066,3.962,1067,4.105,1068,3.31,1069,3.31,1070,3.962,1071,3.589,1072,4.528,1073,4.528,1074,4.528,1075,3.962,1076,3.962]],["title/interceptors/LoadingInterceptor.html",[172,2.653,1077,3.621]],["body/interceptors/LoadingInterceptor.html",[3,0.16,4,0.112,8,0.128,13,2.724,16,0.334,17,1.53,19,1.484,31,1.395,33,1.484,34,0.012,35,0.446,36,0.423,37,1.311,39,1.208,40,1.956,41,0.234,42,0.722,58,0.203,59,0.852,60,1.544,80,2.451,123,1.365,154,0.007,155,0.009,156,0.007,172,4.224,182,2.724,258,2.925,259,2.821,280,1.934,298,2.436,304,1.452,314,1.074,319,1.56,337,3.336,338,1.935,339,3.336,343,3.549,344,2.852,345,2.852,392,3.336,393,3.336,401,1.753,403,3.336,472,1.311,507,1.068,675,3.153,708,2.994,757,4.224,960,3.549,1043,4.382,1046,3.549,1047,4.373,1078,5.205,1079,4.125,1080,6.591,1081,5.205,1082,5.766,1083,6.652,1084,6.025,1085,6.652,1086,5.205,1087,5.205,1088,5.766,1089,5.766,1090,5.766,1091,4.554,1092,4.554,1093,4.554,1094,6.328,1095,4.554,1096,4.554,1097,4.554,1098,4.554,1099,4.554,1100,4.554,1101,4.554,1102,4.554,1103,4.554,1104,4.554,1105,5.766,1106,4.554,1107,5.766,1108,4.554,1109,4.554,1110,4.554,1111,5.766,1112,4.554,1113,4.554,1114,4.554,1115,4.554,1116,4.554,1117,4.554,1118,4.554,1119,4.554,1120,4.125,1121,4.554,1122,4.554,1123,5.766]],["title/injectables/LoadingService.html",[298,1.394,1047,2.381]],["body/injectables/LoadingService.html",[3,0.152,4,0.107,8,0.122,13,2.595,16,0.318,17,1.483,19,1.591,31,1.675,33,1.591,34,0.012,35,0.479,36,0.453,37,1.407,39,1.641,40,2.216,41,0.23,42,0.688,58,0.196,59,0.826,60,2.098,74,0.711,80,2.376,123,1.3,154,0.007,155,0.009,156,0.007,172,3.177,182,2.595,258,2.873,259,3.196,280,1.9,298,2.381,300,2.717,302,0.711,304,1.972,314,1.127,319,1.533,324,3.004,326,1.956,337,3.177,338,1.844,339,3.177,343,3.38,344,2.717,345,2.717,392,3.177,393,3.177,401,1.67,403,3.177,472,1.538,507,1.018,675,3.004,708,2.852,757,4.531,960,4.82,1043,3.871,1047,4.066,1079,3.929,1082,4.338,1083,5.59,1084,5.064,1085,5.59,1088,5.59,1089,5.59,1090,5.59,1091,5.59,1092,4.338,1093,6.185,1094,6.185,1095,4.338,1096,4.338,1097,4.338,1098,4.338,1099,4.338,1100,6.185,1101,4.338,1102,4.338,1103,4.338,1104,5.59,1105,5.59,1106,4.338,1107,5.59,1108,5.59,1109,4.338,1110,4.338,1111,5.59,1112,5.59,1113,4.338,1114,4.338,1115,4.338,1116,4.338,1117,4.338,1118,4.338,1119,4.338,1120,3.929,1121,4.338,1122,4.338,1123,5.59,1124,6.389,1125,5.59,1126,6.389,1127,4.958,1128,4.958,1129,4.958,1130,4.958]],["title/components/MapTreksVizComponent.html",[0,0.555,122,1.228]],["body/components/MapTreksVizComponent.html",[0,0.626,1,0.707,2,1.229,3,0.073,4,0.139,5,0.803,6,0.803,7,0.803,8,0.059,10,0.803,11,2.744,12,2.494,14,1.269,16,0.394,17,0.875,19,0.848,21,2.756,24,2,25,3.054,31,1.67,33,1.052,34,0.012,35,0.416,36,0.514,37,0.93,39,1.549,40,2.038,41,0.224,42,0.331,43,0.887,44,0.887,45,1.401,46,0.984,47,0.625,48,1.101,58,0.073,59,0.308,60,2.225,64,1.973,65,1.889,66,2.56,74,0.265,76,2.415,80,1.974,82,2.065,90,0.197,91,1.269,92,1.574,93,0.803,94,1.788,95,0.803,96,0.803,97,0.707,98,0.803,99,0.803,100,0.707,101,0.803,102,0.803,103,0.707,104,0.803,105,0.707,106,0.803,107,0.707,108,0.669,109,0.803,110,0.707,111,1.788,112,0.803,113,0.707,114,0.778,115,0.753,116,1.574,117,0.707,118,1.524,119,0.803,120,0.707,121,0.803,122,1.575,123,2.009,124,0.806,125,1.269,126,0.73,127,0.632,128,0.707,129,1.084,130,0.803,131,0.707,132,0.803,133,0.707,134,0.803,135,0.707,136,0.286,137,0.707,138,0.803,139,0.707,140,0.803,141,0.686,142,0.803,143,0.707,144,0.803,145,0.73,146,0.707,147,1.269,148,0.707,149,0.707,150,0.803,151,0.707,152,0.803,153,0.803,154,0.003,155,0.005,156,0.003,173,2.631,220,5.632,221,1.89,222,2.086,258,0.917,259,2.273,267,0.984,280,1.929,293,0.75,294,0.819,302,0.419,304,1.962,314,0.505,315,1.626,319,0.773,322,0.992,326,1.154,328,0.819,335,3.706,338,0.887,383,1.743,386,0.607,397,0.83,401,1.269,404,1.311,410,2.076,412,2.56,421,1.743,433,1.45,434,3.368,449,1.626,454,3.186,456,2.569,463,3.186,464,2.755,465,1.743,471,0.798,472,1.223,477,1.588,478,0.988,480,1.541,481,1.189,483,1.084,484,0.52,485,0.823,487,1.471,488,0.989,493,1.189,495,0.625,496,0.959,507,0.773,540,0.823,543,0.553,545,1.153,548,1.427,561,1.084,579,1.052,581,0.959,595,0.753,637,3.703,675,1.445,717,2.955,718,2.688,724,2.065,725,2.065,732,3.226,750,2.688,751,1.371,752,1.371,759,1.06,760,1.371,767,1.371,773,1.528,776,2.168,814,3.703,818,4.872,823,2.688,828,2.986,833,3.62,844,2.986,845,4.208,847,1.89,857,3.297,858,2.086,869,1.89,870,1.89,878,3.297,891,2.086,905,2.086,906,4.55,920,1.89,921,1.445,925,1.89,927,1.89,928,1.89,929,1.89,930,1.89,932,1.89,986,1.528,1050,3.297,1062,2.755,1063,2.283,1064,2.569,1067,2.569,1069,1.743,1084,1.89,1131,6.17,1132,5.691,1133,1.89,1134,3.768,1135,4.673,1136,3.768,1137,4.673,1138,6.148,1139,5.31,1140,5.31,1141,5.31,1142,3.768,1143,4.673,1144,3.703,1145,3.703,1146,2.086,1147,3.768,1148,2.384,1149,2.384,1150,2.384,1151,2.384,1152,2.384,1153,2.384,1154,2.384,1155,2.384,1156,2.384,1157,3.768,1158,3.768,1159,2.384,1160,2.384,1161,3.768,1162,2.384,1163,2.384,1164,4.673,1165,2.384,1166,2.384,1167,2.384,1168,3.768,1169,3.768,1170,2.384,1171,1.89,1172,2.086,1173,2.384,1174,3.768,1175,2.384,1176,2.384,1177,2.384,1178,2.384,1179,2.384,1180,2.384,1181,4.673,1182,3.768,1183,4.673,1184,6.674,1185,3.415,1186,2.384,1187,2.384,1188,2.384,1189,1.89,1190,2.986,1191,3.768,1192,1.528,1193,3.768,1194,3.768,1195,2.384,1196,2.384,1197,2.384,1198,2.384,1199,2.384,1200,2.986,1201,1.743,1202,2.384,1203,2.086,1204,2.086,1205,2.384,1206,2.384,1207,2.384,1208,2.384,1209,2.384,1210,2.384,1211,2.384,1212,2.384,1213,2.384,1214,2.384,1215,3.415,1216,2.384,1217,2.384,1218,2.384,1219,3.768,1220,2.384,1221,3.768,1222,2.384,1223,2.384,1224,2.384,1225,2.384,1226,2.384,1227,2.384,1228,2.384,1229,2.384,1230,2.384,1231,2.384,1232,2.086,1233,4.673,1234,2.086,1235,4.645,1236,2.384,1237,2.384,1238,2.384,1239,6.148,1240,5.31,1241,2.384,1242,2.086,1243,2.384,1244,5.782,1245,6.011,1246,5.31,1247,4.088,1248,3.768,1249,2.384,1250,3.297,1251,2.086,1252,3.297,1253,2.086,1254,2.384,1255,2.086,1256,2.086,1257,3.297,1258,2.086,1259,2.086,1260,3.768,1261,2.384,1262,2.384,1263,2.384,1264,2.384,1265,2.384,1266,2.384,1267,2.086,1268,2.384,1269,3.768,1270,3.768,1271,3.768,1272,3.768,1273,2.384,1274,3.768,1275,3.768,1276,2.384,1277,2.086,1278,2.384,1279,2.384,1280,5.782,1281,2.384,1282,2.384,1283,2.384,1284,2.384,1285,2.384,1286,2.384,1287,2.384,1288,2.384,1289,2.384,1290,2.384,1291,3.768,1292,5.31,1293,3.768,1294,3.768,1295,2.384,1296,2.384,1297,2.384,1298,3.768,1299,2.086,1300,2.384,1301,2.384,1302,2.384,1303,2.384,1304,2.384,1305,2.384,1306,2.384,1307,2.384,1308,2.384,1309,2.384,1310,2.384,1311,2.384,1312,2.384,1313,2.384,1314,2.384,1315,2.384,1316,2.384,1317,2.086,1318,1.89,1319,2.086,1320,2.086,1321,1.89,1322,1.626,1323,3.297]],["title/interfaces/MinimalTrek.html",[467,0.408,488,0.876]],["body/interfaces/MinimalTrek.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.537,36,0.546,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.59,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.03,302,0.874,314,1.18,318,1.093,319,1.503,322,0.649,325,2.744,328,1.523,367,1.274,386,1.274,413,0.911,418,0.911,453,0.857,455,1.587,467,0.84,468,0.857,469,0.911,470,0.883,471,1.695,472,1.626,473,1.541,474,1.589,475,1.589,476,1.589,477,1.991,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,0.782,487,1.734,488,1.244,489,1.734,490,0.939,491,1.354,492,1.541,493,1.274,494,1.589,495,2.003,496,1.807,497,1.274,498,1.739,499,1.687,500,1.589,501,1.354,502,1.354,503,1.354,504,1.06,505,1.844,506,1.354,507,1.503,508,1.314,509,1.354,510,1.354,511,1.354,512,1.314,513,1.354,514,1.364,515,1.354,516,1.354,517,1.127,518,1.274,519,1.314,520,1.957,521,0.939,522,0.939,523,1.354,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.354,535,1.314,536,1.494,537,1.314,538,1.162,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.354,545,1.236,546,0.806,547,0.806,548,1.162,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.406,555,0.883,556,0.857,557,1.198,558,1.406,559,1.274,560,1.322,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.198,579,1.127,580,0.857,581,0.713,582,0.831]],["title/interfaces/MinimalTrekProperties.html",[467,0.408,489,1.053]],["body/interfaces/MinimalTrekProperties.html",[3,0.103,4,0.072,8,0.082,16,0.215,29,0.645,34,0.012,35,0.547,36,0.549,41,0.177,58,0.261,74,0.372,90,0.403,108,0.731,124,0.316,127,0.582,136,0.586,154,0.005,155,0.007,156,0.005,293,0.666,294,1.009,302,0.826,314,1.18,318,1.064,319,1.486,322,0.625,325,2.672,328,1.533,367,1.24,386,1.24,413,0.878,418,0.878,453,0.826,455,1.559,467,0.837,468,0.826,469,0.878,470,0.851,471,1.667,472,1.642,473,1.84,474,1.897,475,1.897,476,1.897,477,1.962,478,1.899,479,1.556,480,1.608,481,0.851,482,0.905,483,1.335,484,0.73,485,0.73,486,0.753,487,1.709,488,1.032,489,1.608,490,1.709,491,1.319,492,1.84,493,1.709,494,1.897,495,1.84,496,1.784,497,1.24,498,1.709,499,1.67,500,1.556,501,1.319,502,1.319,503,1.319,504,1.032,505,1.817,506,1.319,507,1.486,508,1.279,509,1.319,510,1.319,511,1.319,512,1.279,513,1.319,514,1.335,515,1.319,516,1.319,517,1.098,518,1.24,519,1.279,520,1.943,521,0.905,522,0.905,523,1.319,524,0.905,525,0.905,526,1.279,527,0.905,528,0.905,529,0.905,530,0.905,531,0.905,532,0.905,533,0.905,534,1.319,535,1.279,536,1.463,537,1.279,538,1.132,539,0.777,540,0.73,541,0.826,542,0.905,543,0.777,544,1.319,545,1.203,546,0.777,547,0.777,548,1.132,549,0.826,550,1.295,551,0.905,552,0.878,553,1.335,554,1.377,555,0.851,556,0.826,557,1.167,558,1.377,559,1.24,560,1.295,561,0.777,562,0.905,563,0.905,564,0.905,565,0.905,566,0.878,567,0.878,568,0.878,569,0.878,570,0.878,571,0.878,572,0.905,573,0.878,574,0.905,575,0.905,576,0.801,577,0.878,578,1.167,579,1.098,580,0.826,581,0.687,582,0.801]],["title/interfaces/MinimalTreks.html",[467,0.408,486,0.932]],["body/interfaces/MinimalTreks.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.55,36,0.545,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.59,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.03,302,0.834,314,1.181,318,1.093,319,1.503,322,0.649,328,1.523,367,1.274,386,1.274,413,0.911,418,0.911,453,0.857,455,1.587,467,0.84,468,0.857,469,0.911,470,0.883,471,1.679,472,1.626,473,1.541,474,1.589,475,1.589,476,1.589,477,1.975,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,1.127,487,1.907,488,1.361,489,1.494,490,0.939,491,1.354,492,1.541,493,1.274,494,1.589,495,1.863,496,1.807,497,1.274,498,1.739,499,1.687,500,1.589,501,1.354,502,1.354,503,1.354,504,1.06,505,1.844,506,1.354,507,1.503,508,1.314,509,1.354,510,1.354,511,1.354,512,1.314,513,1.354,514,1.364,515,1.354,516,1.354,517,1.127,518,1.274,519,1.314,520,1.957,521,0.939,522,0.939,523,1.354,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.354,535,1.314,536,1.494,537,1.314,538,1.162,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.354,545,1.236,546,0.806,547,0.806,548,1.162,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.406,555,0.883,556,0.857,557,1.198,558,1.406,559,1.274,560,1.322,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.198,579,1.127,580,0.857,581,0.713,582,0.831]],["title/injectables/MoreInformationsService.html",[298,1.394,1324,2.822]],["body/injectables/MoreInformationsService.html",[3,0.168,4,0.118,8,0.135,13,2.864,16,0.351,17,1.578,19,1.232,24,3.167,25,4.452,31,1.639,33,1.531,34,0.012,35,0.461,36,0.436,37,1.353,39,1.578,41,0.253,42,0.759,43,2.034,44,2.034,45,2.034,46,2.258,58,0.168,59,0.707,60,2.297,74,0.609,75,4.637,154,0.008,155,0.009,156,0.008,182,2.864,258,2.616,259,2.911,280,1.73,298,2.29,299,5.278,300,2.998,302,0.757,303,5.389,304,2.263,319,1.634,326,1.675,328,1.297,338,2.034,345,2.998,472,1.088,546,1.27,547,1.27,595,1.728,684,3.73,1004,4.358,1324,4.637,1325,6.965,1326,5.819,1327,4.787,1328,5.864,1329,6.801,1330,7.741,1331,5.471,1332,6.801,1333,6.801,1334,5.471,1335,5.471,1336,5.864,1337,4.787,1338,6.135,1339,5.389,1340,5.389,1341,5.389,1342,5.471,1343,5.471]],["title/components/MoreItemPage.html",[0,0.555,128,1.228]],["body/components/MoreItemPage.html",[0,0.893,1,1.306,2,1.927,3,0.135,4,0.095,5,1.482,6,1.482,7,1.482,8,0.108,10,1.482,11,2.913,12,2.648,14,1.99,16,0.282,17,1.371,19,1.33,31,1.704,33,0.991,34,0.012,35,0.452,36,0.457,37,0.876,39,1.654,40,2.115,41,0.219,42,0.611,58,0.135,59,0.569,60,1.753,74,0.49,90,0.364,91,1.99,92,1.99,93,1.482,94,2.401,95,1.482,96,1.482,97,1.306,98,1.482,99,1.482,100,1.306,101,1.482,102,1.482,103,1.306,104,1.482,105,1.306,106,1.482,107,1.306,108,0.509,109,1.482,110,1.306,111,1.482,112,1.482,113,1.306,114,1.435,115,1.39,116,2.246,117,1.306,118,1.435,119,1.482,120,1.306,121,1.482,122,1.306,123,1.549,124,0.674,125,1.99,126,1.347,127,0.617,128,2.115,129,2.286,130,1.482,131,1.306,132,1.482,133,1.306,134,1.482,135,1.306,136,0.529,137,1.306,138,1.482,139,1.306,140,1.482,141,1.266,142,1.482,143,1.306,144,1.482,145,1.347,146,1.306,147,1.99,148,1.306,149,1.306,150,1.482,151,1.306,152,1.482,153,1.482,154,0.006,155,0.008,156,0.006,190,1.531,267,1.817,280,1.12,293,1.175,302,0.657,326,1.347,328,1.036,397,1.531,401,1.99,402,3.342,404,2.055,410,3.475,433,2.566,471,1.251,504,1.251,547,1.654,595,1.39,717,3.68,718,3.836,724,3.237,725,3.237,732,3.342,750,3.836,751,2.532,752,2.532,759,1.956,760,2.532,763,2.666,767,2.532,768,3.001,776,2.532,1344,6.197,1345,5.716,1346,3.851,1347,6.505,1348,6.669,1349,5.908,1350,4.765,1351,6.669,1352,5.285,1353,5.649,1354,3.851,1355,5.21,1356,5.012,1357,5.908,1358,4.401,1359,4.401,1360,4.401,1361,4.401,1362,3.851,1363,4.401,1364,4.682,1365,4.401,1366,3.488,1367,5.908]],["title/modules/MoreItemPageModule.html",[157,1.267,1368,3.025]],["body/modules/MoreItemPageModule.html",[0,0.783,3,0.18,4,0.126,8,0.144,34,0.012,41,0.259,42,0.811,43,2.173,44,2.173,47,1.533,58,0.18,59,0.756,90,0.483,128,2.475,129,1.681,154,0.008,155,0.01,156,0.008,157,1.789,159,2.413,160,2.598,161,3.663,162,2.81,163,2.598,164,2.598,171,3.964,173,3.031,174,2.7,175,2.598,178,3.271,183,3.271,190,2.034,191,4.829,192,5.114,193,5.114,197,3.362,198,3.362,199,3.549,201,3.06,278,3.06,279,3.988,280,1.487,281,3.541,1344,4.632,1345,4.273,1347,5.114,1368,6.153,1369,5.114,1370,5.114,1371,5.845,1372,5.845,1373,3.707,1374,2.7,1375,5.845,1376,4.273,1377,4.273,1378,3.06,1379,3.746,1380,3.203]],["title/guards/MoreItemResolver.html",[191,2.822,1381,2.822]],["body/guards/MoreItemResolver.html",[3,0.169,4,0.119,8,0.135,16,0.353,17,1.585,19,1.537,21,3.527,31,1.446,33,1.537,34,0.012,35,0.463,36,0.438,37,1.359,39,1.279,41,0.261,42,0.765,45,2.049,46,2.274,47,1.445,48,2.545,58,0.169,59,0.712,60,2.202,64,2.884,65,2.761,129,1.965,154,0.008,155,0.009,156,0.008,182,2.884,190,1.917,191,4.657,232,5.619,233,3.531,234,3.756,258,2.856,280,1.402,298,2.3,337,3.531,338,2.54,339,3.531,343,3.756,344,3.019,392,3.531,393,3.531,401,1.856,504,1.166,547,1.279,595,1.741,1324,5.291,1326,4.027,1350,3.531,1352,4.366,1378,4.062,1382,3.756,1383,6.494,1384,4.82,1385,4.82,1386,5.51,1387,5.413,1388,5.672,1389,5.51,1390,5.413,1391,4.82,1392,4.82,1393,5.51,1394,5.51,1395,5.51,1396,4.027,1397,4.027,1398,4.027,1399,5.51,1400,4.366,1401,4.366]],["title/components/MorePage.html",[0,0.555,131,1.228]],["body/components/MorePage.html",[0,0.895,1,1.31,2,1.93,3,0.136,4,0.095,5,1.486,6,1.486,7,1.486,8,0.109,10,1.486,11,2.914,12,2.648,14,1.993,16,0.283,17,1.374,19,0.993,31,1.705,33,0.993,34,0.012,35,0.452,36,0.458,37,0.878,39,1.656,40,2.208,41,0.229,42,0.613,45,1.641,46,1.822,58,0.136,59,0.571,60,1.31,74,0.659,90,0.365,91,1.993,92,1.993,93,1.486,94,2.403,95,1.486,96,1.486,97,1.31,98,1.486,99,1.486,100,1.31,101,1.486,102,1.486,103,1.31,104,1.486,105,1.31,106,1.486,107,1.31,108,0.51,109,1.486,110,1.31,111,1.486,112,1.486,113,1.31,114,1.439,115,1.394,116,2.249,117,1.31,118,1.439,119,1.486,120,1.31,121,1.486,122,1.31,123,1.552,124,0.675,125,1.993,126,1.351,127,0.618,128,1.31,129,1.921,130,1.486,131,2.117,132,1.486,133,1.31,134,1.486,135,1.31,136,0.53,137,1.31,138,1.486,139,1.31,140,1.486,141,1.27,142,1.486,143,1.31,144,1.486,145,1.351,146,1.31,147,1.993,148,1.31,149,1.31,150,1.486,151,1.31,152,1.486,153,1.486,154,0.006,155,0.008,156,0.006,190,1.536,267,1.822,280,1.123,302,0.659,304,2.137,314,0.793,326,1.812,397,1.536,401,1.993,402,3.347,404,2.059,410,3.478,416,4.046,433,2.569,471,1.253,504,1.253,546,1.656,595,1.394,684,3.009,717,3.683,724,3.243,725,3.243,732,3.347,750,3.841,751,2.539,752,2.539,759,1.961,760,2.539,763,2.674,767,2.539,768,3.009,776,2.539,1350,4.769,1353,5.655,1354,3.862,1355,5.216,1356,5.015,1362,3.862,1364,4.691,1366,3.498,1402,3.862,1403,6.678,1404,5.919,1405,5.898,1406,6.678,1407,5.919,1408,4.414,1409,4.414,1410,5.179,1411,4.414,1412,4.414,1413,4.414,1414,4.414,1415,5.919]],["title/modules/MorePageModule.html",[157,1.267,1416,2.822]],["body/modules/MorePageModule.html",[0,0.787,3,0.181,4,0.127,8,0.144,34,0.012,41,0.259,42,0.815,43,2.184,44,2.184,47,1.541,58,0.181,59,0.759,90,0.486,131,2.478,154,0.008,155,0.01,156,0.008,157,1.798,159,2.425,160,2.61,161,3.671,162,2.824,163,2.61,164,2.61,171,3.968,173,3.041,174,2.713,175,2.61,178,3.281,183,3.281,190,2.044,194,4.843,195,5.139,197,3.379,198,3.379,199,3.56,201,3.075,278,3.075,279,3.997,280,1.494,281,3.559,416,3.559,1373,3.718,1374,2.713,1376,4.294,1377,4.294,1378,3.075,1379,3.765,1380,3.219,1416,5.745,1417,5.139,1418,5.139,1419,5.874,1420,5.874,1421,5.874]],["title/guards/MoreResolver.html",[194,2.822,1381,2.822]],["body/guards/MoreResolver.html",[3,0.174,4,0.122,8,0.139,16,0.363,19,1.564,21,3.548,31,1.199,33,1.275,34,0.012,35,0.383,36,0.363,37,1.126,41,0.262,42,0.786,45,2.105,46,2.337,47,1.485,48,2.615,58,0.174,59,0.732,60,2.229,64,2.964,65,2.838,129,1.998,154,0.008,155,0.01,156,0.008,182,2.964,190,1.97,194,4.736,232,5.651,233,3.629,234,3.861,258,2.672,298,2.339,302,0.63,337,3.629,339,3.629,343,4.736,344,3.103,392,3.629,393,3.629,401,1.907,504,1.199,546,1.314,595,1.789,1324,5.341,1326,4.139,1350,3.629,1378,4.101,1382,3.861,1385,4.954,1388,5.077,1390,5.505,1391,4.954,1392,4.954,1396,4.139,1397,4.139,1398,4.139,1400,4.487,1401,4.487,1422,4.954,1423,5.662,1424,5.662,1425,5.662,1426,5.662]],["title/injectables/OnlineTreksService.html",[28,1.99,298,1.394]],["body/injectables/OnlineTreksService.html",[3,0.103,4,0.072,8,0.082,13,1.75,16,0.214,17,1.131,19,1.097,24,2.461,25,3.634,28,2.343,31,1.754,33,1.73,34,0.012,35,0.521,36,0.499,37,1.529,39,1.861,40,0.992,41,0.233,42,0.464,43,1.243,44,1.243,45,1.243,46,1.38,54,3.997,55,1.676,58,0.103,59,0.432,60,2.281,74,0.703,75,4.58,123,0.877,124,0.544,127,0.674,154,0.005,155,0.007,156,0.005,173,1.431,180,4.619,182,1.75,258,3.107,259,3.238,280,1.887,293,0.665,294,1.008,298,1.641,299,4.308,300,1.832,302,0.542,303,4.557,304,2.425,310,2.65,312,3.562,314,1.055,319,1.632,324,2.026,326,1.934,328,1.475,338,1.243,345,1.832,401,1.126,433,1.875,449,2.28,483,1.467,484,0.73,485,0.73,486,0.753,488,1.217,499,1.73,519,0.877,550,0.753,553,0.776,558,0.8,560,1.097,561,1.335,566,1.657,567,1.278,568,1.278,569,1.657,570,1.278,571,1.278,573,1.657,579,1.422,595,1.056,606,4.05,608,2.143,609,2.28,629,2.925,631,2.925,635,2.925,675,3.828,757,2.143,761,2.143,764,2.65,810,4.619,869,2.65,955,5.008,1004,4.05,1185,2.444,1200,2.65,1201,2.444,1215,2.444,1317,2.925,1322,2.28,1328,4.557,1336,5.557,1337,2.925,1338,6.092,1339,5.323,1340,5.323,1341,5.323,1427,6.59,1428,5.75,1429,4.264,1430,4.873,1431,4.264,1432,4.264,1433,4.264,1434,4.264,1435,4.264,1436,4.264,1437,4.264,1438,6.319,1439,6.319,1440,5.031,1441,4.873,1442,3.344,1443,3.344,1444,4.873,1445,5.879,1446,4.873,1447,3.344,1448,4.873,1449,3.344,1450,4.873,1451,3.344,1452,4.873,1453,3.344,1454,3.344,1455,3.344,1456,3.344,1457,3.344,1458,3.344,1459,3.344,1460,3.344,1461,3.344,1462,3.344,1463,2.925,1464,3.344,1465,3.344,1466,3.344,1467,3.344,1468,3.344,1469,3.344,1470,3.344,1471,3.344,1472,3.344,1473,3.344,1474,3.344,1475,2.65,1476,3.344,1477,3.344,1478,3.344,1479,3.344,1480,3.344,1481,3.344,1482,3.344,1483,3.344,1484,3.344,1485,3.344,1486,3.344,1487,3.344,1488,3.344,1489,3.344,1490,3.344,1491,2.925,1492,2.925,1493,3.344]],["title/interfaces/Picture.html",[467,0.408,499,0.932]],["body/interfaces/Picture.html",[3,0.106,4,0.074,8,0.085,16,0.221,29,0.666,34,0.012,35,0.537,36,0.543,41,0.18,58,0.262,74,0.384,90,0.563,108,0.742,124,0.327,127,0.589,136,0.599,154,0.005,155,0.007,156,0.005,293,0.687,294,1.027,302,0.833,314,1.182,318,1.485,319,1.5,322,0.645,328,1.523,367,1.269,386,1.269,413,0.906,418,0.906,453,0.852,455,1.804,467,0.84,468,0.852,469,0.906,470,0.879,471,1.678,472,1.625,473,1.536,474,1.584,475,1.584,476,1.584,477,1.973,478,1.918,479,1.584,480,1.628,481,0.879,482,0.934,483,1.36,484,0.754,485,0.754,486,0.778,487,1.731,488,1.056,489,1.49,490,0.934,491,1.84,492,1.536,493,1.269,494,1.584,495,1.86,496,1.804,497,1.269,498,1.735,499,1.717,500,1.584,501,1.349,502,1.349,503,1.349,504,1.056,505,1.84,506,1.349,507,1.5,508,1.309,509,1.349,510,1.349,511,1.349,512,1.309,513,1.349,514,1.36,515,1.349,516,1.349,517,1.123,518,1.269,519,1.309,520,1.955,521,0.934,522,0.934,523,1.349,524,0.934,525,0.934,526,1.309,527,0.934,528,0.934,529,0.934,530,0.934,531,0.934,532,0.934,533,0.934,534,1.349,535,1.309,536,1.49,537,1.309,538,1.158,539,0.802,540,0.754,541,0.852,542,0.934,543,0.802,544,1.349,545,1.231,546,0.802,547,0.802,548,1.158,549,0.852,550,1.319,551,0.934,552,0.906,553,1.36,554,1.402,555,0.879,556,0.852,557,1.194,558,1.402,559,1.269,560,1.319,561,0.802,562,0.934,563,0.934,564,0.934,565,0.934,566,0.906,567,0.906,568,0.906,569,0.906,570,0.906,571,0.906,572,0.934,573,0.906,574,0.934,575,0.934,576,0.827,577,0.906,578,1.194,579,1.123,580,0.852,581,0.709,582,0.827]],["title/interfaces/Poi.html",[136,0.497,467,0.408]],["body/interfaces/Poi.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.537,36,0.548,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.705,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.873,314,1.18,318,1.092,319,1.502,322,0.648,325,3.521,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.586,467,0.84,468,0.855,469,0.909,470,0.882,471,1.694,472,1.626,473,1.54,474,1.587,475,1.587,476,1.587,477,1.99,478,1.92,479,1.587,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.733,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.587,495,2.002,496,1.806,497,1.273,498,1.738,499,1.687,500,1.587,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/components/PoiComponent.html",[0,0.555,133,1.228]],["body/components/PoiComponent.html",[0,0.842,1,1.164,2,1.781,3,0.121,4,0.085,5,1.322,6,1.322,7,1.322,8,0.096,10,1.322,11,2.887,12,2.625,14,1.839,16,0.252,17,1.268,19,0.883,27,3.913,28,3.433,31,1.702,33,1.229,34,0.012,35,0.46,36,0.504,37,1.087,39,0.911,40,1.621,41,0.22,42,0.545,45,1.459,46,1.62,53,2.15,54,1.886,55,2.737,58,0.121,59,0.507,74,0.756,80,1.459,90,0.324,91,1.839,92,1.839,93,1.322,94,2.288,95,1.322,96,1.322,97,1.164,98,1.322,99,1.322,100,1.164,101,1.322,102,1.322,103,1.164,104,1.322,105,1.164,106,1.322,107,1.164,108,0.454,109,1.322,110,1.164,111,1.322,112,1.322,113,1.164,114,2.049,115,1.24,116,2.116,117,1.164,118,1.28,119,1.322,120,1.164,121,1.322,122,1.164,123,1.433,124,0.642,125,1.839,126,1.201,127,0.657,128,1.164,129,1.129,130,1.322,131,1.164,132,1.322,133,2.016,134,1.322,135,1.164,136,0.944,137,1.164,138,1.322,139,1.164,140,1.322,141,1.129,142,1.322,143,1.164,144,1.322,145,1.201,146,1.164,147,1.839,148,1.164,149,1.164,150,1.322,151,1.164,152,1.322,153,1.322,154,0.005,155,0.008,156,0.005,280,0.998,294,1.102,302,0.608,304,2.338,314,0.91,318,1.192,322,1.468,326,2.08,397,1.365,401,1.839,404,1.9,412,2.993,416,2.377,433,2.101,434,3.913,499,1.664,548,1.458,552,1.433,581,1.289,595,1.24,604,2.675,670,3.992,675,3.309,714,1.967,735,3.907,736,3.913,765,2.257,766,2.054,773,2.515,814,4.979,828,4.329,844,4.329,845,5.384,847,3.11,921,3.309,999,4.979,1004,3.501,1008,2.675,1062,2.868,1063,2.377,1064,3.724,1068,2.868,1192,2.515,1322,2.675,1494,3.433,1495,6.283,1496,5.462,1497,5.497,1498,5.497,1499,3.433,1500,5.462,1501,3.924,1502,3.924,1503,3.924,1504,3.924,1505,3.924,1506,3.924,1507,5.462,1508,3.924,1509,3.924,1510,3.924,1511,4.779,1512,4.779,1513,3.924,1514,3.433,1515,3.433,1516,3.433,1517,3.433,1518,5.943,1519,6.248,1520,3.11,1521,3.11,1522,5.462,1523,5.462,1524,4.779,1525,5.462,1526,4.779,1527,4.779,1528,3.11,1529,3.433,1530,3.433,1531,4.779,1532,3.11,1533,3.433]],["title/components/PoiDetailsComponent.html",[0,0.555,135,1.228]],["body/components/PoiDetailsComponent.html",[0,0.79,1,1.036,2,1.64,3,0.107,4,0.075,5,1.176,6,1.176,7,1.176,8,0.086,10,1.176,11,2.859,12,2.599,14,1.694,16,0.224,17,1.167,19,1.132,27,3.745,28,3.285,29,1.373,30,3.285,31,1.731,33,0.786,34,0.012,35,0.399,36,0.509,37,0.695,39,1.167,40,1.749,41,0.231,42,0.485,45,1.299,46,1.442,47,0.916,53,1.914,54,1.679,55,2.521,57,1.914,58,0.107,59,0.451,74,0.761,80,1.299,90,0.487,91,1.694,92,1.694,93,1.176,94,2.172,95,1.176,96,1.176,97,1.036,98,1.176,99,1.176,100,1.036,101,1.176,102,1.176,103,1.036,104,1.176,105,1.036,106,1.176,107,1.036,108,0.404,109,1.176,110,1.036,111,1.176,112,1.176,113,1.036,114,1.139,115,1.103,116,1.985,117,1.036,118,1.139,119,1.176,120,1.036,121,1.176,122,1.036,123,1.319,124,0.61,125,1.694,126,1.069,127,0.635,128,1.036,129,1.005,130,1.176,131,1.036,132,1.176,133,1.036,134,1.176,135,1.913,136,0.97,137,1.036,138,1.176,139,1.036,140,1.176,141,1.005,142,1.176,143,1.036,144,1.176,145,1.069,146,1.036,147,1.694,148,1.036,149,1.036,150,1.176,151,1.036,152,1.176,153,1.176,154,0.005,155,0.007,156,0.005,241,6.01,280,1.279,294,1.033,302,0.56,304,2.408,314,0.916,318,1.098,322,1.429,326,2.092,338,1.299,397,1.215,404,1.75,416,2.116,433,1.935,499,1.602,581,1.21,595,1.103,604,2.381,670,3.676,714,1.75,727,4.397,730,3.907,733,2.553,734,4.38,735,3.931,736,3.745,737,4.975,739,4.714,759,2.619,765,2.009,766,1.828,773,3.224,800,2.553,995,2.768,996,4.401,997,5.157,998,4.401,999,4.671,1003,3.056,1004,3.224,1007,3.056,1063,2.116,1064,3.429,1068,2.553,1192,3.224,1322,2.381,1497,5.157,1498,4.401,1511,4.401,1512,4.401,1514,3.056,1515,3.056,1516,3.056,1517,3.056,1518,5.642,1519,5.979,1520,2.768,1521,2.768,1524,4.401,1526,4.401,1527,4.401,1528,2.768,1529,3.056,1530,3.056,1531,4.401,1532,2.768,1533,3.056,1534,7.194,1535,5.894,1536,5.894,1537,5.03,1538,3.493,1539,3.493,1540,3.493,1541,3.493,1542,3.493,1543,3.493,1544,3.493,1545,3.493,1546,3.493,1547,3.493,1548,3.493,1549,3.493,1550,5.03,1551,3.493,1552,3.493,1553,3.493,1554,3.493,1555,3.493,1556,3.493,1557,3.493,1558,3.493,1559,3.493,1560,3.493,1561,3.493,1562,3.493,1563,3.493,1564,5.03,1565,5.03,1566,5.03,1567,5.03]],["title/interfaces/Pois.html",[467,0.408,550,0.932]],["body/interfaces/Pois.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.674,34,0.012,35,0.538,36,0.543,41,0.181,58,0.262,74,0.389,90,0.416,108,0.746,124,0.33,127,0.592,136,0.775,154,0.005,155,0.007,156,0.005,293,0.695,294,1.034,302,0.836,314,1.18,318,1.099,319,1.506,322,0.653,328,1.524,367,1.28,386,1.28,413,0.917,418,0.917,453,0.862,455,1.592,467,0.84,468,0.862,469,0.917,470,0.889,471,1.697,472,1.627,473,1.547,474,1.595,475,1.595,476,1.595,477,1.977,478,1.969,479,1.595,480,1.636,481,0.889,482,0.945,483,1.369,484,0.763,485,0.763,486,0.787,487,1.91,488,1.065,489,1.5,490,0.945,491,1.361,492,1.547,493,1.28,494,1.595,495,1.867,496,1.811,497,1.28,498,1.745,499,1.69,500,1.595,501,1.361,502,1.361,503,1.361,504,1.065,505,1.849,506,1.361,507,1.506,508,1.32,509,1.361,510,1.361,511,1.361,512,1.32,513,1.361,514,1.369,515,1.361,516,1.361,517,1.133,518,1.28,519,1.32,520,1.96,521,0.945,522,0.945,523,1.361,524,0.945,525,0.945,526,1.32,527,0.945,528,0.945,529,0.945,530,0.945,531,0.945,532,0.945,533,0.945,534,1.361,535,1.32,536,1.5,537,1.32,538,1.168,539,0.811,540,0.763,541,0.862,542,0.945,543,0.811,544,1.361,545,1.242,546,0.811,547,0.811,548,1.168,549,0.862,550,1.452,551,0.945,552,0.917,553,1.369,554,1.411,555,0.889,556,0.862,557,1.204,558,1.411,559,1.28,560,1.327,561,0.811,562,0.945,563,0.945,564,0.945,565,0.945,566,0.917,567,0.917,568,0.917,569,0.917,570,0.917,571,0.917,572,0.945,573,0.917,574,0.945,575,0.945,576,0.836,577,0.917,578,1.204,579,1.133,580,0.862,581,0.717,582,0.836]],["title/components/ProgressComponent.html",[0,0.555,137,1.228]],["body/components/ProgressComponent.html",[0,0.923,1,1.393,2,2.011,3,0.144,4,0.101,5,1.581,6,1.581,7,1.581,8,0.115,10,1.581,11,2.926,12,2.66,14,2.077,16,0.301,17,1.431,19,1.057,24,3.131,31,1.65,33,1.057,34,0.012,35,0.466,36,0.469,37,0.934,39,1.431,40,2.17,41,0.212,42,0.652,55,2.353,58,0.144,59,0.607,60,2.17,90,0.388,91,2.077,92,2.077,93,1.581,94,2.463,95,1.581,96,1.581,97,1.393,98,1.581,99,1.581,100,1.393,101,1.581,102,1.581,103,1.393,104,1.581,105,1.393,106,1.581,107,1.393,108,0.543,109,1.581,110,1.393,111,1.581,112,1.581,113,1.393,114,1.531,115,1.483,116,2.319,117,1.393,118,1.531,119,1.581,120,1.393,121,1.581,122,1.393,123,1.618,124,0.691,125,2.077,126,1.437,127,0.633,128,1.393,129,1.351,130,1.581,131,1.393,132,1.581,133,1.393,134,1.581,135,1.393,136,0.564,137,2.17,138,1.581,139,1.393,140,1.581,141,1.351,142,1.581,143,1.393,144,1.581,145,1.437,146,1.393,147,2.077,148,1.393,149,1.393,150,1.581,151,1.393,152,1.581,153,1.581,154,0.006,155,0.009,156,0.006,302,0.686,304,2.118,328,1.081,338,1.746,397,1.634,404,2.146,730,4.431,735,4.207,736,4.162,759,3.06,765,2.701,766,2.458,1008,3.201,1076,5.396,1499,4.108,1568,4.108,1569,6.167,1570,6.167,1571,6.887,1572,6.167,1573,7.797,1574,7.314,1575,6.887,1576,7.314,1577,6.167,1578,4.696,1579,4.696,1580,4.696,1581,4.696,1582,4.696,1583,6.167,1584,4.696,1585,4.696,1586,4.696,1587,4.696,1588,6.167,1589,6.167]],["title/interfaces/Property.html",[467,0.408,520,1.021]],["body/interfaces/Property.html",[3,0.105,4,0.074,8,0.084,16,0.219,29,0.66,34,0.012,35,0.549,36,0.543,37,1.406,41,0.179,58,0.262,74,0.381,90,0.41,108,0.739,124,0.323,127,0.587,136,0.595,154,0.005,155,0.007,156,0.005,293,0.681,294,1.021,302,0.831,314,1.181,318,1.082,319,1.496,322,0.639,328,1.524,367,1.261,386,1.261,413,0.897,418,0.897,453,0.844,455,1.576,467,0.839,468,0.844,469,0.897,470,0.87,471,1.675,472,1.646,473,1.528,474,1.576,475,1.576,476,1.576,477,1.97,478,1.912,479,1.576,480,1.622,481,0.87,482,0.925,483,1.352,484,0.747,485,0.747,486,0.77,487,1.724,488,1.049,489,1.482,490,0.925,491,1.34,492,1.528,493,1.261,494,1.576,495,1.854,496,1.798,497,1.261,498,1.727,499,1.681,500,1.576,501,1.34,502,1.34,503,1.34,504,1.049,505,1.833,506,1.34,507,1.496,508,1.3,509,1.34,510,1.34,511,1.34,512,1.3,513,1.34,514,1.352,515,1.34,516,1.34,517,1.115,518,1.261,519,1.3,520,1.97,521,0.925,522,0.925,523,1.833,524,0.925,525,0.925,526,1.3,527,0.925,528,0.925,529,0.925,530,0.925,531,0.925,532,0.925,533,0.925,534,1.34,535,1.3,536,1.482,537,1.3,538,1.15,539,0.794,540,0.747,541,0.844,542,0.925,543,0.794,544,1.833,545,1.673,546,0.794,547,0.794,548,1.15,549,0.844,550,1.311,551,0.925,552,0.897,553,1.352,554,1.394,555,0.87,556,0.844,557,1.186,558,1.394,559,1.261,560,1.311,561,0.794,562,0.925,563,0.925,564,0.925,565,0.925,566,0.897,567,0.897,568,0.897,569,0.897,570,0.897,571,0.897,572,0.925,573,0.897,574,0.925,575,0.925,576,0.819,577,0.897,578,1.186,579,1.115,580,0.844,581,0.702,582,0.819]],["title/components/SearchComponent.html",[0,0.555,139,1.228]],["body/components/SearchComponent.html",[0,0.816,1,1.099,2,1.711,3,0.114,4,0.08,5,1.248,6,1.248,7,1.248,8,0.091,10,1.248,11,2.874,12,2.612,14,1.767,16,0.336,17,1.218,19,1.181,21,3.195,24,3.107,27,3.337,28,3.184,31,1.7,33,1.491,34,0.012,35,0.492,36,0.489,37,1.318,39,1.732,40,2.301,41,0.229,42,0.514,47,0.972,53,2.03,54,1.781,55,3.052,58,0.114,59,0.479,60,2.301,74,0.584,80,1.95,90,0.306,91,1.767,92,2.445,93,1.248,94,2.231,95,1.248,96,1.248,97,1.099,98,1.248,99,1.248,100,1.099,101,1.248,102,1.248,103,1.099,104,1.248,105,1.099,106,1.248,107,1.099,108,0.428,109,1.248,110,1.099,111,1.248,112,1.248,113,1.099,114,1.208,115,1.17,116,2.051,117,1.099,118,1.208,119,1.248,120,1.099,121,1.248,122,1.099,123,1.376,124,0.721,125,1.767,126,1.134,127,0.66,128,1.099,129,1.066,130,1.248,131,1.099,132,1.248,133,1.099,134,1.248,135,1.099,136,0.445,137,1.099,138,1.248,139,1.965,140,1.248,141,1.066,142,1.248,143,1.099,144,1.248,145,1.134,146,1.099,147,1.767,148,1.099,149,1.099,150,1.248,151,1.099,152,1.248,153,1.248,154,0.005,155,0.007,156,0.005,163,2.331,258,1.425,280,1.334,302,0.584,304,2.321,314,0.937,322,1.395,326,1.606,328,1.337,397,1.289,401,1.767,402,3.052,404,1.825,410,3.317,471,1.11,472,0.737,486,1.371,488,1.289,561,1.414,578,0.886,595,1.17,717,3.49,721,4.157,724,2.874,725,2.874,727,4.516,732,3.052,733,2.708,734,4.245,735,3.503,736,3.629,737,4.783,739,3.834,750,3.503,751,2.131,752,2.131,759,1.646,760,2.131,763,2.244,765,2.131,766,1.939,767,2.131,768,2.526,770,3.241,776,2.131,777,2.936,778,3.241,800,2.708,803,4.589,1043,3.178,1145,4.157,1185,4.452,1590,3.241,1591,5.306,1592,5.795,1593,6.09,1594,5.246,1595,6.09,1596,5.246,1597,6.09,1598,5.246,1599,3.705,1600,4.589,1601,3.705,1602,3.705,1603,5.246,1604,3.705,1605,5.328,1606,5.246,1607,3.705,1608,3.705,1609,3.705,1610,3.705,1611,2.936,1612,2.936,1613,2.936,1614,3.705,1615,5.246,1616,3.705,1617,3.705,1618,3.705,1619,3.705,1620,5.246,1621,4.589,1622,5.246,1623,5.246]],["title/injectables/SearchTreksService.html",[298,1.394,1591,3.025]],["body/injectables/SearchTreksService.html",[3,0.188,4,0.132,8,0.15,13,3.203,16,0.392,17,1.689,31,1.295,33,1.377,34,0.012,35,0.414,36,0.392,37,1.217,39,1.42,41,0.224,42,0.849,58,0.188,59,0.791,124,0.735,154,0.008,155,0.01,156,0.008,258,3.094,298,2.452,300,3.353,304,2.167,314,1.041,345,3.353,488,1.764,595,1.933,609,4.172,1591,5.321,1592,6.369,1605,7.186,1611,5.769,1624,6.369,1625,7.279,1626,6.119,1627,6.119,1628,6.119,1629,6.119]],["title/interfaces/Settings.html",[29,0.798,467,0.408]],["body/interfaces/Settings.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.969,34,0.012,35,0.538,36,0.541,41,0.181,58,0.262,74,0.388,90,0.416,108,0.823,124,0.33,127,0.591,136,0.604,154,0.005,155,0.007,156,0.005,293,1.283,294,1.033,302,0.835,314,1.18,318,1.097,319,1.505,322,0.652,328,1.524,367,1.279,386,1.279,413,0.915,418,0.915,453,0.861,455,1.59,467,0.84,468,0.861,469,0.915,470,0.888,471,1.681,472,1.627,473,1.545,474,1.593,475,1.593,476,1.593,477,1.977,478,1.924,479,1.593,480,1.635,481,0.888,482,0.944,483,1.367,484,0.762,485,0.762,486,0.786,487,1.738,488,1.064,489,1.499,490,0.944,491,1.36,492,1.545,493,1.279,494,1.593,495,1.866,496,1.81,497,1.279,498,1.743,499,1.69,500,1.593,501,1.36,502,1.36,503,1.36,504,1.064,505,1.848,506,1.36,507,1.505,508,1.318,509,1.36,510,1.36,511,1.36,512,1.318,513,1.36,514,1.367,515,1.36,516,1.36,517,1.132,518,1.279,519,1.318,520,1.959,521,0.944,522,0.944,523,1.36,524,0.944,525,0.944,526,1.318,527,0.944,528,0.944,529,0.944,530,0.944,531,0.944,532,0.944,533,0.944,534,1.36,535,1.318,536,1.499,537,1.318,538,1.167,539,0.81,540,0.762,541,0.861,542,0.944,543,0.81,544,1.36,545,1.24,546,0.81,547,0.81,548,1.496,549,1.59,550,1.326,551,0.944,552,0.915,553,1.367,554,1.41,555,0.888,556,0.861,557,1.203,558,1.41,559,1.279,560,1.326,561,0.81,562,0.944,563,0.944,564,0.944,565,0.944,566,0.915,567,0.915,568,0.915,569,0.915,570,0.915,571,0.915,572,0.944,573,0.915,574,0.944,575,0.944,576,0.835,577,0.915,578,1.203,579,1.132,580,0.861,581,0.716,582,0.835]],["title/injectables/SettingsService.html",[30,1.99,298,1.394]],["body/injectables/SettingsService.html",[3,0.1,4,0.07,8,0.08,13,1.696,16,0.208,17,1.105,19,0.729,24,2.417,25,3.58,29,1.382,30,2.289,31,1.731,33,1.613,34,0.012,35,0.517,36,0.502,37,1.426,39,1.771,40,2.127,41,0.226,42,0.45,43,1.205,44,1.205,45,1.205,46,1.337,58,0.1,59,0.419,60,2.345,66,1.775,74,0.798,75,2.209,76,2.077,80,1.771,82,2.61,108,0.829,124,0.306,127,0.574,154,0.004,155,0.007,156,0.004,180,4.848,182,1.696,226,2.568,230,3.481,258,2.758,259,3.212,280,1.968,293,1.123,298,1.604,300,1.775,302,0.53,304,2.394,310,2.568,312,4.55,314,0.985,319,1.159,324,1.963,326,2.297,328,1.257,338,1.205,345,1.775,433,1.832,472,1.426,473,0.85,487,0.824,512,1.249,514,1.311,517,1.561,520,1.967,537,0.85,539,1.742,540,0.707,543,0.752,548,1.445,549,1.852,553,1.539,554,0.775,555,1.211,556,1.536,557,1.49,580,1.175,595,1.024,600,2.368,637,4.475,642,2.209,646,2.835,675,2.885,679,2.835,757,3.619,761,2.077,762,2.568,790,2.835,793,2.835,799,2.835,823,3.248,870,3.774,955,4.933,1004,3.052,1008,2.209,1328,4.475,1336,3.774,1338,3.774,1339,2.568,1340,2.568,1341,2.568,1630,2.835,1631,6.676,1632,4.762,1633,4.762,1634,6.225,1635,4.762,1636,5.647,1637,6.225,1638,6.225,1639,4.762,1640,4.762,1641,6.225,1642,4.762,1643,4.762,1644,3.24,1645,4.762,1646,3.24,1647,3.24,1648,4.762,1649,3.24,1650,3.24,1651,3.24,1652,5.647,1653,3.24,1654,3.24,1655,4.762,1656,3.24,1657,4.762,1658,4.55,1659,3.24,1660,3.24,1661,3.24,1662,3.24,1663,4.762,1664,3.24,1665,4.762,1666,3.24,1667,2.835,1668,3.24,1669,3.24,1670,3.24,1671,3.24,1672,3.24,1673,3.24,1674,3.24,1675,4.762,1676,3.24,1677,3.24,1678,3.24,1679,3.24,1680,3.24,1681,3.24,1682,3.24,1683,5.647,1684,3.24,1685,3.24,1686,3.24,1687,3.24,1688,3.24,1689,3.24,1690,3.24,1691,3.24,1692,3.24,1693,3.24,1694,3.24,1695,5.647,1696,3.24,1697,3.24,1698,4.762,1699,3.24,1700,6.225,1701,4.762,1702,3.24,1703,3.24,1704,4.762,1705,3.24,1706,3.24,1707,4.762,1708,3.24,1709,4.762,1710,3.24,1711,3.24,1712,3.24,1713,3.24,1714,4.762,1715,3.24,1716,3.24,1717,3.24,1718,3.24,1719,3.24,1720,3.24,1721,3.24,1722,3.24,1723,4.762,1724,3.24,1725,3.24,1726,3.24,1727,4.762,1728,3.24,1729,3.24,1730,3.24,1731,3.24,1732,4.762,1733,3.24,1734,3.24,1735,3.24,1736,3.24,1737,5.647,1738,3.24,1739,3.24,1740,3.24]],["title/modules/SharedModule.html",[157,1.267,1741,2.653]],["body/modules/SharedModule.html",[3,0.177,4,0.124,8,0.142,34,0.012,41,0.256,42,0.799,43,2.141,44,2.141,47,1.511,58,0.177,59,0.744,90,0.476,110,2.547,122,2.547,124,0.663,126,2.627,127,0.608,154,0.008,155,0.01,156,0.008,157,1.763,159,2.377,160,2.559,161,3.639,162,2.769,163,2.559,164,3.364,173,3.004,174,2.66,175,2.559,178,2.66,183,3.242,199,3.517,201,3.015,812,4.21,1132,5.13,1373,3.674,1374,2.66,1380,3.156,1741,5.519,1742,5.039,1743,5.039,1744,5.039,1745,5.759,1746,5.759,1747,5.759,1748,7.019,1749,7.019]],["title/modules/SharedTreksModule.html",[157,1.267,1750,2.653]],["body/modules/SharedTreksModule.html",[3,0.182,4,0.128,8,0.146,34,0.012,41,0.257,42,0.821,43,2.201,44,2.201,47,1.552,58,0.182,59,0.765,90,0.489,133,2.555,143,2.555,154,0.008,155,0.01,156,0.008,157,1.812,159,2.443,160,2.63,161,3.683,162,2.845,163,2.63,164,3.404,173,3.054,174,2.734,175,2.63,178,2.734,183,3.296,190,2.059,199,3.576,201,3.098,278,3.735,1373,3.735,1374,2.734,1380,3.243,1750,5.474,1751,5.178,1752,5.178,1753,5.178,1754,5.178,1755,5.919,1756,5.919,1757,5.919,1758,4.691,1759,5.919]],["title/modules/SharedUiModule.html",[157,1.267,171,1.99]],["body/modules/SharedUiModule.html",[3,0.178,4,0.125,8,0.143,34,0.012,41,0.256,42,0.805,47,1.522,58,0.178,59,0.75,90,0.48,97,2.549,100,2.549,120,2.549,154,0.008,155,0.01,156,0.008,157,1.776,159,2.395,160,2.578,161,3.651,162,2.789,163,2.578,164,3.375,171,4.144,173,3.018,174,2.68,175,2.578,178,2.68,183,3.256,190,2.019,199,3.533,278,3.69,399,4.598,447,4.598,1373,3.69,1374,2.68,1754,5.076,1760,5.076,1761,5.076,1762,5.076,1763,5.802,1764,5.802,1765,5.802,1766,5.802,1767,5.802,1768,5.802]],["title/components/TabsPage.html",[0,0.555,141,1.191]],["body/components/TabsPage.html",[0,0.938,1,1.442,2,2.057,3,0.149,4,0.105,5,1.637,6,1.637,7,1.637,8,0.119,10,1.637,11,2.933,12,2.666,14,2.124,19,1.094,20,3.852,21,3.369,24,3.369,31,1.029,33,1.094,34,0.012,35,0.474,36,0.312,37,0.967,41,0.228,42,0.675,47,1.275,58,0.149,59,0.628,60,1.872,90,0.402,91,2.124,92,2.124,93,1.637,94,2.496,95,1.637,96,1.637,97,1.442,98,1.637,99,1.637,100,1.442,101,1.637,102,1.637,103,1.442,104,1.637,105,1.442,106,1.637,107,1.442,108,0.562,109,1.637,110,1.442,111,1.637,112,1.637,113,1.442,114,1.585,115,1.536,116,2.359,117,1.442,118,1.585,119,1.637,120,1.442,121,1.637,122,1.442,123,1.654,124,0.701,125,2.124,126,1.488,127,0.642,128,1.442,129,1.398,130,1.637,131,1.442,132,1.637,133,1.442,134,1.637,135,1.442,136,0.584,137,1.442,138,1.637,139,1.442,140,1.637,141,2.132,142,1.637,143,1.442,144,1.637,145,1.488,146,1.442,147,2.124,148,1.442,149,1.442,150,1.637,151,1.442,152,1.637,153,1.637,154,0.007,155,0.009,156,0.007,190,1.691,280,1.236,294,0.852,318,1.618,397,1.691,404,2.195,540,1.749,684,3.314,1356,5.135,1374,2.245,1475,4.999,1769,4.253,1770,5.519,1771,7.003,1772,6.308,1773,4.861,1774,4.861,1775,4.861,1776,4.861,1777,4.253,1778,6.308,1779,6.308,1780,6.308]],["title/modules/TabsPageModule.html",[157,1.267,1781,3.025]],["body/modules/TabsPageModule.html",[3,0.178,4,0.125,8,0.143,34,0.012,41,0.26,42,0.805,43,2.157,44,2.157,47,1.522,58,0.178,59,0.75,90,0.48,141,2.367,154,0.008,155,0.01,156,0.008,157,1.776,159,2.395,160,2.578,161,3.651,162,2.789,163,2.578,164,2.578,171,3.957,173,3.018,174,2.68,175,2.578,178,3.256,183,3.256,197,3.337,198,3.337,199,3.533,201,3.037,1373,3.69,1374,2.68,1380,3.179,1416,5.612,1781,6.319,1782,5.076,1783,5.076,1784,5.076,1785,5.612,1786,5.612,1787,5.802,1788,5.076,1789,5.802,1790,5.802,1791,5.802]],["title/modules/TabsPageRoutingModule.html",[157,1.267,1785,2.822]],["body/modules/TabsPageRoutingModule.html",[0,0.99,3,0.168,4,0.118,8,0.134,34,0.012,41,0.245,42,0.758,58,0.168,59,0.706,123,1.781,124,0.767,127,0.67,129,1.57,141,1.953,151,2.193,154,0.008,155,0.009,156,0.008,159,2.253,164,2.426,178,2.521,183,3.137,190,1.899,208,4.737,209,4.326,267,3.051,278,3.554,279,3.869,280,1.389,281,5.185,282,4.776,283,4.776,284,4.326,285,7.096,293,1.471,294,1.356,1345,3.99,1352,4.326,1378,3.554,1379,3.498,1475,4.326,1770,4.776,1785,4.63,1788,4.776,1792,5.459,1793,5.459,1794,7.734,1795,4.352,1796,6.791,1797,5.382,1798,6.791,1799,4.964,1800,6.791,1801,5.459,1802,5.459,1803,5.459]],["title/interfaces/TouristicCategorie.html",[467,0.408,556,1.021]],["body/interfaces/TouristicCategorie.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.673,34,0.012,35,0.551,36,0.541,41,0.181,58,0.262,74,0.388,90,0.416,108,0.746,124,0.33,127,0.591,136,0.604,154,0.005,155,0.007,156,0.005,293,0.694,294,1.033,302,0.835,314,1.181,318,1.097,319,1.505,322,0.652,328,1.526,367,1.279,386,1.279,413,0.915,418,0.915,453,0.861,455,1.59,467,0.84,468,0.861,469,0.915,470,0.888,471,1.681,472,1.65,473,1.545,474,1.593,475,1.593,476,1.593,477,1.977,478,1.924,479,1.593,480,1.635,481,0.888,482,0.944,483,1.367,484,0.762,485,0.762,486,0.786,487,1.738,488,1.064,489,1.499,490,0.944,491,1.36,492,1.545,493,1.279,494,1.593,495,1.866,496,1.81,497,1.279,498,1.743,499,1.69,500,1.593,501,1.36,502,1.36,503,1.36,504,1.064,505,1.848,506,1.36,507,1.505,508,1.318,509,1.36,510,1.36,511,1.36,512,1.318,513,1.36,514,1.367,515,1.36,516,1.36,517,1.132,518,1.279,519,1.318,520,1.959,521,0.944,522,0.944,523,1.36,524,0.944,525,0.944,526,1.318,527,0.944,528,0.944,529,0.944,530,0.944,531,0.944,532,0.944,533,0.944,534,1.36,535,1.318,536,1.499,537,1.318,538,1.167,539,0.81,540,0.762,541,0.861,542,0.944,543,0.81,544,1.36,545,1.24,546,0.81,547,0.81,548,1.167,549,0.861,550,1.326,551,0.944,552,0.915,553,1.367,554,1.41,555,0.888,556,1.24,557,1.203,558,1.41,559,1.279,560,1.326,561,0.81,562,0.944,563,0.944,564,0.944,565,0.944,566,0.915,567,0.915,568,0.915,569,0.915,570,0.915,571,0.915,572,0.944,573,0.915,574,0.944,575,0.944,576,0.835,577,0.915,578,1.203,579,1.132,580,0.861,581,0.716,582,0.835]],["title/interfaces/TouristicCategoryWithFeatures.html",[467,0.408,557,0.99]],["body/interfaces/TouristicCategoryWithFeatures.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.55,36,0.542,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.59,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.03,302,0.834,314,1.18,318,1.093,319,1.503,322,0.649,328,1.526,367,1.274,386,1.274,413,0.911,418,0.911,453,0.857,455,1.587,467,0.84,468,0.857,469,0.911,470,0.883,471,1.679,472,1.649,473,1.541,474,1.589,475,1.589,476,1.589,477,1.975,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,0.782,487,1.907,488,1.06,489,1.494,490,0.939,491,1.354,492,1.541,493,1.274,494,1.589,495,1.863,496,1.807,497,1.274,498,1.739,499,1.687,500,1.589,501,1.354,502,1.354,503,1.354,504,1.06,505,1.844,506,1.354,507,1.503,508,1.314,509,1.354,510,1.354,511,1.354,512,1.314,513,1.354,514,1.364,515,1.354,516,1.354,517,1.127,518,1.274,519,1.314,520,1.957,521,0.939,522,0.939,523,1.354,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.354,535,1.314,536,1.494,537,1.314,538,1.162,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.354,545,1.236,546,0.806,547,0.806,548,1.162,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.632,555,0.883,556,0.857,557,1.406,558,1.406,559,1.274,560,1.322,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.198,579,1.127,580,0.857,581,0.713,582,0.831]],["title/interfaces/TouristicContent.html",[467,0.408,554,0.99]],["body/interfaces/TouristicContent.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.537,36,0.548,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.873,314,1.18,318,1.092,319,1.502,322,0.648,325,3.521,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.586,467,0.84,468,0.855,469,0.909,470,0.882,471,1.694,472,1.626,473,1.54,474,1.587,475,1.587,476,1.587,477,1.99,478,1.92,479,1.587,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.733,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.587,495,2.002,496,1.806,497,1.273,498,1.738,499,1.687,500,1.587,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.538,555,0.882,556,0.855,557,1.197,558,1.405,559,1.273,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/interfaces/TouristicContents.html",[467,0.408,553,0.961]],["body/interfaces/TouristicContents.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.674,34,0.012,35,0.538,36,0.543,41,0.181,58,0.262,74,0.389,90,0.416,108,0.746,124,0.33,127,0.592,136,0.604,154,0.005,155,0.007,156,0.005,293,0.695,294,1.034,302,0.836,314,1.18,318,1.099,319,1.506,322,0.653,328,1.524,367,1.28,386,1.28,413,0.917,418,0.917,453,0.862,455,1.592,467,0.84,468,0.862,469,0.917,470,0.889,471,1.697,472,1.627,473,1.547,474,1.595,475,1.595,476,1.595,477,1.977,478,1.969,479,1.595,480,1.636,481,0.889,482,0.945,483,1.369,484,0.763,485,0.763,486,0.787,487,1.91,488,1.065,489,1.5,490,0.945,491,1.361,492,1.547,493,1.28,494,1.595,495,1.867,496,1.811,497,1.28,498,1.745,499,1.69,500,1.595,501,1.361,502,1.361,503,1.361,504,1.065,505,1.849,506,1.361,507,1.506,508,1.32,509,1.361,510,1.361,511,1.361,512,1.32,513,1.361,514,1.369,515,1.361,516,1.361,517,1.133,518,1.28,519,1.32,520,1.96,521,0.945,522,0.945,523,1.361,524,0.945,525,0.945,526,1.32,527,0.945,528,0.945,529,0.945,530,0.945,531,0.945,532,0.945,533,0.945,534,1.361,535,1.32,536,1.5,537,1.32,538,1.168,539,0.811,540,0.763,541,0.862,542,0.945,543,0.811,544,1.361,545,1.242,546,0.811,547,0.811,548,1.168,549,0.862,550,1.327,551,0.945,552,0.917,553,1.497,554,1.636,555,0.889,556,0.862,557,1.204,558,1.411,559,1.28,560,1.327,561,0.811,562,0.945,563,0.945,564,0.945,565,0.945,566,0.917,567,0.917,568,0.917,569,0.917,570,0.917,571,0.917,572,0.945,573,0.917,574,0.945,575,0.945,576,0.836,577,0.917,578,1.204,579,1.133,580,0.862,581,0.717,582,0.836]],["title/interfaces/TouristicEvent.html",[467,0.408,559,1.053]],["body/interfaces/TouristicEvent.html",[3,0.107,4,0.075,8,0.085,16,0.222,29,0.669,34,0.012,35,0.537,36,0.548,41,0.18,58,0.262,74,0.386,90,0.414,108,0.743,124,0.328,127,0.59,136,0.601,154,0.005,155,0.007,156,0.005,293,0.69,294,1.029,302,0.873,314,1.18,318,1.092,319,1.502,322,0.648,325,3.521,328,1.523,367,1.273,386,1.273,413,0.909,418,0.909,453,0.855,455,1.586,467,0.84,468,0.855,469,0.909,470,0.882,471,1.694,472,1.626,473,1.54,474,1.587,475,1.587,476,1.587,477,1.99,478,1.92,479,1.587,480,1.631,481,0.882,482,0.938,483,1.362,484,0.757,485,0.757,486,0.78,487,1.733,488,1.059,489,1.493,490,0.938,491,1.353,492,1.54,493,1.273,494,1.587,495,2.002,496,1.806,497,1.273,498,1.738,499,1.687,500,1.587,501,1.353,502,1.353,503,1.353,504,1.059,505,1.843,506,1.353,507,1.502,508,1.312,509,1.353,510,1.353,511,1.353,512,1.312,513,1.353,514,1.362,515,1.353,516,1.353,517,1.126,518,1.273,519,1.312,520,1.957,521,0.938,522,0.938,523,1.353,524,0.938,525,0.938,526,1.312,527,0.938,528,0.938,529,0.938,530,0.938,531,0.938,532,0.938,533,0.938,534,1.353,535,1.312,536,1.493,537,1.312,538,1.161,539,0.805,540,0.757,541,0.855,542,0.938,543,0.805,544,1.353,545,1.234,546,0.805,547,0.805,548,1.161,549,0.855,550,1.321,551,0.938,552,0.909,553,1.362,554,1.405,555,0.882,556,0.855,557,1.197,558,1.405,559,1.493,560,1.321,561,0.805,562,0.938,563,0.938,564,0.938,565,0.938,566,0.909,567,0.909,568,0.909,569,0.909,570,0.909,571,0.909,572,0.938,573,0.909,574,0.938,575,0.938,576,0.83,577,0.909,578,1.197,579,1.126,580,0.855,581,0.712,582,0.83]],["title/interfaces/TouristicEvents.html",[467,0.408,558,0.99]],["body/interfaces/TouristicEvents.html",[3,0.107,4,0.075,8,0.086,16,0.224,29,0.674,34,0.012,35,0.538,36,0.543,41,0.181,58,0.262,74,0.389,90,0.416,108,0.746,124,0.33,127,0.592,136,0.604,154,0.005,155,0.007,156,0.005,293,0.695,294,1.034,302,0.836,314,1.18,318,1.099,319,1.506,322,0.653,328,1.524,367,1.28,386,1.28,413,0.917,418,0.917,453,0.862,455,1.592,467,0.84,468,0.862,469,0.917,470,0.889,471,1.697,472,1.627,473,1.547,474,1.595,475,1.595,476,1.595,477,1.977,478,1.969,479,1.595,480,1.636,481,0.889,482,0.945,483,1.369,484,0.763,485,0.763,486,0.787,487,1.91,488,1.065,489,1.5,490,0.945,491,1.361,492,1.547,493,1.28,494,1.595,495,1.867,496,1.811,497,1.28,498,1.745,499,1.69,500,1.595,501,1.361,502,1.361,503,1.361,504,1.065,505,1.849,506,1.361,507,1.506,508,1.32,509,1.361,510,1.361,511,1.361,512,1.32,513,1.361,514,1.369,515,1.361,516,1.361,517,1.133,518,1.28,519,1.32,520,1.96,521,0.945,522,0.945,523,1.361,524,0.945,525,0.945,526,1.32,527,0.945,528,0.945,529,0.945,530,0.945,531,0.945,532,0.945,533,0.945,534,1.361,535,1.32,536,1.5,537,1.32,538,1.168,539,0.811,540,0.763,541,0.862,542,0.945,543,0.811,544,1.361,545,1.242,546,0.811,547,0.811,548,1.168,549,0.862,550,1.327,551,0.945,552,0.917,553,1.369,554,1.411,555,0.889,556,0.862,557,1.204,558,1.544,559,1.641,560,1.327,561,0.811,562,0.945,563,0.945,564,0.945,565,0.945,566,0.917,567,0.917,568,0.917,569,0.917,570,0.917,571,0.917,572,0.945,573,0.917,574,0.945,575,0.945,576,0.836,577,0.917,578,1.204,579,1.133,580,0.862,581,0.717,582,0.836]],["title/interfaces/Trek.html",[127,0.358,467,0.408]],["body/interfaces/Trek.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.537,36,0.546,41,0.181,58,0.262,74,0.386,90,0.414,108,0.744,124,0.328,127,0.615,136,0.602,154,0.005,155,0.007,156,0.005,293,0.691,294,1.03,302,0.874,314,1.18,318,1.093,319,1.503,322,0.649,325,2.744,328,1.523,367,1.274,386,1.274,413,0.911,418,0.911,453,0.857,455,1.587,467,0.84,468,0.857,469,0.911,470,0.883,471,1.695,472,1.626,473,1.541,474,1.589,475,1.589,476,1.589,477,1.991,478,1.921,479,1.589,480,1.632,481,0.883,482,0.939,483,1.364,484,0.758,485,0.758,486,0.782,487,1.734,488,1.06,489,1.494,490,0.939,491,1.354,492,1.541,493,1.274,494,1.589,495,2.003,496,1.807,497,1.636,498,1.739,499,1.687,500,1.589,501,1.354,502,1.354,503,1.354,504,1.06,505,1.844,506,1.354,507,1.503,508,1.314,509,1.354,510,1.354,511,1.354,512,1.314,513,1.354,514,1.364,515,1.354,516,1.354,517,1.127,518,1.274,519,1.314,520,1.957,521,0.939,522,0.939,523,1.354,524,0.939,525,0.939,526,1.314,527,0.939,528,0.939,529,0.939,530,0.939,531,0.939,532,0.939,533,0.939,534,1.354,535,1.314,536,1.494,537,1.314,538,1.162,539,0.806,540,0.758,541,0.857,542,0.939,543,0.806,544,1.354,545,1.236,546,0.806,547,0.806,548,1.162,549,0.857,550,1.322,551,0.939,552,0.911,553,1.364,554,1.406,555,0.883,556,0.857,557,1.198,558,1.406,559,1.274,560,1.322,561,0.806,562,0.939,563,0.939,564,0.939,565,0.939,566,0.911,567,0.911,568,0.911,569,0.911,570,0.911,571,0.911,572,0.939,573,0.911,574,0.939,575,0.939,576,0.831,577,0.911,578,1.198,579,1.127,580,0.857,581,0.713,582,0.831]],["title/components/TrekCardComponent.html",[0,0.555,143,1.228]],["body/components/TrekCardComponent.html",[0,0.741,1,0.929,2,1.514,3,0.096,4,0.067,5,1.054,6,1.054,7,1.054,8,0.077,10,1.054,11,2.829,12,2.572,14,1.564,16,0.298,17,1.078,19,1.045,24,2.799,25,3.521,27,3.582,28,3.143,29,1.261,30,3.143,31,1.691,33,1.246,34,0.012,35,0.443,36,0.498,37,1.101,39,1.421,40,1.377,41,0.218,42,0.434,43,1.164,44,1.164,47,0.821,53,1.715,54,1.505,55,2.327,57,1.715,58,0.096,59,0.405,60,2.207,66,3.753,68,3.393,74,0.348,80,2.547,90,0.259,91,1.564,92,1.564,93,1.054,94,2.062,95,1.054,96,1.054,97,0.929,98,1.054,99,1.054,100,0.929,101,1.054,102,1.054,103,0.929,104,1.054,105,0.929,106,1.054,107,0.929,108,0.362,109,1.054,110,0.929,111,1.054,112,1.054,113,0.929,114,1.021,115,0.989,116,1.864,117,0.929,118,1.021,119,1.054,120,0.929,121,1.054,122,0.929,123,1.218,124,0.579,125,1.564,126,0.958,127,0.711,128,0.929,129,0.9,130,1.054,131,0.929,132,1.054,133,0.929,134,1.054,135,0.929,136,0.376,137,0.929,138,1.054,139,0.929,140,1.054,141,0.9,142,1.054,143,1.816,144,1.054,145,0.958,146,0.929,147,1.564,148,0.929,149,0.929,150,1.054,151,0.929,152,1.054,153,1.054,154,0.004,155,0.006,156,0.004,205,2.134,267,1.292,280,1.557,294,1.073,302,0.517,304,2.343,314,0.996,318,1.013,324,2.813,326,0.958,328,1.201,332,4.062,333,3.679,397,1.089,401,1.564,402,2.773,404,1.615,410,2.72,412,2.544,416,1.896,433,1.786,434,3.354,453,1.365,493,0.796,499,1.246,507,1.342,517,1.542,595,0.989,604,3.165,670,3.393,673,4.062,708,3.521,714,1.569,735,3.761,736,3.582,765,1.8,766,1.638,818,5.428,823,3.939,906,3.773,920,2.481,921,1.896,923,4.062,925,2.481,927,2.481,928,2.481,929,2.481,930,2.481,932,2.481,970,2.481,986,2.006,1063,2.813,1064,4.458,1066,4.062,1067,2.134,1068,2.288,1069,2.288,1146,2.739,1192,2.006,1200,2.481,1318,2.481,1319,2.739,1320,2.739,1321,2.481,1322,2.134,1323,4.062,1520,2.481,1521,2.481,1528,4.851,1758,6.374,1804,7.037,1805,2.739,1806,5.534,1807,4.643,1808,5.534,1809,5.534,1810,5.534,1811,4.643,1812,6.121,1813,4.643,1814,6.538,1815,7.089,1816,4.643,1817,3.13,1818,3.13,1819,3.13,1820,4.643,1821,3.13,1822,3.13,1823,3.13,1824,4.643,1825,6.121,1826,3.13,1827,5.534,1828,3.13,1829,3.13,1830,3.13,1831,3.13,1832,3.13,1833,3.13,1834,3.13,1835,3.13,1836,4.643,1837,3.13,1838,4.643,1839,4.643,1840,3.13,1841,3.13,1842,3.13,1843,3.13,1844,3.13,1845,4.643,1846,4.643,1847,4.643,1848,3.13,1849,3.13,1850,3.13,1851,3.13,1852,3.13,1853,3.13,1854,3.13,1855,3.13,1856,3.13,1857,3.13,1858,3.13,1859,3.13,1860,3.13,1861,3.13,1862,3.13,1863,3.13,1864,3.13,1865,4.643,1866,4.643,1867,4.643,1868,4.643,1869,4.643,1870,6.849,1871,6.121,1872,4.643,1873,4.643,1874,6.121,1875,4.643,1876,4.643,1877,4.643,1878,4.643,1879,3.13,1880,4.062,1881,3.13,1882,3.13,1883,2.739,1884,4.643,1885,3.13,1886,3.13,1887,3.13,1888,3.13,1889,4.643,1890,4.643,1891,4.643,1892,3.13,1893,3.13,1894,3.13]],["title/interfaces/TrekContext.html",[467,0.408,576,0.99]],["body/interfaces/TrekContext.html",[3,0.103,4,0.072,8,0.082,16,0.215,29,0.646,34,0.012,35,0.534,36,0.547,41,0.177,58,0.262,74,0.373,90,0.404,108,0.732,124,0.317,127,0.666,136,0.586,154,0.005,155,0.007,156,0.005,293,0.667,294,1.23,302,0.826,314,1.179,318,1.065,319,1.487,322,0.626,328,1.521,367,1.242,386,1.242,413,0.879,418,0.879,453,0.827,455,1.561,467,0.837,468,0.827,469,0.879,470,0.852,471,1.668,472,1.617,473,1.51,474,1.557,475,1.557,476,1.557,477,1.963,478,1.9,479,1.557,480,1.609,481,0.852,482,0.906,483,1.56,484,0.731,485,0.731,486,0.754,487,1.71,488,1.033,489,1.465,490,0.906,491,1.32,492,1.51,493,1.242,494,1.557,495,1.84,496,1.785,497,1.242,498,1.711,499,1.671,500,1.557,501,1.32,502,1.32,503,1.32,504,1.033,505,1.818,506,1.32,507,1.553,508,1.28,509,1.32,510,1.32,511,1.32,512,1.28,513,1.32,514,1.336,515,1.32,516,1.32,517,1.424,518,1.242,519,1.28,520,1.944,521,0.906,522,0.906,523,1.32,524,0.906,525,0.906,526,1.28,527,0.906,528,0.906,529,0.906,530,0.906,531,0.906,532,0.906,533,0.906,534,1.32,535,1.28,536,1.465,537,1.28,538,1.133,539,0.778,540,0.731,541,0.827,542,0.906,543,0.778,544,1.32,545,1.204,546,0.778,547,0.778,548,1.133,549,0.827,550,1.671,551,0.906,552,0.879,553,1.723,554,1.378,555,0.852,556,0.827,557,1.514,558,1.776,559,1.242,560,1.513,561,0.778,562,0.906,563,0.906,564,0.906,565,0.906,566,0.879,567,0.879,568,0.879,569,0.879,570,0.879,571,0.879,572,0.906,573,0.879,574,0.906,575,0.906,576,1.168,577,1.659,578,1.609,579,1.513,580,1.561,581,1.298,582,0.802]],["title/guards/TrekContextResolver.html",[206,2.653,1381,2.822]],["body/guards/TrekContextResolver.html",[3,0.145,4,0.101,8,0.116,16,0.301,17,1.432,19,1.389,21,3.402,27,3.776,28,3.517,30,3.821,31,1.306,33,1.389,34,0.012,35,0.418,36,0.396,37,1.228,39,1.091,41,0.259,42,0.652,45,1.748,46,1.94,47,1.233,48,2.171,53,2.576,54,2.26,55,3.093,57,2.576,58,0.145,59,0.608,60,2.358,64,2.46,65,2.356,123,1.619,127,0.688,154,0.006,155,0.009,156,0.006,182,2.46,190,1.635,196,3.205,206,3.955,232,5.419,233,3.012,234,3.205,258,2.923,280,2.022,294,1.332,298,2.078,322,1.367,337,3.012,338,1.748,339,3.012,344,2.576,392,3.012,393,3.012,401,1.583,483,1.432,484,1.026,485,1.026,504,0.995,517,1.647,550,1.647,553,1.764,558,1.751,560,1.647,576,1.477,577,1.233,578,1.125,579,1.389,580,1.523,581,1.267,595,1.485,735,3.963,736,4.009,765,2.704,766,2.46,1043,4.174,1046,3.205,1047,4.208,1120,3.725,1125,4.112,1350,3.012,1356,5.094,1378,3.83,1382,3.205,1387,4.891,1388,5.348,1390,4.891,1396,3.436,1397,3.436,1398,3.436,1400,3.725,1401,3.725,1445,4.891,1612,3.725,1613,3.725,1621,4.112,1895,4.112,1896,4.7,1897,4.7,1898,6.171,1899,4.7,1900,4.112,1901,4.7,1902,4.7,1903,4.7,1904,4.7,1905,4.7,1906,4.7,1907,4.7,1908,4.7,1909,4.7,1910,4.7,1911,4.7,1912,3.725,1913,4.7,1914,4.7,1915,4.7,1916,4.7]],["title/modules/TrekDetailsPageModule.html",[157,1.267,1917,3.025]],["body/modules/TrekDetailsPageModule.html",[0,0.766,3,0.176,4,0.123,8,0.141,34,0.012,41,0.26,42,0.793,43,2.126,44,2.126,47,1.5,58,0.176,59,0.739,90,0.473,127,0.495,145,2.542,154,0.008,155,0.01,156,0.008,157,1.75,159,2.36,160,2.541,161,3.628,162,2.748,163,2.541,164,2.541,171,3.943,173,2.991,174,2.641,175,2.541,178,3.227,183,3.227,190,1.989,197,4.019,198,3.289,199,3.502,201,2.993,206,4.478,207,4.531,278,2.993,279,3.95,280,1.454,281,3.464,1373,3.657,1374,2.641,1376,4.179,1377,4.179,1378,2.993,1379,3.664,1380,3.133,1750,5.257,1795,3.664,1797,4.531,1917,6.211,1918,5.002,1919,5.002,1920,5.717,1921,4.179,1922,5.717,1923,5.002,1924,5.717]],["title/components/TrekMapPage.html",[0,0.555,146,1.228]],["body/components/TrekMapPage.html",[0,0.863,1,0.897,2,1.475,3,0.093,4,0.065,5,1.018,6,1.018,7,1.018,8,0.074,10,1.018,11,2.819,12,2.563,14,1.523,16,0.29,17,1.05,19,1.018,21,3,29,1.242,30,3.097,31,1.738,33,1.354,34,0.012,35,0.458,36,0.5,37,1.197,39,1.672,40,2.186,41,0.234,42,0.419,47,0.792,57,1.656,58,0.093,59,0.391,60,2.079,65,1.514,66,3.84,74,0.717,80,1.123,90,0.25,91,1.523,92,1.523,93,1.018,94,2.026,95,1.018,96,1.018,97,0.897,98,1.018,99,1.018,100,0.897,101,1.018,102,1.018,103,0.897,104,1.018,105,0.897,106,1.018,107,0.897,108,0.349,109,1.018,110,0.897,111,1.018,112,1.018,113,1.608,114,0.985,115,1.712,116,1.825,117,0.897,118,0.985,119,1.018,120,0.897,121,1.018,122,0.897,123,1.89,124,0.569,125,1.523,126,0.925,127,0.659,128,0.897,129,0.869,130,1.018,131,0.897,132,1.018,133,0.897,134,1.018,135,1.608,136,0.842,137,0.897,138,1.018,139,0.897,140,1.018,141,0.869,142,1.018,143,0.897,144,1.018,145,0.925,146,1.785,147,1.523,148,0.897,149,0.897,150,1.018,151,0.897,152,1.018,153,1.018,154,0.004,155,0.006,156,0.004,190,1.051,196,2.06,205,3.695,240,2.644,241,2.209,242,3.956,243,2.644,244,2.209,258,2.314,267,2.237,280,1.53,289,5.948,293,1.078,294,1.055,302,0.503,304,2.4,314,0.726,322,1.309,326,1.972,397,1.051,401,1.523,404,1.573,410,2.408,421,2.209,433,2.478,449,3.083,455,0.745,464,2.209,465,3.305,471,0.957,483,1.258,484,0.66,485,0.66,504,1.147,514,1.569,517,1.22,540,1.53,550,1.22,557,1.297,576,1.082,579,1.22,580,1.337,581,1.235,595,0.955,708,3.46,714,1.514,717,3.25,718,3.117,724,2.478,725,2.478,727,2.06,732,3.512,734,4.491,750,3.117,751,1.738,752,1.738,759,1.343,760,1.738,763,1.831,767,1.738,773,2.898,776,2.601,777,2.395,810,2.209,823,4.031,830,4.741,832,3.956,921,1.831,986,1.936,1043,2.74,1046,2.06,1047,3.46,1062,2.209,1069,2.209,1144,3.584,1189,2.395,1190,2.395,1192,2.898,1201,2.209,1321,2.395,1350,4.128,1353,4.767,1355,4.397,1356,4.491,1364,3.584,1366,2.395,1374,1.396,1491,3.956,1492,3.956,1777,2.644,1795,2.898,1883,3.956,1912,2.395,1921,5.948,1925,2.395,1926,4.741,1927,3.956,1928,5.419,1929,5.419,1930,5.419,1931,5.263,1932,4.522,1933,5.419,1934,6.016,1935,3.956,1936,3.022,1937,4.522,1938,3.022,1939,3.022,1940,4.522,1941,3.022,1942,4.767,1943,4.522,1944,3.022,1945,3.022,1946,2.644,1947,2.644,1948,2.644,1949,2.644,1950,2.644,1951,2.644,1952,4.522,1953,2.644,1954,2.644,1955,2.644,1956,2.644,1957,3.022,1958,3.022,1959,2.644,1960,4.522,1961,2.644,1962,3.022,1963,2.644,1964,2.644,1965,3.022,1966,3.022,1967,3.022,1968,3.022,1969,3.022,1970,3.022,1971,3.022,1972,3.022,1973,3.022,1974,3.022,1975,3.022,1976,5.419,1977,3.022,1978,3.022,1979,3.022,1980,4.741,1981,3.022,1982,3.022,1983,3.022,1984,5.419,1985,3.022,1986,3.956,1987,3.956,1988,3.022,1989,3.022,1990,2.644,1991,4.522,1992,2.644,1993,3.022,1994,2.644,1995,3.022,1996,3.022,1997,3.022,1998,2.644,1999,3.022]],["title/modules/TrekMapPageModule.html",[157,1.267,2000,3.025]],["body/modules/TrekMapPageModule.html",[0,0.77,3,0.177,4,0.124,8,0.141,34,0.012,41,0.26,42,0.797,43,2.136,44,2.136,47,1.507,58,0.177,59,0.743,90,0.475,127,0.497,146,2.467,154,0.008,155,0.01,156,0.008,157,1.759,159,2.371,160,2.553,161,3.635,162,2.762,163,2.553,164,2.553,171,3.948,173,3,174,2.654,175,2.553,178,3.237,183,3.237,190,1.999,197,3.305,198,3.305,199,3.512,201,3.007,206,4.491,207,4.553,278,3.007,279,3.958,280,1.461,281,3.481,289,4.199,1373,3.668,1374,2.654,1376,4.199,1377,4.199,1378,3.007,1379,3.682,1380,3.148,1741,5.263,1795,3.682,1921,4.199,2000,6.216,2001,5.026,2002,5.026,2003,5.745,2004,5.026,2005,5.026,2006,5.026]],["title/interfaces/TrekProperties.html",[467,0.408,497,1.053]],["body/interfaces/TrekProperties.html",[3,0.099,4,0.07,8,0.079,16,0.207,29,0.622,34,0.012,35,0.53,36,0.551,37,1.236,41,0.173,58,0.261,74,0.359,90,0.392,108,0.718,124,0.305,127,0.573,136,0.57,154,0.004,155,0.007,156,0.004,293,0.642,294,0.987,302,0.817,314,1.182,318,1.036,319,1.469,322,0.603,328,1.525,367,1.207,386,1.207,413,0.846,418,0.846,453,0.796,455,1.532,467,0.834,468,0.796,469,0.846,470,0.82,471,1.672,472,1.608,473,1.477,474,1.523,475,1.523,476,1.523,477,1.949,478,1.877,479,1.523,480,1.584,481,0.82,482,0.872,483,1.307,484,0.704,485,0.704,486,0.726,487,1.684,488,1.005,489,1.58,490,0.872,491,1.283,492,1.816,493,1.207,494,1.523,495,1.816,496,1.761,497,1.432,498,1.936,499,1.716,500,1.872,501,1.79,502,1.79,503,1.79,504,1.401,505,1.986,506,1.79,507,1.538,508,1.736,509,1.79,510,1.79,511,1.79,512,1.736,513,1.79,514,1.536,515,1.79,516,1.79,517,1.068,518,1.207,519,1.245,520,1.929,521,0.872,522,0.872,523,1.283,524,0.872,525,0.872,526,1.245,527,0.872,528,0.872,529,0.872,530,0.872,531,0.872,532,0.872,533,0.872,534,1.283,535,1.245,536,1.432,537,1.245,538,1.101,539,0.748,540,0.704,541,0.796,542,0.872,543,0.748,544,1.283,545,1.171,546,0.748,547,0.748,548,1.101,549,0.796,550,1.268,551,0.872,552,0.846,553,1.307,554,1.347,555,0.82,556,0.796,557,1.136,558,1.347,559,1.207,560,1.268,561,0.748,562,0.872,563,0.872,564,0.872,565,0.872,566,0.846,567,0.846,568,0.846,569,0.846,570,0.846,571,0.846,572,0.872,573,0.846,574,0.872,575,0.872,576,0.772,577,0.846,578,1.136,579,1.068,580,0.796,581,0.662,582,0.772]],["title/interfaces/TreksContext.html",[467,0.408,582,0.99]],["body/interfaces/TreksContext.html",[3,0.107,4,0.075,8,0.085,16,0.223,29,0.67,34,0.012,35,0.537,36,0.542,41,0.181,58,0.262,74,0.387,90,0.415,108,0.744,124,0.329,127,0.591,136,0.602,154,0.005,155,0.007,156,0.005,293,0.692,294,1.246,302,0.835,314,1.18,318,1.094,319,1.503,322,0.65,328,1.524,367,1.275,386,1.275,413,0.912,418,0.912,453,0.858,455,1.588,467,0.84,468,0.858,469,0.912,470,0.885,471,1.68,472,1.626,473,1.542,474,1.59,475,1.59,476,1.59,477,1.976,478,1.921,479,1.59,480,1.633,481,0.885,482,0.94,483,1.365,484,0.759,485,0.759,486,0.783,487,1.735,488,1.061,489,1.496,490,0.94,491,1.356,492,1.542,493,1.275,494,1.59,495,1.864,496,1.808,497,1.275,498,1.74,499,1.688,500,1.59,501,1.356,502,1.356,503,1.356,504,1.061,505,1.845,506,1.356,507,1.568,508,1.315,509,1.356,510,1.356,511,1.356,512,1.315,513,1.356,514,1.365,515,1.356,516,1.356,517,1.129,518,1.275,519,1.315,520,1.958,521,0.94,522,0.94,523,1.356,524,0.94,525,0.94,526,1.315,527,0.94,528,0.94,529,0.94,530,0.94,531,0.94,532,0.94,533,0.94,534,1.356,535,1.315,536,1.496,537,1.315,538,1.164,539,0.807,540,0.759,541,0.858,542,0.94,543,0.807,544,1.356,545,1.237,546,0.807,547,0.807,548,1.164,549,0.858,550,1.324,551,0.94,552,0.912,553,1.365,554,1.407,555,0.885,556,0.858,557,1.2,558,1.407,559,1.275,560,1.536,561,0.807,562,0.94,563,0.94,564,0.94,565,0.94,566,0.912,567,0.912,568,0.912,569,0.912,570,0.912,571,0.912,572,0.94,573,0.912,574,0.94,575,0.94,576,0.832,577,0.912,578,1.633,579,1.536,580,0.858,581,0.714,582,1.2]],["title/guards/TreksContextResolver.html",[208,2.653,1381,2.822]],["body/guards/TreksContextResolver.html",[3,0.169,4,0.118,8,0.135,16,0.352,17,1.581,19,1.533,21,3.524,27,3.732,28,3.724,31,1.442,33,1.533,34,0.012,35,0.461,36,0.437,37,1.355,39,1.273,41,0.258,42,0.761,45,2.039,46,2.263,47,1.438,48,2.533,53,3.005,54,2.636,55,3.413,58,0.169,59,0.709,60,2.299,64,3.565,65,3.413,154,0.008,155,0.009,156,0.008,190,1.908,208,4.365,232,5.613,233,3.515,234,3.739,258,2.11,280,1.884,294,1.397,298,2.294,319,1.52,338,2.039,401,1.847,504,1.161,560,1.744,578,1.312,579,1.533,582,1.312,595,1.733,735,4.261,736,4.245,765,3.154,766,2.871,1378,4.055,1382,3.739,1387,5.397,1388,5.663,1396,4.008,1397,4.008,1398,4.008,1612,4.346,1613,4.346,1900,4.798,2007,4.798,2008,5.484,2009,5.484,2010,5.484,2011,5.484,2012,5.484]],["title/components/TreksMapPage.html",[0,0.555,148,1.228]],["body/components/TreksMapPage.html",[0,0.833,1,0.827,2,1.387,3,0.086,4,0.06,5,0.939,6,0.939,7,0.939,8,0.069,10,0.939,11,2.795,12,2.541,14,1.433,16,0.179,17,0.987,19,0.958,21,2.918,24,2.472,27,3.407,28,2.989,29,1.199,30,2.989,31,1.766,33,1.161,34,0.012,35,0.421,36,0.513,37,1.026,39,1.734,40,2.276,41,0.246,42,0.387,45,1.036,46,1.15,47,0.731,48,1.287,53,1.527,54,1.34,55,2.132,57,1.527,58,0.086,59,0.36,60,2.249,64,1.459,65,1.397,66,3.407,74,0.574,80,1.918,90,0.23,91,1.433,92,1.433,93,0.939,94,1.945,95,0.939,96,0.939,97,0.827,98,0.939,99,0.939,100,0.827,101,0.939,102,0.939,103,0.827,104,0.939,105,1.531,106,0.939,107,0.827,108,0.322,109,0.939,110,0.827,111,0.939,112,0.939,113,0.827,114,0.909,115,0.88,116,1.738,117,0.827,118,0.909,119,0.939,120,0.827,121,0.939,122,0.827,123,1.844,124,0.706,125,1.433,126,0.853,127,0.5,128,0.827,129,0.802,130,0.939,131,0.827,132,0.939,133,0.827,134,0.939,135,0.827,136,0.335,137,0.827,138,0.939,139,1.531,140,0.939,141,0.802,142,0.939,143,0.827,144,0.939,145,0.853,146,0.827,147,1.433,148,1.713,149,0.827,150,0.939,151,0.827,152,0.939,153,0.939,154,0.004,155,0.006,156,0.004,163,1.89,190,0.97,196,1.9,230,4.983,231,2.438,238,2.438,245,2.438,267,1.15,280,1.469,293,0.846,294,0.905,302,0.473,304,2.401,314,0.942,326,1.579,328,0.905,338,1.036,344,1.527,383,2.037,397,0.97,401,1.433,402,2.586,404,1.48,410,3.03,433,2.392,449,2.9,471,0.9,472,0.554,483,1.197,484,0.608,485,0.608,488,1.092,504,1.092,507,1.399,560,1.161,561,1.34,578,1.235,579,1.161,581,1.059,582,1.235,595,0.88,606,4.201,608,1.786,640,3.371,666,6.15,714,1.397,717,3.277,718,2.968,721,3.371,724,2.331,725,2.331,730,3.498,732,3.417,734,4.369,750,2.968,751,1.603,752,1.603,759,2.913,760,1.603,761,1.786,762,2.209,763,1.688,764,2.209,767,1.603,768,1.9,773,1.786,776,1.603,821,4.089,823,3.77,906,1.9,960,1.9,1042,4.514,1043,3.498,1046,1.9,1047,3.577,1059,2.438,1060,2.438,1144,3.371,1145,3.371,1185,2.037,1189,2.209,1190,2.209,1192,3.307,1201,3.11,1318,3.371,1355,4.22,1356,4.369,1405,4.928,1410,3.722,1440,4.514,1532,3.371,1600,3.722,1795,1.786,1799,6.067,1880,2.438,1912,3.371,1925,2.209,1926,4.514,1927,3.722,1931,5.052,1935,2.438,1942,4.576,1946,2.438,1947,2.438,1948,2.438,1949,2.438,1950,2.438,1951,2.438,1953,2.438,1954,2.438,1955,2.438,1956,2.438,1959,3.722,1961,2.438,1963,4.514,1964,2.438,1980,3.722,1986,3.722,1987,3.722,1990,3.722,1994,2.438,2013,6.577,2014,5.16,2015,5.16,2016,5.16,2017,5.16,2018,5.774,2019,5.774,2020,5.774,2021,4.254,2022,2.787,2023,2.787,2024,2.787,2025,4.254,2026,2.787,2027,2.787,2028,2.787,2029,2.787,2030,2.787,2031,2.787,2032,2.787,2033,2.787,2034,2.787,2035,2.787,2036,2.438,2037,2.787,2038,3.722,2039,2.787,2040,2.787,2041,2.787,2042,2.787,2043,2.787,2044,2.787,2045,2.787,2046,2.787,2047,2.787,2048,2.787,2049,2.787,2050,2.787,2051,2.787,2052,2.787,2053,2.787,2054,2.787,2055,2.787,2056,2.787,2057,2.787,2058,2.787,2059,2.787,2060,4.254,2061,2.787,2062,2.787,2063,2.787,2064,2.787,2065,2.787,2066,2.787,2067,4.254,2068,4.254,2069,2.787,2070,2.438,2071,2.787]],["title/modules/TreksMapPageModule.html",[157,1.267,2072,3.025]],["body/modules/TreksMapPageModule.html",[0,0.773,3,0.177,4,0.124,8,0.142,34,0.012,41,0.26,42,0.8,43,2.144,44,2.144,47,1.512,58,0.177,59,0.745,90,0.477,124,0.545,148,2.469,154,0.008,155,0.01,156,0.008,157,1.765,159,2.38,160,2.562,161,3.641,162,2.772,163,2.562,164,2.562,171,3.951,173,3.007,174,2.663,175,2.562,178,3.244,183,3.244,190,2.006,197,3.317,198,3.317,199,3.52,201,3.018,208,4.502,209,4.57,278,3.018,279,3.965,280,1.467,281,3.493,1373,3.677,1374,2.663,1378,3.018,1379,3.696,1380,3.16,1741,5.267,1795,3.696,1799,4.215,2004,5.045,2005,5.045,2006,5.045,2013,4.57,2072,6.219,2073,5.045,2074,5.045,2075,5.766]],["title/components/TreksOrderComponent.html",[0,0.555,149,1.228]],["body/components/TreksOrderComponent.html",[0,0.863,1,1.219,2,1.839,3,0.126,4,0.089,5,1.384,6,1.384,7,1.384,8,0.101,10,1.384,11,2.898,12,2.634,14,1.899,16,0.263,17,1.309,19,1.269,21,3.288,24,2.414,29,1.241,30,3.331,31,1.68,33,1.269,34,0.012,35,0.469,36,0.466,37,1.122,39,1.608,40,1.91,41,0.231,42,0.57,47,1.078,48,1.898,57,2.252,58,0.126,59,0.531,60,2.056,64,2.151,65,2.059,66,2.252,74,0.628,90,0.34,91,1.899,92,1.899,93,1.384,94,2.333,95,1.384,96,1.384,97,1.219,98,1.384,99,1.384,100,1.219,101,1.384,102,1.384,103,1.219,104,1.384,105,1.219,106,1.384,107,1.219,108,0.475,109,1.384,110,1.219,111,1.384,112,1.384,113,1.219,114,1.34,115,1.298,116,2.168,117,1.219,118,1.34,119,1.384,120,1.219,121,1.384,122,1.219,123,1.479,124,0.767,125,1.899,126,1.258,127,0.6,128,1.219,129,1.182,130,1.384,131,1.219,132,1.384,133,1.219,134,1.384,135,1.219,136,0.494,137,1.219,138,1.384,139,1.219,140,1.384,141,1.182,142,1.384,143,1.219,144,1.384,145,1.258,146,1.219,147,1.899,148,1.219,149,2.056,150,1.384,151,1.219,152,1.384,153,1.384,154,0.006,155,0.008,156,0.006,174,1.898,210,5.615,211,3.003,212,3.256,254,6.087,267,2.327,280,1.045,302,0.628,304,1.795,326,1.258,397,1.43,404,1.962,410,2.861,433,1.581,471,1.194,539,1.741,540,1.231,595,1.298,694,3.595,708,2.363,711,3.256,712,3.256,713,3.256,714,2.059,715,3.256,717,3.606,724,3.09,725,3.09,730,4.198,732,3.226,737,4.807,750,3.703,751,2.363,752,2.363,759,1.826,760,2.363,763,2.489,767,2.363,776,2.363,823,3.703,977,4.933,978,3.595,980,3.595,1026,3.595,1037,3.595,1658,3.003,2076,6.72,2077,3.595,2078,6.438,2079,5.639,2080,6.438,2081,6.438,2082,6.438,2083,5.639,2084,5.639,2085,4.109,2086,5.639,2087,4.109,2088,4.109,2089,4.109,2090,4.109,2091,4.109,2092,4.109,2093,4.109,2094,5.639,2095,6.438,2096,4.109,2097,3.256,2098,4.109,2099,4.109,2100,4.109,2101,4.109,2102,4.109,2103,5.639,2104,5.639]],["title/modules/TreksPageModule.html",[157,1.267,1786,2.822]],["body/modules/TreksPageModule.html",[3,0.183,4,0.128,8,0.146,34,0.012,41,0.26,42,0.825,43,2.209,44,2.209,47,1.558,58,0.183,59,0.768,90,0.491,151,2.456,154,0.008,155,0.01,156,0.008,157,1.819,159,2.452,160,2.64,161,3.689,162,2.856,163,2.64,164,2.64,171,3.979,173,3.061,174,2.744,175,2.64,178,3.303,183,3.303,190,2.067,197,4.114,198,3.417,199,3.584,201,3.11,278,3.11,1373,3.744,1374,2.744,1380,3.255,1750,5.304,1786,5.826,1923,5.198,2105,5.198,2106,5.198,2107,5.941,2108,5.941,2109,5.941,2110,5.941]],["title/interfaces/TreksService.html",[467,0.408,560,0.932]],["body/interfaces/TreksService.html",[3,0.095,4,0.067,8,0.076,16,0.199,17,1.07,29,0.598,31,1.622,33,1.634,34,0.012,35,0.556,36,0.545,37,1.444,39,1.778,41,0.169,58,0.26,74,0.345,90,0.381,108,0.705,124,0.576,127,0.663,136,0.554,154,0.004,155,0.006,156,0.004,293,0.617,294,1.196,302,0.808,314,1.177,318,1.006,319,1.636,322,0.579,324,1.878,328,1.526,367,1.172,386,1.172,413,0.813,418,0.813,453,0.765,455,1.503,467,0.831,468,0.765,469,0.813,470,0.788,471,1.642,472,1.632,473,1.443,474,1.488,475,1.488,476,1.488,477,1.934,478,1.853,479,1.488,480,1.558,481,0.788,482,0.838,483,1.414,484,0.677,485,0.677,486,0.698,487,1.656,488,0.975,489,1.399,490,0.838,491,1.246,492,1.443,493,1.172,494,1.488,495,1.79,496,1.736,497,1.172,498,1.647,499,1.746,500,1.488,501,1.246,502,1.246,503,1.246,504,0.975,505,1.761,506,1.246,507,1.572,508,1.209,509,1.246,510,1.246,511,1.246,512,1.209,513,1.246,514,1.277,515,1.246,516,1.246,517,1.037,518,1.172,519,1.209,520,1.914,521,0.838,522,0.838,523,1.246,524,0.838,525,0.838,526,1.209,527,0.838,528,0.838,529,0.838,530,0.838,531,0.838,532,0.838,533,0.838,534,1.246,535,1.209,536,1.399,537,1.209,538,1.07,539,0.719,540,0.677,541,0.765,542,0.838,543,0.719,544,1.246,545,1.137,546,0.719,547,0.719,548,1.07,549,0.765,550,1.238,551,0.838,552,0.813,553,1.277,554,1.316,555,0.788,556,0.765,557,1.103,558,1.316,559,1.172,560,1.371,561,1.414,562,1.246,563,1.246,564,1.246,565,1.246,566,1.598,567,1.209,568,1.209,569,1.598,570,1.209,571,1.209,572,1.488,573,1.598,574,0.838,575,0.838,576,0.742,577,0.813,578,1.103,579,1.037,580,0.765,581,0.636,582,0.742,1429,4.032,1431,4.032,1432,4.032,1433,4.032,1434,4.032,1435,4.032,1436,4.032,1437,4.032,1445,3.652,2111,3.099,2112,3.099,2113,3.099,2114,3.099,2115,3.099,2116,3.099,2117,3.099,2118,3.099,2119,3.099,2120,3.099,2121,3.099]],["title/classes/UnSubscribe.html",[59,0.535,717,1.99]],["body/classes/UnSubscribe.html",[3,0.183,4,0.129,8,0.147,16,0.382,17,1.664,19,1.73,31,1.688,34,0.012,36,0.382,39,1.664,40,2.127,41,0.22,42,0.828,58,0.22,59,0.771,154,0.008,155,0.01,156,0.008,256,4.726,302,0.798,401,2.414,402,3.852,410,3.543,717,3.446,718,4.421,724,4.211,725,4.211,732,3.996,759,3.681,2036,5.218,2122,5.964,2123,4.726,2124,7.168,2125,5.964,2126,5.964,2127,7.974,2128,5.964,2129,6.272,2130,7.168]],["title/coverage.html",[2131,4.958]],["body/coverage.html",[0,1.141,1,1.121,8,0.093,9,3.306,28,1.817,29,0.729,30,1.817,34,0.012,36,0.242,45,1.978,54,2.557,59,0.488,80,3.283,97,1.121,100,1.121,103,1.121,105,1.121,107,1.121,108,0.437,110,1.121,113,1.121,115,1.681,117,1.121,120,1.121,122,1.121,124,0.632,126,1.157,127,0.61,128,1.121,131,1.121,133,1.121,135,1.121,136,0.454,137,1.121,139,1.121,141,1.087,143,1.121,145,1.157,146,1.121,148,1.121,149,1.121,151,1.121,154,0.005,155,0.007,156,0.005,172,2.422,176,2.995,191,2.576,194,2.576,206,2.422,208,2.422,241,2.762,244,2.762,248,2.995,251,2.995,254,2.995,256,4.216,259,1.618,271,2.995,289,2.762,298,2.624,299,2.576,301,3.306,331,2.995,398,3.306,399,2.995,400,3.306,435,2.762,446,3.306,447,2.995,448,3.306,467,0.846,468,0.932,470,2.181,486,0.851,488,0.8,489,0.961,497,0.961,499,0.851,514,0.877,517,0.851,518,0.961,520,0.932,538,0.877,541,0.932,546,0.877,547,0.877,548,0.877,550,0.851,553,0.877,554,0.904,556,0.932,557,0.904,558,0.904,559,0.961,560,0.851,576,0.904,582,0.904,583,3.306,606,2.422,607,4.216,608,3.409,609,5.118,642,3.627,696,3.306,697,3.306,716,3.306,717,2.557,736,2.071,761,3.409,766,2.785,811,4.216,812,3.889,813,4.216,833,2.576,937,3.306,994,3.306,995,4.216,1019,3.306,1020,3.306,1039,3.306,1047,2.174,1077,3.306,1079,4.216,1131,5.296,1132,4.884,1133,5.296,1171,4.216,1324,2.576,1325,3.306,1326,2.762,1327,3.306,1344,2.995,1345,2.762,1346,3.306,1381,4.556,1383,3.306,1384,3.306,1402,3.306,1422,3.306,1427,4.216,1494,3.306,1534,3.306,1568,3.306,1590,3.306,1591,2.762,1611,2.995,1624,3.306,1630,3.306,1758,2.995,1769,3.306,1797,2.995,1799,2.762,1804,3.306,1805,3.306,1895,3.306,1921,3.889,1925,4.216,2007,3.306,2013,2.995,2076,3.306,2077,3.306,2123,4.216,2131,3.306,2132,2.995,2133,3.779,2134,3.779,2135,8.178,2136,8.058,2137,6.157,2138,3.306,2139,6.908,2140,5.32,2141,7.306,2142,5.32,2143,5.32,2144,3.779,2145,5.32,2146,5.32,2147,3.306,2148,3.779,2149,3.779,2150,3.779,2151,5.32,2152,3.779,2153,6.157,2154,7.984,2155,3.779,2156,5.32,2157,6.157,2158,5.32,2159,3.779,2160,3.779,2161,3.779,2162,3.779,2163,3.779,2164,5.32,2165,4.654,2166,3.779,2167,3.779,2168,3.306,2169,3.306,2170,3.306,2171,3.306,2172,3.779,2173,3.779]],["title/dependencies.html",[160,2.214,2174,3.016]],["body/dependencies.html",[8,0.122,22,3.616,23,3.921,26,3.921,34,0.012,42,0.687,43,2.373,44,1.84,47,1.298,48,3.935,49,3.921,51,3.921,114,1.614,154,0.007,155,0.009,156,0.007,160,2.199,185,5.583,186,4.35,190,1.721,204,4.329,205,3.373,211,3.616,214,5.583,215,4.329,218,3.921,221,3.921,223,4.329,226,3.921,227,4.329,228,4.329,230,3.616,233,3.171,338,1.84,484,1.08,485,1.393,641,3.921,815,4.329,1071,5.057,1374,2.285,1631,4.329,1658,5.162,1942,3.921,2175,4.948,2176,8.152,2177,4.948,2178,4.948,2179,4.948,2180,8.453,2181,4.948,2182,4.948,2183,4.329,2184,4.948,2185,4.948,2186,6.381,2187,4.948,2188,6.381,2189,4.948,2190,4.948,2191,4.948,2192,4.948,2193,4.948,2194,4.948,2195,7.536,2196,4.948,2197,4.948,2198,4.948,2199,4.948,2200,6.381,2201,4.948,2202,4.948,2203,4.948,2204,4.948,2205,4.948,2206,7.565,2207,6.179,2208,4.948,2209,4.329,2210,5.057,2211,4.329,2212,4.329,2213,6.381,2214,4.329,2215,4.948,2216,4.948,2217,4.948,2218,4.329,2219,4.948,2220,4.948,2221,4.948,2222,4.948,2223,4.948,2224,5.583,2225,4.948,2226,4.948,2227,4.948,2228,4.948,2229,6.381,2230,4.948,2231,4.948,2232,4.948,2233,4.948,2234,4.948,2235,4.948,2236,4.948,2237,4.948,2238,4.948,2239,5.057,2240,4.948,2241,4.329,2242,4.948,2243,4.948,2244,4.948,2245,4.948,2246,4.948,2247,4.948,2248,4.948,2249,4.948,2250,4.948,2251,4.948,2252,4.948,2253,4.948]],["title/miscellaneous/functions.html",[2254,2.21,2255,4.36]],["body/miscellaneous/functions.html",[16,0.425,33,1.717,34,0.011,35,0.517,37,1.517,154,0.009,155,0.011,156,0.009,176,5.252,257,5.798,271,6.045,312,4.844,717,3.667,759,2.945,2123,5.252,2129,5.798,2254,4.248,2255,5.798,2256,6.628,2257,6.628]],["title/index.html",[16,0.221,2258,3.016,2259,3.016]],["body/index.html",[4,0.13,12,2.505,21,2.901,22,3.323,34,0.011,35,0.308,45,2.685,48,3.879,74,0.506,76,2.913,77,5.371,84,3.603,123,1.583,127,0.394,129,1.308,154,0.006,155,0.008,156,0.008,186,3.099,264,3.977,267,1.876,294,0.797,315,4.923,318,1.48,350,3.977,362,3.603,373,5.282,379,3.977,394,3.977,403,2.913,433,1.749,454,3.099,472,0.904,480,1.088,492,1.192,508,1.192,539,1.401,545,1.122,921,2.754,1055,5.93,1063,3.657,1067,3.099,1203,5.282,1204,3.977,1215,4.954,1277,3.977,2038,3.977,2097,3.603,2132,4.784,2139,5.282,2174,3.977,2183,6.576,2195,6.76,2206,7.432,2207,6.897,2209,3.977,2210,4.784,2211,3.977,2212,5.93,2214,6.576,2218,5.93,2224,3.977,2239,4.784,2241,5.282,2260,6.318,2261,6.778,2262,6.778,2263,3.977,2264,4.546,2265,4.546,2266,4.546,2267,6.037,2268,4.546,2269,3.977,2270,4.546,2271,7.221,2272,4.546,2273,7.221,2274,6.037,2275,4.546,2276,4.546,2277,4.546,2278,4.546,2279,4.546,2280,4.546,2281,4.546,2282,4.546,2283,6.037,2284,6.037,2285,5.282,2286,5.282,2287,4.546,2288,6.037,2289,6.318,2290,4.546,2291,7.516,2292,6.037,2293,7.884,2294,6.037,2295,6.037,2296,6.037,2297,4.546,2298,4.546,2299,4.546,2300,4.546,2301,4.546,2302,4.546,2303,6.037,2304,4.546,2305,4.546,2306,6.037,2307,4.546,2308,4.546,2309,6.037,2310,6.037,2311,6.037,2312,4.546,2313,6.037,2314,4.546,2315,4.546,2316,3.977,2317,5.371,2318,4.546,2319,4.546,2320,4.546,2321,4.546,2322,6.037,2323,3.977,2324,4.546,2325,6.778,2326,4.546,2327,3.977,2328,4.546,2329,4.546,2330,4.546,2331,4.546,2332,4.546,2333,4.546,2334,4.546,2335,4.546,2336,4.546,2337,4.546,2338,4.546,2339,5.282,2340,4.546,2341,6.037,2342,4.546,2343,6.037,2344,4.546,2345,4.546,2346,4.546,2347,4.546,2348,4.546,2349,4.546,2350,4.546,2351,4.546,2352,3.977,2353,4.546,2354,4.546,2355,4.546,2356,6.037,2357,4.546,2358,4.546,2359,4.546,2360,4.546,2361,7.726,2362,4.546,2363,4.546,2364,4.546,2365,4.546,2366,4.546,2367,5.282,2368,6.037,2369,4.546,2370,4.546,2371,4.546,2372,4.546,2373,7.726,2374,4.546,2375,4.546,2376,4.546,2377,3.977,2378,3.977,2379,3.977,2380,3.977,2381,3.977,2382,4.546,2383,4.546,2384,4.546,2385,4.546]],["title/license.html",[2258,3.016,2259,3.016,2386,3.016]],["body/license.html",[4,0.153,34,0.01,68,4.299,154,0.008,155,0.01,156,0.008,175,2.614,293,1.17,362,4.661,403,4.556,708,3.383,2097,6.055,2132,4.661,2210,4.661,2317,6.055,2377,5.146,2378,7.109,2379,5.146,2380,5.146,2381,5.146,2386,5.146,2387,5.882,2388,5.882,2389,5.882,2390,5.882,2391,5.882,2392,7.109,2393,5.882,2394,5.882,2395,5.882,2396,7.64,2397,7.64,2398,5.882,2399,7.109,2400,5.882,2401,5.882,2402,7.109,2403,7.109,2404,7.109,2405,5.882,2406,5.882,2407,5.882,2408,5.882,2409,5.882,2410,7.109,2411,5.882,2412,7.109,2413,5.882,2414,7.109,2415,7.109,2416,7.64,2417,7.109,2418,5.882,2419,5.882,2420,5.882,2421,5.882,2422,5.882,2423,5.882,2424,5.882,2425,5.882,2426,5.882,2427,5.882,2428,5.882,2429,5.882,2430,5.882,2431,5.882,2432,5.882,2433,5.882,2434,5.882,2435,5.882,2436,5.882,2437,5.882,2438,5.882,2439,5.882,2440,5.882,2441,5.882,2442,7.109,2443,5.882,2444,5.882,2445,5.882,2446,5.882,2447,5.882,2448,5.882,2449,5.882,2450,5.882,2451,5.882,2452,5.882,2453,5.882,2454,5.882,2455,5.882]],["title/modules.html",[159,2.339]],["body/modules.html",[34,0.01,77,5.85,154,0.009,155,0.01,156,0.009,158,4.58,159,2.586,170,4.272,171,3.012,186,5.892,1368,4.58,1416,4.272,1741,4.016,1750,4.016,1781,4.58,1785,4.272,1786,4.272,1917,4.58,2000,4.58,2072,4.58,2239,6.849,2456,8.642,2457,8.693,2458,7.382]],["title/overview.html",[2459,4.958]],["body/overview.html",[1,2.335,2,1.473,34,0.012,59,0.584,82,2.474,90,0.373,97,2.335,100,2.335,103,2.004,105,2.004,107,2.004,110,2.335,113,2.004,117,2.004,120,2.335,122,2.335,126,2.409,128,2.004,131,2.004,133,2.335,135,2.004,137,2.004,139,2.004,141,1.943,143,2.335,145,2.068,146,2.004,148,2.004,149,2.004,151,2.004,154,0.006,155,0.008,156,0.006,157,1.382,158,6.349,159,1.864,160,2.007,161,2.171,162,2.171,163,2.007,164,2.007,165,3.95,166,3.95,167,3.95,168,3.95,169,3.95,170,4.606,171,4.105,172,4.329,173,2.573,174,2.086,175,2.007,279,2.363,300,2.474,331,3.578,469,1.184,1070,3.95,1368,5.637,1369,3.95,1370,3.95,1382,3.079,1416,5.366,1417,3.95,1418,3.95,1741,5.35,1742,3.95,1743,3.95,1744,3.95,1750,5.239,1751,3.95,1752,3.95,1753,3.95,1760,3.95,1761,3.95,1762,3.95,1781,6.066,1782,3.95,1783,3.95,1784,3.95,1785,4.606,1786,5.518,1917,5.843,1918,3.95,1919,3.95,2000,5.843,2001,3.95,2002,3.95,2072,5.843,2073,3.95,2074,3.95,2105,3.95,2106,3.95,2459,3.95,2460,3.95,2461,4.515,2462,4.515,2463,4.515]],["title/routes.html",[279,2.966]],["body/routes.html",[34,0.011,154,0.009,155,0.011,156,0.009,279,3.58]],["title/miscellaneous/typealiases.html",[2254,2.21,2464,4.983]],["body/miscellaneous/typealiases.html",[16,0.431,34,0.011,36,0.431,74,0.748,154,0.009,155,0.011,156,0.009,322,1.256,470,1.71,539,1.785,540,1.467,2254,4.308,2465,6.722,2466,6.722]],["title/miscellaneous/variables.html",[2254,2.21,2467,4.36]],["body/miscellaneous/variables.html",[4,0.125,12,2.01,16,0.332,34,0.012,35,0.289,36,0.51,45,2.152,54,1.346,72,3.735,73,3.735,74,0.89,75,2.911,76,2.736,80,2.736,82,4.252,84,4.587,85,3.735,86,3.735,118,1.888,123,2.035,124,0.682,127,0.539,136,0.513,154,0.004,155,0.006,156,0.004,173,3.013,175,1.244,210,3.121,267,2.977,294,0.749,314,0.375,315,2.911,318,0.932,322,0.798,326,2.253,328,0.749,403,2.736,421,3.121,433,2.627,435,3.121,454,5.29,464,5.146,465,3.121,472,1.152,481,1.086,484,1.264,485,0.932,536,1.086,545,1.996,554,1.022,555,1.086,607,2.219,608,1.795,609,4.477,642,3.946,643,3.384,714,3.528,761,3.71,766,1.466,811,2.219,812,2.047,813,3.384,906,5.382,921,2.587,970,3.384,986,2.736,989,5.064,1063,3.507,1067,3.946,1071,6.149,1075,3.735,1131,3.384,1132,3.121,1133,4.587,1171,4.587,1172,3.735,1215,3.121,1232,6.438,1234,3.735,1235,3.735,1242,3.735,1245,7.197,1247,6.638,1250,5.064,1251,5.745,1252,5.745,1253,3.735,1255,3.735,1256,3.735,1257,6.159,1258,3.735,1259,3.735,1267,5.745,1299,3.735,1405,3.384,1427,2.219,1463,3.735,1658,3.121,1667,3.735,1992,6.438,1998,3.735,2070,5.064,2138,2.45,2147,3.735,2165,2.45,2168,2.45,2169,2.45,2170,2.45,2171,6.438,2254,1.795,2260,3.735,2263,3.735,2269,5.064,2285,6.159,2286,3.735,2289,3.735,2316,3.735,2317,4.587,2323,3.735,2327,3.735,2339,3.735,2352,3.735,2367,3.735,2460,5.745,2467,2.45,2468,2.8,2469,2.8,2470,2.8,2471,2.8,2472,2.8,2473,2.8,2474,2.8,2475,4.27,2476,2.8,2477,5.788,2478,4.27,2479,4.27,2480,4.27,2481,8.09,2482,4.27,2483,4.27,2484,4.27,2485,4.27,2486,6.567,2487,7.358,2488,4.27,2489,4.27,2490,5.788,2491,7.358,2492,5.788,2493,5.788,2494,5.788,2495,4.27,2496,4.27,2497,4.27,2498,5.788,2499,5.788,2500,7.358,2501,4.27,2502,5.788,2503,4.27,2504,4.27,2505,4.27,2506,4.27,2507,4.27,2508,4.27,2509,4.27,2510,4.27,2511,4.27,2512,4.27,2513,4.27,2514,4.27,2515,4.27,2516,4.27,2517,4.27,2518,4.27,2519,7.04,2520,4.27,2521,4.27,2522,4.27,2523,5.788,2524,4.27,2525,4.27,2526,7.894,2527,4.27,2528,4.27,2529,4.27,2530,6.567,2531,4.27,2532,4.27,2533,5.788,2534,5.788,2535,5.788,2536,5.788,2537,4.27,2538,4.27,2539,4.27,2540,4.27,2541,4.27,2542,5.788,2543,4.27,2544,4.27,2545,4.27,2546,4.27,2547,4.27,2548,4.27,2549,4.27,2550,4.27,2551,2.8,2552,2.8,2553,4.27,2554,4.27,2555,4.27,2556,4.27,2557,2.8,2558,2.8]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.01",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0125em",{"_index":1999,"title":{},"body":{"components/TrekMapPage.html":{}}}],["0.1",{"_index":1259,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.3",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":1075,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["0.51.7",{"_index":2205,"title":{},"body":{"dependencies.html":{}}}],["0.53.1",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.705824",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.29",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["0.8.8",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2136,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2151,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2140,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2150,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2143,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2144,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2135,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2137,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2146,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2141,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2142,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2145,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":715,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["1",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).tofixed(1",{"_index":1873,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0",{"_index":1871,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0.1",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1877,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.3.1",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["1/21",{"_index":2149,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":970,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekCardComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":810,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["1000",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["100px",{"_index":2069,"title":{},"body":{"components/TreksMapPage.html":{}}}],["1024×1024px",{"_index":2340,"title":{},"body":{"index.html":{}}}],["11.0.1",{"_index":2197,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200×1200px",{"_index":2354,"title":{},"body":{"index.html":{}}}],["12px",{"_index":1880,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["13",{"_index":2460,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1257,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["16px",{"_index":1533,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["17",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1234,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["195",{"_index":1073,"title":{},"body":{"components/LoaderComponent.html":{}}}],["199",{"_index":1074,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{},"license.html":{}}}],["2.0.1",{"_index":2230,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["2.6.9",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["2/29",{"_index":2148,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{}}}],["2019",{"_index":2388,"title":{},"body":{"license.html":{}}}],["20px",{"_index":1883,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["24",{"_index":1874,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["24px",{"_index":1323,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["25",{"_index":2461,"title":{},"body":{"overview.html":{}}}],["250",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2732×2732px",{"_index":2345,"title":{},"body":{"index.html":{}}}],["29",{"_index":2462,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":2213,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["3.0.3",{"_index":2196,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1531,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["4",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{},"overview.html":{}}}],["4.0.0",{"_index":2198,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":2203,"title":{},"body":{"dependencies.html":{}}}],["4.6.1",{"_index":2191,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2463,"title":{},"body":{"overview.html":{}}}],["44.410157",{"_index":989,"title":{},"body":{"injectables/GeolocateService.html":{},"miscellaneous/variables.html":{}}}],["48px*48px",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4em",{"_index":466,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["5",{"_index":421,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":2215,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["5.4.4",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["5.8.0",{"_index":2180,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1050,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["500",{"_index":1996,"title":{},"body":{"components/TrekMapPage.html":{}}}],["5s",{"_index":605,"title":{},"body":{"components/FilterComponent.html":{}}}],["6",{"_index":2147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":2200,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2201,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{},"components/TrekCardComponent.html":{}}}],["61b22f",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["625b5d",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.2",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1992,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["898083",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1070,"title":{},"body":{"components/LoaderComponent.html":{},"overview.html":{}}}],["a.geometry",{"_index":654,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["a.indexof(v",{"_index":1734,"title":{},"body":{"injectables/SettingsService.html":{}}}],["a.properties.name",{"_index":662,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["above",{"_index":2402,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1321,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["abstract/unsubscribe",{"_index":1170,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["accept",{"_index":1340,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["access",{"_index":508,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["accessibilities",{"_index":476,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["accesstoken",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":1355,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["activatedroutesnapshot",{"_index":1388,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["activefiltersnumber",{"_index":610,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["actual_component",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["actually",{"_index":376,"title":{},"body":{"injectables/CacheService.html":{}}}],["add",{"_index":1055,"title":{},"body":{"components/LoaderComponent.html":{},"index.html":{}}}],["addsourceslayersevents",{"_index":1139,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["addsoustractmaxbounds",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["advice",{"_index":510,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["advised",{"_index":2452,"title":{},"body":{"license.html":{}}}],["advised_parking",{"_index":509,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["alert",{"_index":1307,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alert.present",{"_index":1313,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertcontroller",{"_index":818,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["alertmsg",{"_index":1825,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["alertoption",{"_index":1301,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["aliases",{"_index":2465,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1068,"title":{},"body":{"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["allow",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabetically",{"_index":661,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["already",{"_index":599,"title":{},"body":{"components/FilterComponent.html":{}}}],["always",{"_index":1377,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["alwaysdisplayeditems",{"_index":407,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["ambiance",{"_index":525,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["analytics",{"_index":2183,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["analytics/ngx",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["and/or",{"_index":2407,"title":{},"body":{"license.html":{}}}],["android",{"_index":2207,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["androidbuild",{"_index":2300,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1374,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2177,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2178,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1316,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["animate('250ms",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animated",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["animations",{"_index":437,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["any).bounds",{"_index":1488,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).fitboundsoptions",{"_index":1490,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).indexof(filtervalue",{"_index":674,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["any).name",{"_index":1398,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["any).properties.id",{"_index":1975,"title":{},"body":{"components/TrekMapPage.html":{}}}],["any).sources['tiles",{"_index":1193,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["api",{"_index":2289,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1328,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["apk",{"_index":2294,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/abstract/unsubscribe",{"_index":763,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/components/animations",{"_index":436,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["app/components/collapsible",{"_index":1764,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/connect",{"_index":1766,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/filters/filters.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/geolocate",{"_index":1746,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/information",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/layers",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loader/loader.component",{"_index":1768,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/map",{"_index":1748,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/poi",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/poi/poi.component",{"_index":1756,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/components/progress/progress.component",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/search/search.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/trek",{"_index":1757,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/interfaces/interfaces",{"_index":595,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/map",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/${trekid",{"_index":1478,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/:trekid",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/resolvers/more",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["app/resolvers/more.resolver",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{}}}],["app/resolvers/trek.resolver",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["app/resolvers/treks.resolver",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/services/cache/cache.service",{"_index":1337,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["app/services/filter",{"_index":764,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["app/services/geolocate/geolocate.service",{"_index":858,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["app/services/loading/loading.service",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["app/services/more",{"_index":1391,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["app/services/offline",{"_index":765,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["app/services/online",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["app/services/search",{"_index":1610,"title":{},"body":{"components/SearchComponent.html":{}}}],["app/services/settings/settings.service",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/shared/shared",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["app/shared/shared.module",{"_index":2005,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/tabs/more",{"_index":1776,"title":{},"body":{"components/TabsPage.html":{}}}],["app/tabs/treks",{"_index":1475,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["app/tabs/treks${this.offline",{"_index":1842,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["app/tabs/treks/trek",{"_index":1476,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/tabs/treks/treks",{"_index":1479,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2262,"title":{},"body":{"index.html":{}}}],["applyfilters",{"_index":726,"title":{},"body":{"components/FiltersComponent.html":{}}}],["appmodule",{"_index":158,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1405,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":170,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":2333,"title":{},"body":{"index.html":{}}}],["argument",{"_index":2292,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2449,"title":{},"body":{"license.html":{}}}],["array",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["arrival",{"_index":502,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["arrival_city",{"_index":516,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["artwork",{"_index":2349,"title":{},"body":{"index.html":{}}}],["ascent",{"_index":503,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["assets/i18n",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/map/zone/zone.geojson",{"_index":1238,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["assets/map/{fontstack}/{range}.pbf",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assume",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":823,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["attributioncontrol",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":491,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["available",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["availablelanguage",{"_index":2316,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["availablelanguage[0",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["b.geometry",{"_index":655,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["b.properties.name",{"_index":663,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["background",{"_index":1071,"title":{},"body":{"components/LoaderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["background'].tiles[0",{"_index":1194,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["backgroundgeolocation",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundgeolocationconfig",{"_index":957,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationevents",{"_index":958,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider",{"_index":959,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider.distance_filter_provider",{"_index":968,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["badge",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["bar",{"_index":2189,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["baseurl",{"_index":999,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["before",{"_index":1204,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["begin",{"_index":1124,"title":{},"body":{"injectables/LoadingService.html":{}}}],["begin(id",{"_index":1104,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject",{"_index":757,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["behaviorsubject([0",{"_index":1665,"title":{},"body":{"injectables/SettingsService.html":{}}}],["behaviorsubject(false",{"_index":1091,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject(null",{"_index":955,"title":{},"body":{"injectables/GeolocateService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["below",{"_index":2307,"title":{},"body":{"index.html":{}}}],["best",{"_index":2347,"title":{},"body":{"index.html":{}}}],["between",{"_index":1885,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["binary",{"_index":2392,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":507,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["bootstrap",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["border",{"_index":713,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["bottom",{"_index":1492,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["broadcast",{"_index":385,"title":{},"body":{"injectables/CacheService.html":{}}}],["broadcasts",{"_index":354,"title":{},"body":{"injectables/CacheService.html":{}}}],["browse",{"_index":2457,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["bsd",{"_index":2377,"title":{},"body":{"index.html":{},"license.html":{}}}],["build",{"_index":2293,"title":{},"body":{"index.html":{}}}],["business",{"_index":2438,"title":{},"body":{"license.html":{}}}],["button",{"_index":1318,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["buttons",{"_index":925,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["buttontext",{"_index":452,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["c",{"_index":2379,"title":{},"body":{"index.html":{},"license.html":{}}}],["cache",{"_index":303,"title":{},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["cacheservice",{"_index":299,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"coverage.html":{}}}],["calc(100",{"_index":1882,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["can't",{"_index":1300,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cancel",{"_index":928,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["capitalize",{"_index":2071,"title":{},"body":{"components/TreksMapPage.html":{}}}],["card",{"_index":1528,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["card'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["card.component",{"_index":1759,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["card.component.html",{"_index":1807,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.scss",{"_index":1806,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts",{"_index":1805,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:15",{"_index":1819,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:16",{"_index":1817,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:17",{"_index":1818,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:18",{"_index":1828,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:19",{"_index":1829,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:20",{"_index":1832,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:21",{"_index":1816,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:26",{"_index":1830,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:27",{"_index":1831,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:28",{"_index":1833,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:32",{"_index":1823,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:55",{"_index":1821,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:60",{"_index":1822,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:77",{"_index":1826,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card/trek",{"_index":1758,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":1983,"title":{},"body":{"components/TrekMapPage.html":{}}}],["catcherror",{"_index":339,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["catcherror((error",{"_index":392,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["categories",{"_index":1729,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categories.foreach(categoryid",{"_index":1735,"title":{},"body":{"injectables/SettingsService.html":{}}}],["category",{"_index":555,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["category.name",{"_index":1739,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categoryid",{"_index":1737,"title":{},"body":{"injectables/SettingsService.html":{}}}],["caused",{"_index":2440,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2281,"title":{},"body":{"index.html":{}}}],["center",{"_index":1067,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":542,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["changed",{"_index":1058,"title":{},"body":{"components/LoaderComponent.html":{}}}],["changedetection",{"_index":1569,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy",{"_index":1582,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy.default",{"_index":1570,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectorref",{"_index":1576,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changelayervisibility",{"_index":1024,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["changenotificationsmode",{"_index":824,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes",{"_index":847,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["changes.currentpois",{"_index":873,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes.filteredtreks",{"_index":1177,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changes.poi",{"_index":1509,"title":{},"body":{"components/PoiComponent.html":{}}}],["changescurrentpois",{"_index":872,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.currentvalue",{"_index":874,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.previousvalue",{"_index":875,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrenttreks",{"_index":1176,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.currentvalue",{"_index":1178,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.previousvalue",{"_index":1179,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["channel",{"_index":908,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["channel${this.currentpoistonotify[notifiedindex].id",{"_index":909,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["check",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkauthorization",{"_index":938,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checked",{"_index":543,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["checkedvalue.id",{"_index":678,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkedvalue.interval",{"_index":683,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkiftrackerisrunning",{"_index":939,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checkstate",{"_index":745,"title":{},"body":{"components/FiltersComponent.html":{}}}],["checktonotify",{"_index":825,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["checktonotify(fromcoordinates",{"_index":839,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["children",{"_index":1794,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["circle",{"_index":1245,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["circlecolorexpression",{"_index":1260,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push('match",{"_index":1261,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(['get",{"_index":1262,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(environment.map.clusterpaint['circle",{"_index":1266,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.color",{"_index":1265,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.id",{"_index":1264,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cities",{"_index":512,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["city",{"_index":1714,"title":{},"body":{"injectables/SettingsService.html":{}}}],["class",{"_index":59,"title":{"classes/UnSubscribe.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2122,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["clause",{"_index":2387,"title":{},"body":{"license.html":{}}}],["clickdeleteconfirm",{"_index":1811,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clickdeleteconfirm($event",{"_index":1820,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clicklocalnotifications",{"_index":819,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["clone",{"_index":2278,"title":{},"body":{"index.html":{}}}],["clonedeep",{"_index":761,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedeep(context.mapconfig",{"_index":2045,"title":{},"body":{"components/TreksMapPage.html":{}}}],["clonedeep(environment.onlinemapconfig",{"_index":1487,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["clonedeep(this.filters$.getvalue",{"_index":1691,"title":{},"body":{"injectables/SettingsService.html":{}}}],["clonedeep(this.temporaryfilters$.getvalue",{"_index":786,"title":{},"body":{"components/FiltersComponent.html":{}}}],["clonedeep(trek",{"_index":1697,"title":{},"body":{"injectables/SettingsService.html":{}}}],["close",{"_index":727,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["cluster",{"_index":1235,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule",{"_index":1369,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_declarations",{"_index":1370,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_imports",{"_index":1371,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["cluster_morepagemodule",{"_index":1417,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_declarations",{"_index":1418,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_imports",{"_index":1419,"title":{},"body":{"modules/MorePageModule.html":{}}}],["cluster_sharedmodule",{"_index":1742,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1743,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1744,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule",{"_index":1751,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_declarations",{"_index":1752,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_exports",{"_index":1753,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_shareduimodule",{"_index":1760,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_declarations",{"_index":1761,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_exports",{"_index":1762,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":1782,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":1783,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_imports",{"_index":1784,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule",{"_index":1918,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_declarations",{"_index":1919,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_imports",{"_index":1920,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["cluster_trekmappagemodule",{"_index":2001,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_declarations",{"_index":2002,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_imports",{"_index":2003,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["cluster_treksmappagemodule",{"_index":2073,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_declarations",{"_index":2074,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_imports",{"_index":2075,"title":{},"body":{"modules/TreksMapPageModule.html":{}}}],["cluster_trekspagemodule",{"_index":2105,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_declarations",{"_index":2106,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_imports",{"_index":2107,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["clusterid",{"_index":1274,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusterpaint",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterradius",{"_index":1236,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusters",{"_index":1244,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["code",{"_index":2400,"title":{},"body":{"license.html":{}}}],["collapsed",{"_index":423,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["collapsible",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["collapsiblelistcomponent",{"_index":97,"title":{"components/CollapsibleListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["color",{"_index":545,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":2335,"title":{},"body":{"index.html":{}}}],["column",{"_index":1320,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["combinelatest",{"_index":640,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TreksMapPage.html":{}}}],["combinelatest(treks",{"_index":689,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{}}}],["command",{"_index":2370,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":1373,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["commonsrc",{"_index":581,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["complete",{"_index":386,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["componentprops",{"_index":1987,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"overview.html":{}}}],["components/filter",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["components/filter/filter.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["components/treks",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["concat",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":1044,"title":{},"body":{"components/LoaderComponent.html":{}}}],["conditions",{"_index":2397,"title":{},"body":{"license.html":{}}}],["config",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.xml",{"_index":2311,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":2362,"title":{},"body":{"index.html":{}}}],["connect",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["connecterrorcomponent",{"_index":100,"title":{"components/ConnectErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":1961,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["connectionerror",{"_index":1350,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{}}}],["consequential",{"_index":2431,"title":{},"body":{"license.html":{}}}],["console.error('no",{"_index":1906,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["console.log('poi",{"_index":912,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["const",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["constructor(alertcontroller",{"_index":1146,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["constructor(backgroundgeolocation",{"_index":944,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["constructor(cache",{"_index":1331,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["constructor(http",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["constructor(loading",{"_index":1046,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["constructor(modalctrl",{"_index":733,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(more",{"_index":1385,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["constructor(navparams",{"_index":1026,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["constructor(offlinetreks",{"_index":1499,"title":{},"body":{"components/PoiComponent.html":{},"components/ProgressComponent.html":{}}}],["constructor(onlinetreks",{"_index":2008,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TabsPage.html":{}}}],["constructor(private",{"_index":684,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/LayersVisibilityComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"components/TabsPage.html":{}}}],["constructor(protected",{"_index":1115,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["constructor(public",{"_index":1008,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{}}}],["constructor(route",{"_index":1354,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["constructor(settings",{"_index":618,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["contact",{"_index":552,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["container",{"_index":1062,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekMapPage.html":{}}}],["contains",{"_index":535,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["containsfilter",{"_index":468,"title":{"interfaces/ContainsFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["containsfilter(filter",{"_index":620,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["content",{"_index":453,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["context",{"_index":1795,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{}}}],["context.mapconfig",{"_index":1971,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.offline",{"_index":1964,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.pois",{"_index":1968,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.touristiccategorieswithfeatures",{"_index":1970,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trek",{"_index":1966,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool",{"_index":2042,"title":{},"body":{"components/TreksMapPage.html":{}}}],["context.trekstool.filteredtreks",{"_index":2056,"title":{},"body":{"components/TreksMapPage.html":{}}}],["context.trekstool.getcommonimgsrc",{"_index":1972,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool.gettrekdetailsurl((this.currenttrek",{"_index":1974,"title":{},"body":{"components/TrekMapPage.html":{}}}],["contexts",{"_index":575,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["contract",{"_index":2444,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2412,"title":{},"body":{"license.html":{}}}],["coordinates",{"_index":496,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["coordinates[0",{"_index":1289,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[1",{"_index":1290,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["copyright",{"_index":2378,"title":{},"body":{"index.html":{},"license.html":{}}}],["cordova",{"_index":2206,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cordova@9.0.0",{"_index":2276,"title":{},"body":{"index.html":{}}}],["core",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["corpus",{"_index":2381,"title":{},"body":{"index.html":{},"license.html":{}}}],["count",{"_index":1249,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coverage",{"_index":2131,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":379,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["createmap",{"_index":1140,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["createtranslateloader",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["crins",{"_index":2385,"title":{},"body":{"index.html":{}}}],["criterionvalue",{"_index":671,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["cssclass",{"_index":929,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["currentdatasetting",{"_index":1683,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentdatasetting.values.map(value",{"_index":1685,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentorder",{"_index":2080,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["currentpois",{"_index":830,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["currentpoistonotify",{"_index":820,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["currentposition",{"_index":821,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/TreksMapPage.html":{}}}],["currentprogress",{"_index":1573,"title":{},"body":{"components/ProgressComponent.html":{}}}],["currentsearchvalue",{"_index":1595,"title":{},"body":{"components/SearchComponent.html":{}}}],["currenttrek",{"_index":1928,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrek!.properties.name",{"_index":1991,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttypepoi",{"_index":1512,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["currenttypepoi.pictogram",{"_index":1516,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["custom",{"_index":1994,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["customevent",{"_index":706,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["customize",{"_index":2310,"title":{},"body":{"index.html":{}}}],["damage",{"_index":2455,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2432,"title":{},"body":{"license.html":{}}}],["data",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"license.html":{}}}],["data.context",{"_index":1959,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["data.id",{"_index":870,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["data.items",{"_index":1413,"title":{},"body":{"components/MorePage.html":{}}}],["data['item",{"_index":1363,"title":{},"body":{"components/MoreItemPage.html":{}}}],["datasetting",{"_index":548,"title":{"interfaces/DataSetting.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["datasetting.find(data",{"_index":1694,"title":{},"body":{"injectables/SettingsService.html":{}}}],["datasettings",{"_index":1143,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["debug",{"_index":973,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["declarations",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["defaultsettings",{"_index":1675,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["delay",{"_index":383,"title":{},"body":{"injectables/CacheService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{}}}],["delete",{"_index":350,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["deleteconfirm",{"_index":1857,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deleteconfirm.present",{"_index":1864,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deletetrek",{"_index":1812,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["departure",{"_index":492,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["departure_city",{"_index":515,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["departurearrivaliconsize",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":160,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["des",{"_index":2384,"title":{},"body":{"index.html":{}}}],["description",{"_index":505,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["description_teaser",{"_index":500,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["desiredaccuracy",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desk",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["details",{"_index":996,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["details.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["details.component.html",{"_index":998,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.scss",{"_index":997,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts",{"_index":995,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1005,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":1006,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1001,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1007,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1540,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1003,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":1546,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1549,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1548,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1545,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1537,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1002,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":1541,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1542,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":1547,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":1543,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:31",{"_index":1544,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1539,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":1538,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.module#trekdetailspagemodule",{"_index":1798,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details.module.ts",{"_index":1922,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page",{"_index":1924,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page.ts",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["details/${this.trek.properties.id",{"_index":1843,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${trekid",{"_index":1477,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/:trekid",{"_index":1796,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/information",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/InformationDeskDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/poi",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/trek",{"_index":1797,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"coverage.html":{}}}],["dev",{"_index":987,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["dev.201907022006.a656dad",{"_index":2192,"title":{},"body":{"dependencies.html":{}}}],["developmentenvironment.prod.ts",{"_index":2318,"title":{},"body":{"index.html":{}}}],["device",{"_index":2218,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["difficulty",{"_index":473,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["direct",{"_index":2426,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1319,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["directive",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["directives",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["disablegeolocationnotification",{"_index":826,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["disclaimed",{"_index":2422,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2404,"title":{},"body":{"license.html":{}}}],["display",{"_index":1063,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distance",{"_index":642,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distance(from",{"_index":901,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["distance(point(a.geometry.coordinates",{"_index":657,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distance(point(b.geometry.coordinates",{"_index":660,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefilter",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distancefromtreka",{"_index":656,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefromtrekb",{"_index":659,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distribution",{"_index":2409,"title":{},"body":{"license.html":{}}}],["document.createelement('div",{"_index":1222,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["documentation",{"_index":2132,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["domain.fr/mobile",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":2302,"title":{},"body":{"index.html":{}}}],["download",{"_index":2358,"title":{},"body":{"index.html":{}}}],["downloads",{"_index":2360,"title":{},"body":{"index.html":{}}}],["duration",{"_index":501,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["during",{"_index":359,"title":{},"body":{"injectables/CacheService.html":{}}}],["dynamic",{"_index":2179,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1270,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["each",{"_index":374,"title":{},"body":{"injectables/CacheService.html":{}}}],["ease",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["easily",{"_index":2308,"title":{},"body":{"index.html":{}}}],["el",{"_index":1221,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["el.classname",{"_index":1223,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["element.id",{"_index":801,"title":{},"body":{"components/FiltersComponent.html":{}}}],["element.properties.id",{"_index":1619,"title":{},"body":{"components/SearchComponent.html":{}}}],["ellipsis",{"_index":1890,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["email",{"_index":526,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["emit",{"_index":381,"title":{},"body":{"injectables/CacheService.html":{}}}],["emits",{"_index":356,"title":{},"body":{"injectables/CacheService.html":{}}}],["emitted",{"_index":388,"title":{},"body":{"injectables/CacheService.html":{}}}],["empty",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":2323,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["enablegeolocationnotification",{"_index":827,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["end",{"_index":1529,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["entrycomponents",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["env/environment",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["environment",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1410,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{}}}],["environment.availablelanguage",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.indexof(defaultlanguage",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.length",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage[0",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.backgroundgeolocation",{"_index":974,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["environment.map.clusterpaint",{"_index":1248,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.globalmapiconsize",{"_index":1268,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zonelayerproperties",{"_index":1241,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zoneoutlinelayerproperties",{"_index":1243,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox",{"_index":1173,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox.accesstoken",{"_index":1174,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.meterstonotify",{"_index":895,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["environment.offlinemapconfig",{"_index":2011,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.offlinemapconfig.style",{"_index":1195,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.onlinebaseurl",{"_index":1004,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{}}}],["environment.onlinemapconfig",{"_index":2012,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.prod.ts",{"_index":2313,"title":{},"body":{"index.html":{}}}],["environment.trekzoom.zoom",{"_index":1317,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["environment.usefirebase",{"_index":1396,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["erasefilters",{"_index":728,"title":{},"body":{"components/FiltersComponent.html":{}}}],["err",{"_index":1280,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["error",{"_index":449,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["error'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["error.component",{"_index":1767,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["error.component.html",{"_index":451,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.scss",{"_index":450,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts",{"_index":448,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":460,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:11",{"_index":461,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:12",{"_index":459,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:13",{"_index":458,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:9",{"_index":462,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.status",{"_index":1400,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["error/connect",{"_index":447,"title":{},"body":{"components/ConnectErrorComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["es6",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2451,"title":{},"body":{"license.html":{}}}],["event",{"_index":708,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{},"license.html":{}}}],["event.detail.checked",{"_index":709,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["event.detail.value",{"_index":1037,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["event.stoppropagation",{"_index":1844,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["eventemitter",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["everything",{"_index":368,"title":{},"body":{"injectables/CacheService.html":{}}}],["exemplary",{"_index":2430,"title":{},"body":{"license.html":{}}}],["expand",{"_index":597,"title":{},"body":{"components/FilterComponent.html":{}}}],["expandable",{"_index":598,"title":{},"body":{"components/FilterComponent.html":{}}}],["expandableitems",{"_index":408,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expandcollapse",{"_index":435,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expanded",{"_index":409,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["expansion",{"_index":1284,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["exports",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["express",{"_index":2413,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1057,"title":{},"body":{"components/LoaderComponent.html":{}}}],["extand",{"_index":1881,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["extends",{"_index":471,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{}}}],["extensive",{"_index":2374,"title":{},"body":{"index.html":{}}}],["extra",{"_index":1887,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["f04141",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fails",{"_index":1916,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fake",{"_index":985,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["false",{"_index":433,"title":{},"body":{"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":477,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["feature.geometry.coordinates",{"_index":879,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["feature.properties",{"_index":1295,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.properties.id",{"_index":869,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["feature.properties.name",{"_index":878,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["feature.properties[filter.id",{"_index":672,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["featurecollection",{"_index":478,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["featureid",{"_index":1311,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties",{"_index":1272,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties.cluster_id",{"_index":1275,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features",{"_index":487,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["features.foreach((feature",{"_index":1302,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].geometry",{"_index":1286,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].properties",{"_index":1273,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresincluster",{"_index":1281,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio",{"_index":1298,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio.push",{"_index":1303,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fff",{"_index":1251,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1253,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2368,"title":{},"body":{"index.html":{}}}],["files:appname",{"_index":2315,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2285,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":108,"title":{"interfaces/Filter.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filter'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filter((loadingid",{"_index":1110,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["filter((v",{"_index":1733,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filter(treks",{"_index":622,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter(value",{"_index":680,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.component.html",{"_index":585,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":584,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.id",{"_index":790,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.name",{"_index":602,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.type",{"_index":649,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values",{"_index":679,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filter.values.filter(value",{"_index":664,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values.foreach(value",{"_index":799,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filtercomponent",{"_index":103,"title":{"components/FilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredfeatures",{"_index":644,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredfeatures.filter(feature",{"_index":647,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredtreks",{"_index":561,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["filters",{"_index":549,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["filters'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filters.component.html",{"_index":720,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":719,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.erase",{"_index":804,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.foreach(filter",{"_index":646,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filters.oneresult",{"_index":806,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.push(filter",{"_index":1686,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filters.results",{"_index":809,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.title",{"_index":802,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.zeroresult",{"_index":805,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filterscomponent",{"_index":105,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtertreks",{"_index":1440,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["filtertreksservice",{"_index":606,"title":{"injectables/FilterTreksService.html":{}},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["filtertreksservice.containsfilter(filter",{"_index":650,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.filter(treks",{"_index":784,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).indexof(feature.properties[filter.id",{"_index":676,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).length",{"_index":667,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedinterval(filter).foreach(([min",{"_index":669,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getnumberofactivefilters(filters",{"_index":688,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.intervalfilter(filter",{"_index":651,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.isfilteractive(filter",{"_index":648,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.sort(filtertreksservice.filter(treks",{"_index":693,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtervalue",{"_index":538,"title":{"interfaces/FilterValue.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filtervalue.checked",{"_index":794,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtervaluecomponent",{"_index":107,"title":{"components/FilterValueComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":2306,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1125,"title":{},"body":{"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["finish(id",{"_index":1108,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["firebase",{"_index":2361,"title":{},"body":{"index.html":{}}}],["firebaseanalytics",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["first",{"_index":2038,"title":{},"body":{"components/TreksMapPage.html":{},"index.html":{}}}],["first_picture",{"_index":490,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["fit",{"_index":2351,"title":{},"body":{"index.html":{}}}],["fitbounds",{"_index":1158,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fitness",{"_index":2419,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1065,"title":{},"body":{"components/LoaderComponent.html":{}}}],["flex",{"_index":1064,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["fly",{"_index":1157,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["flytouserlocation",{"_index":1141,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["following",{"_index":2396,"title":{},"body":{"license.html":{}}}],["font",{"_index":465,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["foreground",{"_index":862,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["forkjoin",{"_index":1898,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["form",{"_index":2405,"title":{},"body":{"license.html":{}}}],["forms",{"_index":2393,"title":{},"body":{"license.html":{}}}],["found",{"_index":1907,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fr",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fromcoordinates",{"_index":841,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["full",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FiltersComponent.html":{},"modules/TabsPageRoutingModule.html":{}}}],["function",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{}}}],["functions",{"_index":2255,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2274,"title":{},"body":{"index.html":{}}}],["geographical",{"_index":2332,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":481,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["geojsonproperties",{"_index":1167,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource",{"_index":1168,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterexpansionzoom",{"_index":1285,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterleaves",{"_index":1278,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsourceraw",{"_index":1169,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geolocate",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["geolocate.cancel",{"_index":916,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.open",{"_index":917,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocatenotificationscomponent",{"_index":110,"title":{"components/GeolocateNotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geolocateservice",{"_index":833,"title":{"injectables/GeolocateService.html":{}},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{}}}],["geolocation",{"_index":1658,"title":{},"body":{"injectables/SettingsService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["geolocation/ngx",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["geolocationconfig",{"_index":966,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["geometry",{"_index":495,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["geosjon",{"_index":2328,"title":{},"body":{"index.html":{}}}],["geotrek",{"_index":2260,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["get(['geolocate.asklocatepermission",{"_index":915,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["get(url",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcheckedidforfilter",{"_index":612,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedidforfilter(filter",{"_index":624,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval",{"_index":613,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval(filter",{"_index":626,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcommonimgsrc",{"_index":573,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getfilteredtreks",{"_index":614,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilteredtreks(treks",{"_index":628,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilters",{"_index":1632,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getfilters(settings",{"_index":1643,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek",{"_index":1633,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek(trek",{"_index":1645,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getmapconfigfortrekbyid",{"_index":1429,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getmapconfigfortrekbyid(trek",{"_index":571,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getminimaltrekbyid",{"_index":1430,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getminimaltrekbyid(trekid",{"_index":1444,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getmoreitembyid",{"_index":1329,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitembyid(id",{"_index":1333,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitems",{"_index":1330,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getnumberofactivefilters",{"_index":615,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getnumberofactivefilters(filters",{"_index":630,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getpoisfortrekbyid",{"_index":1431,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(id",{"_index":563,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(trekid",{"_index":1446,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gets",{"_index":353,"title":{},"body":{"injectables/CacheService.html":{}}}],["getsettings",{"_index":1634,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getting",{"_index":2258,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettouristiccategorieswithfeatures",{"_index":1635,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccategorieswithfeatures(touristiccontents",{"_index":1648,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccontentsfortrekbyid",{"_index":1432,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(id",{"_index":564,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(trekid",{"_index":1448,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettouristiceventsfortrekbyid",{"_index":1433,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(id",{"_index":565,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(trekid",{"_index":1450,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekbyid",{"_index":1434,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(id",{"_index":562,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(trekid",{"_index":1452,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekdetailsurl",{"_index":1435,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekdetailsurl(trekid",{"_index":567,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc",{"_index":1436,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc(trek",{"_index":568,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl",{"_index":1437,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl(trekid",{"_index":570,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreks",{"_index":1438,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettreksmapurl",{"_index":569,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreksurl",{"_index":566,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getvalueforpropertybyid",{"_index":1636,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getvalueforpropertybyid(propertyname",{"_index":1650,"title":{},"body":{"injectables/SettingsService.html":{}}}],["git",{"_index":2277,"title":{},"body":{"index.html":{}}}],["git+https://github.com/steffaan/cordova",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["git@github.com:geotrekce/geotrek",{"_index":2279,"title":{},"body":{"index.html":{}}}],["given",{"_index":1470,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gl",{"_index":485,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":2359,"title":{},"body":{"index.html":{}}}],["globalization",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["globalmapiconsize",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyphs",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["goods",{"_index":2435,"title":{},"body":{"license.html":{}}}],["google",{"_index":2241,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["googleservice",{"_index":2365,"title":{},"body":{"index.html":{}}}],["gradle",{"_index":2211,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graph",{"_index":2458,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1381,"title":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1382,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"overview.html":{}}}],["h",{"_index":1872,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["handle(req",{"_index":1119,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["handlefiltersstate",{"_index":729,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handlefiltersstate(checkstate",{"_index":743,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handler",{"_index":932,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["header",{"_index":921,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1339,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["height",{"_index":604,"title":{},"body":{"components/FilterComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["here",{"_index":2322,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1894,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hidealllabel",{"_index":413,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["hits",{"_index":305,"title":{},"body":{"injectables/CacheService.html":{}}}],["holder",{"_index":2424,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2411,"title":{},"body":{"license.html":{}}}],["html",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["htmlionmodalelement",{"_index":1952,"title":{},"body":{"components/TrekMapPage.html":{}}}],["http",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/functions.html":{}}}],["http://geotrek.fr",{"_index":2264,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpclientmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1390,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["httpevent",{"_index":1088,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httphandler",{"_index":1085,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpheaders",{"_index":1336,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpinterceptor",{"_index":1089,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpoptions",{"_index":1338,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httprequest",{"_index":1083,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpresponse",{"_index":1090,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://b.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://c.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://my",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydratedtrek",{"_index":517,"title":{"interfaces/HydratedTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["hydratedtrek.properties.arrival_city",{"_index":1710,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.cities",{"_index":1712,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure",{"_index":1868,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.departure_city",{"_index":1708,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure_city?.name",{"_index":1867,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.difficulty",{"_index":1699,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.difficulty?.name",{"_index":1869,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.duration",{"_index":1870,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.information_desks.foreach(information_desk",{"_index":1726,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.length",{"_index":1876,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.networks",{"_index":1717,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice",{"_index":1702,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.route",{"_index":1705,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.themes",{"_index":1721,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties?.name",{"_index":1865,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrekproperties",{"_index":518,"title":{"interfaces/HydratedTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["icon",{"_index":454,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":2325,"title":{},"body":{"index.html":{}}}],["id",{"_index":472,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ideally",{"_index":2339,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2133,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1094,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.length",{"_index":1098,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.push(id",{"_index":1106,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ignore",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1215,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":1530,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["imgpracticesrc",{"_index":1808,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["imgsrc",{"_index":1809,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["implements",{"_index":401,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["implied",{"_index":2414,"title":{},"body":{"license.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["important",{"_index":2337,"title":{},"body":{"index.html":{}}}],["imports",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["incidental",{"_index":2428,"title":{},"body":{"license.html":{}}}],["including",{"_index":2416,"title":{},"body":{"license.html":{}}}],["increment",{"_index":390,"title":{},"body":{"injectables/CacheService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2427,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1279,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["info.plist",{"_index":2366,"title":{},"body":{"index.html":{}}}],["information",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["information_desk.type",{"_index":1727,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desk_types",{"_index":1728,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desks",{"_index":513,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["informationdesk",{"_index":514,"title":{"interfaces/InformationDesk.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationdesk.municipality",{"_index":1016,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.name",{"_index":1014,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.phone",{"_index":1018,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.postal_code",{"_index":1015,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdeskdetailscomponent",{"_index":113,"title":{"components/InformationDeskDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationdeskpicture",{"_index":1000,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationiconsize",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["informationintro",{"_index":546,"title":{"interfaces/InformationIntro.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationitem",{"_index":547,"title":{"interfaces/InformationItem.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informations.service",{"_index":1392,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["informations.service.ts",{"_index":1327,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["informations.service.ts:14",{"_index":1332,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:18",{"_index":1335,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:27",{"_index":1334,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations/more",{"_index":1326,"title":{},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["inherited",{"_index":750,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["initializeapp",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["initialsize",{"_index":414,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["initialstate",{"_index":415,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["injectable",{"_index":298,"title":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":300,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["inner",{"_index":712,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["input",{"_index":434,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["inputs",{"_index":412,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{}}}],["inside",{"_index":1277,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["install",{"_index":2273,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2265,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2272,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2282,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1122,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["intercept",{"_index":1080,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["intercept(req",{"_index":1082,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["interceptor",{"_index":1077,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1078,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interface",{"_index":467,"title":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["interfaces",{"_index":469,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["internationalization",{"_index":2320,"title":{},"body":{"index.html":{}}}],["interruption",{"_index":2439,"title":{},"body":{"license.html":{}}}],["interval",{"_index":536,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["intervalfilter",{"_index":541,"title":{"interfaces/IntervalFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["intervalfilter(filter",{"_index":632,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["ion",{"_index":1993,"title":{},"body":{"components/TrekMapPage.html":{}}}],["ionic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["ionic/storage",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"dependencies.html":{}}}],["ionic@5.1.0",{"_index":2275,"title":{},"body":{"index.html":{}}}],["ionicmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ionicmodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewdidenter",{"_index":1931,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["ionviewdidleave",{"_index":2018,"title":{},"body":{"components/TreksMapPage.html":{}}}],["ionviewwillenter",{"_index":730,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["ionviewwillleave",{"_index":1574,"title":{},"body":{"components/ProgressComponent.html":{}}}],["ios",{"_index":2214,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["iosandroid",{"_index":2297,"title":{},"body":{"index.html":{}}}],["is_park_centered",{"_index":506,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isalert",{"_index":1827,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["isfilteractive",{"_index":616,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfilteractive(filter",{"_index":634,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfirstcheck",{"_index":2081,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["isininterval",{"_index":668,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isinview",{"_index":2014,"title":{},"body":{"components/TreksMapPage.html":{}}}],["isloading",{"_index":1100,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isloading(id",{"_index":1112,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isoffline",{"_index":572,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isonline",{"_index":721,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["item",{"_index":1347,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{}}}],["item'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["item.module#moreitempagemodule",{"_index":1803,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["item.module.ts",{"_index":1372,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page",{"_index":1375,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page.html",{"_index":1349,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.scss",{"_index":1348,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts",{"_index":1346,"title":{},"body":{"components/MoreItemPage.html":{},"coverage.html":{}}}],["item.page.ts:14",{"_index":1360,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:15",{"_index":1361,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:16",{"_index":1357,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:23",{"_index":1358,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:38",{"_index":1359,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.resolver",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["item.resolver.ts",{"_index":1384,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:15",{"_index":1386,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.resolver.ts:22",{"_index":1389,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.title",{"_index":1399,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item/more",{"_index":1345,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["items",{"_index":416,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/LoaderComponent.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["itemtemplate",{"_index":417,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["j",{"_index":1875,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["js",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(await",{"_index":1676,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(settings",{"_index":1672,"title":{},"body":{"injectables/SettingsService.html":{}}}],["justify",{"_index":1066,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{}}}],["key",{"_index":346,"title":{},"body":{"injectables/CacheService.html":{}}}],["keyboard",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["kilometers",{"_index":897,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["km",{"_index":1878,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["kmtonotify",{"_index":894,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["label",{"_index":1305,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["language",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":382,"title":{},"body":{"injectables/CacheService.html":{}}}],["latest",{"_index":2268,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":527,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["layer",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layer.name",{"_index":1038,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layers",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["layersvisibilitycomponent",{"_index":117,"title":{"components/LayersVisibilityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layervisibilitychange",{"_index":1025,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layervisibilitychange(event",{"_index":1029,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layout",{"_index":1252,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1201,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["legend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["length",{"_index":494,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["letter",{"_index":1997,"title":{},"body":{"components/TrekMapPage.html":{}}}],["liability",{"_index":2442,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2425,"title":{},"body":{"license.html":{}}}],["licence",{"_index":2375,"title":{},"body":{"index.html":{}}}],["license",{"_index":2386,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":2417,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2331,"title":{},"body":{"index.html":{}}}],["line",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lines",{"_index":711,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["linux",{"_index":2299,"title":{},"body":{"index.html":{}}}],["list",{"_index":403,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["list.component",{"_index":1765,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["list.component.html",{"_index":406,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.scss",{"_index":405,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts",{"_index":400,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":425,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:13",{"_index":428,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:14",{"_index":420,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:15",{"_index":422,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:16",{"_index":424,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:17",{"_index":427,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:19",{"_index":431,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:20",{"_index":432,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:21",{"_index":419,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:25",{"_index":429,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:31",{"_index":430,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list/collapsible",{"_index":399,"title":{},"body":{"components/CollapsibleListComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["literal",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/Poi.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicEvent.html":{},"interfaces/Trek.html":{}}}],["loadchildren",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loaded",{"_index":1963,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loader",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["loader.component.html",{"_index":1041,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1040,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.dismiss",{"_index":1853,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loader.present",{"_index":1850,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadercomponent",{"_index":120,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderstatus",{"_index":1042,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["loadimages",{"_index":1209,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loadimages.subscribe",{"_index":1228,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loading",{"_index":1043,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loadingcontroller",{"_index":1815,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadingid",{"_index":1111,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids",{"_index":1093,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids.indexof(id",{"_index":1114,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadinginterceptor",{"_index":172,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"overview.html":{}}}],["loadingservice",{"_index":1047,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["loadsettings",{"_index":1637,"title":{},"body":{"injectables/SettingsService.html":{}}}],["loadtreks",{"_index":1439,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["local",{"_index":2224,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["localnotifications",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["located",{"_index":2341,"title":{},"body":{"index.html":{}}}],["location",{"_index":540,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{}}}],["location.latitude",{"_index":983,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["locationprovider",{"_index":967,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["lodash",{"_index":762,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["lodash.clonedeep",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["longitude",{"_index":528,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["loss",{"_index":2436,"title":{},"body":{"license.html":{}}}],["lot",{"_index":2314,"title":{},"body":{"index.html":{}}}],["macos",{"_index":2296,"title":{},"body":{"index.html":{}}}],["make",{"_index":394,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["makina",{"_index":2380,"title":{},"body":{"index.html":{},"license.html":{}}}],["map",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["map(([treks",{"_index":692,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((ids",{"_index":1097,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["map(checkedvalue",{"_index":682,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(data",{"_index":2054,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map(filters",{"_index":687,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(touristiccontent",{"_index":1731,"title":{},"body":{"injectables/SettingsService.html":{}}}],["map.module#trekmappagemodule",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map.module#treksmappagemodule",{"_index":1800,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["map.module.ts",{"_index":2004,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page",{"_index":2006,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page.html",{"_index":1927,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.scss",{"_index":1926,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts",{"_index":1925,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["map.page.ts:101",{"_index":1939,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:104",{"_index":2023,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:106",{"_index":1944,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:109",{"_index":2030,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:117",{"_index":2031,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:123",{"_index":1941,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:131",{"_index":1938,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:132",{"_index":2027,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:135",{"_index":1945,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:136",{"_index":2026,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:27",{"_index":2034,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:28",{"_index":2032,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:29",{"_index":1949,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:30",{"_index":1948,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:31",{"_index":1955,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:32",{"_index":1950,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:33",{"_index":1956,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:34",{"_index":1947,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:35",{"_index":1953,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:36",{"_index":1951,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:37",{"_index":1946,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:38",{"_index":1935,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:39",{"_index":2021,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:42",{"_index":2033,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:45",{"_index":1954,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:48",{"_index":2035,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:53",{"_index":1936,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:55",{"_index":2029,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:76",{"_index":2028,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:81",{"_index":2024,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:87",{"_index":2022,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map/trek",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["map/treks",{"_index":1799,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["mapbox",{"_index":484,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":1171,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl.accesstoken",{"_index":1175,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.map",{"_index":1196,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.marker",{"_index":1225,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.navigationcontrol",{"_index":1198,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxoptions",{"_index":483,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig",{"_index":579,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig.center",{"_index":1493,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["mapgenerally",{"_index":2329,"title":{},"body":{"index.html":{}}}],["mapisloaded",{"_index":1144,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["mapisloaded(event",{"_index":1937,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mapisloaded(loaded",{"_index":2025,"title":{},"body":{"components/TreksMapPage.html":{}}}],["maptrek.disablenotification",{"_index":936,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.enablenotification",{"_index":935,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptreksvizcomponent",{"_index":122,"title":{"components/MapTreksVizComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maptrekvizcomponent",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":1532,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TreksMapPage.html":{}}}],["marker",{"_index":1164,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["markerposition",{"_index":1137,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["matching",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":2408,"title":{},"body":{"license.html":{}}}],["mauron85",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["mauron85/cordova",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":670,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["maxlocations",{"_index":969,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["maxsize",{"_index":306,"title":{},"body":{"injectables/CacheService.html":{}}}],["maxzoom",{"_index":1232,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":2418,"title":{},"body":{"license.html":{}}}],["mergefilterstreks",{"_index":2015,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap",{"_index":2037,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap((context",{"_index":2055,"title":{},"body":{"components/TreksMapPage.html":{}}}],["message",{"_index":923,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["met",{"_index":2398,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["meterstonotify",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["min",{"_index":673,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TrekCardComponent.html":{}}}],["minimaltrek",{"_index":488,"title":{"interfaces/MinimalTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltrekproperties",{"_index":489,"title":{"interfaces/MinimalTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltreks",{"_index":486,"title":{"interfaces/MinimalTreks.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimum",{"_index":2283,"title":{},"body":{"index.html":{}}}],["minzoom",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2254,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2261,"title":{},"body":{"index.html":{}}}],["mobile.git",{"_index":2280,"title":{},"body":{"index.html":{}}}],["modal",{"_index":1980,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modal.dismiss",{"_index":1982,"title":{},"body":{"components/TrekMapPage.html":{}}}],["modal.ondiddismiss",{"_index":2063,"title":{},"body":{"components/TreksMapPage.html":{}}}],["modal.present",{"_index":1990,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalcontroller",{"_index":734,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalctrl",{"_index":739,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["modalpoidetails",{"_index":1929,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mode",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["modification",{"_index":2394,"title":{},"body":{"license.html":{}}}],["module",{"_index":157,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["modules",{"_index":159,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["more'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["more.page",{"_index":1421,"title":{},"body":{"modules/MorePageModule.html":{}}}],["more.page.html",{"_index":1404,"title":{},"body":{"components/MorePage.html":{}}}],["more.page.scss",{"_index":1403,"title":{},"body":{"components/MorePage.html":{}}}],["more/more",{"_index":1802,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["more/more.module",{"_index":1791,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["more/more.module#morepagemodule",{"_index":1801,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["moreinformationintro.title",{"_index":1415,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsintro",{"_index":1406,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsservice",{"_index":1324,"title":{"injectables/MoreInformationsService.html":{}},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["moreitem",{"_index":1351,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.title",{"_index":1367,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitemid",{"_index":1352,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"modules/TabsPageRoutingModule.html":{}}}],["moreitempage",{"_index":128,"title":{"components/MoreItemPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moreitempagemodule",{"_index":1368,"title":{"modules/MoreItemPageModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreitemresolver",{"_index":191,"title":{"guards/MoreItemResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["morepage",{"_index":131,"title":{"components/MorePage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["morepagemodule",{"_index":1416,"title":{"modules/MorePageModule.html":{}},"body":{"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreresolver",{"_index":194,"title":{"guards/MoreResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["ms",{"_index":361,"title":{},"body":{"injectables/CacheService.html":{}}}],["multi",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["multipoint",{"_index":479,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["municipality",{"_index":529,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["national",{"_index":2383,"title":{},"body":{"index.html":{}}}],["native",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["native/background",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":2181,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":2182,"title":{},"body":{"dependencies.html":{}}}],["native/file/ngx",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["native/firebase",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"dependencies.html":{}}}],["native/globalization",{"_index":2184,"title":{},"body":{"dependencies.html":{}}}],["native/globalization/ngx",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["native/ionic",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/local",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["native/network",{"_index":2185,"title":{},"body":{"dependencies.html":{}}}],["native/network/ngx",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["native/screen",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"dependencies.html":{}}}],["native/social",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/splash",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/zip",{"_index":2190,"title":{},"body":{"dependencies.html":{}}}],["native/zip/ngx",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["navigatetotrek",{"_index":1145,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigatetotrek(id",{"_index":1600,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigation",{"_index":574,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["navigator",{"_index":2099,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.geolocation.getcurrentposition(position",{"_index":2100,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.language.slice(0",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["navparams",{"_index":737,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TreksOrderComponent.html":{}}}],["nb",{"_index":808,"title":{},"body":{"components/FiltersComponent.html":{}}}],["nbtemporaryfilterstreks",{"_index":722,"title":{},"body":{"components/FiltersComponent.html":{}}}],["necessary",{"_index":652,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["need",{"_index":1203,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["negligence",{"_index":2447,"title":{},"body":{"license.html":{}}}],["network",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["networks",{"_index":511,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["new",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["next",{"_index":1084,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{}}}],["ngmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ngonchanges",{"_index":828,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngonchanges(changes",{"_index":844,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngondestroy",{"_index":732,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngoninit",{"_index":410,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["node.js",{"_index":2270,"title":{},"body":{"index.html":{}}}],["none",{"_index":2050,"title":{},"body":{"components/TreksMapPage.html":{}}}],["nonetwork",{"_index":2016,"title":{},"body":{"components/TreksMapPage.html":{}}}],["notice",{"_index":2403,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["notifications",{"_index":815,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["notifications'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["notifications.component",{"_index":1747,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifications.component.html",{"_index":817,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":816,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":813,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications.component.ts:111",{"_index":843,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:115",{"_index":842,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:119",{"_index":840,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:150",{"_index":850,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:31",{"_index":853,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:32",{"_index":852,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:33",{"_index":855,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:34",{"_index":835,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:35",{"_index":836,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:36",{"_index":837,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:37",{"_index":834,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:40",{"_index":856,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:41",{"_index":854,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:42",{"_index":851,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:47",{"_index":849,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:63",{"_index":846,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:74",{"_index":848,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:84",{"_index":838,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.git",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["notifications/geolocate",{"_index":812,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications/ngx",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["notificationsmodeisactive",{"_index":822,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notificationtext",{"_index":952,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notificationtitle",{"_index":964,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notifiedindex",{"_index":899,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notify",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nowrap",{"_index":1893,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["npm",{"_index":2271,"title":{},"body":{"index.html":{}}}],["null",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["numberofactivefilters",{"_index":666,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksMapPage.html":{}}}],["object",{"_index":1299,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.cache).length",{"_index":365,"title":{},"body":{"injectables/CacheService.html":{}}}],["observable",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"interfaces/TreksService.html":{}}}],["observable.create((observer",{"_index":1210,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["observable.pipe(tap",{"_index":395,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer",{"_index":387,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer.complete",{"_index":1218,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["of('connectionerror",{"_index":1401,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["offline",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["offline/:trekid",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offlinemapconfig",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offlinetreks",{"_index":735,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["offlinetreksservice",{"_index":736,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["offset",{"_index":1258,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["onchanges",{"_index":814,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ondestroy",{"_index":718,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["one",{"_index":1915,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["oninit",{"_index":402,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["online",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinebaseurl",{"_index":2286,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["onlinemapconfig",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinetreks",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["onlinetrekserror",{"_index":1428,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["onlinetreksservice",{"_index":28,"title":{"injectables/OnlineTreksService.html":{}},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["onsameurlnavigation",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["opacity",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opensource",{"_index":2376,"title":{},"body":{"index.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["optionnal",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options).pipe",{"_index":372,"title":{},"body":{"injectables/CacheService.html":{}}}],["order",{"_index":539,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["order'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["order.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["order.component.html",{"_index":2079,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.scss",{"_index":2078,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts",{"_index":2077,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:15",{"_index":2089,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:16",{"_index":2088,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:17",{"_index":2084,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:28",{"_index":2085,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:38",{"_index":2087,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.name",{"_index":2104,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.type",{"_index":694,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksOrderComponent.html":{}}}],["order.value",{"_index":695,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["order/treks",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["ordering",{"_index":1668,"title":{},"body":{"injectables/SettingsService.html":{}}}],["orders",{"_index":2082,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["orientation",{"_index":2186,"title":{},"body":{"dependencies.html":{}}}],["orientation/ngx",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["originaltrek",{"_index":577,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["others",{"_index":2357,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":2448,"title":{},"body":{"license.html":{}}}],["out",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outline",{"_index":1242,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":463,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["outputs",{"_index":456,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["overflow",{"_index":1891,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["overlap",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":2459,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2309,"title":{},"body":{"index.html":{}}}],["package",{"_index":2174,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":1491,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{}}}],["pages/tabs/tabs.module#tabspagemodule",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/trek",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paint",{"_index":1247,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["parc",{"_index":2382,"title":{},"body":{"index.html":{}}}],["parking",{"_index":2326,"title":{},"body":{"index.html":{}}}],["parking_location",{"_index":521,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parkingiconsize",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":2420,"title":{},"body":{"license.html":{}}}],["path",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["pathmatch",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["permissions",{"_index":922,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["permitted",{"_index":2395,"title":{},"body":{"license.html":{}}}],["persmissionsconfirm",{"_index":919,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["persmissionsconfirm.present",{"_index":934,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["personal",{"_index":2288,"title":{},"body":{"index.html":{}}}],["phone",{"_index":530,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["photo_url",{"_index":531,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picto",{"_index":1886,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["pictogram",{"_index":544,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picture",{"_index":499,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["picture!.author",{"_index":1523,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture!.legend",{"_index":1522,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture.url",{"_index":1473,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["pictures",{"_index":498,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pipe",{"_index":1120,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["placement",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["platforms",{"_index":2371,"title":{},"body":{"index.html":{}}}],["play",{"_index":2209,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["plugin",{"_index":2195,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["poi",{"_index":136,"title":{"interfaces/Poi.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["poi'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["poi.component.html",{"_index":1496,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.component.scss",{"_index":1495,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.properties.email",{"_index":1526,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.name",{"_index":1524,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0].author",{"_index":1565,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0]?.legend",{"_index":1564,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.website",{"_index":1527,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi_types",{"_index":1561,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poicomponent",{"_index":133,"title":{"components/PoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poidetailscomponent",{"_index":135,"title":{"components/PoiDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poiiconsize",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poiimg",{"_index":1535,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["point",{"_index":480,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["point(feature.coordinates",{"_index":902,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(fromcoordinates",{"_index":898,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(userlocation",{"_index":658,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point).coordinates",{"_index":1287,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count",{"_index":1246,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count_abbreviated",{"_index":1254,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointer",{"_index":1293,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointreferencelayersproperties",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["points",{"_index":1184,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["points_reference",{"_index":524,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pois",{"_index":550,"title":{"interfaces/Pois.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["popover",{"_index":1976,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popover.dismiss",{"_index":1979,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popovercontroller",{"_index":1934,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popoverctrl",{"_index":1933,"title":{},"body":{"components/TrekMapPage.html":{}}}],["position",{"_index":986,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["position.coords.latitude",{"_index":2102,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["position.coords.longitude",{"_index":2101,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["possibility",{"_index":2453,"title":{},"body":{"license.html":{}}}],["postal_code",{"_index":532,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practical_info",{"_index":551,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice",{"_index":493,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practices",{"_index":1138,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.foreach((practice",{"_index":1213,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.length",{"_index":1217,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pratiques",{"_index":1525,"title":{},"body":{"components/PoiComponent.html":{}}}],["presentconfirmfeatures",{"_index":1142,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentconfirmfeatures(features",{"_index":1161,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentdeleteconfirm",{"_index":1813,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentdeleteconfirm(isalert",{"_index":1824,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentfilters",{"_index":2019,"title":{},"body":{"components/TreksMapPage.html":{}}}],["presentinformationdeskdetails",{"_index":1932,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentinformationdeskdetails(informationdesk",{"_index":1940,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentpersmissionsconfirm",{"_index":829,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["presentpoidetails",{"_index":832,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["presentpoidetails(poi",{"_index":1943,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentsearch",{"_index":2020,"title":{},"body":{"components/TreksMapPage.html":{}}}],["prevent",{"_index":1056,"title":{},"body":{"components/LoaderComponent.html":{}}}],["previously",{"_index":2372,"title":{},"body":{"index.html":{}}}],["primary",{"_index":2338,"title":{},"body":{"index.html":{}}}],["primarycolor",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["priority",{"_index":910,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["private",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["proceeding",{"_index":2266,"title":{},"body":{"index.html":{}}}],["procurement",{"_index":2433,"title":{},"body":{"license.html":{}}}],["prod",{"_index":2303,"title":{},"body":{"index.html":{}}}],["production",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":522,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["profits",{"_index":2437,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1076,"title":{},"body":{"components/LoaderComponent.html":{},"components/ProgressComponent.html":{}}}],["progress'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["progress.component.html",{"_index":1572,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progress.component.scss",{"_index":1571,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progressbarwidth",{"_index":1045,"title":{},"body":{"components/LoaderComponent.html":{}}}],["progresscomponent",{"_index":137,"title":{"components/ProgressComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":1942,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["properties",{"_index":302,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["property",{"_index":520,"title":{"interfaces/Property.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["property.values.find(value",{"_index":1696,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyname",{"_index":1652,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyvalue",{"_index":1695,"title":{},"body":{"injectables/SettingsService.html":{}}}],["protected",{"_index":724,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["provide",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2097,"title":{},"body":{"components/TreksOrderComponent.html":{},"index.html":{},"license.html":{}}}],["providedin",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["public",{"_index":304,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["publishreplay",{"_index":340,"title":{},"body":{"injectables/CacheService.html":{}}}],["publishreplay(1",{"_index":384,"title":{},"body":{"injectables/CacheService.html":{}}}],["pulse",{"_index":1224,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["purpose",{"_index":2421,"title":{},"body":{"license.html":{}}}],["radio",{"_index":1304,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["radius",{"_index":1267,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["rando",{"_index":2263,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["raster",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["redistribution",{"_index":2391,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":2399,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1575,"title":{},"body":{"components/ProgressComponent.html":{}}}],["refcount",{"_index":341,"title":{},"body":{"injectables/CacheService.html":{}}}],["refresh",{"_index":1353,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["refreshdelay",{"_index":307,"title":{},"body":{"injectables/CacheService.html":{}}}],["regular",{"_index":1256,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["release",{"_index":2212,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["releaseandroid",{"_index":2304,"title":{},"body":{"index.html":{}}}],["releasecustomization",{"_index":2305,"title":{},"body":{"index.html":{}}}],["reload",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remove",{"_index":2369,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":355,"title":{},"body":{"injectables/CacheService.html":{}}}],["represents",{"_index":2330,"title":{},"body":{"index.html":{}}}],["reproduce",{"_index":2406,"title":{},"body":{"license.html":{}}}],["req",{"_index":1087,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["req.method",{"_index":1116,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.urlwithparams",{"_index":1117,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["request",{"_index":358,"title":{},"body":{"injectables/CacheService.html":{}}}],["requests",{"_index":1914,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["require('@turf/distance').default",{"_index":643,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["require('lodash.clonedeep",{"_index":1463,"title":{},"body":{"injectables/OnlineTreksService.html":{},"miscellaneous/variables.html":{}}}],["require('mapbox",{"_index":1172,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":2284,"title":{},"body":{"index.html":{}}}],["res://ic_stat_panorama",{"_index":865,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["res://icon",{"_index":863,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["reserved",{"_index":2390,"title":{},"body":{"license.html":{}}}],["reset",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":1638,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resize",{"_index":1205,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["resolve",{"_index":1378,"title":{},"body":{"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{}}}],["resolve(route",{"_index":1387,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["resources",{"_index":2356,"title":{},"body":{"index.html":{}}}],["resources/icon.png",{"_index":2342,"title":{},"body":{"index.html":{}}}],["resources/splash.png",{"_index":2346,"title":{},"body":{"index.html":{}}}],["resourcesother",{"_index":2355,"title":{},"body":{"index.html":{}}}],["response",{"_index":357,"title":{},"body":{"injectables/CacheService.html":{}}}],["ressources",{"_index":2321,"title":{},"body":{"index.html":{}}}],["result",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2401,"title":{},"body":{"license.html":{}}}],["retry",{"_index":457,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["return",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["returs",{"_index":1471,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["revoke",{"_index":308,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoked",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking(observable",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{}}}],["rgba(189",{"_index":1072,"title":{},"body":{"components/LoaderComponent.html":{}}}],["right",{"_index":1322,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["rights",{"_index":2389,"title":{},"body":{"license.html":{}}}],["rm",{"_index":2373,"title":{},"body":{"index.html":{}}}],["roboto",{"_index":1255,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":927,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["roughly",{"_index":2350,"title":{},"body":{"index.html":{}}}],["route",{"_index":504,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["route.data['offline",{"_index":1900,"title":{},"body":{"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["route.parammap.get('moreitemid",{"_index":1393,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["route.parammap.get('trekid",{"_index":1899,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["router",{"_index":1356,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["routereusestrategy",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["routerlink",{"_index":1810,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["routermodule",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["routermodule.forchild",{"_index":2110,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":1379,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":279,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2291,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1376,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["rxjs",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":482,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["rxjs/internal/observable/of",{"_index":1424,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/observable/throwerror",{"_index":1425,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/subscription",{"_index":2036,"title":{},"body":{"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["rxjs/operators",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksMapPage.html":{}}}],["savefiltersstate",{"_index":1639,"title":{},"body":{"injectables/SettingsService.html":{}}}],["savefiltersstate(filters",{"_index":1655,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate",{"_index":1640,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate(order",{"_index":1657,"title":{},"body":{"injectables/SettingsService.html":{}}}],["scaley(0",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaley(1",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":2188,"title":{},"body":{"dependencies.html":{}}}],["screen's",{"_index":2348,"title":{},"body":{"index.html":{}}}],["screen/ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["screenorientation",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["screens",{"_index":2344,"title":{},"body":{"index.html":{}}}],["search",{"_index":1592,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["search'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["search(searchvalue",{"_index":1603,"title":{},"body":{"components/SearchComponent.html":{}}}],["search(treks",{"_index":1625,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["search.component.html",{"_index":1594,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1593,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.contentplaceholder",{"_index":1623,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.noresult",{"_index":1622,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.title",{"_index":1620,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcomponent",{"_index":139,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchtreks",{"_index":1597,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchtreksservice",{"_index":1591,"title":{"injectables/SearchTreksService.html":{}},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["searchvalue",{"_index":1605,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["searchvalue.tolowercase",{"_index":1627,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["secondary",{"_index":930,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["sending",{"_index":363,"title":{},"body":{"injectables/CacheService.html":{}}}],["sent",{"_index":377,"title":{},"body":{"injectables/CacheService.html":{}}}],["serverun",{"_index":2290,"title":{},"body":{"index.html":{}}}],["service",{"_index":1095,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.getvalue",{"_index":1101,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.next(isloading",{"_index":1102,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["services",{"_index":2210,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["services.json",{"_index":2364,"title":{},"body":{"index.html":{}}}],["set",{"_index":373,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["setlnglat(coordinates",{"_index":1226,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["setofflinesettings",{"_index":1641,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setting.id",{"_index":1560,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings",{"_index":29,"title":{"interfaces/Settings.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["settings.data",{"_index":1681,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.data.find((data",{"_index":1684,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters",{"_index":1680,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters$.pipe",{"_index":686,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["settings.filters.foreach(filter",{"_index":1682,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.find(setting",{"_index":1559,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings.json",{"_index":1688,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":30,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["settingssub",{"_index":1536,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["setup",{"_index":2295,"title":{},"body":{"index.html":{}}}],["shall",{"_index":2423,"title":{},"body":{"license.html":{}}}],["sharedmodule",{"_index":1741,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedtreksmodule",{"_index":1750,"title":{"modules/SharedTreksModule.html":{}},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shareduimodule",{"_index":171,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharing",{"_index":2187,"title":{},"body":{"dependencies.html":{}}}],["sharing/ngx",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["showalldata",{"_index":1814,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["showalllabel",{"_index":418,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["showappsettings",{"_index":940,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["showcompass",{"_index":1199,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["showlocationsettings",{"_index":941,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["simplechange",{"_index":857,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["simplechanges",{"_index":845,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["size",{"_index":464,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["slug",{"_index":523,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["smallicon",{"_index":864,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["socialsharing",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["software",{"_index":2410,"title":{},"body":{"license.html":{}}}],["sort",{"_index":617,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(filteredtreks",{"_index":636,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sound",{"_index":861,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sources",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":1884,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["spacing",{"_index":1998,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":2429,"title":{},"body":{"license.html":{}}}],["splash",{"_index":2343,"title":{},"body":{"index.html":{}}}],["splashscreen",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["sqlite",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["square",{"_index":2353,"title":{},"body":{"index.html":{}}}],["src",{"_index":1469,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["src/.../animations.ts",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../geolocate",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":2466,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../map",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../offline",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../online",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unsubscribe.ts",{"_index":2257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../variables.ts",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts",{"_index":2123,"title":{},"body":{"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts:11",{"_index":2126,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:17",{"_index":2125,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:5",{"_index":2124,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/animations.ts",{"_index":2138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/collapsible",{"_index":398,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["src/app/components/connect",{"_index":446,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/filter",{"_index":696,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts",{"_index":583,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts:14",{"_index":590,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:15",{"_index":589,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:16",{"_index":591,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:18",{"_index":588,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:23",{"_index":592,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:32",{"_index":594,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filters/filters.component.ts",{"_index":716,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/components/filters/filters.component.ts:19",{"_index":758,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:20",{"_index":755,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:21",{"_index":754,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:22",{"_index":753,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:23",{"_index":738,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:26",{"_index":756,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:35",{"_index":747,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:39",{"_index":746,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:64",{"_index":744,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:72",{"_index":740,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:77",{"_index":742,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:86",{"_index":741,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:90",{"_index":749,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/geolocate",{"_index":811,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/information",{"_index":994,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/layers",{"_index":1019,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":1039,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:12",{"_index":1051,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":1049,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:14",{"_index":1053,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":1048,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:17",{"_index":1054,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:22",{"_index":1052,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/map",{"_index":1131,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/poi",{"_index":1534,"title":{},"body":{"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts",{"_index":1494,"title":{},"body":{"components/PoiComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts:13",{"_index":1503,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:14",{"_index":1502,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:15",{"_index":1501,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:16",{"_index":1504,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:18",{"_index":1506,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:19",{"_index":1508,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:20",{"_index":1500,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:22",{"_index":1507,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:24",{"_index":1505,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/progress/progress.component.ts",{"_index":1568,"title":{},"body":{"components/ProgressComponent.html":{},"coverage.html":{}}}],["src/app/components/progress/progress.component.ts:12",{"_index":1580,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:13",{"_index":1577,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:15",{"_index":1581,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:17",{"_index":1578,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:24",{"_index":1579,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/search/search.component.ts",{"_index":1590,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:18",{"_index":1609,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:19",{"_index":1608,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:20",{"_index":1598,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:33",{"_index":1602,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:48",{"_index":1599,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:52",{"_index":1604,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:61",{"_index":1601,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:65",{"_index":1607,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/trek",{"_index":1804,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["src/app/components/treks",{"_index":2076,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces.ts",{"_index":470,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/interfaces.ts:248",{"_index":2116,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:249",{"_index":2113,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:250",{"_index":2114,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:251",{"_index":2115,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:252",{"_index":2121,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:253",{"_index":2117,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:254",{"_index":2118,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:255",{"_index":2120,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:256",{"_index":2119,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:257",{"_index":2112,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:258",{"_index":2111,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/pages/more/more",{"_index":1344,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"coverage.html":{}}}],["src/app/pages/more/more.module.ts",{"_index":1420,"title":{},"body":{"modules/MorePageModule.html":{}}}],["src/app/pages/more/more.page.ts",{"_index":1402,"title":{},"body":{"components/MorePage.html":{},"coverage.html":{}}}],["src/app/pages/more/more.page.ts:14",{"_index":1412,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:15",{"_index":1411,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:16",{"_index":1407,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:22",{"_index":1408,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:37",{"_index":1409,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/tabs/tabs.module.ts",{"_index":1787,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/pages/tabs/tabs.page.ts",{"_index":1769,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/pages/tabs/tabs.page.ts:10",{"_index":1773,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/pages/tabs/tabs.routing.module.ts",{"_index":1792,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/pages/trek",{"_index":1921,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks",{"_index":2013,"title":{},"body":{"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks/treks.module.ts",{"_index":2108,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["src/app/pages/treks/treks.page.ts",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["src/app/resolvers/more",{"_index":1383,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts",{"_index":1422,"title":{},"body":{"guards/MoreResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts:15",{"_index":1423,"title":{},"body":{"guards/MoreResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts",{"_index":1895,"title":{},"body":{"guards/TrekContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/trek.resolver.ts:26",{"_index":1896,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts:37",{"_index":1897,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts",{"_index":2007,"title":{},"body":{"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/treks.resolver.ts:13",{"_index":2009,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts:21",{"_index":2010,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/services/cache/cache.service.ts",{"_index":301,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/app/services/cache/cache.service.ts:12",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:13",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:14",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:15",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:16",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:38",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:72",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/filter",{"_index":607,"title":{},"body":{"injectables/FilterTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/geolocate/geolocate.service.ts",{"_index":937,"title":{},"body":{"injectables/GeolocateService.html":{},"coverage.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:18",{"_index":945,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:21",{"_index":954,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:22",{"_index":956,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:26",{"_index":946,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:31",{"_index":947,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:36",{"_index":951,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:68",{"_index":953,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:76",{"_index":948,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:80",{"_index":949,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/loading/loading.service.ts",{"_index":1079,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading/loading.service.ts:12",{"_index":1130,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:14",{"_index":1126,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:28",{"_index":1127,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:34",{"_index":1128,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:44",{"_index":1129,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:53",{"_index":1081,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/loading/loading.service.ts:57",{"_index":1086,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/more",{"_index":1325,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["src/app/services/offline",{"_index":2165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/online",{"_index":1427,"title":{},"body":{"injectables/OnlineTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/search",{"_index":1624,"title":{},"body":{"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts",{"_index":1630,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts:107",{"_index":1651,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:128",{"_index":1646,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:190",{"_index":1649,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:28",{"_index":1661,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:30",{"_index":1662,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:31",{"_index":1664,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:36",{"_index":1666,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:37",{"_index":1642,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:39",{"_index":1663,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:41",{"_index":1653,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:51",{"_index":1660,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:59",{"_index":1644,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:78",{"_index":1647,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:87",{"_index":1656,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:91",{"_index":1659,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:95",{"_index":1654,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/shared",{"_index":1754,"title":{},"body":{"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1745,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/assets/i18n",{"_index":2319,"title":{},"body":{"index.html":{}}}],["src/assets/map/icons",{"_index":2324,"title":{},"body":{"index.html":{}}}],["src/assets/map/zone/zone.geojson",{"_index":2327,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environments.prod.ts",{"_index":2301,"title":{},"body":{"index.html":{}}}],["src/environments/environments.ts",{"_index":2287,"title":{},"body":{"index.html":{}}}],["src/environments/variables.ts",{"_index":2170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/theme/variables.scss",{"_index":2334,"title":{},"body":{"index.html":{}}}],["start",{"_index":1888,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["started",{"_index":2259,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startersrc/environments/environment.ts",{"_index":2312,"title":{},"body":{"index.html":{}}}],["startforeground",{"_index":971,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startlocation",{"_index":977,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.latitude",{"_index":980,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.longitude",{"_index":2096,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["starttracking",{"_index":942,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["starttracking(notificationtext",{"_index":950,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["state",{"_index":1092,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["statements",{"_index":2134,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":611,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["stationaryradius",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":960,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TreksMapPage.html":{}}}],["status.authorization",{"_index":962,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["status.isrunning",{"_index":963,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["statusbar",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["stoponterminate",{"_index":972,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoptracking",{"_index":943,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["storage",{"_index":1631,"title":{},"body":{"injectables/SettingsService.html":{},"dependencies.html":{}}}],["store",{"_index":2363,"title":{},"body":{"index.html":{}}}],["stores",{"_index":380,"title":{},"body":{"injectables/CacheService.html":{}}}],["street",{"_index":533,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["strict",{"_index":2445,"title":{},"body":{"license.html":{}}}],["string",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":397,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["styleurls",{"_index":404,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["subscribe(([filteredtreks",{"_index":2058,"title":{},"body":{"components/TreksMapPage.html":{}}}],["subscribe((isloading",{"_index":1099,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["subscribe(async",{"_index":918,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["subscribed",{"_index":391,"title":{},"body":{"injectables/CacheService.html":{}}}],["subscription",{"_index":759,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["subscription.unsubscribe",{"_index":2130,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["subscriptions",{"_index":725,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["substitute",{"_index":2434,"title":{},"body":{"license.html":{}}}],["such",{"_index":2454,"title":{},"body":{"license.html":{}}}],["super",{"_index":767,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["super.ngondestroy",{"_index":1189,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["super.ngoninit",{"_index":768,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["support",{"_index":2239,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":2267,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2456,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1250,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{}}}],["tabbar.more",{"_index":1780,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.offline",{"_index":1779,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.treks",{"_index":1778,"title":{},"body":{"components/TabsPage.html":{}}}],["table",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1770,"title":{},"body":{"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs'},{'name",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["tabs.page",{"_index":1788,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":1772,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":1771,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.routing.module",{"_index":1789,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabspage",{"_index":141,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":1781,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tabspageroutingmodule",{"_index":1785,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":342,"title":{},"body":{"injectables/CacheService.html":{}}}],["take(1",{"_index":389,"title":{},"body":{"injectables/CacheService.html":{}}}],["tap",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["tap((event",{"_index":1121,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["tap(item",{"_index":1395,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["tempfilter.id",{"_index":789,"title":{},"body":{"components/FiltersComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["templateref",{"_index":426,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["temporaryfilter",{"_index":787,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilter.values.find(tempvalue",{"_index":791,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters",{"_index":723,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters).length",{"_index":785,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.find(tempfilter",{"_index":788,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.foreach(filter",{"_index":798,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue.id",{"_index":792,"title":{},"body":{"components/FiltersComponent.html":{}}}],["text",{"_index":906,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":1723,"title":{},"body":{"injectables/SettingsService.html":{}}}],["themes",{"_index":474,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["theory",{"_index":2441,"title":{},"body":{"license.html":{}}}],["this.activefiltersnumber",{"_index":685,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.addsourceslayersevents",{"_index":1229,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.alertcontroller.create",{"_index":920,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.alwaysdisplayeditems",{"_index":440,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.backgroundgeolocation.checkstatus",{"_index":961,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.configure(geolocationconfig",{"_index":975,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.getcurrentlocation",{"_index":978,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.location).subscribe(location",{"_index":981,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.start).subscribe(async",{"_index":976,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showappsettings",{"_index":992,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showlocationsettings",{"_index":993,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.start",{"_index":984,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.stop",{"_index":990,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.baseurl}${this.informationdesk.picture",{"_index":1013,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.cache",{"_index":348,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/pois.geojson",{"_index":1482,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_contents.geojson",{"_index":1483,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_events.geojson",{"_index":1484,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/trek.geojson",{"_index":1481,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages.json",{"_index":1342,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages/${id}.json",{"_index":1343,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.hasownproperty(url",{"_index":364,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[revoked",{"_index":351,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[url",{"_index":370,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.changelayervisibility",{"_index":1032,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.changelayervisibility(event.detail.checked",{"_index":1036,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.checktonotify(coordinates",{"_index":892,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications",{"_index":866,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications$.unsubscribe",{"_index":880,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.close",{"_index":778,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.commonsrc",{"_index":773,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.connectionerror",{"_index":1364,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.createmap",{"_index":1180,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.currentorder",{"_index":2093,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.currentpois",{"_index":1967,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.currentpois.features.find(feature",{"_index":868,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpois.features.map(feature",{"_index":877,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify",{"_index":876,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.findindex",{"_index":900,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.splice(notifiedindex",{"_index":911,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex",{"_index":913,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].id",{"_index":904,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].name",{"_index":907,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition",{"_index":881,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition$.next([0",{"_index":991,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([0.705824",{"_index":988,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([location.longitude",{"_index":982,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([startlocation.longitude",{"_index":979,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.unsubscribe",{"_index":893,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentprogress",{"_index":1583,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentprogress$.unsubscribe",{"_index":1587,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentsearchvalue",{"_index":1616,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currenttrek",{"_index":1965,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.data$.getvalue",{"_index":1693,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(defaultsettings.data",{"_index":1679,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(settings.data",{"_index":1674,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.datasettings.find(data",{"_index":1211,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.deletetrek",{"_index":1863,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.disablegeolocationnotification",{"_index":882,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.enablegeolocationnotification",{"_index":889,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.expandableitems",{"_index":443,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.expanded",{"_index":438,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{}}}],["this.filter.values.slice(4).foreach((value",{"_index":596,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.filteredtreks",{"_index":1185,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["this.filters",{"_index":780,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters$.next(filters",{"_index":1689,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(defaultsettings",{"_index":1678,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(settings",{"_index":1673,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filtertreks.activefiltersnumber",{"_index":2057,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.filtertreks.getfilteredtreks(this.treks",{"_index":1464,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.firebaseanalytics.setcurrentscreen(`${(route.component",{"_index":1397,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.geolocate.checkauthorization",{"_index":884,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.checkiftrackerisrunning",{"_index":886,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.currentposition$.getvalue",{"_index":1314,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.currentposition$.subscribe(coordinates",{"_index":891,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.geolocate.showappsettings",{"_index":933,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.starttracking",{"_index":1230,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.starttracking(this.trekname",{"_index":887,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.stoptracking",{"_index":1188,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.getsettings().subscribe(async",{"_index":1670,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettreks().subscribe",{"_index":1466,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.getvalueforpropertybyid",{"_index":1700,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('cities",{"_index":1715,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('networks",{"_index":1719,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('practice",{"_index":1703,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('route",{"_index":1706,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('themes",{"_index":1724,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('touristiccontent_categories",{"_index":1736,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.globalization.getpreferredlanguage()).value.slice(0",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hits",{"_index":349,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[revoked",{"_index":352,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[url",{"_index":378,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.http.get(`${this.apiurl}/treks.geojson",{"_index":1480,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.http.get(this.apiurl",{"_index":1687,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.http.get(url",{"_index":371,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hydratedtrek",{"_index":1834,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice.pictogram",{"_index":1839,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgpracticesrc",{"_index":1838,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgsrc",{"_index":1836,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.informationdesk",{"_index":1009,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdesk.picture",{"_index":1011,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdeskpicture",{"_index":1012,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.initializeapp",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initialsize",{"_index":442,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.initialstate",{"_index":439,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.isfirstcheck",{"_index":2094,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.isinview",{"_index":2060,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.isonline",{"_index":769,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.items.length",{"_index":445,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(0",{"_index":441,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(this.initialsize",{"_index":444,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.layers",{"_index":1034,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.loaderstatus",{"_index":1059,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loaderstatus$.unsubscribe",{"_index":1061,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loading.begin('trek",{"_index":1957,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.begin('treks",{"_index":2039,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.begin(loadingid",{"_index":1118,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.finish",{"_index":1912,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.loading.finish('trek",{"_index":1960,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.finish('treks",{"_index":2066,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.finish(loadingid",{"_index":1123,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.status.pipe(delay(0)).subscribe(status",{"_index":1060,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loadingcontroller.create",{"_index":1848,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.loadingids.getvalue",{"_index":1105,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next",{"_index":1109,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next(ids",{"_index":1107,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe",{"_index":1096,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe(map((loadingids",{"_index":1113,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.localnotifications.haspermission",{"_index":888,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.on('click').subscribe",{"_index":867,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.requestpermission",{"_index":890,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.schedule",{"_index":903,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.setdefaults",{"_index":859,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.location.back",{"_index":1777,"title":{},"body":{"components/TabsPage.html":{},"components/TrekMapPage.html":{}}}],["this.map",{"_index":1181,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addcontrol(new",{"_index":1197,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addimage(practice.id.tostring",{"_index":1216,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addlayer",{"_index":1239,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('treks",{"_index":1231,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('zone",{"_index":1237,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.easeto",{"_index":1288,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.flyto",{"_index":1315,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getcanvas().style.cursor",{"_index":1292,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getsource('treks",{"_index":1183,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getzoom",{"_index":1276,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.loadimage(`${this.commonsrc}${practice.pictogram",{"_index":1214,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('click",{"_index":1269,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('load",{"_index":1208,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseenter",{"_index":1291,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseleave",{"_index":1294,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.queryrenderedfeatures(e.point",{"_index":1271,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.remove",{"_index":1187,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.resize",{"_index":1207,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig",{"_index":1190,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.mapconfig.maxzoom",{"_index":1233,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig.style",{"_index":1191,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapisloaded(false",{"_index":2051,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.mapisloaded.emit(true",{"_index":1297,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition",{"_index":1219,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.addto(this.map",{"_index":1227,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.setlnglat(coordinates",{"_index":1220,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.maxsize",{"_index":366,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.mergefilterstreks",{"_index":2052,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.modalcontroller.create",{"_index":1986,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.modalcontroller.gettop",{"_index":1981,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalctrl.dismiss",{"_index":800,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(id",{"_index":1618,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(true",{"_index":797,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.modalpoidetails",{"_index":1984,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.dismiss",{"_index":1985,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.ondiddismiss().then",{"_index":1988,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.present",{"_index":1989,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.more.getmoreitembyid(moreitemid).pipe",{"_index":1394,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["this.more.getmoreitems().pipe",{"_index":1426,"title":{},"body":{"guards/MoreResolver.html":{}}}],["this.moreinformationsintro",{"_index":1414,"title":{},"body":{"components/MorePage.html":{}}}],["this.moreitem",{"_index":1365,"title":{},"body":{"components/MoreItemPage.html":{}}}],["this.navigatetotrek(data",{"_index":2064,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.navigatetotrek.emit(feature.properties.id",{"_index":1296,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navigatetotrek.emit(featureid",{"_index":1312,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navparams.get('changelayervisibility",{"_index":1033,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('commonsrc",{"_index":1553,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('informationdesk",{"_index":1010,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.navparams.get('isonline",{"_index":770,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.navparams.get('layers",{"_index":1035,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('offline",{"_index":1552,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('orders",{"_index":2091,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.navparams.get('poi",{"_index":1551,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.nbtemporaryfilterstreks",{"_index":783,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.network.type",{"_index":2049,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.nonetwork",{"_index":2048,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.notificationsmodeisactive",{"_index":883,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.numberofactivefilters",{"_index":2059,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.offline",{"_index":1192,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.offlinetreks",{"_index":1613,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.offlinetreks.currentprogressdownload$.subscribe(val",{"_index":1584,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.offlinetreks.getcommonimgsrc",{"_index":775,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc",{"_index":1520,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc(this.trek",{"_index":1837,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.removetrek(this.trek.properties.id",{"_index":1851,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.treks",{"_index":772,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks",{"_index":1612,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.onlinetreks.getcommonimgsrc",{"_index":774,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc",{"_index":1521,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc(this.trek",{"_index":1840,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.onlinetreks.loadtreks",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onlinetreks.onlinetrekserror$.subscribe(error",{"_index":2047,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.onlinetreks.treks",{"_index":771,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetrekserror$.next(error",{"_index":1468,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.onlinetrekserror$.next(null",{"_index":1465,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.order$.next",{"_index":1690,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.orders",{"_index":2090,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.picture",{"_index":1518,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(9999",{"_index":1774,"title":{},"body":{"components/TabsPage.html":{}}}],["this.platform.backbutton.subscribewithpriority(99999",{"_index":777,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["this.platform.is('android",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.is('ios",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.ready().then(async",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.poi",{"_index":1550,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties",{"_index":1554,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures",{"_index":1555,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures.length",{"_index":1517,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0",{"_index":1519,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0].url",{"_index":1556,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.type",{"_index":1511,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.popoverctrl.gettop",{"_index":1978,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.practices",{"_index":1212,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.practices.values.foreach(practice",{"_index":1263,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentconfirmfeatures(featuresincluster",{"_index":1283,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentdeleteconfirm",{"_index":1845,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentpersmissionsconfirm",{"_index":885,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.presentpoidetails.emit(poi",{"_index":871,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.ref.detectchanges",{"_index":1586,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.refreshdelay",{"_index":360,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit",{"_index":369,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit(revoked",{"_index":396,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.subscribe((revoked",{"_index":347,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.route.data.pipe",{"_index":2053,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.route.data.subscribe",{"_index":1958,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.route.data.subscribe((data",{"_index":1362,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["this.route.data.subscribe(data",{"_index":2040,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.router.navigate",{"_index":1905,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.router.navigate([this.router.url",{"_index":1366,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.trekstool.gettrekdetailsurl(id",{"_index":2065,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.router.url",{"_index":1775,"title":{},"body":{"components/TabsPage.html":{}}}],["this.routerlink",{"_index":1841,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.savefiltersstate(filters",{"_index":1692,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.screenorientation.onchange().subscribe",{"_index":1202,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.searchtreks.search(this.treks.features",{"_index":1617,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setofflinesettings",{"_index":1669,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settings.data$.subscribe(settings",{"_index":1558,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settings.filters",{"_index":690,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.filters$.subscribe(filters",{"_index":779,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.gethydratedtrek(this.trek",{"_index":1835,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.settings.loadsettings",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.settings.order$).pipe",{"_index":691,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.order$.subscribe(order",{"_index":2092,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.savefiltersstate(this.temporaryfilters$.getvalue",{"_index":796,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.saveorderstate('default",{"_index":2098,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.saveorderstate(event.detail.value",{"_index":2095,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settingsservice.gethydratedtrek(trek",{"_index":1909,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingsservice.gettouristiccategorieswithfeatures",{"_index":1911,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingssub",{"_index":1557,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settingssub.unsubscribe",{"_index":1563,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.splashscreen.hide",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status.subscribe",{"_index":1103,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.statusbar.stylelightcontent",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get(`settings",{"_index":1677,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.set('settings",{"_index":1671,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.subscriptions",{"_index":2127,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.foreach((subscription",{"_index":2128,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.push",{"_index":776,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.subscriptions$$.push(this.mergefilterstreks",{"_index":2061,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.temporaryfilters$).subscribe",{"_index":782,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(filters",{"_index":781,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(temporaryfilters",{"_index":795,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.touristiccategorieswithfeatures",{"_index":1969,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.translate",{"_index":914,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.translate.get('geolocate.notificationtitle').topromise",{"_index":965,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.translate.get('maptreks.treksalert').subscribe(async",{"_index":1306,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.translate.get('trekcard').topromise",{"_index":1847,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.translate.getdefaultlang",{"_index":1341,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["this.translate.setdefaultlang(defaultlanguage",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.treks",{"_index":1615,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treks$.getvalue",{"_index":1485,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks$.next(data",{"_index":1467,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.trekstool",{"_index":2041,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.getcommonimgsrc",{"_index":2046,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.gettreksurl",{"_index":2044,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.treksurl",{"_index":2043,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekurl",{"_index":1973,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.typeimgsrc",{"_index":1515,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.typepois",{"_index":1510,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.typepois.values.find(typepoi",{"_index":1513,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.valuechange.emit",{"_index":601,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["throw",{"_index":1282,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throwerror",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["throwerror(error",{"_index":393,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["thumbnail",{"_index":519,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["tiles",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiles/{z}/{x}/{y}.png",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tilesize",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":375,"title":{},"body":{"injectables/CacheService.html":{}}}],["title",{"_index":455,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["todo",{"_index":367,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["toggleexpandables",{"_index":411,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["toolbar.filters",{"_index":2067,"title":{},"body":{"components/TreksMapPage.html":{}}}],["toolbar.ordertitle",{"_index":2103,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["toolbar.search",{"_index":2068,"title":{},"body":{"components/TreksMapPage.html":{}}}],["top",{"_index":1200,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{}}}],["topo",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2446,"title":{},"body":{"license.html":{}}}],["touristiccategorie",{"_index":556,"title":{"interfaces/TouristicCategorie.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccategorieswithfeatures",{"_index":580,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["touristiccategorieswithfeatures.push",{"_index":1738,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccategorywithfeatures",{"_index":557,"title":{"interfaces/TouristicCategoryWithFeatures.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontent",{"_index":554,"title":{"interfaces/TouristicContent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["touristiccontent.properties.category",{"_index":1732,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontentlayersproperties",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontents",{"_index":553,"title":{"interfaces/TouristicContents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontents.features",{"_index":1730,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontents.features.filter",{"_index":1740,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristicevent",{"_index":559,"title":{"interfaces/TouristicEvent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristicevents",{"_index":558,"title":{"interfaces/TouristicEvents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trackfilters",{"_index":731,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters(index",{"_index":748,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tracktrek",{"_index":1596,"title":{},"body":{"components/SearchComponent.html":{}}}],["tracktrek(index",{"_index":1606,"title":{},"body":{"components/SearchComponent.html":{}}}],["trad",{"_index":905,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["trad.cancelbutton",{"_index":1309,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad.confirmbutton",{"_index":1310,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad.title",{"_index":1308,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad['geolocate.asklocatepermission",{"_index":924,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.cancel",{"_index":926,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.open",{"_index":931,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["transform",{"_index":2070,"title":{},"body":{"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":603,"title":{},"body":{"components/FilterComponent.html":{}}}],["transition(':enter",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translate",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["translate/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forchild",{"_index":1380,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forroot",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["translateparams",{"_index":807,"title":{},"body":{"components/FiltersComponent.html":{}}}],["translateservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{}}}],["translationtrekcard",{"_index":1846,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.askdelete",{"_index":1859,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.cancelbutton",{"_index":1861,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.confirmbutton",{"_index":1860,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletelabel",{"_index":1862,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletetitle",{"_index":1858,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletioninprogress",{"_index":1849,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.errorwhiledeleting",{"_index":1856,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.trekisdelete",{"_index":1855,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trash",{"_index":1879,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["trek",{"_index":127,"title":{"interfaces/Trek.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trek.bbox",{"_index":1489,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.details.contact",{"_index":1567,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.details.informationdesk.website",{"_index":1017,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["trek.details.usefulinformation",{"_index":1566,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.downloadalert.loading",{"_index":1588,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.downloadalert.storage",{"_index":1589,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.features.find(feature",{"_index":1486,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.arrival_city",{"_index":1709,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities",{"_index":1711,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities.map",{"_index":1713,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.departure_city",{"_index":1707,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.difficulty",{"_index":1698,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.first_picture",{"_index":1472,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.first_picture.url",{"_index":1474,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.information_desks",{"_index":1725,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.name",{"_index":1621,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{}}}],["trek.properties.name.tolowercase().includes(searchvalue",{"_index":1629,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["trek.properties.networks",{"_index":1716,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.networks.map",{"_index":1718,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.practice",{"_index":1701,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.route",{"_index":1704,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes",{"_index":1720,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes.map",{"_index":1722,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trekarrowlayerproperties",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekcardcomponent",{"_index":143,"title":{"components/TrekCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekcontext",{"_index":576,"title":{"interfaces/TrekContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekcontextresolver",{"_index":206,"title":{"guards/TrekContextResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["trekdetailspage",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekdetailspagemodule",{"_index":1917,"title":{"modules/TrekDetailsPageModule.html":{}},"body":{"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekid",{"_index":1445,"title":{},"body":{"injectables/OnlineTreksService.html":{},"guards/TrekContextResolver.html":{},"interfaces/TreksService.html":{}}}],["treklinelayerproperties",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekmappage",{"_index":146,"title":{"components/TrekMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekmappagemodule",{"_index":2000,"title":{"modules/TrekMapPageModule.html":{}},"body":{"modules/TrekMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekname",{"_index":831,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trekproperties",{"_index":497,"title":{"interfaces/TrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekremoved",{"_index":1854,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.departure",{"_index":1866,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks.features",{"_index":645,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.filter(trek",{"_index":1628,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.module",{"_index":1923,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{}}}],["treks.module.ts",{"_index":1755,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["treks.page",{"_index":2109,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["treks.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["treks.service.ts",{"_index":609,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.service.ts:101",{"_index":621,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:102",{"_index":1447,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:111",{"_index":1449,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:113",{"_index":625,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:117",{"_index":627,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:120",{"_index":1451,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:121",{"_index":619,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:129",{"_index":629,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:138",{"_index":1443,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:15",{"_index":639,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:17",{"_index":623,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:27",{"_index":1461,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:28",{"_index":1459,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:30",{"_index":1462,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:31",{"_index":1460,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:32",{"_index":1441,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:43",{"_index":1458,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:45",{"_index":638,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:56",{"_index":1455,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:63",{"_index":1442,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:67",{"_index":1457,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:71",{"_index":1454,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:75",{"_index":635,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:79",{"_index":631,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:83",{"_index":1456,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:89",{"_index":633,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:9",{"_index":1626,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.service.ts:93",{"_index":1453,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks/filter",{"_index":608,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/offline",{"_index":766,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/online",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/search",{"_index":1611,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["treks/treks.module",{"_index":1790,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["treks/treks.page",{"_index":1793,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["treksbystep",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekscontext",{"_index":582,"title":{"interfaces/TreksContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekscontextresolver",{"_index":208,"title":{"guards/TreksContextResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["treksmappage",{"_index":148,"title":{"components/TreksMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treksmappagemodule",{"_index":2072,"title":{"modules/TreksMapPageModule.html":{}},"body":{"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksorderchange",{"_index":2083,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksorderchange(event",{"_index":2086,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksordercomponent",{"_index":149,"title":{"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekspage",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["trekspagemodule",{"_index":1786,"title":{"modules/TreksPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksservice",{"_index":560,"title":{"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treksservice.getcommonimgsrc",{"_index":1910,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getmapconfigfortrekbyid(trek",{"_index":1908,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getpoisfortrekbyid(trekid",{"_index":1902,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiccontentsfortrekbyid(trekid",{"_index":1903,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiceventsfortrekbyid(trekid",{"_index":1904,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(trekid",{"_index":1901,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["trekssource",{"_index":1182,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekssource.setdata",{"_index":1186,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekstool",{"_index":578,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["trekstool.treks$.subscribe(treks",{"_index":1614,"title":{},"body":{"components/SearchComponent.html":{}}}],["treksurl",{"_index":2017,"title":{},"body":{"components/TreksMapPage.html":{}}}],["trekurl",{"_index":1930,"title":{},"body":{"components/TrekMapPage.html":{}}}],["trekzoom",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('expandcollapse",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true).subscribe(trekremoved",{"_index":1852,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["try",{"_index":1977,"title":{},"body":{"components/TrekMapPage.html":{}}}],["ts",{"_index":653,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["turf/distance",{"_index":2199,"title":{},"body":{"dependencies.html":{}}}],["turf/helpers",{"_index":641,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["two",{"_index":1913,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2464,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeimgsrc",{"_index":1497,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepoi.id",{"_index":1514,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois",{"_index":1498,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois.values.find(typepoi",{"_index":1562,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["types/lodash.clonedeep",{"_index":2202,"title":{},"body":{"dependencies.html":{}}}],["types/mapbox",{"_index":2204,"title":{},"body":{"dependencies.html":{}}}],["ui.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ui.module.ts",{"_index":1763,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":675,"title":{},"body":{"injectables/FilterTreksService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"injectables/SettingsService.html":{}}}],["units",{"_index":896,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["unsubscribe",{"_index":717,"title":{"classes/UnSubscribe.html":{}},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(subscription",{"_index":2129,"title":{},"body":{"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(this.mergefilterstreks",{"_index":2062,"title":{},"body":{"components/TreksMapPage.html":{}}}],["unsubscribe:11",{"_index":752,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:17",{"_index":751,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:5",{"_index":760,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["uppercase",{"_index":803,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["url",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":475,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["use",{"_index":2317,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1667,"title":{},"body":{"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["usedthe",{"_index":2336,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["usefirebase",{"_index":2367,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userlocation",{"_index":637,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["val",{"_index":1585,"title":{},"body":{"components/ProgressComponent.html":{}}}],["value",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["value'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["value.checked",{"_index":600,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.checked).length",{"_index":665,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.checked).map(checkedvalue",{"_index":677,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.component",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["value.component.html",{"_index":699,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.scss",{"_index":698,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts",{"_index":697,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["value.component.ts:10",{"_index":703,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:11",{"_index":702,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:12",{"_index":701,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:16",{"_index":704,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:19",{"_index":707,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.id",{"_index":793,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.interval",{"_index":681,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.name",{"_index":710,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value/filter",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/FilterValueComponent.html":{},"coverage.html":{}}}],["valuechange",{"_index":587,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["valuechanged",{"_index":586,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuechanged(undefined",{"_index":593,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuecheckchanged",{"_index":700,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["valuecheckchanged($event",{"_index":705,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["values",{"_index":537,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["var",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["variable",{"_index":2139,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2467,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2269,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vibrate",{"_index":860,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["visibility",{"_index":1021,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["visibility.component",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["visibility.component.html",{"_index":1023,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.scss",{"_index":1022,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts",{"_index":1020,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["visibility.component.ts:10",{"_index":1031,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:11",{"_index":1027,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:15",{"_index":1028,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:20",{"_index":1030,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility/layers",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["viz",{"_index":1134,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["viz.component",{"_index":1749,"title":{},"body":{"modules/SharedModule.html":{}}}],["viz.component.html",{"_index":1136,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.scss",{"_index":1135,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts",{"_index":1133,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viz.component.ts:149",{"_index":1154,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:300",{"_index":1162,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:31",{"_index":1163,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:32",{"_index":1165,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:33",{"_index":1166,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:339",{"_index":1156,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:35",{"_index":1150,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:36",{"_index":1151,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:37",{"_index":1149,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:38",{"_index":1148,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:39",{"_index":1152,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:41",{"_index":1153,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:42",{"_index":1147,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:57",{"_index":1159,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:74",{"_index":1160,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:84",{"_index":1155,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz/map",{"_index":1132,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["warranties",{"_index":2415,"title":{},"body":{"license.html":{}}}],["way",{"_index":2450,"title":{},"body":{"license.html":{}}}],["website",{"_index":534,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["webview",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["webview/ngx",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["weight",{"_index":1995,"title":{},"body":{"components/TrekMapPage.html":{}}}],["whether",{"_index":2443,"title":{},"body":{"license.html":{}}}],["white",{"_index":1892,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["whitelist",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":714,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["window.settimeout",{"_index":1206,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["windows",{"_index":2298,"title":{},"body":{"index.html":{}}}],["within",{"_index":2352,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":362,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":1962,"title":{},"body":{"components/TrekMapPage.html":{}}}],["wrap",{"_index":1889,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["x",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"interfaces/TreksService.html":{}}}],["z",{"_index":1069,"title":{},"body":{"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["zip",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["zone",{"_index":1240,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["zone.js",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["zonelayerproperties",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoneoutlinelayerproperties",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, translate: TranslateService, globalization: Globalization, onlineTreks: OnlineTreksService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalization\n                                                  \n                                                        \n                                                                    Globalization\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '@env/environment';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private translate: TranslateService,\n    private globalization: Globalization,\n    private onlineTreks: OnlineTreksService,\n    private settings: SettingsService,\n    ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      let defaultLanguage;\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        defaultLanguage = (await this.globalization.getPreferredLanguage()).value.slice(0, 2);\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n      } else {\n        defaultLanguage = navigator.language.slice(0, 2);\n      }\n\n      // we assume that availableLanguage[0] is default language if user language is not available\n      if (environment.availableLanguage && environment.availableLanguage.length > 0) {\n        if (environment.availableLanguage.indexOf(defaultLanguage) === -1) {\n          defaultLanguage = environment.availableLanguage[0];\n        }\n      } else {\n        // or 'fr' if array is empty\n        defaultLanguage = 'fr';\n      }\n\n      this.translate.setDefaultLang(defaultLanguage);\n\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nAppModule -->\n\nFilterValueComponent->AppModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nAppModule -->\n\nFiltersComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nAppModule -->\n\nSharedUiModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FiltersComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoadingInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { LoadingInterceptor } from '@app/services/loading/loading.service';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\n\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { ProgressComponent } from '@app/components/progress/progress.component';\nimport { LayersVisibilityComponent } from '@app/components/layers-visibility/layers-visibility.component';\n\nimport { FilterValueComponent } from './components/filter-value/filter-value.component';\nimport { TreksOrderComponent } from './components/treks-order/treks-order.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FiltersComponent,\n    PoiDetailsComponent,\n    SearchComponent,\n    ProgressComponent,\n    FilterComponent,\n    FilterValueComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  entryComponents: [\n    FiltersComponent,\n    PoiDetailsComponent,\n    SearchComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    IonicModule.forRoot({ mode: 'md', animated: true }),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n    IonicStorageModule.forRoot(),\n    SharedUiModule,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    File,\n    Zip,\n    WebView,\n    BackgroundGeolocation,\n    LocalNotifications,\n    ScreenOrientation,\n    Globalization,\n    SocialSharing,\n    Network,\n    FirebaseAnalytics,\n    MoreResolver,\n    MoreItemResolver,\n    TrekContextResolver,\n    TreksContextResolver,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'app', pathMatch: 'full' },\n  {\n    path: 'app',\n    loadChildren: './pages/tabs/tabs.module#TabsPageModule',\n  },\n  {\n    path: 'app/map/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n  },\n  {\n    path: 'app/map-offline/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Public\n                                hits\n                            \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                refreshDelay\n                            \n                            \n                                    Public\n                                revoke\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                revoking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            revoking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoking(observable: Observable, revoked?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    revoked\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 4 * 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            revoke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, publishReplay, refCount, take, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n\n  private cache: { [key: string]: Observable } = {};\n  private refreshDelay = 4 * 60 * 60 * 1000;\n  private maxSize = 200;\n  public revoke: EventEmitter = new EventEmitter();\n  public hits: { [key: string]: number } = {};\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.revoke.subscribe((revoked: string | null) => {\n      if (!revoked) {\n        this.cache = {};\n        this.hits = {};\n      } else {\n        delete this.cache[revoked];\n        delete this.hits[revoked];\n      }\n    });\n  }\n\n  /*\n   * gets an observable\n   * that broadcasts a ReplaySubject\n   * which emits the response of a get request\n   * during this.refreshDelay ms without sending a new http request\n   */\n  public get(url: string, options: any): Observable {\n    if (!this.cache.hasOwnProperty(url)) {\n      if (Object.keys(this.cache).length >= this.maxSize) {\n        // TODO: do not revoke everything\n        this.revoke.emit();\n      }\n      this.cache[url] = this.http.get(url, options).pipe(\n        // set hits to 0 each time request is actually sent\n        tap(() => {\n          this.hits[url] = 0;\n        }),\n        // create a ReplaySubject that stores and emit last response during delay\n        publishReplay(1, this.refreshDelay),\n        // broadcast ReplaySubject\n        refCount(),\n        // complete each observer after response has been emitted\n        take(1),\n        // increment hits each time request is subscribed\n        tap(() => {\n          const hits = this.hits[url];\n          this.hits[url] = hits ? hits + 1 : 1;\n        }),\n        catchError((error) => {\n          delete this.cache[url];\n          return throwError(error)\n        })\n      );\n    }\n    return this.cache[url];\n  }\n\n  /*\n   Make the observable revoke the cache when it emits\n   */\n  public revoking(observable: Observable, revoked?: string | null): Observable {\n    return observable.pipe(tap(() => {\n      this.revoke.emit(revoked);\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsibleListComponent.html":{"url":"components/CollapsibleListComponent.html","title":"component - CollapsibleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsibleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/collapsible-list/collapsible-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapsible-list\n            \n\n            \n                styleUrls\n                ./collapsible-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collapsible-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alwaysDisplayedItems\n                            \n                            \n                                    Public\n                                expandableItems\n                            \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleExpandables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideAllLabel\n                            \n                            \n                                initialSize\n                            \n                            \n                                initialState\n                            \n                            \n                                items\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                showAllLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialSize\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialState\n                    \n                \n                \n                    \n                        Type :     \"expanded\" | \"collapsed\"\n\n                    \n                \n                \n                    \n                        Default value : 'collapsed'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpandables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpandables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alwaysDisplayedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandableItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { expandCollapse } from '@app/components/animations';\n\n@Component({\n  selector: 'app-collapsible-list',\n  templateUrl: './collapsible-list.component.html',\n  styleUrls: ['./collapsible-list.component.scss'],\n  animations: [expandCollapse],\n})\nexport class CollapsibleListComponent implements OnInit {\n  @Input() items: T[];\n  @Input() showAllLabel: string;\n  @Input() hideAllLabel: string;\n  @Input() initialSize = 5;\n  @Input() initialState: 'expanded' | 'collapsed' = 'collapsed';\n  @Input() itemTemplate: TemplateRef;\n\n  public alwaysDisplayedItems: T[] = [];\n  public expandableItems: T[] = [];\n  public expanded = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.expanded = this.initialState === 'expanded';\n    this.alwaysDisplayedItems = this.items.slice(0, this.initialSize);\n    this.expandableItems = this.items.slice(this.initialSize, this.items.length);\n  }\n\n  public toggleExpandables() {\n    this.expanded = !this.expanded;\n  }\n}\n\n    \n\n    \n        \n   \n\n 0\">\n  \n    \n       \n    \n  \n  \n    \n      {{ showAllLabel }}\n    \n    \n      {{ hideAllLabel }}\n    \n  \n\n\n    \n\n    \n                \n                    ./collapsible-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    0\">                               {{ showAllLabel }}              {{ hideAllLabel }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollapsibleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectErrorComponent.html":{"url":"components/ConnectErrorComponent.html","title":"component - ConnectErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConnectErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connect-error/connect-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-error\n            \n\n            \n                styleUrls\n                ./connect-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        retry\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-connect-error',\n  templateUrl: './connect-error.component.html',\n  styleUrls: ['./connect-error.component.scss'],\n})\nexport class ConnectErrorComponent  {\n  @Input() public title = '';\n  @Input() public content = '';\n  @Input() public icon = '';\n  @Input() public buttonText = '';\n  @Output() public retry = new EventEmitter();\n\n  constructor() {}\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      {{title}}\n    \n  \n  \n    \n      {{content}}\n    \n  \n  \n    \n      \n        {{buttonText}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./connect-error.component.scss\n                \n                .icon-size {\n  font-size: 4em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{title}}                  {{content}}                          {{buttonText}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainsFilter.html":{"url":"interfaces/ContainsFilter.html","title":"interface - ContainsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSetting.html":{"url":"interfaces/DataSetting.html","title":"interface - DataSetting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSetting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hideAllLabel\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        showAllLabel\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideAllLabel\n                                    \n                                \n                                \n                                    \n                                        hideAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllLabel\n                                    \n                                \n                                \n                                    \n                                        showAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\" | \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\" | \"interval\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     FilterValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { expandCollapse } from '@app/components/animations';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n  animations: [expandCollapse]\n})\nexport class FilterComponent implements OnInit {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  public expanded: boolean;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.filter.values.slice(4).forEach((value) => {\n      // expand filter if an expandable value is already checked\n      if (value.checked) {\n        this.expanded = true;\n      }\n    });\n  }\n\n  public valueChanged({ checked, value }: { checked: boolean, value: FilterValue }) {\n    this.valueChange.emit({ checked: checked, value: value });\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ filter.name }}\n  \n\n  \n    \n    \n  \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .expandable {\n  transition: height .5s;\n  height: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.name }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterTreksService.html":{"url":"injectables/FilterTreksService.html","title":"injectable - FilterTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter-treks/filter-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeFiltersNumber$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                containsFilter\n                            \n                            \n                                    Static\n                                filter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedIdForFilter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedInterval\n                            \n                            \n                                    Public\n                                getFilteredTreks\n                            \n                            \n                                    Private\n                                    Static\n                                getNumberOfActiveFilters\n                            \n                            \n                                    Private\n                                    Static\n                                intervalFilter\n                            \n                            \n                                    Private\n                                    Static\n                                isFilterActive\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter-treks/filter-treks.service.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsFilter(filter: ContainsFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                ContainsFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(treks: MinimalTreks | null, filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTreks | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedIdForFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedIdForFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedInterval\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedInterval(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFilteredTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredTreks(treks$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getNumberOfActiveFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumberOfActiveFilters(filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            intervalFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intervalFilter(filter: IntervalFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IntervalFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isFilterActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFilterActive(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(filteredTreks: MinimalTrek[], order: Order, userLocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filteredTreks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeFiltersNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter-treks/filter-treks.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { point } from '@turf/helpers';\n\nimport { ContainsFilter, Filter, IntervalFilter, MinimalTrek, MinimalTreks, Order } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\nconst distance = require('@turf/distance').default;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterTreksService {\n  public activeFiltersNumber$: Observable;\n\n  public static filter(treks: MinimalTreks | null, filters: Filter[] | null): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n\n    let filteredFeatures = treks.features;\n\n    if (filters) {\n      filters.forEach(filter => {\n        filteredFeatures = filteredFeatures.filter(feature => {\n          if (!FilterTreksService.isFilterActive(filter)) {\n            return true;\n          }\n          if (filter.type === 'contains') {\n            return FilterTreksService.containsFilter(filter as ContainsFilter, feature);\n          } else if (filter.type === 'interval') {\n            return FilterTreksService.intervalFilter(filter as IntervalFilter, feature);\n          } else {\n            // TODO: not necessary but ts  {\n      // Sort by user location\n      if (order === 'location' && userLocation && userLocation !== null) {\n        if (!a.geometry || !b.geometry) {\n          return !a.geometry ? 1 : -1;\n        }\n\n        const distanceFromTrekA = distance(point(a.geometry.coordinates), point(userLocation));\n        const distanceFromTrekB = distance(point(b.geometry.coordinates), point(userLocation));\n\n        if (distanceFromTrekA  distanceFromTrekB) {\n          return 1;\n        }\n        return 0;\n      }\n      // Default order (alphabetically)\n      if (a.properties.name  b.properties.name) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  private static isFilterActive(filter: Filter): boolean {\n    return filter.values.filter(value => value.checked).length > 0;\n  }\n\n  private static getNumberOfActiveFilters(filters: Filter[] | null): number {\n    let numberOfActiveFilters = 0;\n    if (!!filters) {\n      filters.forEach(filter => {\n        numberOfActiveFilters += FilterTreksService.getCheckedIdForFilter(filter).length;\n      });\n    }\n    return numberOfActiveFilters;\n  }\n\n  private static intervalFilter(filter: IntervalFilter, feature: MinimalTrek) {\n    let isInInterval = false;\n    FilterTreksService.getCheckedInterval(filter).forEach(([min, max]: [number, number]) => {\n      const criterionValue: number = feature.properties[filter.id];\n      if (criterionValue >= min && criterionValue  (feature.properties[filter.id] as any).indexOf(filterValue) !== -1,\n        ) !== undefined\n      );\n    } else {\n      return FilterTreksService.getCheckedIdForFilter(filter).indexOf(feature.properties[filter.id] as any) !== -1;\n    }\n  }\n\n  private static getCheckedIdForFilter(filter: Filter): number[] {\n    return filter.values.filter(value => value.checked).map(checkedValue => checkedValue.id);\n  }\n\n  private static getCheckedInterval(filter: Filter): [number, number][] {\n    return filter.values\n      .filter(value => !!value.interval && value.checked)\n      .map(checkedValue => checkedValue.interval) as [number, number][];\n  }\n\n  constructor(private settings: SettingsService) {\n    this.activeFiltersNumber$ = settings.filters$.pipe(\n      map(filters => FilterTreksService.getNumberOfActiveFilters(filters)),\n    );\n  }\n\n  public getFilteredTreks(treks$: Observable): Observable {\n    return combineLatest(treks$, this.settings.filters$, this.settings.order$).pipe(\n      map(([treks, filters, order]) => {\n        if (treks && filters && order) {\n          return FilterTreksService.sort(FilterTreksService.filter(treks, filters), order.type, order.value);\n        } else {\n          return [];\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterValue.html":{"url":"interfaces/FilterValue.html","title":"interface - FilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checked\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        interval\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterValueComponent.html":{"url":"components/FilterValueComponent.html","title":"component - FilterValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter-value/filter-value.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-value\n            \n\n            \n                styleUrls\n                ./filter-value.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-value.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueCheckChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         FilterValue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueCheckChanged($event: CustomEvent, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            CustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter-value',\n  templateUrl: './filter-value.component.html',\n  styleUrls: ['./filter-value.component.scss'],\n})\nexport class FilterValueComponent implements OnInit {\n  @Input() value: FilterValue;\n  @Input() commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {\n  }\n\n  public valueCheckChanged($event: CustomEvent, value: FilterValue) {\n    this.valueChange.emit({ checked: $event.detail.checked, value: value });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ value.name }}\n  \n\n    \n\n    \n                \n                    ./filter-value.component.scss\n                \n                .no-lines {\n    --inner-border-width: 0px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ value.name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filters/filters.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Public\n                                isOnline\n                            \n                            \n                                    Public\n                                nbTemporaryFiltersTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                temporaryFilters$\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilters\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                eraseFilters\n                            \n                            \n                                    Public\n                                handleFiltersState\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                trackFilters\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, settings: SettingsService, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, navParams: NavParams, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            eraseFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eraseFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilters(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isOnline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nbTemporaryFiltersTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temporaryFilters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\nimport { cloneDeep } from 'lodash';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { Filter, FilterValue, MinimalTreks } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends UnSubscribe implements OnInit, OnDestroy {\n  public temporaryFilters$ = new BehaviorSubject([]);\n  public nbTemporaryFiltersTreks = 0;\n  public isOnline: boolean;\n  public commonSrc: string;\n  public filters: any[];\n  constructor(\n    private modalCtrl: ModalController,\n    public settings: SettingsService,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewWillEnter() {\n    this.isOnline = this.navParams.get('isOnline');\n    const treks$ = this.isOnline ? this.onlineTreks.treks$ : this.offlineTreks.treks$;\n    this.commonSrc = this.isOnline ? this.onlineTreks.getCommonImgSrc() : this.offlineTreks.getCommonImgSrc();\n\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      this.settings.filters$.subscribe(filters => {\n        this.filters = filters || [];\n        this.temporaryFilters$.next(filters || []);\n      }),\n      combineLatest(treks$, this.temporaryFilters$).subscribe(\n        ([treks, temporaryFilters]: [MinimalTreks | null, Filter[]]) => {\n          if (!!treks) {\n            this.nbTemporaryFiltersTreks = FilterTreksService.filter(treks, temporaryFilters).length;\n          } else {\n            this.nbTemporaryFiltersTreks = 0;\n          }\n        },\n      ),\n    );\n  }\n\n  public handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue): void {\n    const temporaryFilters = cloneDeep(this.temporaryFilters$.getValue());\n    const temporaryFilter = temporaryFilters.find(tempFilter => tempFilter.id === filter.id) as Filter;\n    const filterValue = temporaryFilter.values.find(tempValue => tempValue.id === value.id) as FilterValue;\n    filterValue.checked = checkState;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public applyFilters(): void {\n    this.settings.saveFiltersState(this.temporaryFilters$.getValue());\n    this.modalCtrl.dismiss(true);\n  }\n\n  public eraseFilters(): void {\n    const temporaryFilters = cloneDeep(this.temporaryFilters$.getValue());\n    temporaryFilters.forEach(filter => {\n      filter.values.forEach(value => (value.checked = false));\n    });\n    this.filters = temporaryFilters;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public trackFilters(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'filters.title' | translate | uppercase }}\n    \n      \n        {{ 'filters.erase' | translate }}\n      \n    \n  \n\n\n\n  \n    \n      \n      \n    \n  \n\n\n\n  \n    \n    filters.zeroresult\n    filters.oneresult\n     1\" translate\n      [translateParams]=\"{ nb: nbTemporaryFiltersTreks }\">filters.results\n  \n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .full-width {\n    width: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'filters.title\\' | translate | uppercase }}                  {{ \\'filters.erase\\' | translate }}                                              filters.zeroresult    filters.oneresult     1\" translate      [translateParams]=\"{ nb: nbTemporaryFiltersTreks }\">filters.results  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeolocateNotificationsComponent.html":{"url":"components/GeolocateNotificationsComponent.html","title":"component - GeolocateNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeolocateNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geolocate-notifications\n            \n\n            \n                styleUrls\n                ./geolocate-notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geolocate-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                clicklocalNotifications$\n                            \n                            \n                                currentPoisToNotify\n                            \n                            \n                                    Private\n                                currentPosition$\n                            \n                            \n                                    Public\n                                localNotifications\n                            \n                            \n                                notificationsModeIsActive\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeNotificationsMode\n                            \n                            \n                                checkToNotify\n                            \n                            \n                                disableGeolocationNotification\n                            \n                            \n                                enableGeolocationNotification\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentPersmissionsConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPois\n                            \n                            \n                                trekName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                presentPoiDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, localNotifications: LocalNotifications, alertController: AlertController, geolocate: GeolocateService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localNotifications\n                                                  \n                                                        \n                                                                    LocalNotifications\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPois\n                    \n                \n                \n                    \n                        Type :         Pois\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trekName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        presentPoiDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeNotificationsMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeNotificationsMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkToNotify\n                        \n                        \n                    \n                \n            \n            \n                \ncheckToNotify(fromCoordinates: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromCoordinates\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \ndisableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \nenableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPersmissionsConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPersmissionsConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clicklocalNotifications$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPoisToNotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalNotifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsModeIsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Subscription } from 'rxjs';\nimport { point } from '@turf/helpers';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst distance = require('@turf/distance').default;\n\nimport { Pois } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-geolocate-notifications',\n  templateUrl: './geolocate-notifications.component.html',\n  styleUrls: ['./geolocate-notifications.component.scss'],\n})\nexport class GeolocateNotificationsComponent implements OnInit, OnChanges, OnDestroy {\n  currentPoisToNotify: any[];\n  clicklocalNotifications$: Subscription;\n  notificationsModeIsActive = false;\n  @Input() currentPois: Pois;\n  @Input() trekName: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  private currentPosition$: Subscription;\n\n  constructor(\n    public platform: Platform,\n    public localNotifications: LocalNotifications,\n    public alertController: AlertController,\n    private geolocate: GeolocateService,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.localNotifications.setDefaults({\n        vibrate: true,\n        sound: true,\n        foreground: true,\n        icon: 'res://icon',\n        smallIcon: 'res://ic_stat_panorama',\n      });\n      this.clicklocalNotifications$ = this.localNotifications.on('click').subscribe(({ data }) => {\n        const poi = this.currentPois.features.find(feature => feature.properties.id === data.id);\n        this.presentPoiDetails.emit(poi);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    if (changesCurrentPois.currentValue && !changesCurrentPois.previousValue) {\n      this.currentPoisToNotify = this.currentPois.features.map(feature => ({\n        id: feature.properties.id,\n        name: feature.properties.name,\n        coordinates: feature.geometry.coordinates,\n      }));\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.clicklocalNotifications$) {\n      this.clicklocalNotifications$.unsubscribe();\n    }\n\n    if (this.currentPosition$) {\n      this.disableGeolocationNotification();\n    }\n  }\n\n  async changeNotificationsMode() {\n    if (!this.notificationsModeIsActive) {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        if (!(await this.geolocate.checkAuthorization())) {\n          this.presentPersmissionsConfirm();\n        } else {\n          if (!(await this.geolocate.checkIfTrackerIsRunning())) {\n            this.geolocate.startTracking(this.trekName);\n          }\n          if (await this.localNotifications.hasPermission()) {\n            this.notificationsModeIsActive = true;\n            this.enableGeolocationNotification();\n          } else {\n            await this.localNotifications.requestPermission();\n          }\n        }\n      } else {\n        this.geolocate.startTracking(this.trekName);\n        this.notificationsModeIsActive = true;\n        this.enableGeolocationNotification();\n      }\n    } else {\n      this.notificationsModeIsActive = false;\n      this.disableGeolocationNotification();\n    }\n  }\n\n  enableGeolocationNotification(): void {\n    this.currentPosition$ = this.geolocate.currentPosition$.subscribe(coordinates => this.checkToNotify(coordinates));\n  }\n\n  disableGeolocationNotification(): void {\n    this.currentPosition$.unsubscribe();\n  }\n\n  checkToNotify(fromCoordinates: number[]) {\n    const kmToNotify = environment.metersToNotify / 1000;\n    const options = {\n      units: 'kilometers',\n    };\n    const from = point(fromCoordinates);\n    const notifiedIndex = this.currentPoisToNotify.findIndex(\n      feature => distance(from, point(feature.coordinates), options)  {\n          this.localNotifications.schedule({\n            id: this.currentPoisToNotify[notifiedIndex].id,\n            title: trad,\n            text: this.currentPoisToNotify[notifiedIndex].name,\n            data: {\n              id: this.currentPoisToNotify[notifiedIndex].id,\n            },\n            channel: `channel${this.currentPoisToNotify[notifiedIndex].id}`,\n            priority: 2,\n          });\n\n          this.currentPoisToNotify.splice(notifiedIndex, 1);\n        });\n      } else {\n        console.log('Poi', this.currentPoisToNotify[notifiedIndex]);\n      }\n    }\n  }\n\n  async presentPersmissionsConfirm() {\n    await this.translate\n      .get(['geolocate.askLocatePermission', 'geolocate.cancel', 'geolocate.open'])\n      .subscribe(async trad => {\n        const persmissionsConfirm = await this.alertController.create({\n          header: 'Permissions',\n          message: trad['geolocate.askLocatePermission'],\n          buttons: [\n            {\n              text: trad['geolocate.cancel'],\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: trad['geolocate.open'],\n              handler: () => {\n                this.geolocate.showAppSettings();\n              },\n            },\n          ],\n        });\n\n        await persmissionsConfirm.present();\n      });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ 'mapTrek.enableNotification' | translate }}\n\n\n\n  \n  {{ 'mapTrek.disableNotification' | translate }}\n\n\n    \n\n    \n                \n                    ./geolocate-notifications.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'mapTrek.enableNotification\\' | translate }}    {{ \\'mapTrek.disableNotification\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeolocateNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocateService.html":{"url":"injectables/GeolocateService.html","title":"injectable - GeolocateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeolocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocate/geolocate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundGeolocation\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuthorization\n                            \n                            \n                                    Async\n                                checkIfTrackerIsRunning\n                            \n                            \n                                showAppSettings\n                            \n                            \n                                showLocationSettings\n                            \n                            \n                                    Async\n                                startTracking\n                            \n                            \n                                stopTracking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backgroundGeolocation: BackgroundGeolocation, platform: Platform, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAuthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkIfTrackerIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfTrackerIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAppSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowAppSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking(notificationText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \nstopTracking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backgroundGeolocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BackgroundGeolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  BackgroundGeolocation,\n  BackgroundGeolocationConfig,\n  BackgroundGeolocationEvents,\n  BackgroundGeolocationLocationProvider,\n} from '@ionic-native/background-geolocation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocateService {\n  public currentPosition$: BehaviorSubject = new BehaviorSubject(null);\n\n  constructor(\n    public backgroundGeolocation: BackgroundGeolocation,\n    public platform: Platform,\n    private translate: TranslateService,\n  ) {}\n\n  async checkAuthorization() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.authorization !== 0;\n  }\n\n  async checkIfTrackerIsRunning() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.isRunning;\n  }\n\n  async startTracking(notificationText: string) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const notificationTitle: string = await this.translate.get('geolocate.notificationTitle').toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider: BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        maxLocations: 10,\n        startForeground: true,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText,\n        ...environment.backgroundGeolocation,\n      };\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.start).subscribe(async () => {\n        const startLocation = await this.backgroundGeolocation.getCurrentLocation();\n        this.currentPosition$.next([startLocation.longitude, startLocation.latitude]);\n      });\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.location).subscribe(location => {\n        this.currentPosition$.next([location.longitude, location.latitude]);\n      });\n\n      this.backgroundGeolocation.start();\n    } else {\n      // fake position for browser dev\n      this.currentPosition$.next([0.705824, 44.410157]);\n    }\n  }\n\n  stopTracking() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.backgroundGeolocation.stop();\n    }\n\n    this.currentPosition$.next([0, 0]);\n  }\n\n  showAppSettings() {\n    this.backgroundGeolocation.showAppSettings();\n  }\n\n  showLocationSettings() {\n    this.backgroundGeolocation.showLocationSettings();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrek.html":{"url":"interfaces/HydratedTrek.html","title":"interface - HydratedTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         HydratedTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrekProperties.html":{"url":"interfaces/HydratedTrekProperties.html","title":"interface - HydratedTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        accessibilities\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        ambiance\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        networks\n                                \n                                \n                                        parking_location\n                                \n                                \n                                        pictures\n                                \n                                \n                                            Optional\n                                        points_reference\n                                \n                                \n                                        practice\n                                \n                                \n                                        profile\n                                \n                                \n                                        route\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                                \n                                        themes\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ambiance\n                                    \n                                \n                                \n                                    \n                                        ambiance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking_location\n                                    \n                                \n                                \n                                    \n                                        parking_location:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points_reference\n                                    \n                                \n                                \n                                    \n                                        points_reference:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationDesk.html":{"url":"interfaces/InformationDesk.html","title":"interface - InformationDesk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationDesk\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        municipality\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        photo_url\n                                \n                                \n                                        picture\n                                \n                                \n                                        postal_code\n                                \n                                \n                                        street\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        municipality\n                                    \n                                \n                                \n                                    \n                                        municipality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url\n                                    \n                                \n                                \n                                    \n                                        photo_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postal_code\n                                    \n                                \n                                \n                                    \n                                        postal_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number | Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number | Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationDeskDetailsComponent.html":{"url":"components/InformationDeskDetailsComponent.html","title":"component - InformationDeskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationDeskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-desk-details/information-desk-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-desk-details\n            \n\n            \n                styleUrls\n                ./information-desk-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-desk-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                informationDesk\n                            \n                            \n                                informationDeskPicture\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDesk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationDesk\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDeskPicture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { InformationDesk } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-information-desk-details',\n  templateUrl: './information-desk-details.component.html',\n  styleUrls: ['./information-desk-details.component.scss'],\n})\nexport class InformationDeskDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  informationDesk: InformationDesk;\n  informationDeskPicture = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.informationDesk = this.navParams.get('informationDesk');\n    if (this.informationDesk && this.informationDesk.picture) {\n      this.informationDeskPicture = `${this.baseUrl}${this.informationDesk.picture}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ informationDesk.name }}\n  \n\n\n\n  \n    \n    \n      \n      \n      {{ informationDesk.postal_code }} {{ informationDesk.municipality }}\n      \n         {{ 'trek.details.informationDesk.website' | translate }}  -\n         Email  -\n        {{ informationDesk.phone }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./information-desk-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ informationDesk.name }}                              {{ informationDesk.postal_code }} {{ informationDesk.municipality }}               {{ \\'trek.details.informationDesk.website\\' | translate }}  -         Email  -        {{ informationDesk.phone }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationDeskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationIntro.html":{"url":"interfaces/InformationIntro.html","title":"interface - InformationIntro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationIntro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationItem.html":{"url":"interfaces/InformationItem.html","title":"interface - InformationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntervalFilter.html":{"url":"interfaces/IntervalFilter.html","title":"interface - IntervalFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntervalFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayersVisibilityComponent.html":{"url":"components/LayersVisibilityComponent.html","title":"component - LayersVisibilityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayersVisibilityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layers-visibility/layers-visibility.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layers-visibility\n            \n\n            \n                styleUrls\n                ./layers-visibility.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layers-visibility.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLayerVisibility\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                layerVisibilityChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layerVisibilityChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerVisibilityChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLayerVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-layers-visibility',\n  templateUrl: './layers-visibility.component.html',\n  styleUrls: ['./layers-visibility.component.scss'],\n})\nexport class LayersVisibilityComponent {\n  changeLayerVisibility: any;\n  layers: any;\n\n  constructor(private navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.changeLayerVisibility = this.navParams.get('changeLayerVisibility');\n    this.layers = this.navParams.get('layers');\n  }\n\n  public layerVisibilityChange(event: any) {\n    this.changeLayerVisibility(event.detail.checked, event.detail.value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ layer.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./layers-visibility.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ layer.name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayersVisibilityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Private\n                                loaderStatus$\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                progressBarWidth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        condition\n                    \n                \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressBarWidth\n                    \n                \n                \n                    \n                        Default value : '50%'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { delay } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnDestroy {\n  @Input() public progressBarWidth = '50%';\n  @Input() public condition: boolean | null = null;\n  public loaderStatus: Boolean;\n  private loaderStatus$: Subscription;\n\n  constructor(public loading: LoadingService) {\n    // add delay to prevent expression has changed after it was checked\n    this.loaderStatus$ = this.loading.status.pipe(delay(0)).subscribe(status => (this.loaderStatus = status));\n  }\n\n  ngOnDestroy(): void {\n    this.loaderStatus$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadingIds\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                begin\n                            \n                            \n                                finish\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            begin\n                        \n                        \n                    \n                \n            \n            \n                \nbegin(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finish\n                        \n                        \n                    \n                \n            \n            \n                \nfinish(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoading\n                        \n                        \n                    \n                \n            \n            \n                \nisLoading(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTreksVizComponent.html":{"url":"components/MapTreksVizComponent.html","title":"component - MapTreksVizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapTreksVizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-treks-viz\n            \n\n            \n                styleUrls\n                ./map-treks-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-treks-viz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                markerPosition\n                            \n                            \n                                    Private\n                                practices\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSourcesLayersEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                    Public\n                                flyToUserLocation\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                presentConfirmFeatures\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                dataSettings\n                            \n                            \n                                filteredTreks\n                            \n                            \n                                mapConfig\n                            \n                            \n                                offline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, screenOrientation: ScreenOrientation, platform: Platform, translate: TranslateService, geolocate: GeolocateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        screenOrientation\n                                                  \n                                                        \n                                                                    ScreenOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSettings\n                    \n                \n                \n                    \n                        Type :         DataSetting[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredTreks\n                    \n                \n                \n                    \n                        Type :     MinimalTrek[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Type :     MapboxOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mapIsLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateToTrek\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSourcesLayersEvents\n                        \n                        \n                    \n                \n            \n            \n                \naddSourcesLayersEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            flyToUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flyToUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:339\n                \n            \n\n\n            \n                \n                    Fly to user location else fitbounds to trek\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirmFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmFeatures(features: Feature[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                            Feature[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Marker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            practices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataSetting\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport { GeoJSONSource, GeoJSONSourceRaw, Map, MapboxOptions, Marker } from 'mapbox-gl';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { MinimalTrek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '../abstract/unsubscribe';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-treks-viz',\n  templateUrl: './map-treks-viz.component.html',\n  styleUrls: ['./map-treks-viz.component.scss'],\n})\nexport class MapTreksVizComponent extends UnSubscribe implements OnChanges, OnDestroy {\n  private map: Map;\n  private markerPosition: Marker;\n  private practices: DataSetting;\n\n  @Input() public filteredTreks: MinimalTrek[] | null = null;\n  @Input() public mapConfig: MapboxOptions;\n  @Input() public dataSettings: DataSetting[];\n  @Input() public commonSrc: string;\n  @Input() public offline: Boolean;\n\n  @Output() public navigateToTrek = new EventEmitter();\n  @Output() public mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private alertController: AlertController,\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private translate: TranslateService,\n    private geolocate: GeolocateService,\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTreks: SimpleChange = changes.filteredTreks;\n    if (changesCurrentTreks.currentValue && !changesCurrentTreks.previousValue) {\n      this.createMap();\n    } else {\n      if (this.map) {\n        const treksSource = this.map.getSource('treks-points') as GeoJSONSource;\n        if (treksSource && this.filteredTreks) {\n          treksSource.setData({\n            type: 'FeatureCollection',\n            features: this.filteredTreks,\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap() {\n    if (this.mapConfig && this.mapConfig.style) {\n      if (this.offline && (this.platform.is('ios') || this.platform.is('android'))) {\n        (this.mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.commonSrc + (environment.offlineMapConfig.style as any).sources['tiles-background'].tiles[0];\n      }\n\n      this.map = new mapboxgl.Map({\n        ...this.mapConfig,\n        container: 'map-treks',\n      });\n\n      this.map.addControl(new mapboxgl.NavigationControl({ showCompass: false }), 'top-left');\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize ...\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          }),\n        );\n      }\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create((observer: any) => {\n          const practices: DataSetting | undefined = this.dataSettings.find(data => data.id === 'practice');\n          if (practices) {\n            this.practices = practices;\n            practices.values.forEach((practice, index: number) => {\n              this.map.loadImage(`${this.commonSrc}${practice.pictogram}`, (error: any, image: any) => {\n                this.map.addImage(practice.id.toString(), image);\n                if (index + 1 === practices.values.length) {\n                  observer.complete();\n                }\n              });\n            });\n          }\n        });\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$.subscribe(coordinates => {\n            if (coordinates) {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates as any);\n              } else {\n                const el = document.createElement('div');\n                el.className = 'pulse';\n                this.markerPosition = new mapboxgl.Marker({ element: el }).setLngLat(coordinates);\n                this.markerPosition.addTo(this.map);\n              }\n            }\n          }),\n          loadImages.subscribe({\n            complete: () => {\n              this.addSourcesLayersEvents();\n              this.geolocate.startTracking('');\n            },\n          }),\n        );\n      });\n    }\n  }\n\n  addSourcesLayersEvents() {\n    this.map.addSource('treks-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: this.filteredTreks,\n      },\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50,\n    } as GeoJSONSourceRaw);\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: 'assets/map/zone/zone.geojson',\n    });\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint,\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: {\n        'text-color': '#fff',\n      },\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 16,\n        'text-offset': [0, 0.1],\n      },\n    });\n\n    const circleColorExpression: any[] = [];\n    circleColorExpression.push('match');\n    circleColorExpression.push(['get', 'practice']);\n    this.practices.values.forEach(practice => {\n      circleColorExpression.push(practice.id);\n      circleColorExpression.push(practice.color);\n    });\n    circleColorExpression.push(environment.map.clusterPaint['circle-color']);\n\n    this.map.addLayer({\n      id: 'trek-point',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        ...environment.map.clusterPaint,\n        'circle-color': circleColorExpression as any,\n        'circle-radius': 16,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'trek-point-icon',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['get', 'practice'],\n        'icon-size': environment.map.globalMapIconSize,\n      },\n    });\n\n    this.map.on('click', 'clusters-circle', e => {\n      const features = this.map.queryRenderedFeatures(e.point, {\n        layers: ['clusters-circle'],\n      });\n\n      const featureProperties = features[0].properties;\n      if (!!featureProperties) {\n        const clusterId = featureProperties.cluster_id;\n\n        if (this.map.getZoom() === this.mapConfig.maxZoom) {\n          // no more zoom, display features inside cluster\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterLeaves(\n            featureProperties.cluster_id,\n            Infinity,\n            0,\n            (err: any, featuresInCluster: Feature[]) => {\n              if (err) {\n                throw err;\n              }\n              this.presentConfirmFeatures(featuresInCluster as Feature[]);\n            },\n          );\n        } else {\n          // zoom to next cluster expansion\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterExpansionZoom(\n            clusterId,\n            (err: any, zoom: number) => {\n              if (err) {\n                return;\n              }\n              const coordinates = (features[0].geometry as Point).coordinates;\n              this.map.easeTo({\n                center: [coordinates[0], coordinates[1]],\n                zoom: zoom,\n              });\n            },\n          );\n        }\n      }\n    });\n\n    this.map.on('mouseenter', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.map.on('click', 'trek-point', e => {\n      const feature = this.map.queryRenderedFeatures(e.point, {\n        layers: ['trek-point'],\n      })[0];\n      if (!!feature.properties) {\n        this.navigateToTrek.emit(feature.properties.id);\n      }\n    });\n\n    this.map.on('mouseenter', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.mapIsLoaded.emit(true);\n  }\n  async presentConfirmFeatures(features: Feature[]) {\n    const featuresRadio: Object[] = []; // can't import AlertOption\n\n    features.forEach((feature, index: number) => {\n      featuresRadio.push({\n        name: feature.properties.name,\n        type: 'radio',\n        label: feature.properties.name,\n        value: feature.properties.id,\n        checked: index === 0,\n      });\n    });\n\n    await this.translate.get('mapTreks.treksAlert').subscribe(async trad => {\n      const alert = await this.alertController.create({\n        header: trad.title,\n        inputs: featuresRadio,\n        buttons: [\n          {\n            text: trad.cancelButton,\n            role: 'cancel',\n            cssClass: 'secondary',\n          },\n          {\n            text: trad.confirmButton,\n            handler: featureId => {\n              this.navigateToTrek.emit(featureId);\n            },\n          },\n        ],\n      });\n\n      await alert.present();\n    });\n  }\n\n  /**\n   * Fly to user location else fitbounds to trek\n   */\n  public flyToUserLocation(): void {\n    const userLocation = this.geolocate.currentPosition$.getValue();\n    if (userLocation) {\n      this.map.flyTo({\n        center: userLocation,\n        animate: false,\n        zoom: environment.trekZoom.zoom,\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./map-treks-viz.component.scss\n                \n                .options-button-container {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 24px;\n  top: 24px;\n  z-index: 5;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapTreksVizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrek.html":{"url":"interfaces/MinimalTrek.html","title":"interface - MinimalTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         MinimalTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MinimalTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrekProperties.html":{"url":"interfaces/MinimalTrekProperties.html","title":"interface - MinimalTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessibilities\n                                \n                                \n                                        departure\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        first_picture\n                                \n                                \n                                        id\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        practice\n                                \n                                \n                                        themes\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_picture\n                                    \n                                \n                                \n                                    \n                                        first_picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTreks.html":{"url":"interfaces/MinimalTreks.html","title":"interface - MinimalTreks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTreks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     MinimalTrek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreInformationsService.html":{"url":"injectables/MoreInformationsService.html","title":"injectable - MoreInformationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MoreInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/more-informations/more-informations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMoreItemById\n                            \n                            \n                                    Public\n                                getMoreItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: CacheService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItemById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItemById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InformationIntro, InformationItem } from '@app/interfaces/interfaces';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MoreInformationsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  constructor(private cache: CacheService, private translate: TranslateService) {}\n\n  public getMoreItems(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages.json`, httpOptions);\n  }\n\n  public getMoreItemById(id: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages/${id}.json`, httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoreItemPage.html":{"url":"components/MoreItemPage.html","title":"component - MoreItemPage","body":"\n                   \n\n\n\n\n\n  Components\n  MoreItemPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more-item/more-item.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more-item\n            \n\n            \n                styleUrls\n                ./more-item.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more-item.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectionError\n                            \n                            \n                                moreItem\n                            \n                            \n                                moreItemId\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationItem } from '@app/interfaces/interfaces';\n\n\n@Component({\n  selector: 'app-more-item',\n  templateUrl: './more-item.page.html',\n  styleUrls: ['./more-item.page.scss'],\n})\nexport class MoreItemPage extends UnSubscribe implements OnInit, OnDestroy {\n  moreItem: InformationItem;\n  moreItemId: number;\n  connectionError = false;\n\n  constructor(\n    private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data) => {\n        const item = data['item'] as (InformationItem | 'connectionError');\n        if (item === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreItem = item;\n        }\n      })\n    );\n  }\n\n  refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ moreItem.title }}\n  \n\n\n  \n  \n  \n  \n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more-item.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ moreItem.title }}                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoreItemPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoreItemPageModule.html":{"url":"modules/MoreItemPageModule.html","title":"module - MoreItemPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MoreItemPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more-item/more-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoreItemPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { MoreItemPage } from './more-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoreItemPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      item: MoreItemResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule, TranslateModule.forChild()],\n  declarations: [MoreItemPage],\n})\nexport class MoreItemPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreItemResolver.html":{"url":"guards/MoreItemResolver.html","title":"guard - MoreItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more-item.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more-item.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/more-item.resolver.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { InformationItem } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreItemResolver implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const moreItemId = +(route.paramMap.get('moreItemId'));\n    return this.more.getMoreItemById(moreItemId).pipe(\n      tap(item => {\n        if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n          this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name} ${item.title}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorePage.html":{"url":"components/MorePage.html","title":"component - MorePage","body":"\n                   \n\n\n\n\n\n  Components\n  MorePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more\n            \n\n            \n                styleUrls\n                ./more.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                connectionError\n                            \n                            \n                                moreInformationsIntro\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreInformationsIntro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationIntro[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '@env/environment';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationIntro } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.page.html',\n  styleUrls: ['./more.page.scss'],\n})\nexport class MorePage extends UnSubscribe implements OnInit {\n  moreInformationsIntro: InformationIntro[];\n  connectionError = false;\n  public appName: string = environment.appName;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const items: InformationIntro[] | 'connectionError' = data.items;\n        if (items === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreInformationsIntro = items;\n        }\n      })\n    );\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n\n\n\n  \n  \n  \n\n  \n    \n      \n        \n          {{ moreInformationIntro.title }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}                                       {{ moreInformationIntro.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MorePageModule.html":{"url":"modules/MorePageModule.html","title":"module - MorePageModule","body":"\n                   \n\n\n\n\n    Modules\n    MorePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_MorePageModule_imports\n\n\n\n\nMorePage\n\nMorePage\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MorePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MorePage } from './more.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    component: MorePage,\n    resolve: {\n      items: MoreResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule, TranslateModule.forChild()],\n  declarations: [MorePage],\n})\nexport class MorePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreResolver.html":{"url":"guards/MoreResolver.html","title":"guard - MoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { InformationIntro } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreResolver implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve = (route: ActivatedRouteSnapshot) =>\n    this.more.getMoreItems().pipe(\n      tap(() => {\n        if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n          this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineTreksService.html":{"url":"injectables/OnlineTreksService.html","title":"injectable - OnlineTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OnlineTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online-treks/online-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                filteredTreks$\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreksError$\n                            \n                            \n                                    Public\n                                treks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCommonImgSrc\n                            \n                            \n                                    Public\n                                getMapConfigForTrekById\n                            \n                            \n                                    Public\n                                getMinimalTrekById\n                            \n                            \n                                    Public\n                                getPoisForTrekById\n                            \n                            \n                                    Public\n                                getTouristicContentsForTrekById\n                            \n                            \n                                    Public\n                                getTouristicEventsForTrekById\n                            \n                            \n                                    Public\n                                getTrekById\n                            \n                            \n                                    Public\n                                getTrekDetailsUrl\n                            \n                            \n                                    Public\n                                getTrekImageSrc\n                            \n                            \n                                    Public\n                                getTrekMapUrl\n                            \n                            \n                                    Private\n                                getTreks\n                            \n                            \n                                    Public\n                                getTreksMapUrl\n                            \n                            \n                                    Public\n                                getTreksUrl\n                            \n                            \n                                    Public\n                                loadTreks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cache: CacheService, filterTreks: FilterTreksService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapConfigForTrekById(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinimalTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinimalTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoisForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicContentsForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicEventsForTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekDetailsUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekMapUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreksError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { environment } from '@env/environment';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnlineTreksService implements TreksService {\n  public offline = false;\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public onlineTreksError$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private cache: CacheService,\n    private filterTreks: FilterTreksService,\n    private translate: TranslateService,\n  ) {\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n  }\n\n  public loadTreks() {\n    this.onlineTreksError$.next(null);\n    this.getTreks().subscribe(\n      data => {\n        this.treks$.next(data);\n      },\n      error => {\n        this.onlineTreksError$.next(error);\n      },\n    );\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      return environment.onlineBaseUrl + (!!picture ? picture.url : trek.properties.first_picture.url);\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    return `${environment.onlineBaseUrl}`;\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks';\n  }\n\n  public getTrekDetailsUrl(trekId: number): string {\n    return `/app/tabs/treks/trek-details/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number): string {\n    return `/app/map/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n\n    return this.http.get(`${this.apiUrl}/treks.geojson`, httpOptions);\n  }\n\n  public getTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/trek.geojson`, httpOptions);\n  }\n\n  public getPoisForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/pois.geojson`, httpOptions);\n  }\n\n  public getTouristicContentsForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/touristic_contents.geojson`, httpOptions);\n  }\n\n  public getTouristicEventsForTrekById(trekId: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.cache.get(`${this.apiUrl}/${trekId}/touristic_events.geojson`, httpOptions);\n  }\n\n  public getMinimalTrekById(trekId: number): MinimalTrek | undefined {\n    const trek = this.treks$.getValue();\n    if (!!trek) {\n      return trek.features.find(feature => feature.properties.id === trekId);\n    } else {\n      return undefined;\n    }\n  }\n\n  public getMapConfigForTrekById(trek: Trek): MapboxOptions {\n    const mapConfig: MapboxOptions = { ...cloneDeep(environment.onlineMapConfig), zoom: environment.trekZoom.zoom };\n    (mapConfig as any).bounds = trek.bbox as [number, number, number, number];\n    (mapConfig as any).fitBoundsOptions = { padding: { top: 100, bottom: 100, left: 100, right: 100 } };\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        legend\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiComponent.html":{"url":"components/PoiComponent.html","title":"component - PoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi/poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi\n            \n\n            \n                styleUrls\n                ./poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                offline\n                            \n                            \n                                poi\n                            \n                            \n                                typePois\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi/poi.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        poi\n                    \n                \n                \n                    \n                        Type :         Poi\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typePois\n                    \n                \n                \n                    \n                        Type :         DataSetting | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi/poi.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Picture, Poi, Trek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-poi',\n  templateUrl: './poi.component.html',\n  styleUrls: ['./poi.component.scss'],\n})\nexport class PoiComponent implements OnChanges {\n  @Input() public poi: Poi;\n  @Input() public offline = false;\n  @Input() public commonSrc: string;\n  @Input() public typePois: DataSetting | undefined;\n\n  public baseUrl = environment.onlineBaseUrl;\n  public picture: Picture | null = null;\n  public typeImgSrc: string | null = null;\n\n  constructor(public offlineTreks: OfflineTreksService, public onlineTreks: OnlineTreksService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.poi) {\n      if (this.typePois && this.poi.properties.type) {\n        const currentTypePoi = this.typePois.values.find(typePoi => typePoi.id === this.poi.properties.type);\n        if (currentTypePoi) {\n          this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n        }\n      }\n\n      if (this.poi.properties.pictures.length > 0) {\n        this.picture = this.poi.properties.pictures[0];\n        if (this.offline) {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.offlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        } else {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.onlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        }\n      } else {\n        this.picture = null;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ picture!.legend }}\n      ({{ picture!.author }})\n    \n  \n  \n    \n      \n      \n        {{ poi.properties.name }}\n      \n    \n  \n  \n    \n      \n        \n      \n    \n\n    \n      \n        Information pratiques\n        \n      \n    \n\n    \n      \n        Contact\n        \n        \n           {{ poi.properties.email }} \n        \n        \n           {{ poi.properties.website }} \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi.component.scss\n                \n                .card-header-container {\n  align-items: flex-end;\n  display: flex;\n  .img-header {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ picture!.legend }}      ({{ picture!.author }})                                {{ poi.properties.name }}                                                            Information pratiques                                    Contact                           {{ poi.properties.email }}                            {{ poi.properties.website }}                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiDetailsComponent.html":{"url":"components/PoiDetailsComponent.html","title":"component - PoiDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi-details/poi-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi-details\n            \n\n            \n                styleUrls\n                ./poi-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                poi\n                            \n                            \n                                    Public\n                                poiImg\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                settingsSub\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams, settings: SettingsService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poiImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { Poi, Picture, Trek } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-poi-details',\n  templateUrl: './poi-details.component.html',\n  styleUrls: ['./poi-details.component.scss'],\n})\nexport class PoiDetailsComponent {\n  public offline = false;\n  public baseUrl = environment.onlineBaseUrl;\n  public poi: Poi;\n  public poiImg = '';\n  public typeImgSrc: string | null = null;\n  public settingsSub: Subscription;\n  public picture: Picture | null = null;\n  public commonSrc: string;\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navParams: NavParams,\n    public settings: SettingsService,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n  ) {}\n\n  ionViewWillEnter() {\n    this.poi = this.navParams.get('poi');\n    this.offline = this.navParams.get('offline');\n    this.commonSrc = this.navParams.get('commonSrc');\n\n    if (\n      this.poi &&\n      this.poi.properties &&\n      this.poi.properties.pictures &&\n      this.poi.properties.pictures.length > 0 &&\n      this.poi.properties.pictures[0].url\n    ) {\n      this.picture = this.poi.properties.pictures[0];\n      if (this.offline) {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.offlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n        };\n      } else {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.onlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n        };\n      }\n    } else {\n      this.picture = null;\n    }\n\n    this.settingsSub = this.settings.data$.subscribe(settings => {\n      if (settings) {\n        const typePois = settings.find(setting => setting.id === 'poi_types');\n\n        if (typePois && this.poi.properties.type) {\n          const currentTypePoi = typePois.values.find(typePoi => typePoi.id === this.poi.properties.type);\n          if (currentTypePoi) {\n            this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n          }\n        }\n      }\n    });\n  }\n\n  close(): void {\n    this.settingsSub.unsubscribe();\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ poi.properties.name }}\n  \n\n\n\n  \n    \n      \n      \n        \n        {{ poi.properties.pictures[0]?.legend }}\n        ({{ poi.properties.pictures[0].author }})\n      \n    \n\n    \n      \n        \n          \n        \n      \n\n      \n        \n          trek.details.usefulInformation\n          \n        \n      \n\n      \n        \n          trek.details.contact\n          \n          \n             {{ poi.properties.email }} \n          \n          \n             {{ poi.properties.website }} \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi-details.component.scss\n                \n                .card-legend {\n  align-items: flex-end;\n  display: flex;\n  .img-legend {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ poi.properties.name }}                                    {{ poi.properties.pictures[0]?.legend }}        ({{ poi.properties.pictures[0].author }})                                                                            trek.details.usefulInformation                                                trek.details.contact                                 {{ poi.properties.email }}                                  {{ poi.properties.website }}                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pois.html":{"url":"interfaces/Pois.html","title":"interface - Pois","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pois\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressComponent.html":{"url":"components/ProgressComponent.html","title":"component - ProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/progress/progress.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress\n            \n\n            \n                styleUrls\n                ./progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentProgress\n                            \n                            \n                                    Private\n                                currentProgress$\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentProgress$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  changeDetection: ChangeDetectionStrategy.Default,\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss'],\n})\nexport class ProgressComponent {\n  public currentProgress: number;\n  private currentProgress$: Subscription;\n\n  constructor(public offlineTreks: OfflineTreksService, private ref: ChangeDetectorRef) {}\n\n  ionViewWillEnter(): void {\n    this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(val => {\n      this.currentProgress = val;\n      this.ref.detectChanges();\n    });\n  }\n\n  ionViewWillLeave(): void {\n    this.currentProgress$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ 'trek.downloadAlert.loading' | translate }}\n        \n        \n          \n          \n        \n      \n      \n        \n          \n          \n            {{ 'trek.downloadAlert.storage' | translate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./progress.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'trek.downloadAlert.loading\\' | translate }}                                                                                                {{ \\'trek.downloadAlert.storage\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Property.html":{"url":"interfaces/Property.html","title":"interface - Property","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Property\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SearchTreksService\n                \n            \n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentSearchValue\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Private\n                                treks\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                navigateToTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Public\n                                trackTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, searchTreks: SearchTreksService, navParams: NavParams, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchTreks\n                                                  \n                                                        \n                                                                        SearchTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackTrek(index: number, element: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentSearchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTreks | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\n\nimport { MinimalTrek, MinimalTreks, Trek } from '@app/interfaces/interfaces';\nimport { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\n\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchTreksService],\n})\nexport class SearchComponent extends UnSubscribe implements OnInit {\n  public filteredTreks: MinimalTrek[] = [];\n  public currentSearchValue: string;\n  private treks: MinimalTreks | null = null;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private searchTreks: SearchTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    const isOnline = this.navParams.get('isOnline');\n    const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      treksTool.treks$.subscribe(treks => {\n        this.treks = treks;\n        this.filteredTreks = [];\n      }),\n    );\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public search(searchValue: string): void {\n    this.currentSearchValue = searchValue;\n    if (this.treks) {\n      this.filteredTreks = this.searchTreks.search(this.treks.features, searchValue);\n    } else {\n      this.filteredTreks = [];\n    }\n  }\n\n  public navigateToTrek(id: number) {\n    this.modalCtrl.dismiss(id);\n  }\n\n  public trackTrek(index: number, element: Trek): number | null {\n    return element ? element.properties.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'search.title' | translate | uppercase }}\n  \n  \n    \n    \n  \n\n\n\n   0; else loading\">\n    \n      \n        \n        {{ trek.properties.name }}\n      \n    \n  \n\n  \n    \n      \n        \n          {{ 'search.noResult' | translate }}\n        \n        \n          {{ 'search.contentPlaceHolder' | translate }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'search.title\\' | translate | uppercase }}                 0; else loading\">                          {{ trek.properties.name }}                                          {{ \\'search.noResult\\' | translate }}                          {{ \\'search.contentPlaceHolder\\' | translate }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchTreksService.html":{"url":"injectables/SearchTreksService.html","title":"injectable - SearchTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-treks/search-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(treks: MinimalTrek[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search-treks/search-treks.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { MinimalTrek } from '@app/interfaces/interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchTreksService {\n  public search(treks: MinimalTrek[], searchValue: string): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n    if (!searchValue) {\n      return treks;\n    }\n    searchValue = searchValue.toLowerCase();\n    return treks.filter(trek => {\n      return trek.properties.name.toLowerCase().includes(searchValue);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         DataSetting[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataSetting[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Public\n                                filters$\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                order$\n                            \n                            \n                                    Public\n                                storage\n                            \n                            \n                                    Public\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFilters\n                            \n                            \n                                    Public\n                                getHydratedTrek\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getTouristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                getValueForPropertyById\n                            \n                            \n                                    Public\n                                loadSettings\n                            \n                            \n                                    Public\n                                resetFilters\n                            \n                            \n                                    Public\n                                saveFiltersState\n                            \n                            \n                                    Public\n                                saveOrderState\n                            \n                            \n                                    Private\n                                    Async\n                                setOfflineSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: Storage, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings/settings.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilters(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHydratedTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHydratedTrek(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HydratedTrek\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicCategoriesWithFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicCategoriesWithFeatures(touristicContents: TouristicContents)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touristicContents\n                                    \n                                                TouristicContents\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TouristicCategoryWithFeatures[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueForPropertyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueForPropertyById(propertyName: string, id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Property | InformationDesk | TouristicCategorie | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFiltersState(filters: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveOrderState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrderState(order: Order, geolocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    geolocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setOfflineSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOfflineSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            order$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({\n    type: 'default',\n    value: undefined,\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([0, 0])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  Trek,\n  Filter,\n  Settings,\n  DataSetting,\n  HydratedTrek,\n  Property,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  TouristicCategorie,\n  Order,\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public filters$ = new BehaviorSubject(null);\n  public order$ = new BehaviorSubject({\n    type: 'default',\n    value: undefined,\n  });\n  // User location, used for ordering treks by distance\n  public userLocation$ = new BehaviorSubject([0, 0]);\n  public data$ = new BehaviorSubject(null);\n\n  constructor(public http: HttpClient, public storage: Storage, private translate: TranslateService) {}\n\n  public loadSettings() {\n    this.setOfflineSettings();\n\n    this.getSettings().subscribe(async settings => {\n      await this.storage.set('settings', JSON.stringify(settings));\n      this.filters$.next(this.getFilters(settings));\n      this.data$.next(settings.data);\n    });\n  }\n\n  private async setOfflineSettings() {\n    const defaultSettings = JSON.parse(await this.storage.get(`settings`));\n    if (defaultSettings) {\n      this.filters$.next(this.getFilters(defaultSettings));\n      this.data$.next(defaultSettings.data);\n    }\n  }\n\n  private getFilters(settings: Settings) {\n    const filters: Filter[] = [];\n    if (settings && settings.filters && settings.data) {\n      settings.filters.forEach(filter => {\n        const currentDataSetting = settings.data.find((data: DataSetting) => data.id === filter.id);\n        if (currentDataSetting) {\n          filter = { ...filter, ...currentDataSetting, values: [] };\n          filter.values = currentDataSetting.values.map(value => ({\n            ...value,\n            checked: false,\n          }));\n          filters.push(filter);\n        }\n      });\n    }\n\n    return filters;\n  }\n\n  public getSettings(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.http.get(this.apiUrl + '/settings.json', httpOptions);\n  }\n\n  public saveFiltersState(filters: Filter[]): void {\n    this.filters$.next(filters);\n  }\n\n  public saveOrderState(order: Order, geolocation?: number[]): void {\n    this.order$.next({ type: order, value: geolocation });\n  }\n\n  public resetFilters(): void {\n    let filters = cloneDeep(this.filters$.getValue());\n    if (!!filters) {\n      filters.forEach(filter => {\n        filter.values.forEach(value => (value.checked = false));\n      });\n    } else {\n      filters = [];\n    }\n    this.saveFiltersState(filters);\n  }\n\n  private getValueForPropertyById(\n    propertyName: string,\n    id: number | string,\n  ): Property | InformationDesk | TouristicCategorie | string {\n    const dataSetting = this.data$.getValue();\n\n    if (dataSetting) {\n      const property = dataSetting.find(data => data.id === propertyName);\n      if (property) {\n        const propertyValue = property.values.find(value => value.id === id);\n        if (propertyValue) {\n          return propertyValue;\n        } else {\n          return { id: -1, name: '' };\n        }\n      }\n    }\n\n    return { id: -1, name: '' };\n  }\n\n  public getHydratedTrek(trek: Trek): HydratedTrek {\n    const hydratedTrek: HydratedTrek = cloneDeep(trek) as any;\n\n    if (trek.properties.difficulty) {\n      hydratedTrek.properties.difficulty = this.getValueForPropertyById(\n        'difficulty',\n        trek.properties.difficulty,\n      ) as Property;\n    }\n\n    if (trek.properties.practice) {\n      hydratedTrek.properties.practice = this.getValueForPropertyById('practice', trek.properties.practice) as Property;\n    }\n\n    if (trek.properties.route) {\n      hydratedTrek.properties.route = this.getValueForPropertyById('route', trek.properties.route) as Property;\n    }\n\n    if (trek.properties.departure_city) {\n      hydratedTrek.properties.departure_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.departure_city,\n      ) as Property;\n    }\n\n    if (trek.properties.arrival_city) {\n      hydratedTrek.properties.arrival_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.arrival_city,\n      ) as Property;\n    }\n\n    if (trek.properties.cities) {\n      hydratedTrek.properties.cities = trek.properties.cities.map(\n        city => this.getValueForPropertyById('cities', city) as Property,\n      );\n    }\n\n    if (trek.properties.networks) {\n      hydratedTrek.properties.networks = trek.properties.networks.map(\n        network => this.getValueForPropertyById('networks', network) as Property,\n      );\n    }\n\n    if (trek.properties.themes) {\n      hydratedTrek.properties.themes = trek.properties.themes.map(\n        theme => this.getValueForPropertyById('themes', theme) as Property,\n      );\n    }\n\n    if (trek.properties.information_desks) {\n      hydratedTrek.properties.information_desks.forEach(information_desk => {\n        information_desk.type = this.getValueForPropertyById(\n          'information_desk_types',\n          information_desk.type as number,\n        ) as Property;\n      });\n    }\n\n    return hydratedTrek;\n  }\n\n  public getTouristicCategoriesWithFeatures(touristicContents: TouristicContents): TouristicCategoryWithFeatures[] {\n    const touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[] = [];\n    const categories = touristicContents.features\n      .map(touristicContent => touristicContent.properties.category)\n      .filter((v, i, a) => a.indexOf(v) === i);\n    categories.forEach(categoryId => {\n      const category = this.getValueForPropertyById('touristiccontent_categories', categoryId) as TouristicCategorie;\n      touristicCategoriesWithFeatures.push({\n        id: categoryId,\n        name: category ? category.name : '',\n        features: touristicContents.features.filter(\n          touristicContent => touristicContent.properties.category === categoryId,\n        ),\n      });\n    });\n    return touristicCategoriesWithFeatures;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { GeolocateNotificationsComponent } from '@app/components/geolocate-notifications/geolocate-notifications.component';\nimport { MapTrekVizComponent } from '@app/components/map-trek-viz/map-trek-viz.component';\nimport { MapTreksVizComponent } from '@app/components/map-treks-viz/map-treks-viz.component';\n\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n  imports: [CommonModule, IonicModule, TranslateModule.forChild()],\n  exports: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedTreksModule.html":{"url":"modules/SharedTreksModule.html","title":"module - SharedTreksModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedTreksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PoiComponent } from '@app/components/poi/poi.component';\nimport { TrekCardComponent } from '@app/components/trek-card/trek-card.component';\n\n@NgModule({\n  declarations: [PoiComponent, TrekCardComponent],\n  imports: [CommonModule, IonicModule, RouterModule, TranslateModule.forChild()],\n  exports: [PoiComponent, TrekCardComponent],\n})\nexport class SharedTreksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapsibleListComponent } from '@app/components/collapsible-list/collapsible-list.component';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectErrorComponent } from '@app/components/connect-error/connect-error.component';\nimport { LoaderComponent } from '@app/components/loader/loader.component';\n\n@NgModule({\n  declarations: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n  imports: [CommonModule, IonicModule, RouterModule],\n  exports: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tabs/tabs.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss'],\n})\nexport class TabsPage {\n  constructor(private platform: Platform, private router: Router, private location: Location) {\n    this.platform.backButton.subscribeWithPriority(9999, () => {\n      const url = this.router.url;\n      if (url !== '/app/tabs/treks' && url !== '/app/tabs/treks-offline' && url !== '/app/tabs/more') {\n        this.location.back();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'tabbar.treks' | translate }}\n    \n    \n      \n      {{ 'tabbar.offline' | translate }}\n    \n    \n      \n      {{ 'tabbar.more' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'tabbar.treks\\' | translate }}                    {{ \\'tabbar.offline\\' | translate }}                    {{ \\'tabbar.more\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MorePageModule\n                        \n                        \n                            SharedUiModule\n                        \n                        \n                            TabsPageRoutingModule\n                        \n                        \n                            TreksPageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\nimport { TabsPageRoutingModule } from './tabs.routing.module';\nimport { TreksPageModule } from '../treks/treks.module';\nimport { MorePageModule } from '../more/more.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n    TreksPageModule,\n    MorePageModule,\n    TranslateModule.forChild(),\n    SharedUiModule,\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { TreksPage } from '../treks/treks.page';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'treks',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n          },\n        ],\n      },\n      {\n        path: 'treks-offline',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            data: { offline: true },\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true },\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n            data: { offline: true },\n          },\n        ],\n      },\n      {\n        path: 'more',\n        children: [\n          {\n            path: '',\n            loadChildren: '../more/more.module#MorePageModule',\n          },\n          {\n            path: ':moreItemId',\n            loadChildren: '../more/more-item/more-item.module#MoreItemPageModule',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: '',\n    redirectTo: '/app/tabs/treks',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TabsPageRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategorie.html":{"url":"interfaces/TouristicCategorie.html","title":"interface - TouristicCategorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategoryWithFeatures.html":{"url":"interfaces/TouristicCategoryWithFeatures.html","title":"interface - TouristicCategoryWithFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategoryWithFeatures\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContent.html":{"url":"interfaces/TouristicContent.html","title":"interface - TouristicContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContents.html":{"url":"interfaces/TouristicContents.html","title":"interface - TouristicContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvent.html":{"url":"interfaces/TouristicEvent.html","title":"interface - TouristicEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvents.html":{"url":"interfaces/TouristicEvents.html","title":"interface - TouristicEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trek.html":{"url":"interfaces/Trek.html","title":"interface - Trek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Trek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         TrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekCardComponent.html":{"url":"components/TrekCardComponent.html","title":"component - TrekCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrekCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trek-card/trek-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-card\n            \n\n            \n                styleUrls\n                ./trek-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hydratedTrek\n                            \n                            \n                                    Public\n                                imgPracticeSrc\n                            \n                            \n                                    Public\n                                imgSrc\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                routerLink\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickDeleteConfirm\n                            \n                            \n                                    Private\n                                    Async\n                                deleteTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                presentDeleteConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                offline\n                            \n                            \n                                showAllData\n                            \n                            \n                                trek\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, loadingController: LoadingController, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, settings: SettingsService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trek-card/trek-card.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trek\n                    \n                \n                \n                    \n                        Type :         Trek\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickDeleteConfirm($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            deleteTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTrek()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            presentDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentDeleteConfirm(isAlert?: boolean, alertMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAlert\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alertMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hydratedTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HydratedTrek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgPracticeSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routerLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Trek, HydratedTrek, Picture } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trek-card',\n  templateUrl: './trek-card.component.html',\n  styleUrls: ['./trek-card.component.scss'],\n})\nexport class TrekCardComponent implements OnInit {\n  @Input() public trek: Trek;\n  @Input() public offline = false;\n  @Input() public showAllData: boolean;\n  public hydratedTrek: HydratedTrek;\n  public imgSrc: string;\n  public routerLink: string;\n  public imgPracticeSrc: string;\n\n  constructor(\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    public settings: SettingsService,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    this.hydratedTrek = this.settings.getHydratedTrek(this.trek);\n    if (this.offline) {\n      this.imgSrc = this.offlineTreks.getTrekImageSrc(this.trek);\n      this.imgPracticeSrc = this.offlineTreks.getTrekImageSrc(\n        {} as Trek,\n        {\n          url: this.hydratedTrek.properties.practice.pictogram,\n        } as Picture,\n      );\n    } else {\n      this.imgSrc = this.onlineTreks.getTrekImageSrc(this.trek);\n      this.imgPracticeSrc = this.onlineTreks.getTrekImageSrc(\n        {} as Trek,\n        {\n          url: this.hydratedTrek.properties.practice.pictogram,\n        } as Picture,\n      );\n    }\n\n    this.routerLink = `/app/tabs/treks${this.offline ? '-offline' : ''}/trek-details/${this.trek.properties.id}`;\n  }\n\n  public clickDeleteConfirm($event: Event) {\n    $event.stopPropagation();\n    this.presentDeleteConfirm();\n  }\n\n  private async deleteTrek() {\n    const translationTrekCard = await this.translate.get('trekCard').toPromise();\n\n    const loader = await this.loadingController.create({\n      message: translationTrekCard.deletionInProgress,\n    });\n    await loader.present();\n\n    this.offlineTreks.removeTrek(this.trek.properties.id, true).subscribe(trekRemoved => {\n      loader.dismiss();\n      this.presentDeleteConfirm(\n        true,\n        trekRemoved ? translationTrekCard.trekIsDelete : translationTrekCard.errorWhileDeleting,\n      );\n    });\n  }\n\n  private async presentDeleteConfirm(isAlert?: boolean, alertMsg?: string) {\n    const translationTrekCard = await this.translate.get('trekCard').toPromise();\n    const deleteConfirm = await this.alertController.create({\n      header: translationTrekCard.deleteTitle,\n      message: isAlert ? alertMsg : translationTrekCard.askDelete,\n      buttons: isAlert\n        ? [translationTrekCard.confirmButton]\n        : [\n            {\n              text: translationTrekCard.cancelButton,\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: translationTrekCard.deleteLabel,\n              handler: () => {\n                this.deleteTrek();\n              },\n            },\n          ],\n    });\n\n    await deleteConfirm.present();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n  \n    \n    \n      {{ hydratedTrek.properties?.name }}\n    \n  \n  \n    \n      \n        {{ 'treks.departure' | translate }}\n        \n          {{ hydratedTrek.properties.departure_city?.name }}\n        \n        {{ hydratedTrek.properties.departure }}\n      \n      \n        \n          \n        \n        {{ hydratedTrek.properties.difficulty?.name }}\n        \n          {{ hydratedTrek.properties.duration | number: '1.0-0' }}h 0\"\n            >{{ 60 * (hydratedTrek.properties.duration % 1).toFixed(1) }}min\n        \n        = 24 && showAllData\">\n          {{ hydratedTrek.properties.duration / 24 | number: '1.0-0' }}j\n        \n        \n          {{ hydratedTrek.properties.length / 1000 | number: '1.2-2' }} km\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-card.component.scss\n                \n                .trash-button {\n  position: absolute;\n  z-index: 10;\n  top: 12px;\n  right: 12px;\n}\n\n.extand-card {\n  height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.picto-practice {\n  max-width: 24px;\n  max-height: 24px;\n}\n\n.extra-content-card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ hydratedTrek.properties?.name }}                          {{ \\'treks.departure\\' | translate }}                  {{ hydratedTrek.properties.departure_city?.name }}                {{ hydratedTrek.properties.departure }}                                              {{ hydratedTrek.properties.difficulty?.name }}                  {{ hydratedTrek.properties.duration | number: \\'1.0-0\\' }}h 0\"            >{{ 60 * (hydratedTrek.properties.duration % 1).toFixed(1) }}min                = 24 && showAllData\">          {{ hydratedTrek.properties.duration / 24 | number: \\'1.0-0\\' }}j                          {{ hydratedTrek.properties.length / 1000 | number: \\'1.2-2\\' }} km                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekContext.html":{"url":"interfaces/TrekContext.html","title":"interface - TrekContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonSrc\n                                \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        originalTrek\n                                \n                                \n                                        pois\n                                \n                                \n                                        touristicCategoriesWithFeatures\n                                \n                                \n                                        touristicContents\n                                \n                                \n                                        touristicEvents\n                                \n                                \n                                        trek\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonSrc\n                                    \n                                \n                                \n                                    \n                                        commonSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     MapboxOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MapboxOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalTrek\n                                    \n                                \n                                \n                                    \n                                        originalTrek:         Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Pois\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pois\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicCategoriesWithFeatures\n                                    \n                                \n                                \n                                    \n                                        touristicCategoriesWithFeatures:         TouristicCategoryWithFeatures[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicCategoryWithFeatures[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicContents\n                                    \n                                \n                                \n                                    \n                                        touristicContents:         TouristicContents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicEvents\n                                    \n                                \n                                \n                                    \n                                        touristicEvents:         TouristicEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trek\n                                    \n                                \n                                \n                                    \n                                        trek:         HydratedTrek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TrekContextResolver.html":{"url":"guards/TrekContextResolver.html","title":"guard - TrekContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TrekContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/trek.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, router: Router, settingsService: SettingsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/trek.resolver.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/trek.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Pois,\n  Trek,\n  HydratedTrek,\n  TrekContext,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class TrekContextResolver implements Resolve {\n  constructor(\n    private loading: LoadingService,\n    private offlineTreks: OfflineTreksService,\n    private onlineTreks: OnlineTreksService,\n    private router: Router,\n    private settingsService: SettingsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const trekId = +(route.paramMap.get('trekId'));\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n    return forkJoin(\n      treksService.getTrekById(trekId),\n      treksService.getPoisForTrekById(trekId),\n      treksService.getTouristicContentsForTrekById(trekId),\n      treksService.getTouristicEventsForTrekById(trekId),\n    ).pipe(\n      map(\n        ([trek, pois, touristicContents, touristicEvents]: [\n          Trek | null,\n          Pois,\n          TouristicContents,\n          TouristicEvents\n        ]): TrekContext | null => {\n          if (trek === null) {\n            this.router.navigate(['/']);\n            console.error('No trek found: ', trekId);\n            return null;\n          } else {\n            const mapConfig: MapboxOptions = treksService.getMapConfigForTrekById(trek, offline);\n            const hydratedTrek: HydratedTrek = this.settingsService.getHydratedTrek(trek);\n            const commonSrc = treksService.getCommonImgSrc();\n            const touristicCategoriesWithFeatures = this.settingsService.getTouristicCategoriesWithFeatures(\n              touristicContents,\n            );\n\n            if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n              this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}  ${trek.properties.name}`);\n            }\n\n            return {\n              treksTool: treksService,\n              offline: offline,\n              originalTrek: trek,\n              trek: hydratedTrek,\n              pois,\n              touristicContents,\n              touristicCategoriesWithFeatures,\n              touristicEvents,\n              mapConfig,\n              commonSrc,\n            };\n          }\n        },\n      ),\n      catchError((error: HttpErrorResponse) => {\n        this.loading.finish(); // there are two requests. finish loading if one fails\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekDetailsPageModule.html":{"url":"modules/TrekDetailsPageModule.html","title":"module - TrekDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekDetailsPageModule_imports\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-details/trek-details.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TrekDetailsPage } from './trek-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    },\n    component: TrekDetailsPage,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedTreksModule, SharedUiModule,\n    TranslateModule.forChild(),\n  ],\n  declarations: [\n    TrekDetailsPage,\n  ],\n})\nexport class TrekDetailsPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekMapPage.html":{"url":"components/TrekMapPage.html","title":"component - TrekMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrekMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/trek-map/trek-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-map\n            \n\n            \n                styleUrls\n                ./trek-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                connectionError\n                            \n                            \n                                    Public\n                                currentPois\n                            \n                            \n                                    Public\n                                currentTrek\n                            \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                modalPoiDetails\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                touristicCategoriesWithFeatures\n                            \n                            \n                                    Public\n                                trekUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                presentInformationDeskDetails\n                            \n                            \n                                    Public\n                                    Async\n                                presentPoiDetails\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, modalController: ModalController, route: ActivatedRoute, router: Router, settings: SettingsService, platform: Platform, popoverCtrl: PopoverController, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/trek-map/trek-map.page.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInformationDeskDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInformationDeskDetails(informationDesk: InformationDesk)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    informationDesk\n                                    \n                                                InformationDesk\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentPoiDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPoiDetails(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPois\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pois\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HydratedTrek | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalPoiDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLIonModalElement | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicCategoryWithFeatures[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trekUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ModalController, Platform, PopoverController } from '@ionic/angular';\n\nimport { MapboxOptions } from 'mapbox-gl';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport {\n  HydratedTrek,\n  Poi,\n  Pois,\n  TrekContext,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n} from '@app/interfaces/interfaces';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-trek-map',\n  templateUrl: './trek-map.page.html',\n  styleUrls: ['./trek-map.page.scss'],\n})\nexport class TrekMapPage extends UnSubscribe implements OnDestroy {\n  public currentTrek: HydratedTrek | null = null;\n  public currentPois: Pois;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public loader = true;\n  public trekUrl = '';\n  public connectionError = false;\n  public modalPoiDetails: HTMLIonModalElement | null;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public offline = false;\n\n  constructor(\n    private loading: LoadingService,\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public settings: SettingsService,\n    private platform: Platform,\n    private popoverCtrl: PopoverController,\n    private location: Location\n  ) {\n    super();\n  }\n\n  ionViewDidEnter(): void {\n    this.loading.begin('trek-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe(\n        (data: Data): void => {\n          const context: TrekContext | 'connectionError' = data.context;\n          if (context === 'connectionError') {\n            this.connectionError = true;\n            this.loading.finish('trek-map'); // if there is a connection error, map won't be loaded\n          } else {\n            this.connectionError = false;\n            this.offline = context.offline;\n            this.currentTrek = context.trek;\n            this.currentPois = context.pois;\n            this.touristicCategoriesWithFeatures = context.touristicCategoriesWithFeatures;\n            this.mapConfig = context.mapConfig;\n            this.commonSrc = context.treksTool.getCommonImgSrc();\n            this.trekUrl = context.treksTool.getTrekDetailsUrl((this.currentTrek as any).properties.id);\n          }\n        },\n      ),\n    );\n\n    if (this.platform.is('android')) {\n      this.subscriptions$$.push(\n        this.platform.backButton.subscribeWithPriority(99999, async () => {\n          // close popover\n          try {\n            const popover = await this.popoverCtrl.getTop();\n            if (popover) {\n              popover.dismiss();\n              return;\n            }\n\n            const modal = await this.modalController.getTop();\n            if (modal) {\n              modal.dismiss();\n              return;\n            }\n\n            this.location.back();\n          } catch (error) {\n          }\n        })\n      )\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  public async presentPoiDetails(poi: Poi): Promise {\n    if (this.modalPoiDetails) {\n      await this.modalPoiDetails.dismiss();\n    }\n\n    this.modalPoiDetails = await this.modalController.create({\n      component: PoiDetailsComponent,\n      componentProps: { poi, offline: this.offline, commonSrc: this.commonSrc },\n    });\n\n    this.modalPoiDetails.onDidDismiss().then(() => {\n      this.modalPoiDetails = null;\n    });\n\n    return await this.modalPoiDetails.present();\n  }\n\n  public async presentInformationDeskDetails(informationDesk: InformationDesk): Promise {\n    const modal = await this.modalController.create({\n      component: InformationDeskDetailsComponent,\n      componentProps: { informationDesk },\n    });\n    return await modal.present();\n  }\n\n  public mapIsLoaded(event: Event): void {\n    this.loading.finish('trek-map');\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ currentTrek!.properties.name }}\n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-map.page.scss\n                \n                .bottom-container {\n  z-index: 8;\n  position: absolute;\n  bottom: 0;\n  padding: 5%;\n  width: 100%;\n}\n\nion-header {\n  .custom-title {\n    padding-left: 20px;\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: 0.0125em;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ currentTrek!.properties.name }}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekMapPageModule.html":{"url":"modules/TrekMapPageModule.html","title":"module - TrekMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TrekMapPageModule_imports\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-map/trek-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TrekMapPage } from './trek-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrekMapPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n  ],\n  declarations: [TrekMapPage],\n})\nexport class TrekMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekProperties.html":{"url":"interfaces/TrekProperties.html","title":"interface - TrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MinimalTrekProperties\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        duration\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        networks\n                                \n                                \n                                        pictures\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksContext.html":{"url":"interfaces/TreksContext.html","title":"interface - TreksContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TreksContextResolver.html":{"url":"guards/TreksContextResolver.html","title":"guard - TreksContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TreksContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/treks.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/treks.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/treks.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nimport { TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\n@Injectable()\nexport class TreksContextResolver implements Resolve {\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n    const mapConfig =\n      offline && (this.platform.is('ios') || this.platform.is('android'))\n        ? environment.offlineMapConfig\n        : environment.onlineMapConfig;\n\n    if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n      this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}`);\n    }\n\n    return of({\n      treksTool: treksService,\n      offline: offline,\n      mapConfig,\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksMapPage.html":{"url":"components/TreksMapPage.html","title":"component - TreksMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TreksMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/treks-map/treks-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                FilterTreksService\n                \n            \n\n\n            \n                selector\n                app-treks-map\n            \n\n            \n                styleUrls\n                ./treks-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Public\n                                isInView\n                            \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Private\n                                mergeFiltersTreks$\n                            \n                            \n                                    Public\n                                noNetwork\n                            \n                            \n                                    Public\n                                numberOfActiveFilters\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                treksUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ionViewDidLeave\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentFilters\n                            \n                            \n                                    Public\n                                    Async\n                                presentSearch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, filterTreks: FilterTreksService, modalController: ModalController, onlineTreks: OnlineTreksService, router: Router, route: ActivatedRoute, settings: SettingsService, network: Network, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/treks-map/treks-map.page.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(loaded: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loaded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInView\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeFiltersTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberOfActiveFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { environment } from '@env/environment';\nimport { unsubscribe, UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { MinimalTrek, TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, mergeMap, first, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-treks-map',\n  templateUrl: './treks-map.page.html',\n  styleUrls: ['./treks-map.page.scss'],\n  providers: [FilterTreksService],\n})\nexport class TreksMapPage extends UnSubscribe implements OnInit, OnDestroy {\n  private mergeFiltersTreks$: Subscription;\n  public filteredTreks: MinimalTrek[];\n  public numberOfActiveFilters: string;\n  public offline: boolean;\n  private treksTool: TreksService;\n  public isInView = false;\n  public treksUrl: string;\n  public appName: string = environment.appName;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public currentPosition$: Subscription;\n  public noNetwork = false;\n  public loaderStatus: Boolean;\n\n  constructor(\n    public loading: LoadingService,\n    private filterTreks: FilterTreksService,\n    private modalController: ModalController,\n    public onlineTreks: OnlineTreksService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public settings: SettingsService,\n    private network: Network,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.loading.begin('treks-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe(data => {\n        const context: TreksContext = data.context;\n        this.offline = context.offline;\n        this.treksTool = context.treksTool;\n        this.treksUrl = this.treksTool.getTreksUrl();\n        this.mapConfig = cloneDeep(context.mapConfig);\n        this.commonSrc = this.treksTool.getCommonImgSrc();\n      }),\n      this.onlineTreks.onlineTreksError$.subscribe(error => {\n        if (!!error) {\n          this.loading.finish(); // if there was a connection error, map could not be loaded\n        }\n      }),\n      this.loading.status.pipe(delay(0)).subscribe(status => (this.loaderStatus = status)),\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  ionViewWillEnter(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n\n  ionViewDidEnter(): void {\n    this.mapIsLoaded(false);\n    this.mergeFiltersTreks$ = combineLatest(\n      this.route.data.pipe(\n        first(),\n        map(data => data.context),\n        mergeMap((context: TreksContext) => context.treksTool.filteredTreks$),\n      ),\n      this.filterTreks.activeFiltersNumber$,\n    ).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n      this.numberOfActiveFilters = numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n      this.filteredTreks = filteredTreks;\n      this.isInView = true;\n    });\n    this.subscriptions$$.push(this.mergeFiltersTreks$);\n  }\n\n  ionViewDidLeave(): void {\n    this.isInView = false;\n    unsubscribe(this.mergeFiltersTreks$);\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public mapIsLoaded(loaded: boolean): void {\n    if (loaded) {\n      this.loading.finish('treks-map');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n   0)\n    \"\n  >\n    \n      \n        \n          \n            {{ 'toolbar.filters' | translate }} {{ numberOfActiveFilters }}\n          \n            {{ 'toolbar.search' | translate }}\n        \n      \n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-map.page.scss\n                \n                .custom-button {\n  width: 100px;\n  text-transform: capitalize;\n}\n\n.button-margin-left {\n  margin-left: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}      0)    \"  >                                        {{ \\'toolbar.filters\\' | translate }} {{ numberOfActiveFilters }}                      {{ \\'toolbar.search\\' | translate }}                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksMapPageModule.html":{"url":"modules/TreksMapPageModule.html","title":"module - TreksMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule_imports\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks-map/treks-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TreksMapPage } from './treks-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TreksMapPage,\n    resolve: {\n      context: TreksContextResolver\n    }\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedModule, SharedUiModule, TranslateModule.forChild()],\n  declarations: [TreksMapPage],\n})\nexport class TreksMapPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksOrderComponent.html":{"url":"components/TreksOrderComponent.html","title":"component - TreksOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreksOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/treks-order/treks-order.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treks-order\n            \n\n            \n                styleUrls\n                ./treks-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-order.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentOrder\n                            \n                            \n                                isFirstCheck\n                            \n                            \n                                orders\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                    Async\n                                treksOrderChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams, settings: SettingsService, platform: Platform, backgroundGeolocation: BackgroundGeolocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            treksOrderChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    treksOrderChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirstCheck\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\nimport { NavParams, Platform } from '@ionic/angular';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Order } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-treks-order',\n  templateUrl: './treks-order.component.html',\n  styleUrls: ['./treks-order.component.scss'],\n})\nexport class TreksOrderComponent extends UnSubscribe {\n  orders: any;\n  currentOrder: Order;\n  isFirstCheck = true;\n\n  constructor(\n    private navParams: NavParams,\n    private settings: SettingsService,\n    private platform: Platform,\n    private backgroundGeolocation: BackgroundGeolocation,\n  ) {\n    super();\n  }\n\n  ionViewWillEnter() {\n    this.orders = this.navParams.get('orders');\n\n    this.subscriptions$$.push(\n      this.settings.order$.subscribe(order => {\n        this.currentOrder = order.type;\n      }),\n    );\n  }\n\n  public async treksOrderChange(event: any) {\n    if (!this.isFirstCheck) {\n      if (event.detail.value === 'location') {\n        if (this.platform.is('ios') || this.platform.is('android')) {\n          const startLocation = await this.backgroundGeolocation.getCurrentLocation();\n          if (startLocation) {\n            this.settings.saveOrderState(event.detail.value, [startLocation.longitude, startLocation.latitude]);\n          } else {\n            // If location not provided, reset default order\n            this.settings.saveOrderState('default');\n          }\n        } else if ('geolocation' in navigator) {\n          navigator.geolocation.getCurrentPosition(position => {\n            this.settings.saveOrderState(event.detail.value, [position.coords.longitude, position.coords.latitude]);\n          });\n        }\n      } else {\n        this.settings.saveOrderState(event.detail.value);\n      }\n    } else {\n      this.isFirstCheck = false;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'toolbar.orderTitle' | translate }}\n    \n    \n      {{ order.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-order.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'toolbar.orderTitle\\' | translate }}              {{ order.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksPageModule.html":{"url":"modules/TreksPageModule.html","title":"module - TreksPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\ncluster_TreksPageModule_imports\n\n\n\n\nTreksPage\n\nTreksPage\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks/treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { RouterModule } from '@angular/router';\nimport { TreksPage } from './treks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedTreksModule,\n    SharedUiModule,\n    RouterModule.forChild([]),\n    TranslateModule.forChild(),\n  ],\n  declarations: [TreksPage],\n})\nexport class TreksPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksService.html":{"url":"interfaces/TreksService.html","title":"interface - TreksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filteredTreks$\n                                \n                                \n                                        offline\n                                \n                                \n                                        treks$\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCommonImgSrc\n                                \n                                \n                                    getMapConfigForTrekById\n                                \n                                \n                                    getPoisForTrekById\n                                \n                                \n                                    getTouristicContentsForTrekById\n                                \n                                \n                                    getTouristicEventsForTrekById\n                                \n                                \n                                    getTrekById\n                                \n                                \n                                    getTrekDetailsUrl\n                                \n                                \n                                    getTrekImageSrc\n                                \n                                \n                                    getTrekMapUrl\n                                \n                                \n                                    getTreksMapUrl\n                                \n                                \n                                    getTreksUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetMapConfigForTrekById(trek: Trek, isOffline: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isOffline\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoisForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicContentsForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicEventsForTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekDetailsUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekMapUrl(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredTreks$\n                                    \n                                \n                                \n                                    \n                                        filteredTreks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treks$\n                                    \n                                \n                                \n                                    \n                                        treks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number): Observable;\n  getPoisForTrekById(id: number): Observable;\n  getTouristicContentsForTrekById(id: number): Observable;\n  getTouristicEventsForTrekById(id: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnSubscribe.html":{"url":"classes/UnSubscribe.html","title":"class - UnSubscribe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnSubscribe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/abstract/unsubscribe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nexport class UnSubscribe implements OnInit, OnDestroy {\n  protected subscriptions$$: Subscription[];\n\n  constructor() {\n    this.subscriptions$$ = [];\n  }\n\n  ngOnInit() {\n    if (!!this.subscriptions$$) {\n      this.subscriptions$$ = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$$.forEach((subscription: Subscription) => unsubscribe(subscription));\n    this.subscriptions$$ = [];\n  }\n\n}\n\nexport function unsubscribe(subscription: Subscription) {\n  if (subscription && subscription.unsubscribe) {\n    subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            class\n            UnSubscribe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            function\n            unsubscribe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/animations.ts\n            \n            variable\n            expandCollapse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/collapsible-list/collapsible-list.component.ts\n            \n            component\n            CollapsibleListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/connect-error/connect-error.component.ts\n            \n            component\n            ConnectErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter-value/filter-value.component.ts\n            \n            component\n            FilterValueComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            component\n            GeolocateNotificationsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/information-desk-details/information-desk-details.component.ts\n            \n            component\n            InformationDeskDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/layers-visibility/layers-visibility.component.ts\n            \n            component\n            LayersVisibilityComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            component\n            MapTrekVizComponent\n            \n                6 %\n                (2/29)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            component\n            MapTreksVizComponent\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/poi-details/poi-details.component.ts\n            \n            component\n            PoiDetailsComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/poi/poi.component.ts\n            \n            component\n            PoiComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/progress/progress.component.ts\n            \n            component\n            ProgressComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/trek-card/trek-card.component.ts\n            \n            component\n            TrekCardComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/treks-order/treks-order.component.ts\n            \n            component\n            TreksOrderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            ContainsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            DataSetting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            FilterValue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrekProperties\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationDesk\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationIntro\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationItem\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            IntervalFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrekProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTreks\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Poi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Pois\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Property\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Settings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategorie\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategoryWithFeatures\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Trek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekContext\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekProperties\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/more/more-item/more-item.page.ts\n            \n            component\n            MoreItemPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/more/more.page.ts\n            \n            component\n            MorePage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/trek-details/trek-details.page.ts\n            \n            component\n            TrekDetailsPage\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/pages/trek-map/trek-map.page.ts\n            \n            component\n            TrekMapPage\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/pages/treks-map/treks-map.page.ts\n            \n            component\n            TreksMapPage\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/pages/treks/treks.page.ts\n            \n            component\n            TreksPage\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/resolvers/more-item.resolver.ts\n            \n            guard\n            MoreItemResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/more.resolver.ts\n            \n            guard\n            MoreResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/trek.resolver.ts\n            \n            guard\n            TrekContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/treks.resolver.ts\n            \n            guard\n            TreksContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            injectable\n            FilterTreksService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/geolocate/geolocate.service.ts\n            \n            injectable\n            GeolocateService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/more-informations/more-informations.service.ts\n            \n            injectable\n            MoreInformationsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            injectable\n            OfflineTreksService\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            injectable\n            OnlineTreksService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/search-treks/search-treks.service.ts\n            \n            injectable\n            SearchTreksService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/variables.ts\n            \n            variable\n            primaryColor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/background-geolocation : ^5.8.0\n        \n            @ionic-native/core : ^5.8.0\n        \n            @ionic-native/file : ^5.8.0\n        \n            @ionic-native/firebase-analytics : ^5.8.0\n        \n            @ionic-native/globalization : ^5.8.0\n        \n            @ionic-native/ionic-webview : ^5.8.0\n        \n            @ionic-native/local-notifications : ^5.8.0\n        \n            @ionic-native/network : ^5.8.0\n        \n            @ionic-native/screen-orientation : ^5.8.0\n        \n            @ionic-native/social-sharing : ^5.8.0\n        \n            @ionic-native/splash-screen : ^5.8.0\n        \n            @ionic-native/status-bar : ^5.8.0\n        \n            @ionic-native/zip : ^5.8.0\n        \n            @ionic/angular : ^4.6.1-dev.201907022006.a656dad\n        \n            @ionic/storage : ^2.2.0\n        \n            @mauron85/cordova-plugin-background-geolocation : ^3.0.3\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @turf/distance : ^6.0.1\n        \n            @turf/helpers : ^6.1.4\n        \n            @types/lodash.clonedeep : ^4.5.6\n        \n            @types/mapbox-gl : ^0.51.7\n        \n            cordova-android : ^8.0.0\n        \n            cordova-android-play-services-gradle-release : 3.0.0\n        \n            cordova-ios : 5.0.1\n        \n            cordova-plugin-badge : ^0.8.8\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : 6.0.1\n        \n            cordova-plugin-globalization : 1.11.0\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^4.1.1\n        \n            cordova-plugin-local-notification : git+https://github.com/Steffaan/cordova-plugin-local-notifications.git\n        \n            cordova-plugin-mauron85-background-geolocation : 3.0.1\n        \n            cordova-plugin-network-information : 2.0.1\n        \n            cordova-plugin-screen-orientation : 3.0.1\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-plugin-x-socialsharing : 5.4.4\n        \n            cordova-plugin-zip : 3.1.0\n        \n            cordova-sqlite-storage : 3.0.0\n        \n            cordova-support-android-plugin : ^1.0.1\n        \n            cordova-support-google-services : 1.3.1\n        \n            core-js : ^2.6.9\n        \n            es6-promise-plugin : 4.2.2\n        \n            lodash.clonedeep : ^4.5.0\n        \n            mapbox-gl : ^0.53.1\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            unsubscribe   (src/.../unsubscribe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/components/abstract/unsubscribe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGeotrek Mobile\nMobile application of Geotrek Rando (http://geotrek.fr).\nINSTALLATION\nBefore proceeding, make sure the latest version of Node.js and npm are installed\nnpm install -g ionic@5.1.0\n\nnpm install -g cordova@9.0.0\n\ngit clone git@github.com:GeotrekCE/Geotrek-mobile.git\n\ncd Geotrek-mobile\n\nnpm installRUN THE APP IN THE BROWSER\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.ts' with your personal api url\nionic serveRUN THE APP ON DEVICE\n/!\\ The run argument build the apk, then install it on the device\niOS\nNeed iOS environment setup available only on macOS\nionic cordova run iosAndroid\nNeed Android environment setup available on Windows, macOS and Linux\nionic cordova run androidBUILD RELEASE APP\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.prod.ts' with your personal api url\n/!\\ The build argument just build the apk, but don't install it on the device\niOS\nionic cordova build ios --prod --releaseAndroid\nionic cordova build android --prod --releaseCUSTOMIZATION OPTIONS\nYou can find below all available options. You can easily overwrite them to customize your app.\nconfig.xml\nApp id\nApp name\nGeotrek Startersrc/environments/environment.ts & environment.prod.ts\nYou can overwrite a lot of options inside these files:AppName (header of the app) , availableLanguage, api url, map options and more\nenvironment.prod.ts will be use for developmentenvironment.prod.ts will be use for release app\nsrc/assets/i18n\nYou can find all the internationalization ressources here (by default Fr and En)\nsrc/assets/map/icons/\nLocal icons to display on the map, like departure or parking icon\nsrc/assets/map/zone/zone.geojson\nGeosjon to display on the mapGenerally represents the limits of the geographical area of the application\nsrc/theme/variables.scss\nColors that will be usedThe most important point here is the primary color to customize your application\nicons and splashscreen\n\nThe source image for icons should ideally be at least 1024×1024px and located in resources/icon.png\n\nThe source image for splash screens should ideally be at least 2732×2732px and located in resources/splash.png. For best results, the splash screen's artwork should roughly fit within a square (1200×1200px) at the center of the image.\n\n\nThen you just have to run\nionic cordova resourcesOther resources\n\nAll others resources are provided by the api\nWe download a global package for offline mode when user downloads his first trek\n\nFirebase Analytics Configuration\nIn order to use Firebase analytics, you had to create a Firebase App.\n\nThen store google-services.json and GoogleService-Info.plist in ./Analytics/\nIn config.xml, add\n\n\n    \n    ...\n  \n  \n    \n    ...\n  \n\nSet true to useFirebase variable in environment files\n\nRemove Firebase Analytics\nIn order to build the app without Firebase you had to\n\nSet false to useFirebase variable in environment files\n\nRun this list of command\n(If you add platforms previously, be sure to delete them)\n\n\n```\n    ionic cordova platform rm android\nionic cordova platform rm ios\n\nionic cordova plugin rm cordova-plugin-firebase-analytics\n\nionic cordova plugin rm cordova-android-play-services-gradle-release\n\nionic cordova plugin rm cordova-support-google-services\n\nionic cordova plugin rm cordova-support-android-plugin\n\nionic cordova platform add android\n\nionic cordova build android```\nDocumentation\nAccess to extensive documentation\nLICENCE\n\nOpenSource - BSD\nCopyright (c) Makina Corpus - Parc National des Écrins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2019, Makina Corpus\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoreItemPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MorePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedTreksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nAppModule -->\n\nFilterComponent->AppModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nAppModule -->\n\nFilterValueComponent->AppModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nAppModule -->\n\nFiltersComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nAppModule -->\n\nSharedUiModule->AppModule\n\n\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nMorePage\n\nMorePage\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nTreksPage\n\nTreksPage\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    29 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        40 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    Order\n                \n            \n            \n                \n                        \"default\" | \"location\" | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneDeep   (src/.../offline-treks.service.ts)\n                        \n                        \n                            cloneDeep   (src/.../online-treks.service.ts)\n                        \n                        \n                            distance   (src/.../geolocate-notifications.component.ts)\n                        \n                        \n                            distance   (src/.../filter-treks.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            expandCollapse   (src/.../animations.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-trek-viz.component.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-treks-viz.component.ts)\n                        \n                        \n                            primaryColor   (src/.../variables.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/offline-treks/offline-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/online-treks/online-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/app/services/filter-treks/filter-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: true,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    addSoustractMaxBounds: 0.01,\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poiIconSize: 1,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5,\n      },\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff',\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1],\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12,\n        },\n      },\n    },\n    touristicContentLayersProperties: {\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1,\n        },\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: false,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    addSoustractMaxBounds: 0.01,\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poiIconSize: 1,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5,\n      },\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff',\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1],\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12,\n        },\n      },\n    },\n    touristicContentLayersProperties: {\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1,\n        },\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/animations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            expandCollapse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : trigger('expandCollapse', [\n    transition(':enter', [\n      style({ transform: 'scaleY(0)' }),\n      animate('250ms ease-out', style({ transform: 'scaleY(1)' }))\n    ]),\n    transition(':leave', [\n      style({ transform: 'scaleY(1)' }),\n      animate('250ms ease-in', style({ transform: 'scaleY(0)' }))\n    ])\n  ])\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/environments/variables.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            primaryColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#898083'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
