var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.505,1,1.182]],["body/components/AppComponent.html",[0,0.825,1,2.057,2,1.868,3,0.125,4,0.088,5,1.443,6,1.443,7,1.443,8,0.1,9,4.048,10,1.402,11,2.788,12,2.422,13,3.283,14,1.922,15,6.143,16,0.317,17,1.335,18,7.365,19,1.335,20,3.677,21,3.363,22,5.935,23,6.42,24,2.586,25,4.308,26,6.42,27,3.857,28,3.629,29,1.381,30,3.493,31,1.228,32,4.612,33,0.975,34,0.011,35,0.475,36,0.303,37,0.871,38,4.612,39,0.975,40,1.288,41,0.225,42,0.569,43,1.674,44,1.674,45,1.726,46,1.901,47,1.06,48,3.158,49,3.677,50,4.048,51,3.677,52,4.048,53,2.575,54,2.272,55,2.364,56,4.048,57,2.465,58,0.125,59,0.532,60,2.52,61,4.612,62,4.612,63,7.67,64,2.364,65,2.272,66,2.364,67,4.612,68,4.612,69,4.897,70,4.612,71,4.612,72,4.612,73,4.048,74,4.048,75,1.402,76,4.233,77,2.994,78,3.677,79,4.612,80,4.612,81,1.782,82,4.612,83,2.465,84,4.612,85,4.528,86,4.048,87,4.048,88,4.612,89,4.048,90,4.048,91,0.348,92,1.922,93,1.922,94,1.443,95,2.305,96,1.443,97,1.443,98,1.288,99,1.443,100,1.443,101,1.288,102,1.443,103,1.443,104,1.288,105,1.922,106,1.288,107,1.443,108,1.288,109,0.532,110,1.443,111,1.288,112,1.443,113,1.443,114,1.288,115,1.443,116,1.288,117,1.402,118,1.363,119,2.161,120,1.288,121,1.402,122,1.443,123,1.288,124,1.443,125,1.288,126,1.534,127,0.683,128,1.922,129,1.325,130,0.657,131,1.288,132,1.252,133,1.443,134,1.288,135,1.443,136,1.288,137,1.922,138,1.288,139,0.551,140,1.288,141,1.443,142,1.288,143,1.443,144,1.288,145,2.161,146,1.288,147,1.288,148,1.443,149,1.252,150,1.443,151,1.288,152,1.443,153,1.325,154,1.288,155,1.922,156,1.288,157,1.288,158,1.443,159,1.288,160,1.443,161,1.443,162,0.006,163,0.008,164,0.006]],["title/modules/AppModule.html",[165,1.149,166,3.119]],["body/modules/AppModule.html",[1,2.355,3,0.12,4,0.084,8,0.147,22,4.397,23,4.755,26,4.755,34,0.011,41,0.242,42,0.545,43,2.165,44,1.602,47,1.015,48,3.88,49,3.519,50,3.874,51,3.519,52,3.874,56,3.874,58,0.183,59,0.509,85,3.254,91,0.333,116,2.262,118,1.763,120,2.262,138,2.262,140,2.262,157,2.262,162,0.005,163,0.007,164,0.005,165,1.199,166,6.446,167,1.705,168,1.819,169,2.981,170,2.981,171,2.785,172,1.819,173,3.874,174,3.874,175,3.874,176,3.874,177,3.874,178,5.368,179,5.056,180,2.379,181,1.948,182,1.882,183,3.519,184,5.236,185,2.543,186,5.965,187,4.98,188,5.965,189,2.359,190,2.543,191,5.965,192,5.236,193,3.254,194,5.965,195,4.414,196,5.965,197,1.602,198,4.11,199,3.874,200,3.874,201,4.11,202,3.874,203,3.042,204,2.175,205,5.965,206,5.965,207,4.414,208,4.414,209,1.882,210,4.414,211,4.414,212,2.175,213,5.965,214,4.414,215,3.874,216,3.668,217,3.872,218,3.519,219,3.872,220,3.519,221,4.397,222,3.254,223,3.519,224,4.414,225,5.236,226,3.874,227,4.414,228,5.236,229,3.519,230,3.874,231,5.236,232,3.519,233,4.755,234,5.236,235,4.414,236,4.414,237,3.042,238,5.236,239,3.874,240,4.414,241,4.397,242,3.519,243,4.11,244,2.865,245,3.042,246,5.236,247,3.519,248,4.414,249,4.414,250,4.414,251,3.874,252,3.254,253,5.236,254,3.874,255,3.254,256,4.414,257,4.414,258,3.519,259,4.414,260,4.414,261,3.519,262,4.414,263,4.755,264,3.874,265,2.165,266,1.948,267,4.414,268,4.414,269,4.414,270,3.874,271,2.582,272,4.414,273,3.874,274,4.414,275,4.414,276,3.874,277,4.414,278,4.414,279,2.543,280,4.414,281,3.519,282,4.414,283,6.756,284,4.414,285,3.519,286,4.414,287,4.414,288,5.965,289,4.414]],["title/modules/AppRoutingModule.html",[165,1.149,178,2.916]],["body/modules/AppRoutingModule.html",[3,0.167,4,0.117,8,0.134,12,2.002,34,0.011,41,0.2,42,0.759,58,0.167,59,0.71,162,0.008,163,0.009,164,0.008,167,2.376,172,2.535,178,5.08,185,2.622,190,3.142,197,2.232,279,3.488,290,6.151,291,6.151,292,3.939,293,4.218,294,1.58,295,5.223,296,5.399,297,5.399,298,3.598,299,7.344,300,6.151,301,6.151,302,8.183,303,6.032,304,8.183,305,6.151,306,1.623,307,1.841,308,7.371,309,6.151,310,1.392,311,6.151,312,6.151,313,6.151,314,6.151]],["title/injectables/CacheService.html",[315,1.49,316,2.916]],["body/injectables/CacheService.html",[3,0.124,4,0.087,8,0.099,13,2.443,16,0.315,17,1.328,19,0.994,31,1.632,33,1.617,34,0.011,35,0.473,36,0.552,37,1.299,39,1.291,41,0.199,42,0.564,58,0.124,59,0.527,60,2.586,75,2.325,81,2.359,83,3.263,162,0.006,163,0.007,164,0.006,187,5.41,189,2.443,265,2.496,266,3.034,294,1.174,315,2.15,316,4.208,317,2.552,318,4.012,319,0.681,320,5.851,321,2.239,322,8.163,323,6.876,324,6.876,325,7.648,326,6.876,327,3.644,328,6.106,329,5.069,330,6.106,331,1.089,332,4.739,333,4.571,334,5.36,335,1.051,336,1.855,337,4.571,338,7.339,339,1.386,340,4.571,341,2.811,342,2.896,343,2.325,344,4.571,345,0.94,346,6.106,347,4.571,348,4.501,349,6.442,350,4.868,351,4.571,352,4.965,353,4.571,354,2.967,355,1.766,356,2.811,357,4.571,358,6.106,359,4.571,360,5.057,361,2.443,362,2.552,363,6.106,364,2.443,365,4.571,366,4.571,367,4.571,368,6.036,369,4.571,370,4.571,371,4.571,372,4.571,373,6.876,374,6.106,375,6.876,376,7.339,377,6.106,378,6.106,379,4.571,380,3.644,381,4.571,382,4.571,383,4.571,384,4.571,385,1.241,386,4.571,387,4.571,388,6.876,389,4.571,390,4.571,391,4.012,392,6.876,393,6.106,394,4.571,395,4.571,396,6.876,397,4.012,398,4.571,399,4.571,400,4.571,401,3.369,402,4.571,403,4.571,404,1.207,405,4.012,406,4.571,407,4.571,408,4.571,409,4.571,410,2.967,411,2.967,412,4.012,413,4.571,414,4.571]],["title/components/CollapsibleListComponent.html",[0,0.505,98,1.182]],["body/components/CollapsibleListComponent.html",[0,0.804,1,1.226,2,1.807,3,0.119,4,0.084,5,1.374,6,1.374,7,1.374,8,0.095,10,1.335,11,2.779,12,2.414,14,1.86,16,0.302,17,1.292,19,1.465,31,1.684,34,0.011,35,0.409,36,0.522,39,1.257,40,1.66,41,0.119,42,0.542,58,0.119,59,0.507,75,2.294,81,2.296,91,0.331,92,1.86,93,1.86,94,1.374,95,2.259,96,1.374,97,1.374,98,2.016,99,2.531,100,1.374,101,1.226,102,1.374,103,1.374,104,1.226,105,1.86,106,1.226,107,1.374,108,1.226,109,0.507,110,1.374,111,1.226,112,1.374,113,1.374,114,1.226,115,1.374,116,1.226,117,1.335,118,1.298,119,2.108,120,1.226,121,1.335,122,1.374,123,1.226,124,1.374,125,1.226,126,1.485,127,0.67,128,1.86,129,1.261,130,0.644,131,1.226,132,1.193,133,1.374,134,1.226,135,1.374,136,1.226,137,1.86,138,1.226,139,0.524,140,1.226,141,1.374,142,1.226,143,1.374,144,1.226,145,2.108,146,1.226,147,1.226,148,1.374,149,1.193,150,1.374,151,1.226,152,1.374,153,1.261,154,1.226,155,1.86,156,1.226,157,1.226,158,1.374,159,1.226,160,1.374,161,1.374,162,0.005,163,0.007,164,0.005,319,0.663,321,2.225,331,0.951,334,6.827,343,2.294,415,1.415,416,7.445,417,6.762,418,3.855,419,1.807,420,2.973,421,4.096,422,4.382,423,3.859,424,1.915,425,6.738,426,5.944,427,6.738,428,6.738,429,7.777,430,2.88,431,7.22,432,2.819,433,2.049,434,6.738,435,6.738,436,3.762,437,6.738,438,2.049,439,5.944,440,4.391,441,4.382,442,4.391,443,7.22,444,4.391,445,4.391,446,6.738,447,4.391,448,4.391,449,4.391,450,4.391,451,4.391,452,4.391,453,2.296,454,3.772,455,3.026,456,6.738,457,4.391,458,4.391,459,4.391,460,5.944,461,4.391,462,4.391,463,4.391]],["title/components/ConnectErrorComponent.html",[0,0.505,101,1.182]],["body/components/ConnectErrorComponent.html",[0,0.846,1,1.356,2,1.932,3,0.132,4,0.092,5,1.519,6,1.519,7,1.519,8,0.105,10,1.476,11,2.797,12,2.429,14,1.989,16,0.334,19,1.54,31,1.6,34,0.011,35,0.437,36,0.319,41,0.132,42,0.599,58,0.132,59,0.56,75,2.285,91,0.366,92,1.989,93,1.989,94,1.519,95,2.352,96,1.519,97,1.519,98,1.356,99,1.519,100,1.519,101,2.099,102,2.588,103,1.519,104,1.356,105,1.989,106,1.356,107,1.519,108,1.356,109,0.56,110,1.519,111,1.356,112,1.519,113,1.519,114,1.356,115,1.519,116,1.356,117,1.476,118,1.435,119,2.217,120,1.356,121,1.476,122,1.519,123,1.356,124,1.519,125,1.356,126,1.588,127,0.697,128,1.989,129,1.395,130,0.67,131,1.356,132,1.319,133,1.519,134,1.356,135,1.519,136,1.356,137,1.989,138,1.356,139,0.58,140,1.356,141,1.519,142,1.356,143,1.519,144,1.356,145,2.217,146,1.356,147,1.356,148,1.519,149,1.319,150,1.519,151,1.356,152,1.519,153,1.395,154,1.356,155,1.989,156,1.356,157,1.356,158,1.519,159,1.356,160,1.519,161,1.519,162,0.006,163,0.008,164,0.006,266,2.143,321,2.06,343,2.285,352,4.599,415,1.564,424,2.047,432,3.014,454,3.7,464,7.157,465,6.501,466,4.262,467,3.908,468,7.085,469,6.355,470,7.801,471,1.895,472,5.179,473,1.949,474,4.38,475,7.085,476,6.355,477,4.856,478,4.856,479,4.856,480,4.856,481,4.38,482,3.549,483,3.152,484,4.856]],["title/interfaces/ContainsFilter.html",[485,0.472,486,1.087]],["body/interfaces/ContainsFilter.html",[3,0.096,4,0.068,8,0.077,16,0.245,29,0.711,34,0.011,35,0.559,36,0.57,41,0.163,58,0.237,91,0.387,109,0.806,127,0.611,130,0.669,139,0.613,162,0.004,163,0.006,164,0.004,306,0.732,307,0.889,310,1.137,319,0.856,331,1.188,335,1.179,336,1.63,339,0.969,345,1.374,385,1.393,404,1.355,433,0.966,438,0.966,471,0.865,473,1.645,485,0.974,486,1.318,487,0.966,488,0.94,489,1.847,490,1.662,491,1.896,492,1.95,493,1.95,494,1.95,495,2.105,496,2.065,497,1.681,498,1.744,499,0.94,500,0.994,501,1.462,502,0.818,503,0.818,504,0.841,505,1.921,506,1.147,507,1.589,508,0.994,509,1.433,510,1.634,511,1.318,512,1.634,513,1.975,514,1.921,515,1.355,516,1.84,517,1.814,518,1.681,519,1.433,520,1.433,521,1.433,522,1.116,523,1.95,524,1.433,525,1.578,526,1.393,527,1.433,528,1.433,529,1.433,530,1.393,531,1.433,532,1.462,533,1.433,534,1.433,535,1.393,536,1.179,537,1.355,538,1.393,539,2.086,540,0.994,541,0.994,542,1.433,543,0.994,544,0.994,545,1.393,546,0.966,547,0.966,548,0.994,549,0.994,550,0.994,551,0.994,552,0.994,553,1.433,554,1.393,555,1.589,556,1.393,557,1.213,558,0.865,559,0.889,560,0.818,561,0.914,562,0.914,563,0.994,564,0.865,565,1.433,566,1.213,567,0.865,568,0.865,569,0.994,570,1.247,571,0.914,572,1.422,573,0.994,574,0.966,575,1.462,576,1.503,577,0.94,578,0.914,579,1.282,580,1.503,581,1.355,582,1.383,583,0.865,584,0.994,585,1.868,586,0.994,587,0.966,588,0.966,589,0.966,590,0.966,591,0.966,592,0.966,593,0.966,594,0.966,595,0.994,596,0.966,597,0.994,598,0.994,599,0.889,600,0.966,601,1.247,602,1.213,603,0.914,604,0.732,605,0.966,606,0.889]],["title/modules/CustomPipesModule.html",[165,1.149,607,2.747]],["body/modules/CustomPipesModule.html",[3,0.175,4,0.123,8,0.14,34,0.011,41,0.206,42,0.798,58,0.175,59,0.746,91,0.488,162,0.008,163,0.009,164,0.008,165,1.756,167,2.499,168,2.666,169,3.557,170,2.854,171,2.666,172,3.323,180,3.029,181,2.854,182,2.757,185,2.757,190,3.237,607,5.63,608,5.678,609,5.678,610,5.678,611,6.121,612,6.468,613,6.468,614,6.468,615,6.468]],["title/interfaces/DataSetting.html",[485,0.472,570,1.028]],["body/interfaces/DataSetting.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.713,34,0.011,35,0.573,36,0.569,41,0.163,58,0.237,91,0.388,109,0.761,127,0.612,130,0.669,139,0.614,162,0.004,163,0.006,164,0.004,306,0.733,307,0.891,310,1.138,319,0.856,331,1.189,335,1.181,336,1.631,339,0.971,345,1.375,385,1.396,404,1.357,433,0.968,438,0.968,471,0.866,473,1.647,485,0.974,486,0.916,487,0.968,488,0.942,489,1.833,490,1.662,491,1.636,492,1.683,493,1.683,494,1.683,495,2.106,496,2.066,497,1.683,498,1.746,499,0.942,500,0.996,501,1.464,502,0.82,503,0.82,504,0.843,505,1.922,506,1.149,507,1.591,508,0.996,509,1.435,510,1.636,511,1.32,512,1.636,513,1.977,514,1.922,515,1.357,516,1.841,517,1.815,518,1.683,519,1.435,520,1.435,521,1.435,522,1.117,523,1.952,524,1.435,525,1.579,526,1.396,527,1.435,528,1.435,529,1.435,530,1.396,531,1.435,532,1.464,533,1.435,534,1.435,535,1.396,536,1.181,537,1.357,538,1.396,539,2.122,540,0.996,541,0.996,542,1.435,543,0.996,544,0.996,545,1.396,546,0.968,547,0.968,548,0.996,549,0.996,550,0.996,551,0.996,552,0.996,553,1.435,554,1.396,555,1.591,556,1.898,557,1.214,558,0.866,559,0.891,560,0.82,561,0.916,562,0.916,563,0.996,564,0.866,565,1.435,566,1.214,567,0.866,568,0.866,569,0.996,570,1.464,571,0.916,572,1.424,573,0.996,574,0.968,575,1.464,576,1.505,577,0.942,578,0.916,579,1.284,580,1.505,581,1.357,582,1.385,583,0.866,584,0.996,585,1.87,586,0.996,587,0.968,588,0.968,589,0.968,590,0.968,591,0.968,592,0.968,593,0.968,594,0.968,595,0.996,596,0.968,597,0.996,598,0.996,599,0.891,600,0.968,601,1.249,602,1.214,603,0.916,604,0.733,605,0.968,606,0.891]],["title/interfaces/Filter.html",[109,0.488,485,0.472]],["body/interfaces/Filter.html",[3,0.095,4,0.067,8,0.076,16,0.241,29,0.701,34,0.011,35,0.571,36,0.574,41,0.162,58,0.237,91,0.383,109,0.801,127,0.607,130,0.666,139,0.606,162,0.004,163,0.006,164,0.004,306,0.721,307,0.876,310,1.127,319,0.852,331,1.19,335,1.167,336,1.623,339,0.959,345,1.373,385,1.378,404,1.34,433,1.776,438,1.776,471,0.852,473,1.634,485,0.972,486,0.9,487,0.952,488,0.926,489,1.827,490,1.659,491,1.62,492,1.666,493,1.666,494,1.666,495,2.099,496,2.057,497,1.666,498,1.734,499,0.926,500,0.979,501,1.45,502,0.806,503,0.806,504,0.828,505,1.911,506,1.135,507,1.576,508,0.979,509,1.418,510,1.62,511,1.304,512,1.62,513,1.965,514,1.911,515,1.34,516,1.827,517,1.806,518,1.666,519,1.418,520,1.418,521,1.418,522,1.104,523,1.939,524,1.418,525,1.572,526,1.378,527,1.418,528,1.418,529,1.418,530,1.378,531,1.418,532,1.45,533,1.418,534,1.418,535,1.378,536,1.167,537,1.34,538,1.378,539,2.08,540,0.979,541,0.979,542,1.418,543,0.979,544,0.979,545,1.378,546,0.952,547,0.952,548,0.979,549,0.979,550,0.979,551,0.979,552,0.979,553,1.418,554,1.776,555,1.833,556,1.885,557,1.546,558,0.852,559,0.876,560,0.806,561,0.9,562,0.9,563,0.979,564,0.852,565,1.418,566,1.199,567,0.852,568,0.852,569,0.979,570,1.233,571,0.9,572,1.41,573,0.979,574,0.952,575,1.45,576,1.49,577,0.926,578,0.9,579,1.268,580,1.49,581,1.34,582,1.371,583,0.852,584,0.979,585,1.859,586,0.979,587,0.952,588,0.952,589,0.952,590,0.952,591,0.952,592,0.952,593,0.952,594,0.952,595,0.979,596,0.952,597,0.979,598,0.979,599,0.876,600,0.952,601,1.233,602,1.199,603,0.9,604,0.721,605,0.952,606,0.876]],["title/components/FilterComponent.html",[0,0.505,104,1.182]],["body/components/FilterComponent.html",[0,0.827,1,1.112,2,1.689,3,0.108,4,0.076,5,1.245,6,1.245,7,1.245,8,0.086,10,1.21,11,2.761,12,2.399,14,1.738,16,0.274,17,1.208,19,0.865,24,2.08,31,1.657,33,1.353,34,0.011,35,0.501,36,0.533,37,1.209,39,1.54,40,2.108,41,0.198,42,0.491,45,1.49,46,1.641,47,0.915,58,0.108,59,0.459,66,3.281,75,1.689,91,0.3,92,1.738,93,1.738,94,1.245,95,2.28,96,1.245,97,1.245,98,1.112,99,1.245,100,1.245,101,1.112,102,1.245,103,1.245,104,1.934,105,1.738,106,1.112,107,1.245,108,1.112,109,0.97,110,1.245,111,1.112,112,1.245,113,1.245,114,1.112,115,1.245,116,1.112,117,1.21,118,1.176,119,2.003,120,1.112,121,1.21,122,1.245,123,1.112,124,1.245,125,1.112,126,1.388,127,0.643,128,1.738,129,1.143,130,0.618,131,1.112,132,1.081,133,1.245,134,1.112,135,1.245,136,1.112,137,1.738,138,1.112,139,0.475,140,1.112,141,1.245,142,1.112,143,1.245,144,1.787,145,2.167,146,1.112,147,1.112,148,1.245,149,1.081,150,1.245,151,1.112,152,1.245,153,1.143,154,1.112,155,1.738,156,1.112,157,1.112,158,1.245,159,1.112,160,1.245,161,1.245,162,0.005,163,0.007,164,0.005,265,1.445,266,2.451,271,3.25,294,1.779,298,2.328,306,1.142,319,0.619,321,2.292,331,0.913,342,2.635,343,2.295,352,4.73,364,2.127,415,1.282,419,1.689,420,2.824,424,1.79,430,2.763,432,2.635,454,3.035,474,3.828,481,4.41,482,2.222,525,0.818,557,1.512,564,1.683,566,1.313,604,1.424,616,3.494,617,6.4,618,5.618,619,4.876,620,5.618,621,6.935,622,6.926,623,3.42,624,6.926,625,5.555,626,5.618,627,6.4,628,5.618,629,2.934,630,3.579,631,3.98,632,3.98,633,3.98,634,3.98,635,3.98,636,3.98,637,3.98,638,3.98,639,5.555,640,3.98,641,3.173,642,3.98,643,3.98,644,5.555,645,3.98,646,3.98,647,1.282,648,2.743,649,2.934,650,3.494,651,5.555,652,3.98,653,2.934,654,3.494,655,2.743,656,2.743,657,2.743,658,3.494,659,2.447,660,2.447,661,2.743,662,2.934,663,5.555,664,3.98,665,3.98,666,3.98,667,3.173,668,3.98,669,3.98,670,3.98,671,4.876,672,5.555,673,5.555,674,3.98,675,3.494,676,3.98]],["title/injectables/FilterTreksService.html",[315,1.49,677,2.747]],["body/injectables/FilterTreksService.html",[3,0.101,4,0.071,8,0.081,13,1.993,16,0.257,17,1.154,19,0.811,29,1.061,30,3.192,31,1.622,33,1.696,34,0.011,35,0.552,36,0.532,37,1.515,39,1.672,41,0.2,42,0.46,57,1.993,58,0.101,59,0.43,60,2.649,77,2.421,81,2.747,83,3.949,109,1.006,126,0.931,127,0.705,162,0.005,163,0.006,164,0.005,265,3.129,279,1.59,294,1.728,315,1.868,317,2.082,319,0.592,321,2.052,336,1.69,339,1.515,341,2.293,345,1.281,355,1.441,361,1.993,362,2.082,364,1.993,453,2.05,486,1.898,495,1.953,498,0.931,504,1.59,506,1.873,512,1.013,525,1.383,554,1.013,555,0.985,558,1.991,559,0.931,560,1.22,561,0.958,562,1.953,571,2.031,583,1.289,647,1.201,653,3.911,677,3.445,678,6.533,679,5.319,680,2.57,681,6.177,682,7.588,683,5.306,684,5.306,685,6.177,686,5.306,687,5.306,688,6.729,689,3.273,690,3.729,691,3.729,692,3.729,693,3.729,694,3.729,695,5.306,696,3.729,697,5.306,698,3.729,699,3.729,700,3.729,701,5.306,702,3.729,703,5.306,704,3.729,705,5.306,706,3.729,707,3.729,708,5.669,709,3.729,710,3.729,711,4.23,712,2.973,713,4.257,714,2.973,715,6.177,716,3.729,717,4.658,718,3.729,719,3.729,720,5.306,721,3.729,722,3.729,723,3.729,724,2.973,725,5.306,726,3.729,727,5.306,728,3.729,729,5.306,730,5.306,731,3.729,732,3.729,733,3.729,734,2.57,735,3.729,736,3.729,737,3.729,738,5.422,739,3.729,740,3.729,741,3.729,742,4.23,743,2.57,744,6.177,745,6.177,746,3.729,747,1.993,748,3.729,749,4.23,750,4.658,751,5.306,752,3.729,753,3.729,754,3.729,755,3.729,756,3.729,757,3.729,758,3.729,759,3.729,760,3.729,761,2.293,762,3.729,763,3.729,764,3.273,765,3.729,766,3.729]],["title/interfaces/FilterValue.html",[485,0.472,557,1]],["body/interfaces/FilterValue.html",[3,0.095,4,0.067,8,0.076,16,0.241,29,0.699,34,0.011,35,0.571,36,0.571,37,1.366,41,0.162,58,0.237,91,0.382,109,0.754,127,0.606,130,0.665,139,0.605,162,0.004,163,0.006,164,0.004,306,0.719,307,0.873,310,1.125,319,0.852,331,1.189,335,1.164,336,1.621,339,0.957,345,1.377,385,1.376,404,1.338,433,0.949,438,0.949,471,0.849,473,1.632,485,0.972,486,0.898,487,0.949,488,0.923,489,1.826,490,1.658,491,1.618,492,1.664,493,1.664,494,1.664,495,2.098,496,2.056,497,1.664,498,1.732,499,0.923,500,0.976,501,1.447,502,0.803,503,0.803,504,0.826,505,1.909,506,1.132,507,1.573,508,0.976,509,1.415,510,1.618,511,1.301,512,1.618,513,1.963,514,1.909,515,1.338,516,1.824,517,1.805,518,1.664,519,1.415,520,1.415,521,1.415,522,1.101,523,1.937,524,1.415,525,1.625,526,1.376,527,1.415,528,1.415,529,1.415,530,1.376,531,1.415,532,1.447,533,1.415,534,1.415,535,1.376,536,1.164,537,1.338,538,1.376,539,2.079,540,0.976,541,0.976,542,1.415,543,0.976,544,0.976,545,1.376,546,0.949,547,0.949,548,0.976,549,0.976,550,0.976,551,0.976,552,0.976,553,1.415,554,1.376,555,1.909,556,1.376,557,1.408,558,0.849,559,0.873,560,0.803,561,0.898,562,0.898,563,0.976,564,1.587,565,1.937,566,1.639,567,0.849,568,0.849,569,0.976,570,1.231,571,0.898,572,1.408,573,0.976,574,0.949,575,1.447,576,1.488,577,0.923,578,0.898,579,1.265,580,1.488,581,1.338,582,1.369,583,0.849,584,0.976,585,1.857,586,0.976,587,0.949,588,0.949,589,0.949,590,0.949,591,0.949,592,0.949,593,0.949,594,0.949,595,0.976,596,0.949,597,0.976,598,0.976,599,0.873,600,0.949,601,1.231,602,1.197,603,0.898,604,0.719,605,0.949,606,0.873]],["title/components/FilterValueComponent.html",[0,0.505,108,1.182]],["body/components/FilterValueComponent.html",[0,0.841,1,1.34,2,1.917,3,0.13,4,0.091,5,1.501,6,1.501,7,1.501,8,0.104,10,1.458,11,2.795,12,2.427,14,1.973,16,0.33,17,1.371,19,1.531,31,1.594,33,1.014,34,0.011,35,0.485,36,0.491,37,0.906,39,1.333,40,1.761,41,0.171,42,0.592,58,0.13,59,0.554,91,0.362,92,1.973,93,1.973,94,1.501,95,2.341,96,1.501,97,1.501,98,1.34,99,1.501,100,1.501,101,1.34,102,1.501,103,1.501,104,1.34,105,1.973,106,1.34,107,1.501,108,2.089,109,0.952,110,1.501,111,1.34,112,1.501,113,1.501,114,1.34,115,1.501,116,1.34,117,1.458,118,1.417,119,2.204,120,1.34,121,1.458,122,1.501,123,1.34,124,1.501,125,1.34,126,1.575,127,0.694,128,1.973,129,1.378,130,0.667,131,1.34,132,1.303,133,1.501,134,1.34,135,1.501,136,1.34,137,1.973,138,1.34,139,0.573,140,1.34,141,1.501,142,1.34,143,1.501,144,1.34,145,2.204,146,1.34,147,1.34,148,1.501,149,1.303,150,1.501,151,1.34,152,1.501,153,1.378,154,1.34,155,1.973,156,1.34,157,1.34,158,1.501,159,1.34,160,1.501,161,1.501,162,0.006,163,0.008,164,0.006,266,2.117,321,1.975,331,0.831,343,2.561,352,4.572,415,1.545,419,1.917,420,3.107,424,2.031,430,2.984,432,2.99,454,3.34,474,4.345,481,4.345,557,1.885,564,1.165,604,1.448,628,6.182,647,1.545,654,4.211,767,7.136,768,6.482,769,4.211,770,7.043,771,6.305,772,6.305,773,4.797,774,4.797,775,4.797,776,4.797,777,4.797,778,6.305,779,7.043,780,4.797,781,2.678,782,4.797,783,6.305,784,3.824,785,3.824,786,3.824,787,2.363,788,3.306]],["title/components/FiltersComponent.html",[0,0.505,106,1.182]],["body/components/FiltersComponent.html",[0,0.666,1,0.871,2,1.417,3,0.085,4,0.059,5,0.976,6,0.976,7,0.976,8,0.068,10,0.949,11,2.707,12,2.354,14,1.458,16,0.426,17,1.013,19,1.013,21,3.067,24,2.599,27,3.114,28,3.047,29,1.323,30,3.139,31,1.689,33,1.399,34,0.011,35,0.495,36,0.53,37,1.25,39,1.691,40,2.34,41,0.205,42,0.385,47,0.717,53,1.742,54,1.537,55,2.859,57,1.668,58,0.085,59,0.36,60,2.251,75,1.417,81,2.154,83,2.98,91,0.235,92,1.458,93,2.408,94,0.976,95,1.935,96,0.976,97,0.976,98,0.871,99,0.976,100,0.976,101,0.871,102,0.976,103,0.976,104,0.871,105,1.458,106,1.727,107,0.976,108,0.871,109,0.967,110,0.976,111,0.871,112,0.976,113,0.976,114,0.871,115,0.976,116,0.871,117,0.949,118,0.922,119,1.745,120,0.871,121,0.949,122,0.976,123,0.871,124,0.976,125,0.871,126,1.164,127,0.667,128,1.458,129,0.896,130,0.552,131,0.871,132,0.847,133,0.976,134,0.871,135,0.976,136,0.871,137,1.458,138,0.871,139,0.373,140,0.871,141,0.976,142,0.871,143,0.976,144,0.871,145,1.745,146,0.871,147,0.871,148,0.976,149,0.847,150,0.976,151,0.871,152,0.976,153,0.896,154,0.871,155,1.458,156,0.871,157,0.871,158,0.976,159,0.871,160,0.976,161,0.976,162,0.004,163,0.006,164,0.004,216,2.865,265,1.691,266,2.056,294,1.783,298,1.825,319,0.519,321,2.316,331,0.915,339,1.359,342,2.21,343,2.012,345,1.107,355,1.205,415,1.005,419,1.417,420,2.46,424,1.501,430,2.87,432,2.21,436,1.742,453,1.205,454,2.21,471,0.758,482,1.742,483,3.025,489,1.042,504,1.101,525,1.361,557,1.641,571,1.783,604,1.146,630,2.933,641,2.488,647,1.005,653,2.3,659,1.919,667,2.488,677,2.026,679,2.026,711,2.488,734,2.15,742,2.488,743,2.15,764,2.739,781,1.742,787,3.261,789,2.739,790,3.421,791,3.262,792,5.576,793,4.66,794,5.576,795,6.618,796,7.194,797,2.602,798,2.602,799,6.185,800,4.015,801,6.185,802,5.576,803,4.66,804,4.262,805,3.688,806,4.66,807,4.66,808,6.185,809,4.446,810,2.15,811,3.262,812,3.453,813,4.66,814,3.211,815,3.12,816,3.12,817,3.12,818,3.12,819,3.12,820,5.576,821,4.66,822,3.12,823,3.12,824,3.12,825,3.12,826,4.66,827,3.12,828,4.66,829,3.12,830,3.12,831,3.262,832,1.825,833,1.825,834,3.12,835,3.12,836,2.729,837,3.12,838,3.12,839,3.12,840,3.62,841,3.12,842,1.825,843,1.919,844,2.488,845,1.825,846,1.668,847,1.825,848,2.15,849,4.66,850,3.12,851,3.12,852,3.12,853,3.12,854,4.66,855,3.12,856,3.12,857,3.12,858,1.825,859,2.488,860,2.739,861,3.12,862,3.12,863,3.12,864,3.12,865,5.576,866,3.12,867,4.66,868,4.66,869,2.739,870,3.12,871,3.12,872,3.12,873,2.488,874,5.576,875,4.66,876,3.12,877,3.12,878,3.12,879,3.12,880,4.66,881,3.12,882,3.12,883,3.12,884,2.739,885,2.15,886,4.09,887,3.12,888,2.3,889,4.66,890,4.09,891,4.66,892,4.66,893,4.66,894,4.66,895,4.66,896,4.111,897,2.026,898,2.026,899,1.668,900,1.919,901,2.3,902,3.025,903,2.026,904,2.026,905,2.3,906,2.026,907,2.488,908,2.488,909,2.488,910,2.3,911,2.15,912,3.12,913,2.739,914,3.12,915,3.12]],["title/modules/FiltersComponentModule.html",[165,1.149,916,2.747]],["body/modules/FiltersComponentModule.html",[3,0.174,4,0.122,8,0.139,34,0.011,41,0.229,42,0.791,43,2.327,44,2.327,47,1.474,58,0.174,59,0.74,91,0.484,162,0.008,163,0.009,164,0.008,165,1.741,167,2.477,168,2.643,169,2.829,170,2.829,171,2.643,172,2.643,180,3.014,181,2.829,182,2.733,185,3.221,190,3.221,204,3.722,209,2.733,212,3.159,916,5.566,917,5.628,918,5.628,919,5.909,920,6.412,921,3.722,922,3.751,923,6.412,924,3.287]],["title/components/GeolocateNotificationsComponent.html",[0,0.505,111,1.182]],["body/components/GeolocateNotificationsComponent.html",[0,0.68,1,0.904,2,1.456,3,0.088,4,0.062,5,1.013,6,1.013,7,1.013,8,0.07,10,0.984,11,2.716,12,2.361,14,1.498,16,0.223,17,1.041,19,1.041,20,2.58,21,3.254,24,2.725,25,3.683,31,1.676,33,1.205,34,0.011,35,0.484,36,0.523,37,1.076,39,1.58,40,2.132,41,0.211,42,0.399,43,1.175,44,1.175,45,1.211,46,1.334,47,1.1,48,1.48,58,0.088,59,0.373,60,2.103,64,2.454,65,2.359,66,3.607,69,3.817,75,1.456,81,1.25,83,1.729,91,0.244,92,1.498,93,1.498,94,1.013,95,1.97,96,1.013,97,1.013,98,0.904,99,1.013,100,1.013,101,0.904,102,1.013,103,1.013,104,0.904,105,1.498,106,0.904,107,1.013,108,0.904,109,0.373,110,1.013,111,1.758,112,2.465,113,1.013,114,0.904,115,1.013,116,0.904,117,0.984,118,0.956,119,1.783,120,0.904,121,0.984,122,1.013,123,0.904,124,1.013,125,0.904,126,1.196,127,0.584,128,1.498,129,0.93,130,0.562,131,0.904,132,0.879,133,1.013,134,0.904,135,1.013,136,0.904,137,1.498,138,0.904,139,0.572,140,0.904,141,1.013,142,0.904,143,1.013,144,0.904,145,1.783,146,0.904,147,0.904,148,1.013,149,0.879,150,1.013,151,0.904,152,1.013,153,0.93,154,0.904,155,1.498,156,0.904,157,0.904,158,1.013,159,0.904,160,1.013,161,1.013,162,0.004,163,0.006,164,0.004,228,6.816,229,2.58,230,2.841,266,1.428,279,3.31,294,1.92,306,0.984,319,0.534,321,2.016,331,0.631,332,3.299,343,1.456,345,0.877,350,2.58,352,3.699,355,1.25,415,1.042,419,1.456,420,2.514,424,1.542,430,2.512,432,2.271,453,2.812,454,2.702,472,3.299,473,0.808,474,3.299,481,3.299,490,1.107,495,1.23,498,0.808,514,1.264,572,1.346,623,3.76,647,1.042,660,1.99,712,2.58,713,2.23,714,2.58,791,3.333,805,3.228,836,2.965,925,6.713,926,6.207,927,2.58,928,4.543,929,4.202,930,5.698,931,4.787,932,6.191,933,5.698,934,5.698,935,4.2,936,5.698,937,6.297,938,4.787,939,6.297,940,6.297,941,3.817,942,6.297,943,5.001,944,5.698,945,5.001,946,4.087,947,4.787,948,3.236,949,3.236,950,3.236,951,3.236,952,4.787,953,3.236,954,4.787,955,3.236,956,3.236,957,3.817,958,5.02,959,3.236,960,2.58,961,3.236,962,3.236,963,3.236,964,3.236,965,3.236,966,3.236,967,3.236,968,3.236,969,3.236,970,4.202,971,2.58,972,3.236,973,4.787,974,4.787,975,4.787,976,4.787,977,4.787,978,4.787,979,4.787,980,4.787,981,4.787,982,4.787,983,3.236,984,3.236,985,2.841,986,3.236,987,4.202,988,2.58,989,3.236,990,3.236,991,3.236,992,3.236,993,3.236,994,2.841,995,3.236,996,4.787,997,3.236,998,3.236,999,2.841,1000,3.236,1001,4.787,1002,4.787,1003,6.297,1004,3.236,1005,3.236,1006,4.787,1007,4.787,1008,3.236,1009,4.787,1010,3.236,1011,3.236,1012,2.841,1013,3.236,1014,3.236,1015,3.236,1016,3.236,1017,3.236,1018,3.236,1019,3.236,1020,3.236,1021,3.236,1022,3.236,1023,3.236,1024,3.236,1025,3.236,1026,3.236,1027,4.787,1028,4.787,1029,3.927,1030,3.236,1031,3.236,1032,2.386,1033,3.236,1034,3.236,1035,3.236,1036,2.58,1037,3.236,1038,2.58,1039,1.99,1040,3.236,1041,2.58,1042,3.236,1043,2.58,1044,3.236,1045,2.841,1046,2.23,1047,2.841,1048,3.236,1049,2.841,1050,3.236,1051,3.236,1052,4.787,1053,4.787]],["title/injectables/GeolocateService.html",[315,1.49,946,2.747]],["body/injectables/GeolocateService.html",[3,0.09,4,0.063,8,0.072,13,1.766,16,0.227,17,1.057,19,1.057,21,3.327,24,2.159,25,3.721,31,1.688,33,1.22,34,0.011,35,0.397,36,0.519,37,1.09,39,1.673,40,1.776,41,0.204,42,0.408,43,1.199,44,1.199,45,1.237,46,1.362,47,0.76,48,2.223,58,0.09,59,0.381,60,1.034,64,3.634,65,3.493,66,4.213,75,1.934,81,2.457,162,0.004,163,0.006,164,0.004,221,5.658,222,2.436,223,2.635,233,2.635,237,2.277,246,6.85,247,2.635,265,2.46,266,2.991,279,3.477,294,1.971,315,1.712,317,1.845,319,0.542,321,2.26,331,0.893,339,1.552,343,1.934,345,0.748,355,1.277,362,1.845,453,2.228,467,4.72,525,1.457,546,0.897,547,0.897,623,4.529,836,2.545,840,4.4,935,4.252,946,3.156,1032,3.584,1036,3.876,1054,2.901,1055,6.601,1056,5.768,1057,5.768,1058,5.753,1059,6.361,1060,6.361,1061,6.361,1062,6.361,1063,5.071,1064,6.361,1065,6.361,1066,4.862,1067,6.361,1068,6.361,1069,5.768,1070,3.305,1071,4.862,1072,3.305,1073,3.305,1074,3.305,1075,3.305,1076,3.305,1077,3.305,1078,3.305,1079,4.862,1080,3.305,1081,5.768,1082,3.305,1083,3.305,1084,3.305,1085,6.361,1086,3.305,1087,5.768,1088,3.305,1089,5.071,1090,3.305,1091,3.305,1092,3.305,1093,3.305,1094,3.305,1095,3.305,1096,5.768,1097,3.305,1098,3.305,1099,5.768,1100,5.063,1101,3.305,1102,3.351,1103,4.862,1104,3.305,1105,3.305,1106,3.305,1107,6.361,1108,3.305,1109,3.305,1110,3.305,1111,2.436,1112,3.305,1113,3.305,1114,6.361,1115,4.862,1116,3.876,1117,4.862,1118,4.862,1119,4.862,1120,4.862,1121,4.862,1122,4.862,1123,2.277,1124,4.862,1125,5.768,1126,6.361,1127,4.862,1128,6.361,1129,4.862,1130,5.652,1131,6.737,1132,5.063,1133,5.768,1134,5.768,1135,5.768,1136,5.768,1137,6.779,1138,5.063,1139,5.063,1140,5.404,1141,6.779,1142,4.862,1143,4.862,1144,4.862,1145,4.862,1146,4.862,1147,4.862,1148,5.063,1149,5.063,1150,4.862,1151,5.768,1152,3.305,1153,3.305,1154,3.305,1155,3.305,1156,3.305,1157,3.305,1158,4.862,1159,3.305,1160,2.901,1161,3.305,1162,3.305,1163,3.305,1164,3.305,1165,3.305,1166,4.862,1167,2.901,1168,2.99,1169,3.305]],["title/interfaces/HydratedTrek.html",[485,0.472,536,0.973]],["body/interfaces/HydratedTrek.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.713,34,0.011,35,0.559,36,0.573,41,0.163,58,0.237,91,0.388,109,0.761,127,0.612,130,0.669,139,0.614,162,0.004,163,0.006,164,0.004,306,0.733,307,0.891,310,1.138,319,0.896,331,1.188,335,1.181,336,1.631,339,0.971,342,2.437,345,1.375,385,1.396,404,1.357,433,0.968,438,0.968,471,0.866,473,1.647,485,0.974,486,0.916,487,0.968,488,0.942,489,1.847,490,1.643,491,1.636,492,1.683,493,1.683,494,1.683,495,2.122,496,2.066,497,1.683,498,1.746,499,0.942,500,0.996,501,1.464,502,0.82,503,0.82,504,0.843,505,1.922,506,1.149,507,1.591,508,0.996,509,1.435,510,1.636,511,1.32,512,1.636,513,2.124,514,1.922,515,1.357,516,1.841,517,1.815,518,1.683,519,1.435,520,1.435,521,1.435,522,1.117,523,1.952,524,1.435,525,1.579,526,1.396,527,1.435,528,1.435,529,1.435,530,1.396,531,1.435,532,1.464,533,1.435,534,1.435,535,1.396,536,1.385,537,1.741,538,1.396,539,2.087,540,0.996,541,0.996,542,1.435,543,0.996,544,0.996,545,1.396,546,0.968,547,0.968,548,0.996,549,0.996,550,0.996,551,0.996,552,0.996,553,1.435,554,1.396,555,1.591,556,1.396,557,1.214,558,0.866,559,0.891,560,0.82,561,0.916,562,0.916,563,0.996,564,0.866,565,1.435,566,1.214,567,0.866,568,0.866,569,0.996,570,1.249,571,0.916,572,1.424,573,0.996,574,0.968,575,1.464,576,1.505,577,0.942,578,0.916,579,1.284,580,1.505,581,1.357,582,1.385,583,0.866,584,0.996,585,1.87,586,0.996,587,0.968,588,0.968,589,0.968,590,0.968,591,0.968,592,0.968,593,0.968,594,0.968,595,0.996,596,0.968,597,0.996,598,0.996,599,0.891,600,0.968,601,1.249,602,1.214,603,0.916,604,0.733,605,0.968,606,0.891]],["title/interfaces/HydratedTrekProperties.html",[485,0.472,537,1.117]],["body/interfaces/HydratedTrekProperties.html",[3,0.084,4,0.059,8,0.068,16,0.214,29,0.622,34,0.011,35,0.56,36,0.582,37,1.396,41,0.151,58,0.235,91,0.351,109,0.713,127,0.643,130,0.641,139,0.555,162,0.004,163,0.006,164,0.004,306,0.64,307,0.777,310,1.051,319,0.824,331,1.189,335,1.069,336,1.563,339,0.878,345,1.375,385,1.262,404,1.228,433,0.845,438,0.845,471,0.756,473,1.543,485,0.962,486,0.799,487,0.845,488,0.822,489,1.787,490,1.635,491,1.883,492,1.937,493,1.937,494,1.937,495,2.053,496,1.995,497,1.555,498,1.651,499,0.822,500,0.869,501,1.352,502,0.715,503,0.715,504,0.735,505,1.831,506,1.039,507,1.47,508,0.869,509,1.298,510,1.883,511,1.698,512,1.883,513,1.883,514,1.831,515,1.228,516,2.007,517,1.817,518,1.937,519,1.846,520,1.846,521,1.846,522,1.437,523,2.063,524,1.846,525,1.581,526,1.795,527,1.846,528,1.846,529,1.846,530,1.795,531,1.846,532,1.606,533,1.846,534,1.846,535,1.795,536,1.069,537,1.47,538,1.795,539,2.217,540,1.725,541,1.725,542,1.846,543,1.725,544,1.725,545,1.262,546,0.845,547,0.845,548,0.869,549,0.869,550,0.869,551,0.869,552,0.869,553,1.298,554,1.262,555,1.47,556,1.262,557,1.099,558,0.756,559,0.777,560,0.715,561,0.799,562,0.799,563,0.869,564,0.756,565,1.298,566,1.099,567,0.756,568,0.756,569,0.869,570,1.129,571,0.799,572,1.315,573,0.869,574,0.845,575,1.352,576,1.39,577,0.822,578,0.799,579,1.161,580,1.39,581,1.228,582,1.279,583,0.756,584,0.869,585,1.781,586,0.869,587,0.845,588,0.845,589,0.845,590,0.845,591,0.845,592,0.845,593,0.845,594,0.845,595,0.869,596,0.845,597,0.869,598,0.869,599,0.777,600,0.845,601,1.129,602,1.099,603,0.799,604,0.64,605,0.845,606,0.777]],["title/components/InAppDisclosureComponent.html",[0,0.505,114,1.182]],["body/components/InAppDisclosureComponent.html",[0,0.817,1,1.265,2,1.846,3,0.123,4,0.086,5,1.418,6,1.418,7,1.418,8,0.098,10,1.378,11,2.785,12,2.446,14,1.899,16,0.312,17,1.32,19,0.985,24,3.256,31,1.462,33,0.958,34,0.011,35,0.471,36,0.398,37,0.856,39,1.283,40,1.265,41,0.186,42,0.559,47,1.041,58,0.123,59,0.523,66,2.323,91,0.342,92,1.899,93,1.899,94,1.418,95,2.288,96,1.418,97,1.418,98,1.265,99,1.418,100,1.418,101,1.265,102,1.418,103,1.418,104,1.265,105,1.899,106,1.265,107,1.418,108,1.265,109,0.523,110,1.418,111,1.265,112,1.418,113,1.418,114,2.042,115,1.418,116,1.265,117,1.378,118,1.339,119,2.142,120,1.265,121,1.378,122,1.418,123,1.265,124,1.418,125,1.265,126,1.516,127,0.678,128,1.899,129,1.301,130,0.652,131,1.265,132,1.23,133,1.418,134,1.265,135,1.418,136,1.265,137,1.899,138,1.265,139,0.541,140,1.265,141,1.418,142,1.265,143,1.418,144,1.265,145,2.142,146,1.265,147,1.265,148,1.418,149,1.23,150,1.418,151,1.265,152,1.418,153,1.301,154,1.265,155,1.899,156,1.265,157,1.265,158,1.418,159,1.265,160,1.418,161,1.418,162,0.006,163,0.007,164,0.006,237,3.122,319,0.677,321,2.073,364,2.421,415,1.459,419,1.846,420,3.021,424,1.955,430,2.917,623,3.658,630,3.468,800,4.747,810,3.122,814,4.183,885,3.122,1058,6.145,1100,3.977,1170,6.693,1171,5.255,1172,3.977,1173,6.07,1174,6.846,1175,6.07,1176,4.531,1177,4.531,1178,4.531,1179,4.531,1180,4.531,1181,4.531,1182,6.07,1183,6.07,1184,6.07,1185,6.07,1186,6.07,1187,6.07,1188,6.07,1189,6.07,1190,6.07]],["title/interfaces/InformationDesk.html",[485,0.472,532,1.028]],["body/interfaces/InformationDesk.html",[3,0.092,4,0.064,8,0.073,16,0.232,29,0.675,34,0.011,35,0.568,36,0.578,41,0.158,58,0.236,91,0.373,109,0.742,127,0.596,130,0.658,139,0.59,162,0.004,163,0.006,164,0.004,306,0.694,307,0.843,310,1.103,319,0.843,331,1.191,335,1.135,336,1.604,339,0.933,345,1.377,385,1.341,404,1.304,433,0.917,438,0.917,471,0.82,473,1.605,485,0.969,486,0.867,487,0.917,488,0.892,489,1.815,490,1.651,491,1.586,492,1.631,493,1.631,494,1.631,495,2.085,496,2.038,497,1.631,498,1.708,499,0.892,500,0.943,501,1.419,502,0.776,503,0.776,504,0.798,505,1.886,506,1.104,507,1.542,508,0.943,509,1.379,510,1.586,511,1.269,512,1.586,513,1.94,514,1.886,515,1.304,516,1.795,517,1.879,518,1.631,519,1.379,520,1.379,521,1.379,522,1.074,523,2.113,524,1.379,525,1.555,526,1.341,527,1.379,528,1.379,529,1.379,530,1.341,531,1.379,532,1.561,533,1.379,534,1.379,535,1.341,536,1.135,537,1.304,538,1.341,539,2.103,540,0.943,541,0.943,542,1.379,543,0.943,544,0.943,545,1.857,546,1.745,547,1.745,548,1.795,549,1.795,550,1.795,551,1.795,552,1.795,553,1.91,554,1.341,555,1.542,556,1.341,557,1.167,558,0.82,559,0.843,560,0.776,561,0.867,562,0.867,563,0.943,564,0.82,565,1.379,566,1.167,567,0.82,568,0.82,569,0.943,570,1.2,571,0.867,572,1.38,573,0.943,574,0.917,575,1.419,576,1.459,577,0.892,578,0.867,579,1.234,580,1.459,581,1.304,582,1.342,583,0.82,584,0.943,585,1.835,586,0.943,587,0.917,588,0.917,589,0.917,590,0.917,591,0.917,592,0.917,593,0.917,594,0.917,595,0.943,596,0.917,597,0.943,598,0.943,599,0.843,600,0.917,601,1.2,602,1.167,603,0.867,604,0.694,605,0.917,606,0.843]],["title/components/InformationDeskDetailsComponent.html",[0,0.505,116,1.182]],["body/components/InformationDeskDetailsComponent.html",[0,0.812,1,1.248,2,1.828,3,0.121,4,0.085,5,1.398,6,1.398,7,1.398,8,0.097,10,1.358,11,2.782,12,2.417,14,1.882,16,0.308,17,1.307,19,0.971,24,2.251,31,1.623,33,0.945,34,0.011,35,0.468,36,0.498,37,0.844,39,1.271,40,1.898,41,0.197,42,0.552,45,1.672,46,1.842,47,1.027,58,0.121,59,0.516,75,1.828,91,0.337,92,1.882,93,1.882,94,1.398,95,2.275,96,1.398,97,1.398,98,1.248,99,1.398,100,1.398,101,1.248,102,1.398,103,1.398,104,1.248,105,1.882,106,1.248,107,1.398,108,1.248,109,0.516,110,1.398,111,1.248,112,1.398,113,1.398,114,1.248,115,1.398,116,2.031,117,2.469,118,2.611,119,2.127,120,1.248,121,1.358,122,1.398,123,1.248,124,1.398,125,1.248,126,1.502,127,0.675,128,1.882,129,1.283,130,0.649,131,1.248,132,1.213,133,1.398,134,1.248,135,1.398,136,1.248,137,1.882,138,1.248,139,0.533,140,1.248,141,1.398,142,1.248,143,1.398,144,1.248,145,2.127,146,1.248,147,1.248,148,1.398,149,1.213,150,1.398,151,1.248,152,1.398,153,1.283,154,1.248,155,1.882,156,1.248,157,1.248,158,1.398,159,1.248,160,1.398,161,1.398,162,0.005,163,0.007,164,0.005,255,6.065,319,0.67,321,2.004,331,0.589,343,1.828,415,1.439,424,1.937,532,1.899,545,1.633,630,3.599,647,1.439,800,4.72,810,3.079,814,5.011,885,3.079,1191,7.222,1192,3.562,1193,5.278,1194,5.967,1195,5.278,1196,5.419,1197,6.797,1198,5.73,1199,5.011,1200,6.013,1201,4.468,1202,3.922,1203,3.904,1204,4.468,1205,4.468,1206,5.278,1207,3.922,1208,6.013,1209,4.468,1210,4.468,1211,4.468,1212,4.468,1213,6.013,1214,6.013,1215,6.013,1216,6.013,1217,6.013]],["title/interfaces/InformationIntro.html",[485,0.472,567,1.028]],["body/interfaces/InformationIntro.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.716,34,0.011,35,0.56,36,0.568,41,0.164,58,0.237,91,0.389,109,0.763,127,0.613,130,0.67,139,0.616,162,0.004,163,0.006,164,0.004,306,0.737,307,0.895,310,1.141,319,0.857,331,1.189,335,1.185,336,1.634,339,0.974,345,1.376,385,1.4,404,1.362,433,0.973,438,0.973,471,0.871,473,1.877,485,0.974,486,0.92,487,0.973,488,0.946,489,1.835,490,1.663,491,1.641,492,1.687,493,1.687,494,1.687,495,2.108,496,2.068,497,1.687,498,1.749,499,0.946,500,1.001,501,1.468,502,0.824,503,0.824,504,0.847,505,1.926,506,1.153,507,1.595,508,1.001,509,1.44,510,1.641,511,1.325,512,1.641,513,1.98,514,1.926,515,1.362,516,1.845,517,1.817,518,1.687,519,1.44,520,1.44,521,1.44,522,1.121,523,1.956,524,1.44,525,1.581,526,1.4,527,1.44,528,1.44,529,1.44,530,1.4,531,1.44,532,1.468,533,1.44,534,1.44,535,1.4,536,1.185,537,1.362,538,1.4,539,2.089,540,1.001,541,1.001,542,1.44,543,1.001,544,1.001,545,1.4,546,0.973,547,0.973,548,1.001,549,1.001,550,1.001,551,1.001,552,1.001,553,1.44,554,1.4,555,1.595,556,1.4,557,1.219,558,0.871,559,0.895,560,0.824,561,0.92,562,0.92,563,1.001,564,0.871,565,1.44,566,1.219,567,1.253,568,0.871,569,1.001,570,1.253,571,0.92,572,1.428,573,1.001,574,0.973,575,1.468,576,1.509,577,0.946,578,0.92,579,1.288,580,1.509,581,1.362,582,1.389,583,0.871,584,1.001,585,1.873,586,1.001,587,0.973,588,0.973,589,0.973,590,0.973,591,0.973,592,0.973,593,0.973,594,0.973,595,1.001,596,0.973,597,1.001,598,1.001,599,0.895,600,0.973,601,1.253,602,1.219,603,0.92,604,0.737,605,0.973,606,0.895]],["title/interfaces/InformationItem.html",[485,0.472,568,1.028]],["body/interfaces/InformationItem.html",[3,0.096,4,0.068,8,0.077,16,0.244,29,0.709,34,0.011,35,0.559,36,0.57,41,0.163,58,0.237,91,0.386,109,0.759,127,0.61,130,0.668,139,0.611,162,0.004,163,0.006,164,0.004,306,0.73,307,0.886,310,1.135,319,0.855,331,1.19,335,1.177,336,1.629,339,0.967,345,1.376,385,1.391,404,1.352,433,0.964,438,0.964,471,1.598,473,1.871,485,0.973,486,0.911,487,0.964,488,0.937,489,1.831,490,1.661,491,1.632,492,1.678,493,1.678,494,1.678,495,2.104,496,2.063,497,1.678,498,1.742,499,0.937,500,0.991,501,1.46,502,0.816,503,0.816,504,0.839,505,1.919,506,1.145,507,1.587,508,0.991,509,1.43,510,1.632,511,1.315,512,1.632,513,1.974,514,1.919,515,1.352,516,1.837,517,1.812,518,1.678,519,1.43,520,1.43,521,1.43,522,1.113,523,1.948,524,1.43,525,1.577,526,1.391,527,1.43,528,1.43,529,1.43,530,1.391,531,1.43,532,1.46,533,1.43,534,1.43,535,1.391,536,1.177,537,1.352,538,1.391,539,2.085,540,0.991,541,0.991,542,1.43,543,0.991,544,0.991,545,1.391,546,0.964,547,0.964,548,0.991,549,0.991,550,0.991,551,0.991,552,0.991,553,1.43,554,1.391,555,1.587,556,1.391,557,1.21,558,0.862,559,0.886,560,0.816,561,0.911,562,0.911,563,0.991,564,0.862,565,1.43,566,1.21,567,0.862,568,1.244,569,1.837,570,1.244,571,0.911,572,1.42,573,0.991,574,0.964,575,1.46,576,1.501,577,0.937,578,0.911,579,1.279,580,1.501,581,1.352,582,1.381,583,0.862,584,0.991,585,1.867,586,0.991,587,0.964,588,0.964,589,0.964,590,0.964,591,0.964,592,0.964,593,0.964,594,0.964,595,0.991,596,0.964,597,0.991,598,0.991,599,0.886,600,0.964,601,1.244,602,1.21,603,0.911,604,0.73,605,0.964,606,0.886]],["title/interfaces/IntervalFilter.html",[485,0.472,562,1.087]],["body/interfaces/IntervalFilter.html",[3,0.098,4,0.069,8,0.078,16,0.248,29,0.719,34,0.011,35,0.56,36,0.569,41,0.164,58,0.237,91,0.39,109,0.809,127,0.614,130,0.671,139,0.618,162,0.004,163,0.006,164,0.004,306,0.74,307,0.899,310,1.144,319,0.858,331,1.188,335,1.189,336,1.636,339,0.977,345,1.375,385,1.405,404,1.366,433,0.977,438,0.977,471,0.874,473,1.654,485,0.975,486,0.924,487,0.977,488,0.95,489,1.85,490,1.664,491,1.644,492,1.691,493,1.691,494,1.691,495,2.109,496,2.07,497,1.691,498,1.752,499,0.95,500,1.005,501,1.471,502,0.827,503,0.827,504,0.85,505,1.928,506,1.156,507,1.599,508,1.005,509,1.445,510,1.644,511,1.329,512,1.644,513,1.983,514,1.928,515,1.366,516,1.849,517,1.819,518,1.691,519,1.445,520,1.445,521,1.445,522,1.125,523,1.959,524,1.445,525,1.583,526,1.405,527,1.445,528,1.445,529,1.445,530,1.405,531,1.445,532,1.471,533,1.445,534,1.445,535,1.405,536,1.189,537,1.366,538,1.405,539,2.091,540,1.005,541,1.005,542,1.445,543,1.005,544,1.005,545,1.405,546,0.977,547,0.977,548,1.005,549,1.005,550,1.005,551,1.005,552,1.005,553,1.445,554,1.405,555,1.599,556,1.405,557,1.222,558,0.874,559,0.899,560,0.827,561,0.924,562,1.329,563,1.005,564,0.874,565,1.445,566,1.222,567,0.874,568,0.874,569,1.005,570,1.257,571,0.924,572,1.431,573,1.005,574,0.977,575,1.471,576,1.513,577,0.95,578,0.924,579,1.292,580,1.513,581,1.366,582,1.392,583,0.874,584,1.005,585,1.875,586,1.005,587,0.977,588,0.977,589,0.977,590,0.977,591,0.977,592,0.977,593,0.977,594,0.977,595,1.005,596,0.977,597,1.005,598,1.005,599,0.899,600,0.977,601,1.257,602,1.222,603,0.924,604,0.74,605,0.977,606,0.899]],["title/components/LayersVisibilityComponent.html",[0,0.505,120,1.182]],["body/components/LayersVisibilityComponent.html",[0,0.851,1,1.374,2,1.949,3,0.133,4,0.094,5,1.54,6,1.54,7,1.54,8,0.107,10,1.496,11,2.799,12,2.431,14,2.006,16,0.339,17,1.394,19,1.07,31,1.566,33,1.355,34,0.011,35,0.52,36,0.496,37,1.211,39,1.355,40,1.79,41,0.174,42,0.607,47,1.131,58,0.133,59,0.568,91,0.371,92,2.006,93,2.006,94,1.54,95,2.364,96,1.54,97,1.54,98,1.374,99,1.54,100,1.54,101,1.374,102,1.54,103,1.54,104,1.374,105,2.006,106,1.374,107,1.54,108,1.374,109,0.568,110,1.54,111,1.374,112,1.54,113,1.54,114,1.374,115,1.54,116,1.374,117,1.496,118,1.454,119,2.231,120,2.11,121,2.591,122,1.54,123,1.374,124,1.54,125,1.374,126,1.601,127,0.701,128,2.006,129,1.414,130,0.674,131,1.374,132,1.336,133,1.54,134,1.374,135,1.54,136,1.374,137,2.006,138,1.374,139,0.587,140,1.374,141,1.54,142,1.374,143,1.54,144,1.374,145,2.231,146,1.374,147,1.374,148,1.54,149,1.336,150,1.54,151,1.374,152,1.54,153,1.414,154,1.374,155,2.006,156,1.374,157,1.374,158,1.54,159,1.374,160,1.54,161,1.54,162,0.006,163,0.008,164,0.006,258,6.404,319,0.715,321,1.883,364,2.63,415,1.585,424,2.065,781,2.748,784,3.923,785,3.923,786,3.923,787,2.424,788,3.391,1198,5.535,1199,5.206,1218,7.05,1219,4.319,1220,5.627,1221,7.13,1222,6.411,1223,7.13,1224,6.411,1225,4.319,1226,6.411,1227,4.921,1228,6.411,1229,4.921,1230,4.921,1231,4.921,1232,4.921,1233,4.921,1234,4.921,1235,4.921,1236,4.921,1237,6.411]],["title/components/LoaderComponent.html",[0,0.505,123,1.182]],["body/components/LoaderComponent.html",[0,0.827,1,1.296,2,1.876,3,0.126,4,0.088,5,1.452,6,1.452,7,1.452,8,0.101,10,1.411,11,2.789,12,2.423,14,1.93,16,0.425,17,1.341,19,1.009,31,1.612,33,0.981,34,0.011,35,0.477,36,0.504,37,0.877,39,0.981,40,1.723,41,0.2,42,0.573,58,0.126,59,0.536,60,2.168,75,1.876,91,0.35,92,1.93,93,1.93,94,1.452,95,2.31,96,1.452,97,1.452,98,1.296,99,1.452,100,1.452,101,1.296,102,1.452,103,1.452,104,1.296,105,1.93,106,1.296,107,1.452,108,1.296,109,0.536,110,1.452,111,1.296,112,1.452,113,1.452,114,1.296,115,1.452,116,1.296,117,1.411,118,1.371,119,2.168,120,1.296,121,1.411,122,1.452,123,2.062,124,1.452,125,1.296,126,1.541,127,0.685,128,1.93,129,1.333,130,0.659,131,1.296,132,1.26,133,1.452,134,1.296,135,1.452,136,1.296,137,1.93,138,1.296,139,0.554,140,1.296,141,1.452,142,1.296,143,1.452,144,1.296,145,2.168,146,1.296,147,1.296,148,1.452,149,1.26,150,1.452,151,1.296,152,1.452,153,1.333,154,1.296,155,1.93,156,1.296,157,1.296,158,1.452,159,1.296,160,1.452,161,1.452,162,0.006,163,0.008,164,0.006,203,3.198,216,4.54,319,0.688,321,2.13,339,1.395,343,1.876,355,1.793,361,2.48,401,4.547,415,1.495,419,1.876,424,1.987,432,2.926,436,2.591,454,3.286,471,1.128,525,1.518,564,1.128,734,3.198,787,3.039,791,4.053,805,3.785,836,3.057,896,3.421,897,3.013,898,3.013,899,2.48,900,2.854,901,3.421,902,4.004,903,3.013,904,3.013,905,3.421,906,3.013,907,3.7,908,3.7,909,3.7,910,3.421,911,4.775,1102,3.198,1168,2.854,1207,4.074,1238,4.074,1239,6.929,1240,6.169,1241,6.937,1242,4.793,1243,6.929,1244,6.929,1245,3.198,1246,4.496,1247,6.169,1248,4.641,1249,4.641,1250,4.641,1251,4.641,1252,4.641,1253,4.074,1254,4.641,1255,4.641,1256,4.641,1257,5.415,1258,4.074,1259,4.074,1260,4.074,1261,4.641,1262,4.074,1263,4.641,1264,4.641]],["title/interceptors/LoadingInterceptor.html",[179,2.747,1265,3.714]],["body/interceptors/LoadingInterceptor.html",[3,0.146,4,0.103,8,0.117,13,2.884,16,0.371,17,1.479,19,1.479,31,1.359,33,1.438,34,0.011,35,0.468,36,0.446,37,1.285,39,1.141,40,1.899,41,0.212,42,0.666,58,0.184,59,0.785,60,1.688,81,2.627,126,1.348,162,0.007,163,0.008,164,0.007,179,4.415,189,2.884,265,2.838,266,3.001,294,2.008,315,2.622,321,1.425,331,1.084,336,1.7,354,3.503,355,2.084,356,3.318,360,3.718,361,2.884,362,3.013,410,3.503,411,3.503,419,1.641,423,3.503,490,1.322,525,1.109,747,2.884,781,3.013,840,4.415,1102,3.718,1242,4.834,1245,3.718,1246,4.574,1266,5.396,1267,4.302,1268,6.537,1269,5.396,1270,5.396,1271,6.863,1272,5.49,1273,6.863,1274,5.396,1275,5.97,1276,5.97,1277,5.97,1278,5.97,1279,4.736,1280,4.736,1281,4.736,1282,6.537,1283,4.736,1284,5.97,1285,4.736,1286,4.736,1287,4.736,1288,4.736,1289,4.736,1290,4.736,1291,4.736,1292,4.736,1293,4.736,1294,4.736,1295,5.97,1296,4.736,1297,4.736,1298,4.736,1299,4.736,1300,5.97,1301,4.736,1302,4.736,1303,4.736,1304,4.736,1305,4.736,1306,4.736,1307,4.736,1308,4.736,1309,4.736,1310,4.736,1311,4.736,1312,5.97]],["title/injectables/LoadingService.html",[315,1.49,1246,2.475]],["body/injectables/LoadingService.html",[3,0.14,4,0.098,8,0.112,13,2.754,16,0.355,17,1.436,19,1.585,31,1.625,33,1.541,34,0.011,35,0.502,36,0.478,37,1.377,39,1.541,40,2.147,41,0.208,42,0.636,58,0.179,59,0.762,60,2.281,75,2.008,81,2.551,126,1.287,162,0.006,163,0.008,164,0.006,179,3.345,189,2.754,265,2.79,266,3.392,294,1.974,315,2.566,317,2.877,319,0.736,321,1.925,331,1.137,336,1.671,341,3.168,343,2.008,354,3.345,355,1.99,356,3.168,360,3.551,361,2.754,362,2.877,410,3.345,411,3.345,419,1.567,423,3.345,490,1.545,525,1.059,747,2.754,781,2.877,840,4.732,1102,5.023,1242,4.287,1246,4.264,1267,4.108,1268,4.523,1271,5.797,1272,3.798,1273,5.797,1275,4.523,1276,5.797,1277,5.797,1278,5.797,1279,5.797,1280,4.523,1281,6.398,1282,6.398,1283,4.523,1284,5.797,1285,4.523,1286,4.523,1287,4.523,1288,6.398,1289,4.523,1290,4.523,1291,4.523,1292,5.797,1293,4.523,1294,4.523,1295,5.797,1296,5.797,1297,4.523,1298,4.523,1299,4.523,1300,5.797,1301,5.797,1302,4.523,1303,4.523,1304,4.523,1305,4.523,1306,4.523,1307,4.523,1308,4.523,1309,4.523,1310,4.523,1311,4.523,1312,5.797,1313,6.604,1314,5.797,1315,6.604,1316,5.153,1317,5.153,1318,5.153,1319,5.153]],["title/pipes/LowerRoundPipe.html",[611,2.916,761,2.602]],["body/pipes/LowerRoundPipe.html",[3,0.178,4,0.125,8,0.142,10,1.994,17,1.426,31,1.311,33,1.387,34,0.011,35,0.558,36,0.43,37,1.239,39,1.387,41,0.178,42,0.81,58,0.178,59,0.757,162,0.008,163,0.009,164,0.008,265,2.38,343,1.994,345,1.31,419,1.994,611,5.276,761,4.708,1320,6.559,1321,6.721,1322,5.757,1323,6.721,1324,5.757,1325,7.656,1326,6.559,1327,7.656,1328,6.559]],["title/components/MapTreksVizComponent.html",[0,0.505,125,1.182]],["body/components/MapTreksVizComponent.html",[0,0.676,1,0.624,2,1.093,3,0.061,4,0.121,5,0.699,6,0.699,7,0.699,8,0.049,10,0.68,11,2.615,12,2.287,14,1.125,16,0.356,17,0.782,19,0.782,21,2.713,24,1.689,25,3.024,29,0.719,30,2.452,31,1.61,33,0.954,34,0.011,35,0.438,36,0.531,37,0.852,39,1.444,40,1.69,41,0.209,42,0.276,43,0.811,44,0.811,45,1.346,46,0.921,47,0.514,48,1.022,57,1.194,58,0.061,59,0.258,60,2.408,64,1.843,65,1.772,66,3.856,75,0.68,77,2.929,81,1.743,83,1.922,91,0.169,92,1.125,93,1.412,94,0.699,95,1.618,96,0.699,97,0.699,98,0.624,99,0.699,100,0.699,101,0.624,102,0.699,103,0.699,104,0.624,105,1.125,106,0.624,107,0.699,108,0.624,109,0.699,110,0.699,111,0.624,112,1.618,113,0.699,114,1.26,115,0.699,116,0.624,117,0.68,118,0.66,119,1.412,120,0.624,121,1.372,122,0.699,123,0.624,124,0.699,125,1.444,126,1.941,127,0.81,128,1.125,129,0.642,130,0.662,131,0.624,132,0.976,133,0.699,134,0.624,135,0.699,136,0.624,137,1.125,138,0.624,139,0.267,140,0.624,141,0.699,142,0.624,143,0.699,144,0.624,145,1.412,146,0.624,147,1.26,148,0.699,149,0.607,150,0.699,151,0.624,152,0.699,153,0.642,154,0.624,155,1.125,156,0.624,157,0.624,158,0.699,159,0.624,160,0.699,161,0.699,162,0.003,163,0.004,164,0.003,180,2.415,231,5.586,232,1.782,233,1.782,265,0.811,266,2.92,271,2.103,279,0.953,294,2.1,298,2.103,306,1.165,310,0.852,319,0.401,321,1.959,331,0.747,332,1.54,336,0.782,339,1.07,343,0.68,345,0.796,352,3.678,355,0.863,361,1.194,401,1.647,404,0.59,405,1.962,415,0.72,419,1.093,424,1.158,430,1.8,432,1.705,441,1.647,453,2.189,454,2.871,467,1.374,472,3.109,474,2.478,481,3.109,482,2.887,483,1.451,489,0.804,490,1.286,495,1.754,496,0.95,498,1.415,499,1.191,501,1.096,502,0.514,503,0.826,505,1.599,506,1.009,511,1.159,513,0.607,514,1.191,525,0.739,536,0.514,560,0.826,566,1.222,570,1.471,583,1.096,602,1.066,604,0.928,623,3.964,630,3.018,647,0.72,648,1.54,655,2.478,656,2.478,657,2.478,659,2.774,660,2.211,661,2.478,662,2.651,682,3.156,689,1.962,708,2.867,747,3.028,761,1.374,790,2.982,791,2.639,797,2.008,798,2.008,805,3.262,831,2.639,832,1.307,833,1.307,836,0.986,842,1.307,847,1.307,858,2.103,888,1.647,897,2.334,899,1.922,900,2.211,902,2.334,904,1.451,906,1.451,911,2.478,928,3.597,932,5.074,935,1.647,941,2.867,946,3.356,957,2.867,958,4.122,960,1.782,970,3.156,971,1.782,988,1.782,999,1.962,1012,1.962,1029,3.905,1032,1.647,1036,1.782,1038,1.782,1039,1.374,1041,1.782,1043,1.782,1055,3.156,1063,2.867,1111,2.651,1116,1.782,1168,1.374,1171,1.54,1272,1.647,1329,6.343,1330,5.865,1331,1.782,1332,3.596,1333,4.512,1334,3.596,1335,4.512,1336,4.512,1337,6.053,1338,5.17,1339,5.17,1340,5.17,1341,4.512,1342,4.538,1343,4.512,1344,3.597,1345,3.597,1346,3.596,1347,2.235,1348,2.235,1349,2.235,1350,2.235,1351,2.235,1352,2.235,1353,2.235,1354,2.235,1355,2.235,1356,3.596,1357,3.596,1358,2.235,1359,2.235,1360,2.235,1361,2.235,1362,2.235,1363,2.235,1364,2.235,1365,3.596,1366,2.235,1367,4.512,1368,2.235,1369,2.235,1370,2.235,1371,2.235,1372,3.596,1373,3.596,1374,3.596,1375,2.235,1376,1.647,1377,1.962,1378,1.782,1379,1.782,1380,2.235,1381,2.235,1382,1.54,1383,1.782,1384,1.962,1385,2.235,1386,3.596,1387,2.235,1388,2.235,1389,2.235,1390,1.962,1391,2.235,1392,2.235,1393,2.235,1394,2.235,1395,2.235,1396,5.17,1397,3.596,1398,2.235,1399,6.618,1400,3.811,1401,2.235,1402,6.364,1403,2.235,1404,2.235,1405,2.235,1406,2.867,1407,3.596,1408,1.451,1409,2.235,1410,2.235,1411,2.235,1412,2.235,1413,1.962,1414,2.235,1415,2.235,1416,2.235,1417,2.235,1418,2.235,1419,2.235,1420,3.596,1421,2.235,1422,2.235,1423,2.235,1424,2.235,1425,3.596,1426,2.235,1427,2.235,1428,2.235,1429,4.512,1430,2.235,1431,2.235,1432,3.156,1433,1.962,1434,2.235,1435,2.235,1436,2.235,1437,2.235,1438,2.235,1439,2.235,1440,2.235,1441,2.235,1442,2.235,1443,2.235,1444,2.235,1445,1.962,1446,1.962,1447,2.235,1448,2.235,1449,2.235,1450,2.235,1451,2.235,1452,2.235,1453,2.235,1454,2.235,1455,2.235,1456,2.235,1457,2.235,1458,3.326,1459,2.235,1460,2.235,1461,2.235,1462,2.235,1463,2.235,1464,2.235,1465,2.235,1466,3.596,1467,2.235,1468,2.235,1469,2.235,1470,3.596,1471,2.235,1472,2.235,1473,2.235,1474,2.235,1475,2.235,1476,2.235,1477,2.235,1478,2.235,1479,2.235,1480,1.962,1481,1.962,1482,2.235,1483,1.962,1484,4.512,1485,1.962,1486,4.538,1487,2.235,1488,2.235,1489,2.235,1490,6.053,1491,4.538,1492,2.235,1493,1.962,1494,2.235,1495,4.512,1496,5.586,1497,5.17,1498,3.96,1499,3.596,1500,2.235,1501,3.156,1502,2.235,1503,3.156,1504,1.962,1505,2.235,1506,1.962,1507,1.962,1508,1.962,1509,1.962,1510,3.596,1511,2.235,1512,2.235,1513,2.235,1514,2.235,1515,2.235,1516,2.235,1517,1.962,1518,2.235,1519,3.596,1520,3.596,1521,3.596,1522,3.596,1523,2.235,1524,3.596,1525,3.596,1526,2.235,1527,1.962,1528,3.596,1529,2.235,1530,2.235,1531,5.666,1532,3.596,1533,2.235,1534,2.235,1535,2.235,1536,2.235,1537,2.235,1538,2.235,1539,2.235,1540,2.235,1541,2.235,1542,2.235,1543,2.235,1544,1.962,1545,2.235,1546,2.235,1547,2.235,1548,3.156,1549,3.156,1550,2.478,1551,2.235,1552,1.962,1553,2.235,1554,2.235,1555,2.235,1556,2.235,1557,2.235,1558,2.235,1559,2.235,1560,2.235,1561,2.235,1562,2.235,1563,2.235,1564,1.962,1565,1.962,1566,2.235,1567,2.235,1568,2.235,1569,2.235,1570,2.235,1571,2.235,1572,2.235,1573,2.235,1574,2.235,1575,2.235,1576,2.235,1577,1.782,1578,1.962,1579,1.962,1580,1.782,1581,1.647,1582,3.156]],["title/interfaces/MinimalTrek.html",[485,0.472,506,0.946]],["body/interfaces/MinimalTrek.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.713,34,0.011,35,0.559,36,0.573,41,0.163,58,0.237,91,0.388,109,0.761,127,0.612,130,0.669,139,0.614,162,0.004,163,0.006,164,0.004,306,0.733,307,0.891,310,1.138,319,0.896,331,1.188,335,1.181,336,1.631,339,0.971,342,2.437,345,1.375,385,1.396,404,1.357,433,0.968,438,0.968,471,0.866,473,1.647,485,0.974,486,0.916,487,0.968,488,0.942,489,1.847,490,1.643,491,1.636,492,1.683,493,1.683,494,1.683,495,2.122,496,2.066,497,1.683,498,1.746,499,0.942,500,0.996,501,1.464,502,0.82,503,0.82,504,0.843,505,1.922,506,1.347,507,1.846,508,0.996,509,1.435,510,1.636,511,1.32,512,1.636,513,2.124,514,1.922,515,1.357,516,1.841,517,1.815,518,1.683,519,1.435,520,1.435,521,1.435,522,1.117,523,1.952,524,1.435,525,1.579,526,1.396,527,1.435,528,1.435,529,1.435,530,1.396,531,1.435,532,1.464,533,1.435,534,1.435,535,1.396,536,1.181,537,1.357,538,1.396,539,2.087,540,0.996,541,0.996,542,1.435,543,0.996,544,0.996,545,1.396,546,0.968,547,0.968,548,0.996,549,0.996,550,0.996,551,0.996,552,0.996,553,1.435,554,1.396,555,1.591,556,1.396,557,1.214,558,0.866,559,0.891,560,0.82,561,0.916,562,0.916,563,0.996,564,0.866,565,1.435,566,1.214,567,0.866,568,0.866,569,0.996,570,1.249,571,0.916,572,1.424,573,0.996,574,0.968,575,1.464,576,1.505,577,0.942,578,0.916,579,1.284,580,1.505,581,1.357,582,1.385,583,0.866,584,0.996,585,1.87,586,0.996,587,0.968,588,0.968,589,0.968,590,0.968,591,0.968,592,0.968,593,0.968,594,0.968,595,0.996,596,0.968,597,0.996,598,0.996,599,0.891,600,0.968,601,1.249,602,1.214,603,0.916,604,0.733,605,0.968,606,0.891]],["title/interfaces/MinimalTrekProperties.html",[485,0.472,507,1.117]],["body/interfaces/MinimalTrekProperties.html",[3,0.093,4,0.066,8,0.075,16,0.237,29,0.689,34,0.011,35,0.57,36,0.576,41,0.16,58,0.237,91,0.378,109,0.749,127,0.602,130,0.662,139,0.598,162,0.004,163,0.006,164,0.004,306,0.708,307,0.86,310,1.116,319,0.848,331,1.188,335,1.152,336,1.614,339,0.947,342,2.377,345,1.381,385,1.361,404,1.323,433,0.935,438,0.935,471,0.837,473,1.62,485,0.971,486,0.885,487,0.935,488,0.91,489,1.822,490,1.655,491,1.953,492,2.009,493,2.009,494,2.009,495,2.093,496,2.048,497,1.65,498,1.722,499,0.91,500,0.962,501,1.435,502,0.792,503,0.792,504,0.814,505,1.9,506,1.12,507,1.713,508,1.812,509,1.4,510,1.953,511,1.77,512,1.953,513,1.953,514,1.9,515,1.323,516,1.812,517,1.798,518,1.65,519,1.4,520,1.4,521,1.4,522,1.09,523,1.925,524,1.4,525,1.564,526,1.361,527,1.4,528,1.4,529,1.4,530,1.361,531,1.4,532,1.435,533,1.4,534,1.4,535,1.361,536,1.152,537,1.323,538,1.361,539,2.073,540,0.962,541,0.962,542,1.4,543,0.962,544,0.962,545,1.361,546,0.935,547,0.935,548,0.962,549,0.962,550,0.962,551,0.962,552,0.962,553,1.4,554,1.361,555,1.56,556,1.361,557,1.184,558,0.837,559,0.86,560,0.792,561,0.885,562,0.885,563,0.962,564,0.837,565,1.4,566,1.184,567,0.837,568,0.837,569,0.962,570,1.218,571,0.885,572,1.396,573,0.962,574,0.935,575,1.435,576,1.476,577,0.91,578,0.885,579,1.252,580,1.476,581,1.323,582,1.358,583,0.837,584,0.962,585,1.847,586,0.962,587,0.935,588,0.935,589,0.935,590,0.935,591,0.935,592,0.935,593,0.935,594,0.935,595,0.962,596,0.935,597,0.962,598,0.962,599,0.86,600,0.935,601,1.218,602,1.184,603,0.885,604,0.708,605,0.935,606,0.86]],["title/interfaces/MinimalTreks.html",[485,0.472,504,1]],["body/interfaces/MinimalTreks.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.713,34,0.011,35,0.573,36,0.572,41,0.163,58,0.237,91,0.388,109,0.761,127,0.612,130,0.669,139,0.614,162,0.004,163,0.006,164,0.004,306,0.733,307,0.891,310,1.138,319,0.856,331,1.189,335,1.181,336,1.631,339,0.971,345,1.375,385,1.396,404,1.357,433,0.968,438,0.968,471,0.866,473,1.647,485,0.974,486,0.916,487,0.968,488,0.942,489,1.833,490,1.643,491,1.636,492,1.683,493,1.683,494,1.683,495,2.106,496,2.066,497,1.683,498,1.746,499,0.942,500,0.996,501,1.464,502,0.82,503,0.82,504,1.214,505,2.066,506,1.474,507,1.591,508,0.996,509,1.435,510,1.636,511,1.32,512,1.636,513,1.977,514,1.922,515,1.357,516,1.841,517,1.815,518,1.683,519,1.435,520,1.435,521,1.435,522,1.117,523,1.952,524,1.435,525,1.579,526,1.396,527,1.435,528,1.435,529,1.435,530,1.396,531,1.435,532,1.464,533,1.435,534,1.435,535,1.396,536,1.181,537,1.357,538,1.396,539,2.087,540,0.996,541,0.996,542,1.435,543,0.996,544,0.996,545,1.396,546,0.968,547,0.968,548,0.996,549,0.996,550,0.996,551,0.996,552,0.996,553,1.435,554,1.396,555,1.591,556,1.396,557,1.214,558,0.866,559,0.891,560,0.82,561,0.916,562,0.916,563,0.996,564,0.866,565,1.435,566,1.214,567,0.866,568,0.866,569,0.996,570,1.249,571,0.916,572,1.424,573,0.996,574,0.968,575,1.464,576,1.505,577,0.942,578,0.916,579,1.284,580,1.505,581,1.357,582,1.385,583,0.866,584,0.996,585,1.87,586,0.996,587,0.968,588,0.968,589,0.968,590,0.968,591,0.968,592,0.968,593,0.968,594,0.968,595,0.996,596,0.968,597,0.996,598,0.996,599,0.891,600,0.968,601,1.249,602,1.214,603,0.916,604,0.733,605,0.968,606,0.891]],["title/injectables/MoreInformationsService.html",[315,1.49,1583,2.916]],["body/injectables/MoreInformationsService.html",[3,0.153,4,0.107,8,0.122,13,3.013,16,0.388,17,1.52,19,1.52,24,2.844,25,4.646,31,1.588,33,1.478,34,0.011,35,0.481,36,0.459,37,1.32,39,1.478,41,0.229,42,0.696,43,2.046,44,2.046,45,2.111,46,2.324,58,0.153,59,0.651,60,2.555,75,1.714,76,4.817,162,0.007,163,0.009,164,0.007,189,3.013,265,2.537,266,3.084,294,1.795,315,2.461,316,5.473,317,3.148,319,0.779,320,5.573,321,2.197,336,1.775,343,1.714,345,1.17,355,2.178,362,3.148,490,1.096,567,1.37,568,1.37,647,1.816,1203,4.538,1583,4.817,1584,7.167,1585,6.019,1586,4.949,1587,6.057,1588,6.99,1589,7.942,1590,5.638,1591,6.99,1592,6.99,1593,5.638,1594,5.638,1595,6.057,1596,4.949,1597,6.332,1598,5.573,1599,5.573,1600,5.573,1601,6.136,1602,5.638,1603,5.638]],["title/components/MoreItemPage.html",[0,0.505,131,1.182]],["body/components/MoreItemPage.html",[0,0.815,1,1.26,2,1.84,3,0.122,4,0.086,5,1.411,6,1.411,7,1.411,8,0.098,10,1.372,11,2.784,12,2.418,14,1.894,16,0.31,17,1.316,19,0.981,31,1.648,33,0.954,34,0.011,35,0.47,36,0.479,37,0.852,39,1.543,40,2.039,41,0.198,42,0.557,58,0.122,59,0.521,60,1.411,75,1.372,91,0.34,92,1.894,93,1.894,94,1.411,95,2.284,96,1.411,97,1.411,98,1.26,99,1.411,100,1.411,101,1.26,102,1.411,103,1.411,104,1.26,105,1.894,106,1.26,107,1.411,108,1.26,109,0.521,110,1.411,111,1.26,112,1.411,113,1.411,114,1.26,115,1.411,116,1.26,117,1.372,118,1.333,119,2.137,120,1.26,121,1.372,122,1.411,123,1.26,124,1.411,125,1.26,126,1.512,127,0.677,128,1.894,129,1.296,130,0.651,131,2.039,132,2.21,133,1.411,134,1.26,135,1.411,136,1.26,137,1.894,138,1.26,139,0.539,140,1.26,141,1.411,142,1.26,143,1.411,144,1.26,145,2.137,146,1.26,147,1.26,148,1.411,149,1.225,150,1.411,151,1.26,152,1.411,153,1.296,154,1.26,155,1.894,156,1.26,157,1.26,158,1.411,159,1.26,160,1.411,161,1.411,162,0.006,163,0.007,164,0.006,197,1.637,279,1.923,294,1.158,306,1.244,319,0.675,343,1.372,345,0.932,364,2.411,415,1.453,419,1.84,420,3.014,424,1.95,430,3.194,453,2.639,489,1.353,522,1.316,568,1.774,647,1.453,790,3.862,791,3.996,797,3.379,798,3.379,805,3.502,831,3.996,832,2.639,833,2.639,836,1.99,842,2.639,843,2.774,847,2.639,848,3.109,858,2.639,1604,6.384,1605,5.902,1606,3.959,1607,6.683,1608,6.831,1609,6.052,1610,4.942,1611,6.831,1612,5.446,1613,5.82,1614,3.959,1615,5.381,1616,5.198,1617,6.052,1618,4.511,1619,4.511,1620,4.511,1621,4.511,1622,3.325,1623,4.511,1624,4.825,1625,4.511,1626,3.596,1627,6.052,1628,6.052]],["title/modules/MoreItemPageModule.html",[165,1.149,1629,3.119]],["body/modules/MoreItemPageModule.html",[0,0.72,3,0.163,4,0.115,8,0.131,34,0.011,41,0.234,42,0.744,43,2.188,44,2.188,47,1.386,58,0.163,59,0.696,91,0.455,131,2.389,132,1.637,162,0.007,163,0.009,164,0.007,165,1.637,167,2.329,168,2.485,169,3.453,170,2.66,171,2.485,172,2.485,180,2.905,181,2.66,182,2.57,185,3.104,190,3.104,197,2.188,198,5.018,199,5.292,200,5.292,204,3.588,209,2.57,212,2.97,292,3.222,293,4.182,294,1.548,295,3.707,921,3.588,922,3.526,924,3.09,1604,4.806,1605,4.444,1607,5.292,1629,6.36,1630,5.292,1631,5.292,1632,5.292,1633,4.334,1634,6.028,1635,3.707,1636,6.028,1637,4.444,1638,4.444,1639,3.222,1640,3.913]],["title/guards/MoreItemResolver.html",[198,2.916,1641,2.916]],["body/guards/MoreItemResolver.html",[3,0.155,4,0.109,8,0.124,16,0.393,17,1.532,19,1.532,21,3.606,31,1.409,33,1.49,34,0.011,35,0.485,36,0.462,37,1.331,39,1.208,41,0.236,42,0.705,45,2.139,46,2.355,47,1.313,48,2.612,58,0.155,59,0.659,60,2.391,64,2.929,65,2.815,132,1.914,162,0.007,163,0.009,164,0.007,189,3.053,197,2.074,198,4.857,243,5.829,244,3.709,245,3.937,265,2.774,294,1.467,315,2.481,354,3.709,355,2.723,356,3.513,360,3.937,361,3.053,410,3.709,411,3.709,419,1.737,522,1.242,568,1.388,647,1.84,1583,5.499,1585,4.212,1610,3.709,1612,4.555,1639,4.264,1642,3.937,1643,6.709,1644,5.015,1645,5.015,1646,5.714,1647,5.619,1648,5.882,1649,5.714,1650,5.619,1651,5.015,1652,5.015,1653,5.714,1654,5.714,1655,5.714,1656,4.212,1657,5.714,1658,4.555,1659,4.555]],["title/components/MorePage.html",[0,0.505,134,1.182]],["body/components/MorePage.html",[0,0.818,1,1.269,2,1.849,3,0.123,4,0.087,5,1.421,6,1.421,7,1.421,8,0.099,10,1.381,11,2.785,12,2.42,14,1.903,16,0.313,17,1.322,19,0.988,31,1.65,33,0.96,34,0.011,35,0.472,36,0.48,37,0.858,39,1.548,40,2.131,41,0.207,42,0.561,45,1.7,46,1.872,58,0.123,59,0.524,60,1.421,75,1.849,91,0.343,92,1.903,93,1.903,94,1.421,95,2.291,96,1.421,97,1.421,98,1.269,99,1.421,100,1.421,101,1.269,102,1.421,103,1.421,104,1.269,105,1.903,106,1.269,107,1.421,108,1.269,109,0.524,110,1.421,111,1.269,112,1.421,113,1.421,114,1.269,115,1.421,116,1.269,117,1.381,118,1.342,119,2.145,120,1.269,121,1.381,122,1.421,123,1.269,124,1.421,125,1.269,126,1.519,127,0.679,128,1.903,129,1.305,130,0.653,131,1.269,132,1.861,133,1.421,134,2.044,135,1.421,136,1.269,137,1.903,138,1.269,139,0.542,140,1.269,141,1.421,142,1.269,143,1.421,144,1.269,145,2.145,146,1.269,147,1.269,148,1.421,149,1.234,150,1.421,151,1.269,152,1.421,153,1.305,154,1.269,155,1.903,156,1.269,157,1.269,158,1.421,159,1.269,160,1.421,161,1.421,162,0.006,163,0.007,164,0.006,197,1.649,279,1.936,294,1.167,319,0.678,321,2.074,331,0.801,343,1.849,364,2.428,415,1.463,419,1.849,420,3.025,424,1.959,430,3.2,436,3.827,453,2.648,489,1.359,522,1.322,567,1.779,647,1.463,790,3.87,797,3.395,798,3.395,805,3.514,831,4.01,832,2.657,833,2.657,836,2.004,842,2.657,843,2.793,847,2.657,848,3.13,858,2.657,1610,4.954,1613,5.837,1614,3.987,1615,5.396,1616,5.207,1622,3.349,1624,4.848,1626,3.622,1660,3.987,1661,6.855,1662,6.081,1663,6.085,1664,6.855,1665,6.081,1666,4.543,1667,4.543,1668,5.338,1669,4.543,1670,4.543,1671,4.543,1672,4.543,1673,6.081]],["title/modules/MorePageModule.html",[165,1.149,1674,2.916]],["body/modules/MorePageModule.html",[0,0.723,3,0.164,4,0.115,8,0.131,34,0.011,41,0.234,42,0.748,43,2.198,44,2.198,47,1.392,58,0.164,59,0.699,91,0.457,134,2.391,162,0.007,163,0.009,164,0.007,165,1.645,167,2.34,168,2.497,169,3.46,170,2.672,171,2.497,172,2.497,180,2.913,181,2.672,182,2.582,185,3.113,190,3.113,197,2.198,201,5.033,202,5.316,204,3.598,209,2.582,212,2.984,292,3.237,293,4.19,294,1.556,295,3.724,436,3.382,921,3.598,922,3.543,924,3.105,1633,4.339,1635,3.724,1637,4.465,1638,4.465,1639,3.237,1640,3.932,1674,5.951,1675,5.316,1676,5.316,1677,6.057,1678,6.057,1679,6.057]],["title/guards/MoreResolver.html",[201,2.916,1641,2.916]],["body/guards/MoreResolver.html",[3,0.159,4,0.112,8,0.127,16,0.403,19,1.556,21,3.624,31,1.171,33,1.238,34,0.011,35,0.403,36,0.384,37,1.106,41,0.237,42,0.723,45,2.192,46,2.414,47,1.346,48,2.678,58,0.159,59,0.676,60,2.418,64,3.002,65,2.886,132,1.943,162,0.007,163,0.009,164,0.007,189,3.13,197,2.126,201,4.931,243,5.859,244,3.802,245,4.036,265,2.597,315,2.519,319,0.653,354,3.802,356,3.601,360,4.931,361,3.13,410,3.802,411,3.802,419,1.781,522,1.273,567,1.423,647,1.887,1583,5.546,1585,4.317,1610,3.802,1639,4.301,1642,4.036,1645,5.141,1648,5.275,1650,5.705,1651,5.141,1652,5.141,1656,4.317,1658,4.669,1659,4.669,1680,5.141,1681,5.857,1682,5.857,1683,5.857,1684,5.857,1685,5.857]],["title/injectables/OnlineTreksService.html",[28,2.085,315,1.49]],["body/injectables/OnlineTreksService.html",[3,0.09,4,0.063,8,0.072,13,1.775,16,0.229,17,1.061,19,1.061,24,2.166,25,3.73,28,2.405,31,1.689,33,1.652,34,0.011,35,0.538,36,0.52,37,1.476,39,1.726,40,0.928,41,0.208,42,0.41,43,1.206,44,1.206,45,1.244,46,1.369,54,4.179,55,1.703,58,0.09,59,0.383,60,2.445,75,1.939,76,4.681,126,0.83,127,0.537,130,0.707,162,0.004,163,0.006,164,0.004,180,1.325,187,4.7,189,1.775,265,3.053,266,3.391,294,1.934,306,0.683,310,1.093,315,1.718,316,4.394,317,1.855,319,0.544,320,4.613,321,2.347,327,2.648,329,3.598,331,1.056,336,1.76,341,4.514,343,1.939,345,1.36,355,1.283,362,1.855,419,1.01,453,1.885,467,2.043,501,1.549,502,0.764,503,0.764,504,0.785,506,1.293,517,1.846,538,0.902,572,0.785,575,0.807,580,0.83,582,1.122,583,1.406,585,2.2,587,1.571,588,1.571,589,1.732,590,1.325,591,1.325,592,1.732,593,1.325,594,1.325,596,1.732,602,1.367,647,1.07,677,4.139,679,2.156,680,2.289,747,3.408,840,2.156,844,2.648,987,2.916,1089,5.084,1203,4.139,1400,2.449,1458,2.449,1550,2.289,1565,2.916,1587,4.613,1595,5.662,1596,2.916,1597,6.509,1598,5.416,1599,5.416,1600,5.416,1601,6.61,1686,6.762,1687,5.785,1688,4.284,1689,4.881,1690,5.078,1691,4.284,1692,4.284,1693,4.284,1694,4.284,1695,6.377,1696,5.597,1697,5.078,1698,4.881,1699,3.322,1700,3.322,1701,4.881,1702,3.322,1703,6.316,1704,3.322,1705,3.322,1706,3.322,1707,3.322,1708,3.322,1709,3.322,1710,4.881,1711,3.322,1712,3.322,1713,3.322,1714,3.322,1715,3.322,1716,3.322,1717,3.322,1718,3.322,1719,3.322,1720,3.322,1721,3.322,1722,3.322,1723,2.289,1724,2.916,1725,3.322,1726,3.322,1727,3.322,1728,3.322,1729,3.322,1730,3.322,1731,3.322,1732,3.322,1733,3.322,1734,3.322,1735,2.449,1736,4.881,1737,3.322,1738,3.322,1739,3.322,1740,3.322,1741,3.322,1742,3.322,1743,3.322,1744,3.322,1745,3.322,1746,3.322,1747,3.322,1748,3.322,1749,3.322,1750,3.322,1751,3.322,1752,3.322,1753,3.322,1754,3.322,1755,3.322,1756,3.322,1757,3.322]],["title/interfaces/Picture.html",[485,0.472,517,1]],["body/interfaces/Picture.html",[3,0.096,4,0.068,8,0.077,16,0.244,29,0.709,34,0.011,35,0.559,36,0.57,41,0.163,58,0.237,91,0.526,109,0.759,127,0.61,130,0.668,139,0.611,162,0.004,163,0.006,164,0.004,306,0.73,307,0.886,310,1.135,319,0.855,331,1.19,335,1.603,336,1.629,339,0.967,345,1.374,385,1.391,404,1.352,433,0.964,438,0.964,471,0.862,473,1.871,485,0.973,486,0.911,487,0.964,488,0.937,489,1.831,490,1.642,491,1.632,492,1.678,493,1.678,494,1.678,495,2.104,496,2.063,497,1.678,498,1.742,499,0.937,500,0.991,501,1.46,502,0.816,503,0.816,504,0.839,505,1.919,506,1.145,507,1.587,508,0.991,509,1.948,510,1.632,511,1.315,512,1.632,513,1.974,514,1.919,515,1.352,516,1.837,517,1.846,518,1.678,519,1.43,520,1.43,521,1.43,522,1.113,523,1.948,524,1.43,525,1.577,526,1.391,527,1.43,528,1.43,529,1.43,530,1.391,531,1.43,532,1.46,533,1.43,534,1.43,535,1.391,536,1.177,537,1.352,538,1.391,539,2.085,540,0.991,541,0.991,542,1.43,543,0.991,544,0.991,545,1.391,546,0.964,547,0.964,548,0.991,549,0.991,550,0.991,551,0.991,552,0.991,553,1.43,554,1.391,555,1.587,556,1.391,557,1.21,558,0.862,559,0.886,560,0.816,561,0.911,562,0.911,563,0.991,564,0.862,565,1.43,566,1.21,567,0.862,568,0.862,569,0.991,570,1.244,571,0.911,572,1.42,573,0.991,574,0.964,575,1.46,576,1.501,577,0.937,578,0.911,579,1.279,580,1.501,581,1.352,582,1.381,583,0.862,584,0.991,585,1.867,586,0.991,587,0.964,588,0.964,589,0.964,590,0.964,591,0.964,592,0.964,593,0.964,594,0.964,595,0.991,596,0.964,597,0.991,598,0.991,599,0.886,600,0.964,601,1.244,602,1.21,603,0.911,604,0.73,605,0.964,606,0.886]],["title/interfaces/Poi.html",[139,0.505,485,0.472]],["body/interfaces/Poi.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.712,34,0.011,35,0.559,36,0.575,41,0.163,58,0.237,91,0.387,109,0.76,127,0.611,130,0.669,139,0.719,162,0.004,163,0.006,164,0.004,306,0.732,307,0.89,310,1.137,319,0.896,331,1.188,335,1.18,336,1.631,339,0.97,342,3.125,345,1.374,385,1.394,404,1.356,433,0.967,438,0.967,471,0.865,473,1.646,485,0.974,486,0.915,487,0.967,488,0.94,489,1.847,490,1.642,491,1.635,492,1.681,493,1.681,494,1.681,495,2.122,496,2.065,497,1.681,498,1.745,499,0.94,500,0.995,501,1.463,502,0.819,503,0.819,504,0.842,505,1.922,506,1.148,507,1.59,508,0.995,509,1.434,510,1.635,511,1.319,512,1.635,513,2.124,514,1.922,515,1.356,516,1.84,517,1.814,518,1.681,519,1.434,520,1.434,521,1.434,522,1.116,523,1.951,524,1.434,525,1.578,526,1.394,527,1.434,528,1.434,529,1.434,530,1.394,531,1.434,532,1.463,533,1.434,534,1.434,535,1.394,536,1.18,537,1.356,538,1.394,539,2.086,540,0.995,541,0.995,542,1.434,543,0.995,544,0.995,545,1.394,546,0.967,547,0.967,548,0.995,549,0.995,550,0.995,551,0.995,552,0.995,553,1.434,554,1.394,555,1.59,556,1.394,557,1.213,558,0.865,559,0.89,560,0.819,561,0.915,562,0.915,563,0.995,564,0.865,565,1.434,566,1.213,567,0.865,568,0.865,569,0.995,570,1.247,571,0.915,572,1.423,573,0.995,574,0.967,575,1.463,576,1.504,577,0.94,578,0.915,579,1.282,580,1.504,581,1.356,582,1.384,583,0.865,584,0.995,585,1.869,586,0.995,587,0.967,588,0.967,589,0.967,590,0.967,591,0.967,592,0.967,593,0.967,594,0.967,595,0.995,596,0.967,597,0.995,598,0.995,599,0.89,600,0.967,601,1.247,602,1.213,603,0.915,604,0.732,605,0.967,606,0.89]],["title/components/PoiComponent.html",[0,0.505,136,1.182]],["body/components/PoiComponent.html",[0,0.769,1,1.124,2,1.702,3,0.109,4,0.077,5,1.259,6,1.259,7,1.259,8,0.087,10,1.223,11,2.763,12,2.401,14,1.752,16,0.277,17,1.217,19,1.217,27,4.084,28,3.604,31,1.646,33,1.184,34,0.011,35,0.479,36,0.528,37,1.057,39,0.851,40,1.563,41,0.198,42,0.497,45,1.506,46,1.659,53,2.247,54,1.982,55,2.87,58,0.109,59,0.464,75,2.116,81,1.554,91,0.304,92,1.752,93,1.752,94,1.259,95,2.178,96,1.259,97,1.259,98,1.124,99,1.259,100,1.259,101,1.124,102,1.259,103,1.259,104,1.124,105,1.752,106,1.124,107,1.259,108,1.124,109,0.464,110,1.259,111,1.124,112,1.259,113,1.259,114,1.124,115,1.259,116,1.124,117,1.957,118,1.189,119,2.014,120,1.124,121,1.223,122,1.259,123,1.124,124,1.259,125,1.124,126,1.398,127,0.646,128,1.752,129,1.156,130,0.693,131,1.124,132,1.093,133,1.259,134,1.124,135,1.259,136,1.943,137,1.752,138,1.124,139,0.961,140,1.124,141,1.259,142,1.124,143,1.259,144,1.124,145,2.014,146,1.124,147,1.124,148,1.259,149,1.093,150,1.259,151,1.124,152,1.259,153,1.156,154,1.124,155,1.752,156,1.124,157,1.124,158,1.259,159,1.124,160,1.259,161,1.259,162,0.005,163,0.007,164,0.005,294,1.033,310,1.216,319,0.624,321,2.274,331,0.917,335,1.287,339,1.52,343,2.116,415,1.296,419,1.702,421,3.858,422,4.126,424,1.803,432,2.655,436,2.247,453,2.162,454,3.469,455,2.773,517,1.79,570,1.564,574,1.52,604,1.323,647,1.296,659,2.474,743,3.858,747,2.992,787,1.982,811,4.071,812,4.084,845,2.354,846,2.15,897,2.612,898,2.612,899,2.15,900,3.442,903,2.612,928,5.132,941,4.463,957,4.463,958,5.548,960,3.208,1039,3.442,1196,5.132,1203,3.634,1408,2.612,1581,2.966,1758,3.532,1759,5.65,1760,4.914,1761,5.65,1762,5.65,1763,3.532,1764,5.598,1765,4.024,1766,4.024,1767,4.024,1768,4.024,1769,4.024,1770,4.024,1771,4.024,1772,4.024,1773,4.024,1774,4.024,1775,4.024,1776,4.914,1777,4.914,1778,4.024,1779,3.532,1780,3.532,1781,3.532,1782,3.532,1783,3.532,1784,6.108,1785,6.421,1786,3.208,1787,3.208,1788,5.598,1789,5.598,1790,4.914,1791,5.598,1792,4.914,1793,4.914,1794,3.208,1795,3.208,1796,3.532,1797,4.914,1798,3.208,1799,3.532]],["title/components/PoiDetailsComponent.html",[0,0.505,138,1.182]],["body/components/PoiDetailsComponent.html",[0,0.726,1,1.012,2,1.581,3,0.098,4,0.069,5,1.134,6,1.134,7,1.134,8,0.079,10,1.102,11,2.741,12,2.383,14,1.627,16,0.249,17,1.13,19,1.13,27,3.927,28,3.465,29,1.463,30,3.335,31,1.677,33,0.766,34,0.011,35,0.418,36,0.535,37,0.685,39,1.099,40,1.698,41,0.209,42,0.447,45,1.357,46,1.494,47,0.833,53,2.023,54,1.786,55,2.665,57,1.937,58,0.098,59,0.418,75,2.138,81,1.4,91,0.459,92,1.627,93,1.627,94,1.134,95,2.078,96,1.134,97,1.134,98,1.012,99,1.134,100,1.134,101,1.012,102,1.134,103,1.134,104,1.012,105,1.627,106,1.012,107,1.134,108,1.012,109,0.418,110,1.134,111,1.012,112,1.134,113,1.134,114,1.012,115,1.134,116,1.012,117,1.102,118,1.071,119,1.902,120,1.012,121,1.102,122,1.134,123,1.012,124,1.134,125,1.012,126,1.299,127,0.616,128,1.627,129,1.041,130,0.673,131,1.012,132,0.984,133,1.134,134,1.012,135,1.134,136,1.012,137,1.627,138,1.855,139,0.989,140,1.012,141,1.134,142,1.012,143,1.134,144,1.012,145,1.902,146,1.012,147,1.012,148,1.134,149,0.984,150,1.134,151,1.012,152,1.134,153,1.041,154,1.012,155,1.627,156,1.012,157,1.012,158,1.134,159,1.012,160,1.134,161,1.134,162,0.004,163,0.006,164,0.004,252,6.216,294,1.335,310,1.148,319,0.58,321,2.336,331,0.927,335,1.195,339,1.483,343,2.138,355,1.4,415,1.167,424,1.675,436,2.023,453,2.008,517,1.73,604,1.25,630,3.335,647,1.167,659,3.197,743,3.583,787,1.786,800,4.312,810,2.497,811,4.114,812,3.927,814,4.577,836,2.682,845,2.12,846,1.937,885,2.497,898,2.353,899,1.937,900,3.197,903,2.353,1192,2.889,1193,4.563,1194,5.337,1195,4.563,1196,4.847,1198,5.492,1199,4.577,1202,3.181,1203,3.375,1206,3.181,1408,3.375,1581,2.671,1761,5.337,1762,4.563,1776,4.563,1777,4.563,1779,3.181,1780,3.181,1781,3.181,1782,3.181,1783,3.181,1784,5.83,1785,6.173,1786,2.889,1787,2.889,1790,4.563,1792,4.563,1793,4.563,1794,2.889,1795,2.889,1796,3.181,1797,4.563,1798,2.889,1799,3.181,1800,7.402,1801,6.08,1802,6.08,1803,5.199,1804,3.624,1805,3.624,1806,3.624,1807,3.624,1808,3.624,1809,3.624,1810,3.624,1811,3.624,1812,3.624,1813,3.624,1814,3.624,1815,3.624,1816,5.199,1817,3.624,1818,3.624,1819,3.624,1820,3.624,1821,3.624,1822,3.624,1823,3.624,1824,3.624,1825,3.624,1826,3.624,1827,3.624,1828,3.624,1829,3.624,1830,5.199,1831,5.199,1832,5.199,1833,5.199]],["title/interfaces/Pois.html",[485,0.472,572,1]],["body/interfaces/Pois.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.717,34,0.011,35,0.56,36,0.57,41,0.164,58,0.237,91,0.389,109,0.763,127,0.613,130,0.671,139,0.789,162,0.004,163,0.006,164,0.004,306,0.738,307,0.896,310,1.142,319,0.858,331,1.188,335,1.187,336,1.634,339,0.975,345,1.375,385,1.402,404,1.363,433,0.974,438,0.974,471,0.872,473,1.652,485,0.974,486,0.922,487,0.974,488,0.948,489,1.849,490,1.644,491,1.642,492,1.689,493,1.689,494,1.689,495,2.108,496,2.1,497,1.689,498,1.75,499,0.948,500,1.002,501,1.469,502,0.825,503,0.825,504,0.848,505,2.069,506,1.154,507,1.597,508,1.002,509,1.442,510,1.642,511,1.326,512,1.642,513,1.981,514,1.927,515,1.363,516,1.847,517,1.818,518,1.689,519,1.442,520,1.442,521,1.442,522,1.122,523,1.957,524,1.442,525,1.582,526,1.402,527,1.442,528,1.442,529,1.442,530,1.402,531,1.442,532,1.469,533,1.442,534,1.442,535,1.402,536,1.187,537,1.363,538,1.402,539,2.089,540,1.002,541,1.002,542,1.442,543,1.002,544,1.002,545,1.402,546,0.974,547,0.974,548,1.002,549,1.002,550,1.002,551,1.002,552,1.002,553,1.442,554,1.402,555,1.597,556,1.402,557,1.22,558,0.872,559,0.896,560,0.825,561,0.922,562,0.922,563,1.002,564,0.872,565,1.442,566,1.22,567,0.872,568,0.872,569,1.002,570,1.254,571,0.922,572,1.563,573,1.002,574,0.974,575,1.469,576,1.51,577,0.948,578,0.922,579,1.29,580,1.51,581,1.363,582,1.39,583,0.872,584,1.002,585,1.874,586,1.002,587,0.974,588,0.974,589,0.974,590,0.974,591,0.974,592,0.974,593,0.974,594,0.974,595,1.002,596,0.974,597,1.002,598,1.002,599,0.896,600,0.974,601,1.254,602,1.22,603,0.922,604,0.738,605,0.974,606,0.896]],["title/components/ProgressComponent.html",[0,0.505,140,1.182]],["body/components/ProgressComponent.html",[0,0.841,1,1.34,2,1.917,3,0.13,4,0.091,5,1.501,6,1.501,7,1.501,8,0.104,10,1.458,11,2.795,12,2.427,14,1.973,16,0.33,17,1.371,19,1.371,24,2.8,31,1.594,33,1.014,34,0.011,35,0.485,36,0.491,37,0.906,39,1.333,40,2.089,41,0.191,42,0.592,55,2.459,58,0.13,59,0.554,60,2.341,91,0.362,92,1.973,93,1.973,94,1.501,95,2.341,96,1.501,97,1.501,98,1.34,99,1.501,100,1.501,101,1.34,102,1.501,103,1.501,104,1.34,105,1.973,106,1.34,107,1.501,108,1.34,109,0.554,110,1.501,111,1.34,112,1.501,113,1.501,114,1.34,115,1.501,116,1.34,117,1.458,118,1.417,119,2.204,120,1.34,121,1.458,122,1.501,123,1.34,124,1.501,125,1.34,126,1.575,127,0.694,128,1.973,129,1.378,130,0.667,131,1.34,132,1.303,133,1.501,134,1.34,135,1.501,136,1.34,137,1.973,138,1.34,139,0.573,140,2.089,141,1.501,142,1.34,143,1.501,144,1.34,145,2.204,146,1.34,147,1.34,148,1.501,149,1.303,150,1.501,151,1.34,152,1.501,153,1.378,154,1.34,155,1.973,156,1.34,157,1.34,158,1.501,159,1.34,160,1.501,161,1.501,162,0.006,163,0.008,164,0.006,319,0.703,321,2.106,345,0.971,355,1.853,415,1.545,421,4.345,424,2.031,455,3.306,811,4.376,812,4.339,836,3.107,845,2.806,846,2.564,910,4.647,1199,5.155,1763,4.211,1834,4.211,1835,6.305,1836,7.043,1837,6.305,1838,7.976,1839,7.48,1840,6.182,1841,6.566,1842,6.305,1843,4.797,1844,4.797,1845,4.797,1846,4.797,1847,6.305,1848,4.797,1849,6.305,1850,4.211,1851,4.797,1852,6.305,1853,6.305]],["title/interfaces/Property.html",[485,0.472,539,1.087]],["body/interfaces/Property.html",[3,0.095,4,0.067,8,0.076,16,0.242,29,0.703,34,0.011,35,0.571,36,0.57,37,1.369,41,0.162,58,0.237,91,0.384,109,0.756,127,0.608,130,0.667,139,0.607,162,0.004,163,0.006,164,0.004,306,0.723,307,0.879,310,1.129,319,0.853,331,1.19,335,1.169,336,1.624,339,0.961,345,1.375,385,1.382,404,1.344,433,0.955,438,0.955,471,0.855,473,1.636,485,0.973,486,0.903,487,0.955,488,0.929,489,1.828,490,1.659,491,1.623,492,1.67,493,1.67,494,1.67,495,2.101,496,2.059,497,1.67,498,1.736,499,0.929,500,0.982,501,1.452,502,0.808,503,0.808,504,0.831,505,1.913,506,1.137,507,1.579,508,0.982,509,1.421,510,1.623,511,1.307,512,1.623,513,1.968,514,1.913,515,1.344,516,1.83,517,1.808,518,1.67,519,1.421,520,1.421,521,1.421,522,1.106,523,1.941,524,1.421,525,1.573,526,1.382,527,1.421,528,1.421,529,1.421,530,1.382,531,1.421,532,1.452,533,1.421,534,1.421,535,1.382,536,1.169,537,1.344,538,1.382,539,2.101,540,0.982,541,0.982,542,1.941,543,0.982,544,0.982,545,1.382,546,0.955,547,0.955,548,0.982,549,0.982,550,0.982,551,0.982,552,0.982,553,1.421,554,1.382,555,1.579,556,1.382,557,1.202,558,0.855,559,0.879,560,0.808,561,0.903,562,0.903,563,0.982,564,0.855,565,1.941,566,1.643,567,0.855,568,0.855,569,0.982,570,1.236,571,0.903,572,1.413,573,0.982,574,0.955,575,1.452,576,1.493,577,0.929,578,0.903,579,1.271,580,1.493,581,1.344,582,1.374,583,0.855,584,0.982,585,1.861,586,0.982,587,0.955,588,0.955,589,0.955,590,0.955,591,0.955,592,0.955,593,0.955,594,0.955,595,0.982,596,0.955,597,0.982,598,0.982,599,0.879,600,0.955,601,1.236,602,1.202,603,0.903,604,0.723,605,0.955,606,0.879]],["title/components/SearchComponent.html",[0,0.505,142,1.182]],["body/components/SearchComponent.html",[0,0.711,1,0.975,2,1.539,3,0.095,4,0.067,5,1.092,6,1.092,7,1.092,8,0.076,10,1.061,11,2.733,12,2.376,14,1.584,16,0.41,17,1.1,19,1.1,21,3.178,24,2.444,27,3.324,28,3.217,31,1.677,33,1.465,34,0.011,35,0.513,36,0.525,37,1.309,39,1.645,40,2.26,41,0.202,42,0.431,47,0.802,53,1.949,54,1.72,55,3.052,58,0.095,59,0.403,60,2.473,75,2.107,81,1.955,91,0.263,92,1.584,93,2.261,94,1.092,95,2.043,96,1.092,97,1.092,98,0.975,99,1.092,100,1.092,101,0.975,102,1.092,103,1.092,104,0.975,105,1.584,106,0.975,107,1.092,108,0.975,109,0.403,110,1.092,111,0.975,112,1.092,113,1.092,114,0.975,115,1.092,116,0.975,117,1.061,118,1.032,119,1.863,120,0.975,121,1.061,122,1.092,123,0.975,124,1.092,125,0.975,126,1.264,127,0.708,128,1.584,129,1.003,130,0.681,131,0.975,132,0.948,133,1.092,134,0.975,135,1.092,136,0.975,137,1.584,138,0.975,139,0.417,140,0.975,141,1.092,142,1.823,143,1.092,144,0.975,145,1.863,146,0.975,147,0.975,148,1.092,149,0.948,150,1.092,151,0.975,152,1.092,153,1.003,154,0.975,155,1.584,156,0.975,157,0.975,158,1.092,159,0.975,160,1.092,161,1.092,162,0.004,163,0.006,164,0.004,171,2.086,216,3.112,265,1.267,279,1.488,294,1.3,319,0.564,321,2.303,331,0.913,339,1.408,343,2.107,345,1.217,415,1.125,419,1.539,420,2.627,421,3.487,422,3.73,424,1.63,430,2.974,436,1.949,453,1.955,455,2.406,471,0.848,489,1.131,490,0.678,504,1.407,506,1.331,583,1.446,601,0.848,630,3.096,647,1.125,734,2.406,787,2.493,790,3.561,797,2.826,798,2.826,800,4.238,804,4.499,805,3.052,809,4.035,810,2.406,811,3.482,812,3.645,814,3.487,831,3.482,832,2.042,833,2.042,836,1.54,842,2.042,843,2.147,845,2.042,846,1.866,847,2.042,848,2.406,858,2.042,859,2.783,860,3.064,885,2.406,890,4.442,896,3.73,897,2.266,898,2.266,899,1.866,900,2.147,901,2.573,902,3.285,903,2.266,904,2.266,905,2.573,906,2.266,907,2.783,908,2.783,909,2.783,910,2.573,911,2.406,1198,5.137,1345,4.035,1400,4.388,1840,5.225,1841,5.73,1850,3.064,1854,3.064,1855,5.327,1856,5.205,1857,5.953,1858,5.061,1859,5.953,1860,5.953,1861,5.225,1862,5.953,1863,5.061,1864,5.061,1865,5.953,1866,5.061,1867,3.491,1868,5.061,1869,3.491,1870,3.064,1871,3.491,1872,4.442,1873,3.491,1874,3.491,1875,4.442,1876,3.491,1877,4.746,1878,5.061,1879,3.491,1880,5.73,1881,3.491,1882,3.491,1883,3.491,1884,3.491,1885,3.491,1886,3.491,1887,2.783,1888,3.491,1889,2.573,1890,2.573,1891,3.491,1892,5.953,1893,3.491,1894,3.491,1895,3.491,1896,3.491,1897,3.491,1898,3.491,1899,3.491,1900,5.953,1901,5.061,1902,3.491,1903,3.064,1904,5.061,1905,5.061,1906,4.442,1907,5.061]],["title/injectables/SearchTreksService.html",[315,1.49,1855,3.119]],["body/injectables/SearchTreksService.html",[3,0.168,4,0.118,8,0.134,13,3.303,16,0.425,17,1.607,31,1.235,33,1.307,34,0.011,35,0.425,36,0.405,37,1.167,39,1.307,41,0.214,42,0.763,58,0.168,59,0.713,127,0.734,162,0.008,163,0.009,164,0.008,265,3.086,315,2.603,317,3.451,321,2.089,331,1.042,362,3.451,506,1.901,647,1.991,680,4.259,724,5.894,1382,4.259,1855,5.449,1856,5.894,1877,6.679,1887,5.894,1908,6.489,1909,7.392,1910,6.18,1911,5.425,1912,6.18,1913,7.392,1914,6.18,1915,6.18,1916,6.18,1917,5.425]],["title/components/SelectFilterComponent.html",[0,0.505,144,1.182]],["body/components/SelectFilterComponent.html",[0,0.722,1,1.001,2,1.569,3,0.097,4,0.068,5,1.122,6,1.122,7,1.122,8,0.078,10,1.09,11,2.739,12,2.381,14,1.615,16,0.355,17,1.122,19,0.78,24,2.474,31,1.683,33,1.542,34,0.011,35,0.529,36,0.546,37,1.378,39,1.656,40,2.31,41,0.179,42,0.443,47,0.824,58,0.097,59,0.414,75,1.569,91,0.271,92,1.615,93,2.282,94,1.122,95,2.068,96,1.122,97,1.122,98,1.001,99,1.122,100,1.122,101,1.001,102,1.122,103,1.122,104,1.001,105,1.615,106,1.001,107,1.122,108,1.001,109,0.972,110,1.122,111,1.001,112,1.122,113,1.122,114,1.001,115,1.122,116,1.001,117,1.09,118,1.06,119,1.891,120,1.001,121,1.09,122,1.122,123,1.001,124,1.122,125,1.001,126,1.289,127,0.613,128,1.615,129,1.03,130,0.59,131,1.001,132,0.974,133,1.122,134,1.001,135,1.122,136,1.001,137,1.615,138,1.001,139,0.428,140,1.001,141,1.122,142,1.001,143,1.122,144,1.846,145,2.588,146,1.001,147,1.001,148,1.122,149,0.974,150,1.122,151,1.001,152,1.122,153,1.03,154,1.001,155,1.615,156,1.001,157,1.001,158,1.122,159,1.001,160,1.122,161,1.122,162,0.004,163,0.006,164,0.004,265,2.728,294,0.921,319,0.575,321,2.29,331,1.013,339,1.142,342,2.447,343,2.01,345,1.157,364,1.916,415,1.155,419,1.569,420,2.667,424,1.662,430,2.637,432,2.447,454,2.867,525,0.737,557,1.902,564,0.871,604,1.243,618,5.305,619,4.529,621,5.305,626,4.529,629,2.643,630,3.459,641,5.27,647,1.155,649,6.236,658,4.529,667,2.859,671,4.529,724,4.114,749,2.859,750,3.148,781,2.002,804,4.555,873,2.859,886,3.148,1046,4.555,1382,2.471,1856,4.114,1870,3.148,1875,4.529,1877,6.132,1903,3.148,1911,3.148,1917,3.148,1918,6.236,1919,3.148,1920,6.044,1921,7.004,1922,6.044,1923,5.16,1924,6.044,1925,5.16,1926,5.16,1927,3.586,1928,3.586,1929,3.586,1930,5.16,1931,3.586,1932,3.586,1933,3.586,1934,3.586,1935,3.586,1936,3.586,1937,3.586,1938,5.16,1939,3.586,1940,5.16,1941,3.586,1942,5.802,1943,3.586,1944,3.586,1945,3.586,1946,3.586,1947,5.16,1948,6.044,1949,5.16,1950,4.114,1951,6.61,1952,5.16,1953,5.16,1954,3.586,1955,3.586,1956,3.586,1957,3.586,1958,3.586,1959,5.16,1960,3.586,1961,3.586,1962,5.16,1963,5.16,1964,5.16,1965,5.16]],["title/components/SelectPoiComponent.html",[0,0.505,146,1.182]],["body/components/SelectPoiComponent.html",[0,0.814,1,1.255,2,1.836,3,0.122,4,0.086,5,1.407,6,1.407,7,1.407,8,0.098,10,1.367,11,2.783,12,2.418,14,1.889,16,0.309,17,1.313,19,0.977,24,2.931,31,1.626,33,1.277,34,0.011,35,0.523,36,0.514,37,1.141,39,1.541,40,2.234,41,0.164,42,0.555,47,1.033,58,0.122,59,0.519,91,0.339,92,1.889,93,1.889,94,1.407,95,2.281,96,1.407,97,1.407,98,1.255,99,1.407,100,1.407,101,1.255,102,1.407,103,1.407,104,1.255,105,1.889,106,1.255,107,1.407,108,1.255,109,0.519,110,1.407,111,1.255,112,1.407,113,1.407,114,1.255,115,1.407,116,1.255,117,1.367,118,1.328,119,2.134,120,1.255,121,1.367,122,1.407,123,1.255,124,1.407,125,1.255,126,1.508,127,0.676,128,1.889,129,1.291,130,0.65,131,1.255,132,1.221,133,1.407,134,1.255,135,1.407,136,1.255,137,1.889,138,1.255,139,0.814,140,1.255,141,1.407,142,1.255,143,1.407,144,1.255,145,2.677,146,2.036,147,1.255,148,1.407,149,1.221,150,1.407,151,1.255,152,1.407,153,1.291,154,1.255,155,1.889,156,1.255,157,1.255,158,1.407,159,1.255,160,1.407,161,1.407,162,0.006,163,0.007,164,0.006,319,0.673,321,2.217,331,1.002,342,2.132,345,1.05,364,2.402,415,1.448,419,1.836,420,3.009,424,1.945,430,2.908,432,2.864,454,3.234,490,0.874,566,1.062,629,3.313,630,3.714,747,2.402,1046,5.023,1550,3.098,1759,5.985,1760,5.3,1918,6.072,1950,4.814,1966,6.568,1967,3.946,1968,7.289,1969,6.038,1970,6.818,1971,7.605,1972,6.038,1973,4.495,1974,4.495,1975,4.495,1976,4.495,1977,4.495,1978,6.038,1979,4.495,1980,3.946,1981,4.495,1982,6.038,1983,3.946,1984,6.038,1985,6.038,1986,6.038]],["title/components/SelectTrekComponent.html",[0,0.505,147,1.182]],["body/components/SelectTrekComponent.html",[0,0.815,1,1.259,2,1.839,3,0.122,4,0.086,5,1.41,6,1.41,7,1.41,8,0.098,10,1.37,11,2.784,12,2.418,14,1.893,16,0.31,17,1.315,19,0.98,24,3.046,31,1.6,33,1.279,34,0.011,35,0.524,36,0.499,37,1.143,39,1.543,40,2.236,41,0.164,42,0.556,47,1.036,58,0.122,59,0.52,91,0.34,92,1.893,93,1.893,94,1.41,95,2.283,96,1.41,97,1.41,98,1.259,99,1.41,100,1.41,101,1.259,102,1.41,103,1.41,104,1.259,105,1.893,106,1.259,107,1.41,108,1.259,109,0.52,110,1.41,111,1.259,112,1.41,113,1.41,114,1.259,115,1.41,116,1.259,117,1.37,118,1.332,119,2.136,120,1.259,121,1.37,122,1.41,123,1.259,124,1.41,125,1.259,126,1.511,127,0.677,128,1.893,129,1.295,130,0.699,131,1.259,132,1.224,133,1.41,134,1.259,135,1.41,136,1.259,137,1.893,138,1.259,139,0.538,140,1.259,141,1.41,142,1.259,143,1.41,144,1.259,145,2.678,146,1.259,147,2.038,148,1.41,149,1.224,150,1.41,151,1.259,152,1.41,153,1.295,154,1.259,155,1.893,156,1.259,157,1.259,158,1.41,159,1.259,160,1.41,161,1.41,162,0.006,163,0.007,164,0.006,319,0.674,321,2.199,331,0.9,342,2.138,345,1.051,364,2.409,415,1.452,419,1.839,420,3.013,424,1.948,430,2.911,432,2.869,454,2.869,490,0.876,566,1.065,629,3.322,630,3.717,747,2.409,1046,5.029,1376,5.998,1548,5.993,1549,3.956,1550,3.106,1918,5.998,1950,4.823,1980,3.956,1983,3.956,1987,3.956,1988,6.828,1989,6.049,1990,7.297,1991,6.049,1992,6.049,1993,4.507,1994,4.507,1995,4.507,1996,4.507,1997,6.049,1998,4.507,1999,6.049,2000,6.049,2001,6.049,2002,6.049,2003,6.049,2004,6.049]],["title/interfaces/Settings.html",[29,0.846,485,0.472]],["body/interfaces/Settings.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,1.031,34,0.011,35,0.56,36,0.568,41,0.164,58,0.237,91,0.389,109,0.841,127,0.613,130,0.67,139,0.616,162,0.004,163,0.006,164,0.004,306,1.359,307,0.895,310,1.141,319,0.857,331,1.188,335,1.185,336,1.634,339,0.974,345,1.375,385,1.4,404,1.362,433,0.973,438,0.973,471,0.871,473,1.651,485,0.974,486,0.92,487,0.973,488,0.946,489,1.835,490,1.644,491,1.641,492,1.687,493,1.687,494,1.687,495,2.108,496,2.068,497,1.687,498,1.749,499,0.946,500,1.001,501,1.468,502,0.824,503,0.824,504,0.847,505,1.926,506,1.153,507,1.595,508,1.001,509,1.44,510,1.641,511,1.325,512,1.641,513,1.98,514,1.926,515,1.362,516,1.845,517,1.817,518,1.687,519,1.44,520,1.44,521,1.44,522,1.121,523,1.956,524,1.44,525,1.581,526,1.4,527,1.44,528,1.44,529,1.44,530,1.4,531,1.44,532,1.468,533,1.44,534,1.44,535,1.4,536,1.185,537,1.362,538,1.4,539,2.089,540,1.001,541,1.001,542,1.44,543,1.001,544,1.001,545,1.4,546,0.973,547,0.973,548,1.001,549,1.001,550,1.001,551,1.001,552,1.001,553,1.44,554,1.4,555,1.595,556,1.4,557,1.219,558,0.871,559,0.895,560,0.824,561,0.92,562,0.92,563,1.001,564,0.871,565,1.44,566,1.219,567,0.871,568,0.871,569,1.001,570,1.605,571,1.697,572,1.428,573,1.001,574,0.973,575,1.468,576,1.509,577,0.946,578,0.92,579,1.288,580,1.509,581,1.362,582,1.389,583,0.871,584,1.001,585,1.873,586,1.001,587,0.973,588,0.973,589,0.973,590,0.973,591,0.973,592,0.973,593,0.973,594,0.973,595,1.001,596,0.973,597,1.001,598,1.001,599,0.895,600,0.973,601,1.253,602,1.219,603,0.92,604,0.737,605,0.973,606,0.895]],["title/injectables/SettingsService.html",[30,2.007,315,1.49]],["body/injectables/SettingsService.html",[3,0.084,4,0.059,8,0.068,13,1.665,16,0.214,17,1.012,19,1.012,21,3.065,24,2.085,25,3.615,29,1.437,30,2.207,31,1.675,33,1.52,34,0.011,35,0.53,36,0.512,37,1.358,39,1.672,40,2.008,41,0.212,42,0.384,43,1.13,44,1.13,45,1.166,46,1.284,47,0.716,48,1.424,58,0.084,59,0.359,60,2.546,64,2.385,65,2.293,66,2.856,75,2.011,76,2.146,77,2.022,81,1.798,83,2.487,109,0.83,127,0.289,130,0.59,162,0.004,163,0.006,164,0.004,187,4.875,189,1.665,237,2.146,241,5.57,242,2.483,265,2.742,266,3.394,294,2.053,306,1.27,315,1.638,317,1.739,319,0.519,321,2.327,327,2.483,329,4.555,331,1.029,336,1.438,341,1.915,343,2.186,345,1.107,355,1.203,362,1.739,453,1.798,490,1.397,491,0.846,496,0.823,499,1.229,505,1.229,511,0.8,522,0.677,530,1.264,532,1.353,536,1.595,539,2.073,556,0.846,558,1.836,560,0.716,564,0.757,570,1.501,571,1.941,575,1.747,576,0.778,577,1.229,578,1.587,579,1.544,603,1.195,604,1.145,623,3.95,647,1.003,653,2.296,708,4.441,713,2.146,717,2.734,749,2.483,840,2.022,869,2.734,873,2.483,884,2.734,988,3.71,1058,5.671,1089,5.531,1123,4.258,1203,3.021,1382,2.146,1491,5.424,1550,3.207,1587,4.441,1595,3.71,1597,3.71,1598,2.483,1599,2.483,1600,2.483,1723,2.146,2005,2.734,2006,4.653,2007,4.653,2008,6.179,2009,5.57,2010,5.57,2011,6.179,2012,6.179,2013,6.179,2014,6.179,2015,4.653,2016,4.653,2017,6.179,2018,4.653,2019,4.653,2020,3.115,2021,4.653,2022,3.115,2023,3.115,2024,3.115,2025,3.115,2026,3.115,2027,3.115,2028,5.57,2029,3.115,2030,3.115,2031,3.115,2032,3.115,2033,4.653,2034,3.115,2035,4.653,2036,3.115,2037,3.115,2038,3.115,2039,3.115,2040,3.115,2041,3.115,2042,3.115,2043,4.653,2044,3.115,2045,2.734,2046,3.115,2047,3.115,2048,3.115,2049,3.115,2050,3.115,2051,3.115,2052,3.115,2053,3.115,2054,3.115,2055,3.115,2056,2.734,2057,2.734,2058,3.115,2059,4.653,2060,4.653,2061,3.115,2062,3.115,2063,3.115,2064,3.115,2065,3.115,2066,3.115,2067,5.57,2068,3.115,2069,3.115,2070,3.115,2071,4.653,2072,3.115,2073,3.115,2074,3.115,2075,3.115,2076,3.115,2077,3.115,2078,3.115,2079,3.115,2080,3.115,2081,5.57,2082,3.115,2083,3.115,2084,4.653,2085,3.115,2086,7.19,2087,4.653,2088,3.115,2089,4.653,2090,3.115,2091,4.653,2092,3.115,2093,4.653,2094,3.115,2095,3.115,2096,3.115,2097,3.115,2098,4.653,2099,3.115,2100,3.115,2101,3.115,2102,3.115,2103,3.115,2104,3.115,2105,3.115,2106,3.115,2107,4.653,2108,3.115,2109,3.115,2110,3.115,2111,4.653,2112,3.115,2113,3.115,2114,3.115,2115,3.115,2116,4.653,2117,3.115,2118,4.653,2119,4.653,2120,4.653,2121,4.653,2122,3.115,2123,3.115,2124,3.115,2125,3.115,2126,3.115,2127,4.653,2128,3.115,2129,3.115,2130,3.115,2131,3.115,2132,5.57,2133,3.115,2134,3.115,2135,3.115]],["title/modules/SharedFiltersModule.html",[165,1.149,919,2.916]],["body/modules/SharedFiltersModule.html",[3,0.15,4,0.105,8,0.12,12,1.877,34,0.011,41,0.232,42,0.683,43,2.009,44,2.009,58,0.15,59,0.639,91,0.418,104,2.434,106,2.452,108,2.434,114,2.434,142,2.434,144,2.452,162,0.007,163,0.008,164,0.007,165,1.503,167,2.138,168,2.282,169,3.324,170,2.442,171,2.282,172,3.106,180,2.757,181,2.442,182,2.359,184,6.066,185,2.359,190,2.946,209,2.359,212,2.727,648,3.814,649,4.08,650,4.859,768,4.413,919,6.152,921,3.405,924,2.838,1171,3.814,1378,4.413,1379,4.413,2136,4.859,2137,4.859,2138,4.859,2139,4.413,2140,5.535,2141,4.859,2142,5.535,2143,5.535,2144,5.535,2145,4.859]],["title/modules/SharedModule.html",[165,1.149,2146,2.747]],["body/modules/SharedModule.html",[3,0.161,4,0.113,8,0.129,34,0.011,41,0.231,42,0.732,43,2.153,44,2.153,47,1.363,58,0.161,59,0.684,91,0.447,111,2.455,125,2.455,127,0.669,129,2.525,130,0.643,162,0.007,163,0.009,164,0.007,165,1.611,167,2.291,168,2.445,169,3.428,170,2.617,171,2.445,172,3.203,180,2.876,181,2.617,182,2.528,185,2.528,190,3.074,204,3.553,209,2.528,212,2.922,921,3.553,924,3.041,926,4.372,1330,5.315,2146,5.727,2147,5.206,2148,5.206,2149,5.206,2150,5.931,2151,5.931,2152,5.931,2153,7.211,2154,7.211]],["title/modules/SharedTreksModule.html",[165,1.149,2155,2.747]],["body/modules/SharedTreksModule.html",[3,0.164,4,0.115,8,0.131,34,0.011,41,0.234,42,0.747,43,2.196,44,2.196,47,1.39,58,0.164,59,0.698,91,0.456,136,2.461,151,2.461,162,0.007,163,0.009,164,0.007,165,1.643,167,2.337,168,2.494,169,3.458,170,2.669,171,2.494,172,3.23,180,2.911,181,2.669,182,2.579,185,2.579,190,3.111,197,2.196,204,3.596,209,2.579,212,2.981,292,3.9,607,4.737,921,3.596,924,3.101,2139,4.823,2155,5.674,2156,5.31,2157,5.31,2158,5.31,2159,6.05,2160,6.05,2161,6.05,2162,4.823,2163,6.05,2164,4.823,2165,5.31]],["title/modules/SharedUiModule.html",[165,1.149,1633,2.169]],["body/modules/SharedUiModule.html",[3,0.162,4,0.114,8,0.13,34,0.011,41,0.232,42,0.739,47,1.376,58,0.162,59,0.691,91,0.452,98,2.458,101,2.458,123,2.458,162,0.007,163,0.009,164,0.007,165,1.626,167,2.312,168,2.467,169,3.442,170,2.641,171,2.467,172,3.216,180,2.893,181,2.641,182,2.552,185,2.552,190,3.091,197,2.173,204,3.573,209,2.552,292,3.875,417,4.773,465,4.773,921,3.573,1633,4.527,2139,4.773,2166,5.255,2167,5.255,2168,5.255,2169,5.986,2170,5.986,2171,5.986,2172,5.986,2173,5.986,2174,5.986]],["title/components/TabsPage.html",[0,0.505,149,1.149]],["body/components/TabsPage.html",[0,0.854,1,1.384,2,1.958,3,0.134,4,0.094,5,1.55,6,1.55,7,1.55,8,0.108,10,1.506,11,2.8,12,2.432,14,2.015,19,1.4,20,3.95,21,3.43,24,3.012,31,0.99,33,1.047,34,0.011,35,0.492,36,0.325,37,0.936,41,0.205,42,0.612,47,1.139,58,0.134,59,0.572,60,2.238,91,0.374,92,2.015,93,2.015,94,1.55,95,2.37,96,1.55,97,1.55,98,1.384,99,1.55,100,1.55,101,1.384,102,1.55,103,1.55,104,1.384,105,2.015,106,1.384,107,1.55,108,1.384,109,0.572,110,1.55,111,1.384,112,1.55,113,1.55,114,1.384,115,1.55,116,1.384,117,1.506,118,1.464,119,2.238,120,1.384,121,1.506,122,1.55,123,1.384,124,1.55,125,1.384,126,1.608,127,0.703,128,2.015,129,1.423,130,0.676,131,1.384,132,1.345,133,1.55,134,1.384,135,1.55,136,1.384,137,2.015,138,1.384,139,0.591,140,1.384,141,1.55,142,1.384,143,1.55,144,1.384,145,2.238,146,1.384,147,1.384,148,1.55,149,2.057,150,1.55,151,1.384,152,1.55,153,1.423,154,1.384,155,2.015,156,1.384,157,1.384,158,1.55,159,1.384,160,1.55,161,1.55,162,0.006,163,0.008,164,0.006,197,1.798,209,2.112,294,1.272,310,0.936,335,1.741,415,1.596,424,2.074,560,1.883,1616,5.319,1735,4.746,2175,4.349,2176,5.652,2177,7.154,2178,6.439,2179,4.954,2180,4.954,2181,4.954,2182,4.954,2183,4.349,2184,6.439,2185,6.439,2186,6.439]],["title/modules/TabsPageModule.html",[165,1.149,2187,3.119]],["body/modules/TabsPageModule.html",[3,0.163,4,0.114,8,0.13,34,0.011,41,0.235,42,0.741,43,2.178,44,2.178,47,1.379,58,0.163,59,0.692,91,0.453,149,2.293,162,0.007,163,0.009,164,0.007,165,1.629,167,2.318,168,2.473,169,3.446,170,2.647,171,2.473,172,2.473,180,2.897,181,2.647,182,2.558,185,3.095,190,3.095,204,3.578,209,2.558,212,2.956,921,3.578,922,3.51,924,3.076,1633,4.33,1635,3.69,1674,5.82,2187,6.53,2188,5.267,2189,5.267,2190,5.267,2191,5.82,2192,5.82,2193,6,2194,5.267,2195,6,2196,6,2197,6]],["title/modules/TabsPageRoutingModule.html",[165,1.149,2191,2.916]],["body/modules/TabsPageRoutingModule.html",[0,0.896,3,0.149,4,0.105,8,0.119,34,0.011,41,0.22,42,0.677,58,0.149,59,0.633,126,1.717,127,0.767,130,0.756,132,1.49,149,1.867,159,2.096,162,0.007,163,0.008,164,0.007,167,2.12,172,2.262,185,2.339,190,2.93,197,1.992,219,4.872,220,4.375,279,3.523,292,3.673,293,4.011,294,1.409,295,5.41,296,4.817,297,4.817,298,3.21,299,7.443,306,1.665,307,1.717,310,1.53,535,2.136,1605,4.045,1612,4.375,1639,3.673,1640,3.563,1735,4.045,2176,4.817,2191,4.737,2194,4.817,2198,5.488,2199,5.488,2200,4.462,2201,6.873,2202,6.272,2203,7.866,2204,6.873,2205,5.067,2206,6.873,2207,5.488,2208,5.488,2209,5.488]],["title/interfaces/TouristicCategorie.html",[485,0.472,578,1.087]],["body/interfaces/TouristicCategorie.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.716,34,0.011,35,0.573,36,0.568,41,0.164,58,0.237,91,0.389,109,0.763,127,0.613,130,0.67,139,0.616,162,0.004,163,0.006,164,0.004,306,0.737,307,0.895,310,1.141,319,0.857,331,1.189,335,1.185,336,1.634,339,0.974,345,1.376,385,1.4,404,1.362,433,0.973,438,0.973,471,0.871,473,1.651,485,0.974,486,0.92,487,0.973,488,0.946,489,1.835,490,1.663,491,1.641,492,1.687,493,1.687,494,1.687,495,2.108,496,2.068,497,1.687,498,1.749,499,0.946,500,1.001,501,1.468,502,0.824,503,0.824,504,0.847,505,1.926,506,1.153,507,1.595,508,1.001,509,1.44,510,1.641,511,1.325,512,1.641,513,1.98,514,1.926,515,1.362,516,1.845,517,1.817,518,1.687,519,1.44,520,1.44,521,1.44,522,1.121,523,1.956,524,1.44,525,1.581,526,1.4,527,1.44,528,1.44,529,1.44,530,1.4,531,1.44,532,1.468,533,1.44,534,1.44,535,1.4,536,1.185,537,1.362,538,1.4,539,2.089,540,1.001,541,1.001,542,1.44,543,1.001,544,1.001,545,1.4,546,0.973,547,0.973,548,1.001,549,1.001,550,1.001,551,1.001,552,1.001,553,1.44,554,1.4,555,1.595,556,1.4,557,1.219,558,0.871,559,0.895,560,0.824,561,0.92,562,0.92,563,1.001,564,0.871,565,1.44,566,1.219,567,0.871,568,0.871,569,1.001,570,1.253,571,0.92,572,1.428,573,1.001,574,0.973,575,1.468,576,1.509,577,0.946,578,1.325,579,1.288,580,1.509,581,1.362,582,1.389,583,0.871,584,1.001,585,1.873,586,1.001,587,0.973,588,0.973,589,0.973,590,0.973,591,0.973,592,0.973,593,0.973,594,0.973,595,1.001,596,0.973,597,1.001,598,1.001,599,0.895,600,0.973,601,1.253,602,1.219,603,0.92,604,0.737,605,0.973,606,0.895]],["title/interfaces/TouristicCategoryWithFeatures.html",[485,0.472,579,1.057]],["body/interfaces/TouristicCategoryWithFeatures.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.713,34,0.011,35,0.573,36,0.569,41,0.163,58,0.237,91,0.388,109,0.761,127,0.612,130,0.669,139,0.614,162,0.004,163,0.006,164,0.004,306,0.733,307,0.891,310,1.138,319,0.856,331,1.189,335,1.181,336,1.631,339,0.971,345,1.376,385,1.396,404,1.357,433,0.968,438,0.968,471,0.866,473,1.647,485,0.974,486,0.916,487,0.968,488,0.942,489,1.833,490,1.662,491,1.636,492,1.683,493,1.683,494,1.683,495,2.106,496,2.066,497,1.683,498,1.746,499,0.942,500,0.996,501,1.464,502,0.82,503,0.82,504,0.843,505,2.066,506,1.149,507,1.591,508,0.996,509,1.435,510,1.636,511,1.32,512,1.636,513,1.977,514,1.922,515,1.357,516,1.841,517,1.815,518,1.683,519,1.435,520,1.435,521,1.435,522,1.117,523,1.952,524,1.435,525,1.579,526,1.396,527,1.435,528,1.435,529,1.435,530,1.396,531,1.435,532,1.464,533,1.435,534,1.435,535,1.396,536,1.181,537,1.357,538,1.396,539,2.087,540,0.996,541,0.996,542,1.435,543,0.996,544,0.996,545,1.396,546,0.968,547,0.968,548,0.996,549,0.996,550,0.996,551,0.996,552,0.996,553,1.435,554,1.396,555,1.591,556,1.396,557,1.214,558,0.866,559,0.891,560,0.82,561,0.916,562,0.916,563,0.996,564,0.866,565,1.435,566,1.214,567,0.866,568,0.866,569,0.996,570,1.249,571,0.916,572,1.424,573,0.996,574,0.968,575,1.464,576,1.746,577,0.942,578,0.916,579,1.505,580,1.505,581,1.357,582,1.385,583,0.866,584,0.996,585,1.87,586,0.996,587,0.968,588,0.968,589,0.968,590,0.968,591,0.968,592,0.968,593,0.968,594,0.968,595,0.996,596,0.968,597,0.996,598,0.996,599,0.891,600,0.968,601,1.249,602,1.214,603,0.916,604,0.733,605,0.968,606,0.891]],["title/interfaces/TouristicContent.html",[485,0.472,576,1.057]],["body/interfaces/TouristicContent.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.712,34,0.011,35,0.559,36,0.575,41,0.163,58,0.237,91,0.387,109,0.76,127,0.611,130,0.669,139,0.613,162,0.004,163,0.006,164,0.004,306,0.732,307,0.89,310,1.137,319,0.896,331,1.188,335,1.18,336,1.631,339,0.97,342,3.125,345,1.374,385,1.394,404,1.356,433,0.967,438,0.967,471,0.865,473,1.646,485,0.974,486,0.915,487,0.967,488,0.94,489,1.847,490,1.642,491,1.635,492,1.681,493,1.681,494,1.681,495,2.122,496,2.065,497,1.681,498,1.745,499,0.94,500,0.995,501,1.463,502,0.819,503,0.819,504,0.842,505,1.922,506,1.148,507,1.59,508,0.995,509,1.434,510,1.635,511,1.319,512,1.635,513,2.124,514,1.922,515,1.356,516,1.84,517,1.814,518,1.681,519,1.434,520,1.434,521,1.434,522,1.116,523,1.951,524,1.434,525,1.578,526,1.394,527,1.434,528,1.434,529,1.434,530,1.394,531,1.434,532,1.463,533,1.434,534,1.434,535,1.394,536,1.18,537,1.356,538,1.394,539,2.086,540,0.995,541,0.995,542,1.434,543,0.995,544,0.995,545,1.394,546,0.967,547,0.967,548,0.995,549,0.995,550,0.995,551,0.995,552,0.995,553,1.434,554,1.394,555,1.59,556,1.394,557,1.213,558,0.865,559,0.89,560,0.819,561,0.915,562,0.915,563,0.995,564,0.865,565,1.434,566,1.213,567,0.865,568,0.865,569,0.995,570,1.247,571,0.915,572,1.423,573,0.995,574,0.967,575,1.463,576,1.646,577,0.94,578,0.915,579,1.282,580,1.504,581,1.356,582,1.384,583,0.865,584,0.995,585,1.869,586,0.995,587,0.967,588,0.967,589,0.967,590,0.967,591,0.967,592,0.967,593,0.967,594,0.967,595,0.995,596,0.967,597,0.995,598,0.995,599,0.89,600,0.967,601,1.247,602,1.213,603,0.915,604,0.732,605,0.967,606,0.89]],["title/interfaces/TouristicContents.html",[485,0.472,575,1.028]],["body/interfaces/TouristicContents.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.717,34,0.011,35,0.56,36,0.57,41,0.164,58,0.237,91,0.389,109,0.763,127,0.613,130,0.671,139,0.616,162,0.004,163,0.006,164,0.004,306,0.738,307,0.896,310,1.142,319,0.858,331,1.188,335,1.187,336,1.634,339,0.975,345,1.375,385,1.402,404,1.363,433,0.974,438,0.974,471,0.872,473,1.652,485,0.974,486,0.922,487,0.974,488,0.948,489,1.849,490,1.644,491,1.642,492,1.689,493,1.689,494,1.689,495,2.108,496,2.1,497,1.689,498,1.75,499,0.948,500,1.002,501,1.469,502,0.825,503,0.825,504,0.848,505,2.069,506,1.154,507,1.597,508,1.002,509,1.442,510,1.642,511,1.326,512,1.642,513,1.981,514,1.927,515,1.363,516,1.847,517,1.818,518,1.689,519,1.442,520,1.442,521,1.442,522,1.122,523,1.957,524,1.442,525,1.582,526,1.402,527,1.442,528,1.442,529,1.442,530,1.402,531,1.442,532,1.469,533,1.442,534,1.442,535,1.402,536,1.187,537,1.363,538,1.402,539,2.089,540,1.002,541,1.002,542,1.442,543,1.002,544,1.002,545,1.402,546,0.974,547,0.974,548,1.002,549,1.002,550,1.002,551,1.002,552,1.002,553,1.442,554,1.402,555,1.597,556,1.402,557,1.22,558,0.872,559,0.896,560,0.825,561,0.922,562,0.922,563,1.002,564,0.872,565,1.442,566,1.22,567,0.872,568,0.872,569,1.002,570,1.254,571,0.922,572,1.429,573,1.002,574,0.974,575,1.606,576,1.75,577,0.948,578,0.922,579,1.29,580,1.51,581,1.363,582,1.39,583,0.872,584,1.002,585,1.874,586,1.002,587,0.974,588,0.974,589,0.974,590,0.974,591,0.974,592,0.974,593,0.974,594,0.974,595,1.002,596,0.974,597,1.002,598,1.002,599,0.896,600,0.974,601,1.254,602,1.22,603,0.922,604,0.738,605,0.974,606,0.896]],["title/interfaces/TouristicEvent.html",[485,0.472,581,1.117]],["body/interfaces/TouristicEvent.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.712,34,0.011,35,0.559,36,0.575,41,0.163,58,0.237,91,0.387,109,0.76,127,0.611,130,0.669,139,0.613,162,0.004,163,0.006,164,0.004,306,0.732,307,0.89,310,1.137,319,0.896,331,1.188,335,1.18,336,1.631,339,0.97,342,3.125,345,1.374,385,1.394,404,1.356,433,0.967,438,0.967,471,0.865,473,1.646,485,0.974,486,0.915,487,0.967,488,0.94,489,1.847,490,1.642,491,1.635,492,1.681,493,1.681,494,1.681,495,2.122,496,2.065,497,1.681,498,1.745,499,0.94,500,0.995,501,1.463,502,0.819,503,0.819,504,0.842,505,1.922,506,1.148,507,1.59,508,0.995,509,1.434,510,1.635,511,1.319,512,1.635,513,2.124,514,1.922,515,1.356,516,1.84,517,1.814,518,1.681,519,1.434,520,1.434,521,1.434,522,1.116,523,1.951,524,1.434,525,1.578,526,1.394,527,1.434,528,1.434,529,1.434,530,1.394,531,1.434,532,1.463,533,1.434,534,1.434,535,1.394,536,1.18,537,1.356,538,1.394,539,2.086,540,0.995,541,0.995,542,1.434,543,0.995,544,0.995,545,1.394,546,0.967,547,0.967,548,0.995,549,0.995,550,0.995,551,0.995,552,0.995,553,1.434,554,1.394,555,1.59,556,1.394,557,1.213,558,0.865,559,0.89,560,0.819,561,0.915,562,0.915,563,0.995,564,0.865,565,1.434,566,1.213,567,0.865,568,0.865,569,0.995,570,1.247,571,0.915,572,1.423,573,0.995,574,0.967,575,1.463,576,1.504,577,0.94,578,0.915,579,1.282,580,1.504,581,1.59,582,1.384,583,0.865,584,0.995,585,1.869,586,0.995,587,0.967,588,0.967,589,0.967,590,0.967,591,0.967,592,0.967,593,0.967,594,0.967,595,0.995,596,0.967,597,0.995,598,0.995,599,0.89,600,0.967,601,1.247,602,1.213,603,0.915,604,0.732,605,0.967,606,0.89]],["title/interfaces/TouristicEvents.html",[485,0.472,580,1.057]],["body/interfaces/TouristicEvents.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.717,34,0.011,35,0.56,36,0.57,41,0.164,58,0.237,91,0.389,109,0.763,127,0.613,130,0.671,139,0.616,162,0.004,163,0.006,164,0.004,306,0.738,307,0.896,310,1.142,319,0.858,331,1.188,335,1.187,336,1.634,339,0.975,345,1.375,385,1.402,404,1.363,433,0.974,438,0.974,471,0.872,473,1.652,485,0.974,486,0.922,487,0.974,488,0.948,489,1.849,490,1.644,491,1.642,492,1.689,493,1.689,494,1.689,495,2.108,496,2.1,497,1.689,498,1.75,499,0.948,500,1.002,501,1.469,502,0.825,503,0.825,504,0.848,505,2.069,506,1.154,507,1.597,508,1.002,509,1.442,510,1.642,511,1.326,512,1.642,513,1.981,514,1.927,515,1.363,516,1.847,517,1.818,518,1.689,519,1.442,520,1.442,521,1.442,522,1.122,523,1.957,524,1.442,525,1.582,526,1.402,527,1.442,528,1.442,529,1.442,530,1.402,531,1.442,532,1.469,533,1.442,534,1.442,535,1.402,536,1.187,537,1.363,538,1.402,539,2.089,540,1.002,541,1.002,542,1.442,543,1.002,544,1.002,545,1.402,546,0.974,547,0.974,548,1.002,549,1.002,550,1.002,551,1.002,552,1.002,553,1.442,554,1.402,555,1.597,556,1.402,557,1.22,558,0.872,559,0.896,560,0.825,561,0.922,562,0.922,563,1.002,564,0.872,565,1.442,566,1.22,567,0.872,568,0.872,569,1.002,570,1.254,571,0.922,572,1.429,573,1.002,574,0.974,575,1.469,576,1.51,577,0.948,578,0.922,579,1.29,580,1.652,581,1.746,582,1.39,583,0.872,584,1.002,585,1.874,586,1.002,587,0.974,588,0.974,589,0.974,590,0.974,591,0.974,592,0.974,593,0.974,594,0.974,595,1.002,596,0.974,597,1.002,598,1.002,599,0.896,600,0.974,601,1.254,602,1.22,603,0.922,604,0.738,605,0.974,606,0.896]],["title/interfaces/Trek.html",[130,0.377,485,0.472]],["body/interfaces/Trek.html",[3,0.097,4,0.068,8,0.077,16,0.245,29,0.713,34,0.011,35,0.559,36,0.573,41,0.163,58,0.237,91,0.388,109,0.761,127,0.612,130,0.685,139,0.614,162,0.004,163,0.006,164,0.004,306,0.733,307,0.891,310,1.138,319,0.896,331,1.188,335,1.181,336,1.631,339,0.971,342,2.437,345,1.375,385,1.396,404,1.357,433,0.968,438,0.968,471,0.866,473,1.647,485,0.974,486,0.916,487,0.968,488,0.942,489,1.847,490,1.643,491,1.636,492,1.683,493,1.683,494,1.683,495,2.122,496,2.066,497,1.683,498,1.746,499,0.942,500,0.996,501,1.464,502,0.82,503,0.82,504,0.843,505,1.922,506,1.149,507,1.591,508,0.996,509,1.435,510,1.636,511,1.32,512,1.636,513,2.124,514,1.922,515,1.741,516,1.841,517,1.815,518,1.683,519,1.435,520,1.435,521,1.435,522,1.117,523,1.952,524,1.435,525,1.579,526,1.396,527,1.435,528,1.435,529,1.435,530,1.396,531,1.435,532,1.464,533,1.435,534,1.435,535,1.396,536,1.181,537,1.357,538,1.396,539,2.087,540,0.996,541,0.996,542,1.435,543,0.996,544,0.996,545,1.396,546,0.968,547,0.968,548,0.996,549,0.996,550,0.996,551,0.996,552,0.996,553,1.435,554,1.396,555,1.591,556,1.396,557,1.214,558,0.866,559,0.891,560,0.82,561,0.916,562,0.916,563,0.996,564,0.866,565,1.435,566,1.214,567,0.866,568,0.866,569,0.996,570,1.249,571,0.916,572,1.424,573,0.996,574,0.968,575,1.464,576,1.505,577,0.942,578,0.916,579,1.284,580,1.505,581,1.357,582,1.385,583,0.866,584,0.996,585,1.87,586,0.996,587,0.968,588,0.968,589,0.968,590,0.968,591,0.968,592,0.968,593,0.968,594,0.968,595,0.996,596,0.968,597,0.996,598,0.996,599,0.891,600,0.968,601,1.249,602,1.214,603,0.916,604,0.733,605,0.968,606,0.891]],["title/components/TrekCardComponent.html",[0,0.505,151,1.182]],["body/components/TrekCardComponent.html",[0,0.641,1,0.819,2,1.352,3,0.079,4,0.056,5,0.917,6,0.917,7,0.917,8,0.064,10,0.891,11,2.692,12,2.341,14,1.391,16,0.306,17,0.967,19,0.967,24,2.637,25,3.506,27,3.597,28,3.174,29,1.288,30,3.056,31,1.643,33,1.135,34,0.011,35,0.443,36,0.518,37,1.014,39,1.267,40,1.242,41,0.191,42,0.362,43,1.064,44,1.064,47,0.674,53,1.637,54,1.445,55,2.279,57,1.567,58,0.079,59,0.338,60,2.325,66,3.476,75,1.822,81,2.927,83,2.376,91,0.221,92,1.391,93,1.391,94,0.917,95,1.876,96,0.917,97,0.917,98,0.819,99,0.917,100,0.917,101,0.819,102,0.917,103,0.917,104,0.819,105,1.391,106,0.819,107,0.917,108,0.819,109,0.338,110,0.917,111,0.819,112,0.917,113,0.917,114,0.819,115,0.917,116,0.819,117,0.891,118,0.866,119,1.681,120,0.819,121,0.891,122,0.917,123,0.819,124,0.917,125,0.819,126,1.111,127,0.556,128,1.391,129,0.842,130,0.745,131,0.819,132,0.796,133,0.917,134,0.819,135,0.917,136,0.819,137,1.391,138,0.819,139,0.35,140,0.819,141,0.917,142,0.819,143,0.917,144,0.819,145,1.681,146,0.819,147,0.819,148,0.917,149,0.796,150,0.917,151,1.674,152,0.917,153,0.842,154,0.819,155,1.391,156,0.819,157,0.819,158,0.917,159,0.819,160,0.917,161,0.917,162,0.004,163,0.005,164,0.004,216,1.803,279,1.895,294,1.655,307,1.609,310,1.217,319,0.496,321,2.267,331,0.979,335,1.022,341,2.734,343,1.822,345,1.166,349,3.903,350,3.545,415,0.944,419,1.352,420,2.37,421,3.064,422,3.277,424,1.432,430,2.391,432,2.109,436,1.637,453,2.315,454,3.341,455,2.02,471,1.305,473,0.732,482,1.637,483,1.903,511,0.753,517,1.269,525,1.325,536,1.558,585,1.379,623,3.624,647,0.944,660,1.803,742,3.545,743,3.064,747,3.203,781,3.347,787,1.445,788,2.02,811,3.769,812,3.597,845,1.715,846,1.567,898,2.886,899,2.376,900,3.962,901,3.277,902,1.903,903,1.903,904,1.903,932,5.406,985,2.573,1029,3.701,1032,3.277,1038,2.337,1039,1.803,1041,3.545,1043,2.337,1045,2.573,1046,2.02,1047,2.573,1049,2.573,1116,3.545,1168,1.803,1262,2.573,1323,3.903,1408,3.891,1432,4.714,1552,2.573,1577,2.337,1578,2.573,1579,2.573,1580,2.337,1581,2.161,1582,3.903,1735,3.277,1786,2.337,1787,2.337,1794,4.779,1889,2.161,1890,3.277,2162,6.59,2210,7.255,2211,2.573,2212,5.371,2213,4.446,2214,5.371,2215,5.371,2216,5.371,2217,4.446,2218,5.994,2219,4.446,2220,6.442,2221,6.442,2222,2.932,2223,7.045,2224,4.446,2225,2.932,2226,2.932,2227,2.932,2228,2.932,2229,2.932,2230,2.932,2231,4.446,2232,2.932,2233,2.932,2234,2.932,2235,4.446,2236,5.994,2237,2.932,2238,5.371,2239,2.932,2240,2.932,2241,2.932,2242,2.932,2243,2.932,2244,2.932,2245,2.932,2246,2.932,2247,2.932,2248,2.932,2249,4.446,2250,2.932,2251,4.446,2252,4.446,2253,4.446,2254,2.932,2255,4.446,2256,4.446,2257,2.932,2258,2.932,2259,2.932,2260,4.446,2261,4.446,2262,4.446,2263,2.932,2264,2.932,2265,2.932,2266,2.932,2267,4.446,2268,2.932,2269,4.446,2270,2.932,2271,2.932,2272,2.932,2273,2.932,2274,2.932,2275,2.932,2276,2.932,2277,2.932,2278,2.932,2279,2.932,2280,2.932,2281,4.446,2282,4.446,2283,4.446,2284,4.446,2285,4.446,2286,4.446,2287,6.781,2288,6.781,2289,4.446,2290,5.994,2291,4.446,2292,4.446,2293,4.446,2294,2.932,2295,4.446,2296,2.932,2297,2.573,2298,3.903,2299,2.932,2300,2.573,2301,4.446,2302,2.932,2303,2.932,2304,2.932,2305,2.932,2306,4.446,2307,4.446,2308,4.446,2309,2.932,2310,2.932,2311,2.932,2312,4.446,2313,2.932,2314,4.779,2315,3.903,2316,2.932,2317,2.932]],["title/interfaces/TrekContext.html",[485,0.472,599,1.057]],["body/interfaces/TrekContext.html",[3,0.092,4,0.065,8,0.074,16,0.235,29,0.681,34,0.011,35,0.554,36,0.575,41,0.159,58,0.236,91,0.375,109,0.745,127,0.599,130,0.732,139,0.594,162,0.004,163,0.006,164,0.004,306,0.701,307,1.612,310,1.354,319,0.846,331,1.187,335,1.143,336,1.609,339,1.219,345,1.372,385,1.35,404,1.313,433,0.925,438,0.925,471,0.828,473,1.612,485,0.97,486,0.875,487,0.925,488,0.9,489,1.818,490,1.633,491,1.594,492,1.64,493,1.64,494,1.64,495,2.089,496,2.043,497,1.64,498,1.715,499,0.9,500,0.952,501,1.668,502,0.783,503,0.783,504,0.805,505,1.893,506,1.112,507,1.551,508,0.952,509,1.389,510,1.594,511,1.277,512,1.594,513,1.946,514,1.893,515,1.313,516,1.803,517,1.792,518,1.64,519,1.389,520,1.389,521,1.389,522,1.081,523,1.917,524,1.389,525,1.656,526,1.35,527,1.389,528,1.389,529,1.389,530,1.35,531,1.389,532,1.426,533,1.389,534,1.389,535,1.35,536,1.484,537,1.313,538,1.35,539,2.069,540,0.952,541,0.952,542,1.389,543,0.952,544,0.952,545,1.35,546,0.925,547,0.925,548,0.952,549,0.952,550,0.952,551,0.952,552,0.952,553,1.389,554,1.35,555,1.551,556,1.35,557,1.175,558,0.828,559,0.851,560,0.783,561,0.875,562,0.875,563,0.952,564,0.828,565,1.389,566,1.175,567,0.828,568,0.828,569,0.952,570,1.208,571,0.875,572,1.792,573,0.952,574,0.925,575,1.843,576,1.467,577,0.9,578,0.875,579,1.612,580,1.895,581,1.313,582,1.578,583,0.828,584,0.952,585,1.841,586,0.952,587,0.925,588,0.925,589,0.925,590,0.925,591,0.925,592,0.925,593,0.925,594,0.925,595,0.952,596,0.925,597,0.952,598,0.952,599,1.242,600,1.753,601,1.668,602,1.622,603,1.658,604,1.327,605,1.753,606,0.851]],["title/guards/TrekContextResolver.html",[217,2.747,1641,2.916]],["body/guards/TrekContextResolver.html",[3,0.124,4,0.087,8,0.1,16,0.316,17,1.331,19,1.331,21,3.428,27,3.846,28,3.621,30,3.814,31,1.224,33,1.294,34,0.011,35,0.474,36,0.402,37,1.156,39,0.97,41,0.233,42,0.566,45,1.717,46,1.891,47,1.054,48,2.097,53,2.561,54,2.26,55,3.138,57,2.451,58,0.124,59,0.529,60,2.516,64,2.352,65,2.26,126,1.529,130,0.774,162,0.006,163,0.007,164,0.006,189,2.451,197,1.665,203,3.161,217,3.973,243,5.541,244,2.978,245,3.161,265,2.779,294,2.164,307,1.967,310,1.446,315,2.155,339,1.446,345,0.706,354,2.978,355,1.772,356,2.821,361,2.451,410,2.978,411,2.978,419,1.395,501,1.487,502,1.054,503,1.054,522,0.997,536,1.689,572,1.737,575,1.86,580,1.836,582,1.689,585,2.065,599,1.529,600,1.246,601,1.114,602,1.446,603,1.572,604,1.416,605,1.871,647,1.478,747,3.271,761,2.821,811,4.03,812,4.104,845,2.683,846,2.451,899,2.451,1242,4.472,1245,3.161,1246,4.299,1272,3.381,1314,4.027,1610,2.978,1616,5.22,1639,3.928,1642,3.161,1647,4.88,1648,5.418,1650,4.88,1656,3.381,1658,3.657,1659,3.657,1703,5.492,1889,3.381,1890,3.381,1906,4.027,2318,4.027,2319,4.587,2320,4.587,2321,6.121,2322,4.027,2323,4.587,2324,4.587,2325,6.121,2326,4.587,2327,6.121,2328,4.587,2329,4.587,2330,4.587,2331,4.587,2332,4.587,2333,4.587,2334,4.027,2335,4.587,2336,4.587,2337,4.587,2338,4.587,2339,4.587,2340,4.587,2341,4.587,2342,4.027,2343,4.027,2344,4.587,2345,3.657,2346,4.587,2347,4.587,2348,4.027,2349,4.587]],["title/modules/TrekDetailsPageModule.html",[165,1.149,2350,3.119]],["body/modules/TrekDetailsPageModule.html",[0,0.703,3,0.16,4,0.112,8,0.128,34,0.011,41,0.236,42,0.727,43,2.138,44,2.138,47,1.354,58,0.16,59,0.68,91,0.444,130,0.525,153,2.445,162,0.007,163,0.009,164,0.007,165,1.6,167,2.275,168,2.428,169,3.418,170,2.599,171,2.428,172,2.428,180,2.864,181,2.599,182,2.511,185,3.061,190,3.061,197,2.138,204,3.538,209,2.511,212,2.902,217,4.661,218,4.696,292,3.148,293,4.14,294,1.513,295,3.622,607,4.661,921,3.538,922,4.2,924,3.02,1633,4.311,1635,3.622,1637,4.342,1638,4.342,1639,3.148,1640,3.824,2155,5.459,2165,5.17,2200,3.824,2202,4.696,2350,6.418,2351,5.17,2352,5.17,2353,5.89,2354,4.342,2355,5.89,2356,5.17,2357,5.89,2358,5.89]],["title/components/TrekMapPage.html",[0,0.505,154,1.182]],["body/components/TrekMapPage.html",[0,0.784,1,0.856,2,1.398,3,0.083,4,0.058,5,0.96,6,0.96,7,0.96,8,0.067,10,0.932,11,2.703,12,2.35,14,1.439,16,0.317,17,1,19,1,21,3.049,29,1.313,30,3.116,31,1.691,33,1.389,34,0.011,35,0.492,36,0.532,37,1.241,39,1.591,40,2.14,41,0.211,42,0.379,47,0.705,57,1.639,58,0.083,59,0.354,60,2.398,65,1.511,66,3.667,75,1.997,81,1.185,91,0.231,92,1.439,93,1.439,94,0.96,95,1.919,96,0.96,97,0.96,98,0.856,99,0.96,100,0.96,101,0.856,102,0.96,103,0.96,104,0.856,105,1.439,106,0.856,107,0.96,108,0.856,109,0.354,110,0.96,111,0.856,112,0.96,113,0.96,114,0.856,115,0.96,116,1.541,117,0.932,118,1.631,119,1.727,120,0.856,121,0.932,122,0.96,123,0.856,124,0.96,125,0.856,126,1.838,127,0.569,128,1.439,129,0.881,130,0.694,131,0.856,132,0.833,133,0.96,134,0.856,135,0.96,136,0.856,137,1.439,138,1.541,139,0.854,140,0.856,141,0.96,142,0.856,143,0.96,144,0.856,145,1.727,146,0.856,147,0.856,148,0.96,149,0.833,150,0.96,151,0.856,152,0.96,153,0.881,154,1.712,155,1.439,156,0.856,157,0.856,158,0.96,159,0.856,160,0.96,161,0.96,162,0.004,163,0.006,164,0.004,197,1.113,203,2.113,209,1.307,216,3.393,251,2.692,252,2.26,253,4.037,254,2.692,255,2.26,265,2.225,271,3.587,279,2.352,294,1.575,298,1.794,303,6.189,306,0.946,310,1.158,319,0.513,321,2.331,331,0.727,339,1.351,343,1.997,345,0.85,415,0.988,419,1.398,424,1.481,430,2.201,453,2.538,467,2.828,473,0.766,482,2.568,483,2.986,489,1.028,490,0.596,501,1.341,502,0.705,503,0.705,522,1.2,532,1.738,536,1.268,560,1.644,572,1.304,579,1.378,582,1.268,599,1.149,601,1.341,602,1.304,603,1.417,604,1.261,623,3.823,630,3.392,647,0.988,655,3.803,656,3.169,657,3.169,659,2.828,660,1.886,661,2.113,675,2.692,781,3.424,787,1.511,788,2.113,790,3.398,791,3.228,797,2.568,798,2.568,800,1.991,804,4.225,805,3.667,831,3.228,832,1.794,833,1.794,836,1.353,842,1.794,843,1.886,847,1.794,858,2.69,859,2.445,888,2.26,896,2.26,897,1.991,904,1.991,943,4.844,945,4.037,994,2.692,1039,1.886,1130,2.445,1140,2.445,1168,1.886,1242,2.986,1245,2.113,1246,3.587,1344,3.667,1406,2.445,1408,2.986,1580,2.445,1610,4.264,1613,4.888,1615,4.52,1616,4.643,1622,2.26,1624,3.667,1626,2.445,2164,2.445,2183,2.692,2200,2.986,2300,2.692,2314,2.445,2315,4.037,2334,2.692,2345,2.445,2354,6.189,2359,2.445,2360,4.844,2361,4.037,2362,5.519,2363,5.519,2364,5.519,2365,4.599,2366,5.519,2367,5.519,2368,5.382,2369,4.037,2370,3.066,2371,4.599,2372,3.066,2373,4.599,2374,3.066,2375,3.066,2376,3.066,2377,3.066,2378,4.599,2379,3.066,2380,3.066,2381,2.692,2382,2.692,2383,2.692,2384,3.066,2385,2.692,2386,2.692,2387,4.599,2388,2.692,2389,2.692,2390,3.066,2391,2.692,2392,2.692,2393,3.066,2394,2.692,2395,4.599,2396,2.692,2397,3.066,2398,2.692,2399,2.692,2400,5.519,2401,3.066,2402,3.066,2403,3.066,2404,3.066,2405,3.066,2406,2.692,2407,2.692,2408,3.066,2409,3.066,2410,3.066,2411,3.066,2412,5.519,2413,3.066,2414,3.066,2415,3.066,2416,3.066,2417,5.519,2418,3.066,2419,3.066,2420,3.066,2421,3.066,2422,3.066,2423,4.599,2424,2.445,2425,4.599,2426,3.066,2427,3.066,2428,3.066,2429,3.066,2430,2.692,2431,3.066]],["title/modules/TrekMapPageModule.html",[165,1.149,2432,3.119]],["body/modules/TrekMapPageModule.html",[0,0.698,3,0.158,4,0.111,8,0.127,34,0.011,41,0.236,42,0.721,43,2.121,44,2.121,47,1.343,58,0.158,59,0.674,91,0.441,130,0.521,146,2.344,154,2.373,162,0.007,163,0.009,164,0.007,165,1.587,167,2.257,168,2.409,169,3.406,170,2.578,171,2.409,172,2.409,180,2.85,181,2.578,182,2.491,185,3.046,190,3.046,197,2.121,204,3.521,209,2.491,212,2.879,217,4.639,218,4.659,292,3.123,293,4.125,294,1.501,295,3.593,303,4.307,648,4.027,921,3.521,922,3.418,924,2.996,1633,4.302,1635,3.593,1637,4.307,1638,4.307,1639,3.123,1640,3.793,1966,4.659,2146,5.448,2200,3.793,2354,4.307,2432,6.469,2433,5.129,2434,5.129,2435,5.843,2436,5.129,2437,5.129,2438,5.129,2439,5.843]],["title/interfaces/TrekProperties.html",[485,0.472,515,1.117]],["body/interfaces/TrekProperties.html",[3,0.09,4,0.063,8,0.072,16,0.228,29,0.662,34,0.011,35,0.551,36,0.578,37,1.203,41,0.157,58,0.236,91,0.367,109,0.735,127,0.658,130,0.654,139,0.581,162,0.004,163,0.006,164,0.004,306,0.681,307,0.827,310,1.091,319,0.839,331,1.19,335,1.119,336,1.594,339,0.92,345,1.375,385,1.322,404,1.286,433,0.899,438,0.899,471,0.804,473,1.59,485,0.968,486,0.85,487,0.899,488,0.874,489,1.824,490,1.626,491,1.568,492,1.613,493,1.613,494,1.613,495,2.078,496,2.028,497,1.613,498,1.695,499,0.874,500,0.925,501,1.403,502,0.761,503,0.761,504,0.782,505,1.873,506,1.088,507,1.681,508,0.925,509,1.36,510,1.926,511,1.251,512,1.568,513,1.926,514,1.873,515,1.525,516,2.048,517,1.845,518,1.981,519,1.895,520,1.895,521,1.895,522,1.475,523,2.101,524,1.895,525,1.605,526,1.842,527,1.895,528,1.895,529,1.895,530,1.842,531,1.895,532,1.648,533,1.895,534,1.895,535,1.842,536,1.119,537,1.286,538,1.322,539,2.057,540,0.925,541,0.925,542,1.36,543,0.925,544,0.925,545,1.322,546,0.899,547,0.899,548,0.925,549,0.925,550,0.925,551,0.925,552,0.925,553,1.36,554,1.322,555,1.525,556,1.322,557,1.151,558,0.804,559,0.827,560,0.761,561,0.85,562,0.85,563,0.925,564,0.804,565,1.36,566,1.151,567,0.804,568,0.804,569,0.925,570,1.183,571,0.85,572,1.365,573,0.925,574,0.899,575,1.403,576,1.442,577,0.874,578,0.85,579,1.216,580,1.442,581,1.286,582,1.327,583,0.804,584,0.925,585,1.822,586,0.925,587,0.899,588,0.899,589,0.899,590,0.899,591,0.899,592,0.899,593,0.899,594,0.899,595,0.925,596,0.899,597,0.925,598,0.925,599,0.827,600,0.899,601,1.183,602,1.151,603,0.85,604,0.681,605,0.899,606,0.827]],["title/interfaces/Treks.html",[127,0.393,485,0.472]],["body/interfaces/Treks.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.717,34,0.011,35,0.56,36,0.57,41,0.164,58,0.237,91,0.389,109,0.763,127,0.65,130,0.699,139,0.616,162,0.004,163,0.006,164,0.004,306,0.738,307,0.896,310,1.142,319,0.858,331,1.188,335,1.187,336,1.634,339,0.975,345,1.375,385,1.402,404,1.363,433,0.974,438,0.974,471,0.872,473,1.652,485,0.974,486,0.922,487,0.974,488,0.948,489,1.849,490,1.644,491,1.642,492,1.689,493,1.689,494,1.689,495,2.108,496,2.1,497,1.689,498,1.75,499,0.948,500,1.002,501,1.469,502,0.825,503,0.825,504,0.848,505,2.069,506,1.154,507,1.597,508,1.002,509,1.442,510,1.642,511,1.326,512,1.642,513,1.981,514,1.927,515,1.363,516,1.847,517,1.818,518,1.689,519,1.442,520,1.442,521,1.442,522,1.122,523,1.957,524,1.442,525,1.582,526,1.402,527,1.442,528,1.442,529,1.442,530,1.402,531,1.442,532,1.469,533,1.442,534,1.442,535,1.402,536,1.187,537,1.363,538,1.402,539,2.089,540,1.002,541,1.002,542,1.442,543,1.002,544,1.002,545,1.402,546,0.974,547,0.974,548,1.002,549,1.002,550,1.002,551,1.002,552,1.002,553,1.442,554,1.402,555,1.597,556,1.402,557,1.22,558,0.872,559,0.896,560,0.825,561,0.922,562,0.922,563,1.002,564,0.872,565,1.442,566,1.22,567,0.872,568,0.872,569,1.002,570,1.254,571,0.922,572,1.429,573,1.002,574,0.974,575,1.469,576,1.51,577,0.948,578,0.922,579,1.29,580,1.51,581,1.363,582,1.39,583,0.872,584,1.002,585,1.874,586,1.002,587,0.974,588,0.974,589,0.974,590,0.974,591,0.974,592,0.974,593,0.974,594,0.974,595,1.002,596,0.974,597,1.002,598,1.002,599,0.896,600,0.974,601,1.254,602,1.22,603,0.922,604,0.738,605,0.974,606,0.896]],["title/interfaces/TreksContext.html",[485,0.472,606,1.057]],["body/interfaces/TreksContext.html",[3,0.097,4,0.068,8,0.078,16,0.246,29,0.714,34,0.011,35,0.559,36,0.569,41,0.163,58,0.237,91,0.388,109,0.761,127,0.612,130,0.67,139,0.614,162,0.004,163,0.006,164,0.004,306,0.734,307,0.892,310,1.376,319,0.856,331,1.188,335,1.182,336,1.632,339,0.972,345,1.375,385,1.397,404,1.358,433,0.97,438,0.97,471,0.868,473,1.648,485,0.974,486,0.917,487,0.97,488,0.943,489,1.833,490,1.643,491,1.637,492,1.684,493,1.684,494,1.684,495,2.106,496,2.067,497,1.684,498,1.747,499,0.943,500,0.997,501,1.465,502,0.821,503,0.821,504,0.844,505,1.923,506,1.15,507,1.592,508,0.997,509,1.437,510,1.637,511,1.321,512,1.637,513,1.978,514,1.923,515,1.358,516,1.843,517,1.815,518,1.684,519,1.437,520,1.437,521,1.437,522,1.118,523,1.953,524,1.437,525,1.633,526,1.397,527,1.437,528,1.437,529,1.437,530,1.397,531,1.437,532,1.465,533,1.437,534,1.437,535,1.397,536,1.182,537,1.358,538,1.397,539,2.088,540,0.997,541,0.997,542,1.437,543,0.997,544,0.997,545,1.397,546,0.97,547,0.97,548,0.997,549,0.997,550,0.997,551,0.997,552,0.997,553,1.437,554,1.397,555,1.592,556,1.397,557,1.216,558,0.868,559,0.892,560,0.821,561,0.917,562,0.917,563,0.997,564,0.868,565,1.437,566,1.216,567,0.868,568,0.868,569,0.997,570,1.25,571,0.917,572,1.425,573,0.997,574,0.97,575,1.465,576,1.506,577,0.943,578,0.917,579,1.285,580,1.506,581,1.358,582,1.607,583,0.868,584,0.997,585,1.871,586,0.997,587,0.97,588,0.97,589,0.97,590,0.97,591,0.97,592,0.97,593,0.97,594,0.97,595,0.997,596,0.97,597,0.997,598,0.997,599,0.892,600,0.97,601,1.699,602,1.652,603,0.917,604,0.734,605,0.97,606,1.285]],["title/guards/TreksContextResolver.html",[219,2.747,1641,2.916]],["body/guards/TreksContextResolver.html",[3,0.154,4,0.108,8,0.123,16,0.391,17,1.527,19,1.527,21,3.601,27,3.922,28,3.924,31,1.404,33,1.485,34,0.011,35,0.483,36,0.461,37,1.327,39,1.201,41,0.233,42,0.701,45,2.127,46,2.342,47,1.306,48,2.598,53,3.173,54,2.8,55,3.601,58,0.154,59,0.656,60,2.492,64,3.601,65,3.461,162,0.007,163,0.009,164,0.007,197,2.062,219,4.559,243,5.822,244,3.689,245,3.916,265,2.062,294,1.958,310,1.546,315,2.473,336,1.657,355,2.195,419,1.728,522,1.235,582,1.83,601,1.38,602,1.66,606,1.419,647,1.83,811,4.46,812,4.447,845,3.324,846,3.037,1639,4.256,1642,3.916,1647,5.6,1648,5.871,1656,4.188,1889,4.188,1890,4.188,2322,4.988,2440,4.988,2441,5.682,2442,5.682,2443,5.682,2444,5.682,2445,5.682,2446,5.682]],["title/components/TreksMapPage.html",[0,0.505,156,1.182]],["body/components/TreksMapPage.html",[0,0.762,1,0.803,2,1.332,3,0.078,4,0.055,5,0.899,6,0.899,7,0.899,8,0.062,10,0.874,11,2.687,12,2.336,14,1.37,16,0.198,17,0.952,19,0.952,21,2.983,24,2.221,27,3.566,28,3.147,29,1.277,30,3.029,31,1.713,33,1.122,34,0.011,35,0.44,36,0.538,37,1.002,39,1.643,40,2.24,41,0.222,42,0.355,45,1.076,46,1.185,47,0.661,48,1.314,53,1.605,54,1.416,55,2.245,57,1.536,58,0.078,59,0.332,60,2.432,64,1.474,65,1.416,66,3.274,75,1.613,81,2.05,89,2.523,90,2.523,91,0.217,92,1.37,93,1.37,94,0.899,95,1.857,96,0.899,97,0.899,98,0.803,99,0.899,100,0.899,101,0.803,102,0.899,103,0.899,104,0.803,105,1.37,106,1.482,107,0.899,108,0.803,109,0.332,110,0.899,111,0.803,112,0.899,113,0.899,114,0.803,115,0.899,116,0.803,117,0.874,118,0.849,119,1.66,120,0.803,121,0.874,122,0.899,123,0.803,124,0.899,125,0.803,126,1.802,127,0.711,128,1.37,129,0.826,130,0.529,131,0.803,132,0.781,133,0.899,134,0.803,135,0.899,136,0.803,137,1.37,138,0.803,139,0.343,140,0.803,141,0.899,142,1.482,143,0.899,144,0.803,145,1.66,146,0.803,147,0.803,148,0.899,149,0.781,150,0.899,151,0.803,152,0.899,153,0.826,154,0.803,155,1.37,156,1.657,157,0.803,158,0.899,159,0.803,160,0.899,161,0.899,162,0.004,163,0.005,164,0.004,171,1.805,197,1.043,203,1.981,241,5.158,242,2.292,271,3.471,279,1.225,294,1.524,298,2.562,306,0.9,310,1.002,319,0.488,321,2.338,331,0.95,343,1.613,345,0.817,355,1.11,361,1.536,401,2.119,415,0.926,419,1.332,420,2.341,424,1.411,430,2.791,453,2.467,467,2.693,482,2.445,489,0.979,490,0.559,501,1.289,502,0.661,503,0.661,506,1.186,522,1.154,525,1.439,582,1.22,583,1.442,601,1.289,602,1.254,604,1.091,606,1.325,623,3.596,630,3.319,647,0.926,655,3.018,656,3.018,657,3.018,659,1.768,660,2.693,661,3.018,662,2.119,677,4.368,679,1.866,711,3.492,738,6.331,787,1.416,790,3.447,791,3.104,797,2.445,798,2.445,804,4.089,805,3.587,809,3.492,831,3.104,832,1.681,833,1.681,836,2.969,842,1.681,843,1.768,844,2.292,847,1.681,848,1.981,858,1.681,888,2.119,935,3.911,1029,1.981,1102,1.981,1241,4.657,1242,3.852,1245,1.981,1246,3.736,1257,2.523,1258,2.523,1259,2.523,1260,2.523,1324,2.523,1344,3.492,1345,3.492,1382,1.981,1400,2.119,1406,2.292,1408,3.444,1433,3.844,1577,3.492,1615,4.374,1616,4.542,1622,2.119,1663,5.092,1668,3.844,1696,5.208,1697,4.657,1723,1.981,1798,3.492,1872,3.844,2056,2.523,2057,2.523,2141,2.523,2145,2.523,2164,2.292,2200,1.866,2205,6.284,2298,2.523,2345,3.492,2359,2.292,2360,4.657,2361,3.844,2369,2.523,2381,2.523,2382,2.523,2383,2.523,2385,2.523,2386,2.523,2388,2.523,2389,2.523,2391,2.523,2392,2.523,2394,3.844,2396,2.523,2398,4.657,2399,2.523,2406,2.523,2407,2.523,2447,6.797,2448,5.306,2449,5.306,2450,5.306,2451,5.306,2452,5.933,2453,5.933,2454,5.933,2455,5.933,2456,4.38,2457,2.874,2458,2.874,2459,2.874,2460,2.874,2461,4.38,2462,2.874,2463,2.874,2464,2.874,2465,2.874,2466,2.874,2467,2.874,2468,2.874,2469,2.874,2470,2.874,2471,2.874,2472,2.874,2473,2.523,2474,2.874,2475,3.844,2476,4.38,2477,2.874,2478,2.874,2479,2.874,2480,2.874,2481,2.874,2482,2.874,2483,2.874,2484,2.874,2485,2.874,2486,2.874,2487,2.874,2488,2.874,2489,2.874,2490,2.874,2491,2.874,2492,4.38,2493,2.874,2494,2.874,2495,2.874,2496,2.874,2497,2.874,2498,4.38,2499,4.38,2500,4.38,2501,2.874,2502,2.874]],["title/modules/TreksMapPageModule.html",[165,1.149,2503,3.119]],["body/modules/TreksMapPageModule.html",[0,0.694,3,0.158,4,0.111,8,0.126,34,0.011,41,0.237,42,0.718,43,2.111,44,2.111,47,1.337,58,0.158,59,0.671,91,0.439,127,0.54,147,2.341,156,2.371,162,0.007,163,0.009,164,0.007,165,1.58,167,2.247,168,2.398,169,3.399,170,2.567,171,2.398,172,2.398,180,2.842,181,2.567,182,2.48,185,3.038,190,3.038,197,2.111,204,3.511,209,2.48,212,2.866,219,4.626,220,4.638,292,3.109,293,4.117,294,1.494,295,3.577,648,4.009,916,4.626,921,3.511,922,3.403,924,2.982,1376,4.288,1377,5.106,1633,4.298,1635,3.577,1639,3.109,1640,3.776,2146,5.442,2200,3.776,2205,4.288,2436,5.106,2437,5.106,2438,5.106,2447,4.638,2503,6.465,2504,5.106,2505,5.106,2506,5.817,2507,5.106]],["title/components/TreksOrderComponent.html",[0,0.505,157,1.182]],["body/components/TreksOrderComponent.html",[0,0.812,1,1.068,2,1.642,3,0.104,4,0.073,5,1.196,6,1.196,7,1.196,8,0.083,10,1.162,11,2.752,12,2.398,14,1.69,16,0.263,17,1.174,19,1.174,21,3.264,24,2.022,29,1.252,30,3.227,31,1.612,33,1.142,34,0.011,35,0.468,36,0.471,37,1.02,39,1.518,40,1.749,41,0.212,42,0.472,47,0.879,48,1.748,57,2.043,58,0.104,59,0.441,60,2.396,64,1.96,65,1.884,66,4.254,75,1.162,91,0.288,92,1.69,93,1.69,94,1.196,95,2.129,96,1.196,97,1.196,98,1.068,99,1.196,100,1.196,101,1.068,102,1.196,103,1.196,104,1.068,105,1.69,106,1.068,107,1.196,108,1.068,109,0.441,110,1.196,111,1.068,112,2.129,113,1.196,114,1.749,115,1.196,116,1.068,117,1.162,118,1.13,119,1.96,120,1.068,121,1.162,122,1.196,123,1.068,124,1.196,125,1.068,126,1.349,127,0.756,128,1.69,129,1.098,130,0.607,131,1.068,132,1.038,133,1.196,134,1.068,135,1.196,136,1.068,137,1.69,138,1.068,139,0.456,140,1.068,141,1.196,142,1.068,143,1.196,144,1.068,145,1.96,146,1.068,147,1.068,148,1.196,149,1.038,150,1.196,151,1.068,152,1.196,153,1.098,154,1.068,155,1.69,156,1.068,157,1.9,158,1.196,159,1.068,160,1.196,161,1.196,162,0.005,163,0.007,164,0.005,221,5.645,222,2.818,223,3.048,261,6.236,271,3.159,279,3.06,294,1.608,298,2.237,319,0.602,321,1.967,331,0.825,343,1.162,356,2.351,415,1.232,424,1.74,430,2.498,453,1.477,467,4.414,482,2.135,489,1.207,558,1.744,559,0.955,560,0.879,561,0.982,623,4.18,630,3.632,647,1.232,655,2.635,656,2.635,657,2.635,660,2.351,661,2.635,662,2.818,784,3.048,785,3.048,786,3.048,787,1.884,788,2.635,790,3.671,797,3.016,798,3.016,805,3.21,831,3.663,832,2.237,833,2.237,836,1.687,842,2.237,843,2.351,847,2.237,858,2.237,946,4.417,971,3.048,1063,5.425,1123,2.635,1130,3.048,1131,5.497,1132,3.356,1138,3.356,1139,3.356,1140,3.048,1148,3.356,1149,3.356,1167,3.356,1168,2.351,1171,2.635,1198,5.134,1199,4.689,1225,3.356,1342,5.973,1378,3.048,1379,3.048,1480,4.741,1481,4.741,2368,6.722,2508,6.865,2509,3.356,2510,6.262,2511,5.401,2512,6.262,2513,6.262,2514,6.262,2515,5.401,2516,5.401,2517,3.823,2518,3.823,2519,5.401,2520,3.823,2521,6.805,2522,3.823,2523,3.823,2524,3.823,2525,3.823,2526,3.823,2527,3.823,2528,3.823,2529,6.805,2530,7.178,2531,3.823,2532,5.401,2533,5.401]],["title/modules/TreksPageModule.html",[165,1.149,2192,2.916]],["body/modules/TreksPageModule.html",[3,0.165,4,0.116,8,0.132,34,0.011,41,0.236,42,0.752,43,2.211,44,2.211,47,1.4,58,0.165,59,0.703,91,0.46,159,2.367,162,0.007,163,0.009,164,0.007,165,1.654,167,2.354,168,2.511,169,3.468,170,2.688,171,2.511,172,2.511,180,2.924,181,2.688,182,2.597,185,3.124,190,3.124,197,2.211,204,3.611,209,2.597,212,3.002,292,3.256,916,4.758,921,3.611,922,4.287,924,3.123,1633,4.345,1635,3.746,2155,5.502,2192,6.029,2356,5.348,2507,5.348,2534,5.348,2535,5.348,2536,6.093,2537,6.093,2538,6.093,2539,6.093]],["title/interfaces/TreksService.html",[485,0.472,582,0.973]],["body/interfaces/TreksService.html",[3,0.085,4,0.06,8,0.068,16,0.216,17,1.019,29,0.629,31,1.564,33,1.567,34,0.011,35,0.577,36,0.571,37,1.4,39,1.655,41,0.152,58,0.235,91,0.354,109,0.717,127,0.669,130,0.715,139,0.56,162,0.004,163,0.006,164,0.004,306,0.647,307,0.786,310,1.315,319,0.826,331,1.185,335,1.077,336,1.772,339,0.885,341,4.435,345,1.381,385,1.273,404,1.238,433,0.854,438,0.854,471,0.764,473,1.551,485,0.963,486,0.808,487,0.854,488,0.831,489,1.791,490,1.643,491,1.521,492,1.565,493,1.565,494,1.565,495,2.057,496,2.001,497,1.565,498,1.659,499,0.831,500,0.878,501,1.509,502,0.723,503,0.723,504,0.743,505,1.839,506,1.048,507,1.48,508,0.878,509,1.309,510,1.521,511,1.204,512,1.521,513,1.891,514,1.839,515,1.238,516,1.734,517,1.873,518,1.565,519,1.309,520,1.309,521,1.309,522,1.019,523,1.855,524,1.309,525,1.629,526,1.273,527,1.309,528,1.309,529,1.309,530,1.273,531,1.309,532,1.361,533,1.309,534,1.309,535,1.273,536,1.077,537,1.238,538,1.273,539,2.035,540,0.878,541,0.878,542,1.309,543,0.878,544,0.878,545,1.273,546,0.854,547,0.854,548,0.878,549,0.878,550,0.878,551,0.878,552,0.878,553,1.309,554,1.273,555,1.48,556,1.273,557,1.108,558,0.764,559,0.786,560,0.723,561,0.808,562,0.808,563,0.878,564,0.764,565,1.309,566,1.108,567,0.764,568,0.764,569,0.878,570,1.139,571,0.808,572,1.324,573,0.878,574,0.854,575,1.361,576,1.4,577,0.831,578,0.808,579,1.171,580,1.4,581,1.238,582,1.427,583,1.509,584,1.309,585,2.134,586,1.309,587,1.521,588,1.521,589,1.686,590,1.273,591,1.273,592,1.686,593,1.273,594,1.273,595,1.565,596,1.686,597,0.878,598,0.878,599,0.786,600,0.854,601,1.139,602,1.108,603,0.808,604,0.647,605,0.854,606,0.786,1688,4.114,1690,4.114,1691,4.114,1692,4.114,1693,4.114,1694,4.114,1703,3.737,2540,3.145,2541,3.145,2542,3.145,2543,3.145,2544,3.145,2545,3.145,2546,3.145,2547,3.145,2548,3.145,2549,3.145,2550,3.145,2551,3.145,2552,3.145]],["title/classes/UnSubscribe.html",[59,0.488,790,2.085]],["body/classes/UnSubscribe.html",[3,0.167,4,0.117,8,0.134,16,0.423,17,1.603,19,1.716,31,1.636,34,0.011,36,0.403,39,1.558,40,2.059,41,0.2,42,0.759,58,0.2,59,0.71,162,0.008,163,0.009,164,0.008,263,4.904,319,0.822,419,2.241,420,3.483,430,3.264,790,3.632,791,4.617,797,4.407,798,4.407,805,4.195,836,3.748,2473,5.399,2553,6.151,2554,4.904,2555,7.371,2556,6.151,2557,6.151,2558,8.183,2559,6.151,2560,6.47,2561,7.371]],["title/coverage.html",[2562,5.087]],["body/coverage.html",[0,1.047,1,1.073,8,0.083,9,3.374,12,1.472,28,1.894,29,0.768,30,1.823,34,0.011,36,0.252,45,2.029,54,2.671,59,0.444,81,3.495,98,1.073,101,1.073,104,1.073,106,1.073,108,1.073,109,0.444,111,1.073,114,1.073,116,1.073,118,1.602,120,1.073,123,1.073,125,1.073,127,0.667,129,1.104,130,0.642,131,1.073,134,1.073,136,1.073,138,1.073,139,0.459,140,1.073,142,1.073,144,1.073,146,1.073,147,1.073,149,1.044,151,1.073,153,1.104,154,1.073,156,1.073,157,1.073,159,1.073,162,0.005,163,0.007,164,0.005,179,2.495,183,4.322,198,2.649,201,2.649,217,2.495,219,2.495,252,2.833,255,2.833,258,3.064,261,3.064,263,5.007,266,1.696,281,3.064,285,3.064,303,2.833,315,2.803,316,2.649,318,3.374,348,2.833,416,3.374,417,3.064,418,3.374,441,2.833,464,3.374,465,3.064,466,3.374,485,0.98,486,0.987,488,2.32,504,0.908,506,0.859,507,1.015,515,1.015,517,0.908,532,0.934,536,0.883,537,1.015,539,0.987,557,0.908,562,0.987,567,0.934,568,0.934,570,0.934,572,0.908,575,0.934,576,0.96,578,0.987,579,0.96,580,0.96,581,1.015,582,0.883,599,0.96,606,0.96,611,2.649,616,3.374,649,2.833,677,2.495,678,4.322,679,3.519,680,5.285,713,3.736,761,2.363,767,3.374,768,3.064,769,3.374,789,3.374,790,2.671,812,2.146,846,2.897,925,4.322,926,3.996,927,4.322,946,2.495,1054,3.374,1170,3.374,1171,2.649,1172,3.374,1191,3.374,1192,4.322,1218,3.374,1219,3.374,1238,3.374,1246,2.248,1265,3.374,1267,4.322,1321,3.374,1322,3.374,1329,5.438,1330,5.028,1331,5.438,1376,2.833,1383,4.322,1583,2.649,1584,3.374,1585,2.833,1586,3.374,1604,3.064,1605,2.833,1606,3.374,1641,4.7,1643,3.374,1644,3.374,1660,3.374,1680,3.374,1686,4.322,1723,3.736,1758,3.374,1800,3.374,1834,3.374,1854,3.374,1855,2.833,1887,3.064,1908,3.374,1918,4.629,1919,3.374,1966,3.064,1967,3.374,1987,3.374,2005,3.374,2162,3.064,2175,3.374,2202,3.064,2205,2.833,2210,3.374,2211,3.374,2318,3.374,2354,3.996,2359,4.322,2440,3.374,2447,3.064,2508,3.374,2509,3.374,2554,4.322,2562,3.374,2563,3.064,2564,3.843,2565,3.843,2566,8.414,2567,8.305,2568,7.192,2569,6.28,2570,7.463,2571,3.843,2572,3.843,2573,6.99,2574,6.28,2575,5.421,2576,5.421,2577,3.843,2578,3.843,2579,3.843,2580,5.421,2581,5.421,2582,5.421,2583,5.421,2584,8.071,2585,3.843,2586,5.421,2587,5.421,2588,5.421,2589,3.843,2590,3.843,2591,3.843,2592,3.843,2593,3.843,2594,3.843,2595,6.28,2596,4.758,2597,3.843,2598,3.064,2599,3.064,2600,3.374,2601,3.374,2602,3.843,2603,3.843]],["title/dependencies.html",[168,2.1,2604,3.093]],["body/dependencies.html",[8,0.111,22,3.772,23,4.079,26,4.079,34,0.011,42,0.632,43,2.386,44,1.857,47,1.176,48,4.004,49,4.079,51,4.079,117,1.556,162,0.006,163,0.008,164,0.006,168,2.109,192,5.771,193,4.846,197,1.857,209,2.181,215,4.491,216,3.146,222,3.772,225,5.771,226,4.491,229,4.079,232,4.079,234,4.491,237,3.526,238,4.491,239,4.491,241,3.772,244,3.322,247,4.079,271,2.993,355,1.977,502,1.176,503,1.511,712,4.079,906,3.322,913,5.771,929,4.491,1058,3.772,1123,4.531,2605,5.117,2606,8.255,2607,5.117,2608,5.117,2609,5.117,2610,5.117,2611,5.117,2612,5.117,2613,8.622,2614,7.667,2615,5.117,2616,5.117,2617,5.771,2618,5.117,2619,5.117,2620,5.117,2621,5.117,2622,5.117,2623,5.117,2624,6.575,2625,5.117,2626,7.746,2627,6.575,2628,5.117,2629,5.117,2630,5.117,2631,5.117,2632,5.117,2633,5.117,2634,5.117,2635,5.117,2636,5.117,2637,5.117,2638,5.117,2639,7.762,2640,5.771,2641,4.491,2642,5.242,2643,4.491,2644,4.491,2645,5.117,2646,5.117,2647,5.117,2648,5.771,2649,6.575,2650,5.117,2651,5.117,2652,4.491,2653,5.117,2654,5.117,2655,5.117,2656,5.117,2657,4.491,2658,5.117,2659,5.117,2660,5.117,2661,5.117,2662,5.117,2663,5.117,2664,5.117,2665,5.117,2666,5.117,2667,5.117,2668,5.117,2669,5.117,2670,5.242,2671,5.117,2672,4.491,2673,5.117,2674,5.117,2675,5.117,2676,5.117,2677,5.117,2678,5.117,2679,5.117,2680,5.117,2681,5.117,2682,5.117,2683,5.117,2684,5.117,2685,5.117,2686,5.117,2687,5.117,2688,5.117]],["title/miscellaneous/functions.html",[2689,2.287,2690,4.472]],["body/miscellaneous/functions.html",[16,0.461,33,1.729,34,0.011,35,0.563,37,1.545,39,1.416,162,0.008,163,0.009,164,0.008,183,5.338,264,5.877,270,5.877,271,3.917,273,5.877,281,6.178,285,6.178,329,4.936,790,3.818,836,2.954,2554,5.338,2560,5.877,2689,4.346,2690,5.877,2691,7.749,2692,6.695]],["title/index.html",[16,0.243,2693,3.093,2694,3.093]],["body/index.html",[4,0.116,12,2.266,21,2.926,22,3.357,34,0.01,35,0.314,45,2.743,48,3.919,75,1.385,77,2.957,78,5.472,85,3.357,126,1.522,130,0.406,132,1.237,162,0.006,163,0.007,164,0.007,193,3.357,276,5.347,279,1.942,310,0.86,332,5.05,335,1.578,368,3.998,380,3.631,391,5.347,397,5.347,412,3.998,423,2.957,453,1.759,472,3.139,490,0.885,498,1.138,510,1.237,526,1.237,558,1.48,566,1.076,899,3.256,902,2.957,1039,2.801,1253,6.025,1445,6.433,1446,3.998,1458,5.06,1527,3.998,1544,3.998,1795,4.857,2348,3.998,2424,3.631,2475,3.998,2563,3.631,2573,5.347,2598,3.631,2599,3.631,2604,5.347,2617,6.705,2626,6.9,2639,7.615,2640,7.046,2641,3.998,2642,4.857,2643,3.998,2644,6.025,2648,6.025,2652,6.9,2657,3.998,2670,4.857,2672,5.347,2695,6.433,2696,6.864,2697,6.864,2698,3.998,2699,4.555,2700,4.555,2701,4.555,2702,6.092,2703,4.555,2704,5.347,2705,4.555,2706,7.86,2707,6.092,2708,4.555,2709,4.555,2710,4.555,2711,7.328,2712,6.092,2713,4.555,2714,4.555,2715,4.555,2716,4.555,2717,4.555,2718,4.555,2719,4.555,2720,4.555,2721,6.092,2722,6.092,2723,5.347,2724,5.347,2725,6.092,2726,6.433,2727,7.328,2728,4.555,2729,4.555,2730,8.027,2731,6.092,2732,8.027,2733,6.092,2734,7.639,2735,6.092,2736,6.092,2737,4.555,2738,4.555,2739,6.092,2740,4.555,2741,4.555,2742,4.555,2743,6.092,2744,3.998,2745,4.555,2746,4.555,2747,4.555,2748,4.555,2749,4.555,2750,4.555,2751,6.864,2752,5.843,2753,4.555,2754,4.555,2755,4.555,2756,6.092,2757,4.555,2758,4.555,2759,4.555,2760,4.555,2761,4.555,2762,6.092,2763,4.555,2764,4.555,2765,6.092,2766,4.555,2767,4.555,2768,6.092,2769,6.092,2770,6.092,2771,4.555,2772,4.555,2773,4.555,2774,4.555,2775,3.998,2776,4.555,2777,4.555,2778,4.555,2779,4.555,2780,4.555,2781,3.998,2782,4.555,2783,6.864,2784,4.555,2785,4.555,2786,4.555,2787,4.555,2788,4.555,2789,4.555,2790,4.555,2791,4.555,2792,4.555,2793,4.555,2794,4.555,2795,4.555,2796,4.555,2797,5.347,2798,4.555,2799,6.092,2800,4.555,2801,6.092,2802,4.555,2803,4.555,2804,4.555,2805,4.555,2806,4.555,2807,4.555,2808,4.555,2809,4.555,2810,3.998,2811,4.555,2812,4.555,2813,4.555,2814,6.092,2815,3.998,2816,4.555,2817,4.555,2818,4.555,2819,4.555,2820,4.555,2821,4.555,2822,4.555,2823,4.555,2824,5.347,2825,6.092,2826,4.555,2827,4.555,2828,4.555,2829,7.86,2830,4.555,2831,4.555,2832,3.998,2833,4.555,2834,4.555,2835,4.555,2836,4.555,2837,4.555,2838,3.998,2839,3.998,2840,3.998,2841,3.998,2842,3.998,2843,4.555,2844,4.555,2845,4.555,2846,4.555]],["title/license.html",[2693,3.093,2694,3.093,2847,3.093]],["body/license.html",[4,0.139,34,0.009,69,4.846,162,0.007,163,0.009,164,0.007,182,2.591,306,1.25,380,4.846,423,4.751,781,3.394,2563,4.846,2642,4.846,2752,6.261,2815,6.893,2838,5.335,2839,7.32,2840,5.335,2841,5.335,2842,5.335,2847,5.335,2848,6.078,2849,6.078,2850,6.078,2851,6.078,2852,6.078,2853,7.319,2854,6.078,2855,6.078,2856,6.078,2857,7.853,2858,7.853,2859,6.078,2860,7.319,2861,6.078,2862,6.078,2863,7.319,2864,7.319,2865,7.319,2866,6.078,2867,6.078,2868,6.078,2869,6.078,2870,6.078,2871,7.319,2872,6.078,2873,6.424,2874,6.078,2875,7.319,2876,7.319,2877,7.853,2878,7.319,2879,6.078,2880,6.078,2881,6.078,2882,6.078,2883,6.078,2884,6.078,2885,6.078,2886,6.078,2887,6.078,2888,6.078,2889,6.078,2890,6.078,2891,6.078,2892,6.078,2893,6.078,2894,6.078,2895,6.078,2896,6.078,2897,6.078,2898,6.078,2899,6.078,2900,6.078,2901,6.078,2902,6.078,2903,7.319,2904,6.078,2905,6.078,2906,6.078,2907,6.078,2908,6.078,2909,6.078,2910,6.078,2911,6.078,2912,6.078,2913,6.078,2914,6.078,2915,6.078,2916,6.078]],["title/modules.html",[167,2.239]],["body/modules.html",[34,0.009,78,5.98,162,0.008,163,0.009,164,0.008,166,4.668,167,2.446,178,4.364,193,6.566,607,4.111,916,4.111,919,4.364,1629,4.668,1633,3.246,1674,4.364,2146,4.111,2155,4.111,2187,4.668,2191,4.364,2192,4.364,2350,4.668,2432,4.668,2503,4.668,2670,7.102,2917,8.907,2918,8.942,2919,7.5]],["title/overview.html",[2920,5.087]],["body/overview.html",[1,2.218,2,1.328,34,0.011,59,0.504,83,3.166,91,0.33,98,2.218,101,2.218,104,2.218,106,2.218,108,2.218,111,2.218,114,2.218,116,1.877,120,1.877,123,2.218,125,2.218,129,2.281,131,1.877,134,1.877,136,2.218,138,1.877,140,1.877,142,2.218,144,2.218,146,1.877,147,1.877,149,1.825,151,2.218,153,1.93,154,1.877,156,1.877,157,1.877,159,1.877,162,0.005,163,0.007,164,0.005,165,1.186,166,6.406,167,1.688,168,1.801,169,1.928,170,1.928,171,1.801,172,1.801,173,3.835,174,3.835,175,3.835,176,3.835,177,3.835,178,4.631,179,4.363,180,2.363,181,1.928,182,1.862,293,2.335,317,2.439,348,3.221,487,1.186,607,4.889,608,3.835,609,3.835,610,3.835,611,5.473,761,2.687,905,3.221,916,4.677,917,3.835,918,3.835,919,6.02,1111,3.221,1629,5.724,1630,3.835,1631,3.835,1632,3.835,1633,4.441,1642,3.011,1674,5.473,1675,3.835,1676,3.835,1880,3.835,2136,3.835,2137,3.835,2138,3.835,2146,5.502,2147,3.835,2148,3.835,2149,3.835,2155,5.375,2156,3.835,2157,3.835,2158,3.835,2166,3.835,2167,3.835,2168,3.835,2187,6.207,2188,3.835,2189,3.835,2190,3.835,2191,4.631,2192,5.644,2350,5.956,2351,3.835,2352,3.835,2432,6.104,2433,3.835,2434,3.835,2503,6.104,2504,3.835,2505,3.835,2534,3.835,2535,3.835,2920,3.835,2921,4.369,2922,4.369]],["title/routes.html",[293,3.097]],["body/routes.html",[34,0.01,162,0.009,163,0.01,164,0.009,293,3.744]],["title/miscellaneous/typealiases.html",[2689,2.287,2923,5.095]],["body/miscellaneous/typealiases.html",[16,0.473,34,0.011,36,0.451,162,0.008,163,0.01,164,0.008,339,1.299,488,1.815,558,1.911,559,1.717,560,1.58,561,1.766,2689,4.463,2924,6.874,2925,6.874]],["title/miscellaneous/variables.html",[2689,2.287,2926,4.472]],["body/miscellaneous/variables.html",[4,0.112,12,1.819,16,0.363,34,0.011,35,0.299,36,0.533,45,2.208,54,1.401,73,3.812,74,3.812,75,2.471,76,2.993,77,2.819,81,3.117,83,4.312,85,4.349,86,3.812,87,3.812,121,1.794,126,1.981,127,0.683,130,0.567,139,0.518,162,0.003,163,0.005,164,0.003,180,2.353,221,3.201,279,3.258,310,0.82,331,0.375,332,2.993,335,0.998,339,0.82,343,2.24,345,0.669,348,3.201,423,2.819,441,4.939,453,3.031,472,5.464,482,4.013,483,2.819,490,1.146,502,1.356,503,0.998,555,1.147,559,1.085,566,2.001,576,1.085,577,1.147,620,3.812,678,2.266,679,1.845,680,4.617,713,4.065,714,3.462,734,2.993,787,3.703,846,1.519,899,2.321,906,5.147,911,2.993,925,2.266,926,2.095,927,3.462,1029,5.637,1039,2.67,1111,4.684,1123,2.993,1160,3.812,1168,2.67,1220,5.178,1329,3.462,1330,3.201,1331,4.703,1383,4.703,1384,3.812,1390,3.812,1413,7.26,1458,3.201,1483,6.597,1485,3.812,1486,3.812,1493,3.812,1496,7.573,1498,6.804,1501,5.178,1503,5.881,1504,3.812,1506,3.812,1507,3.812,1508,3.812,1509,3.812,1517,6.309,1564,5.178,1663,3.462,1686,2.266,1723,4.065,1724,3.812,1861,3.812,1942,3.812,2045,3.812,2297,3.812,2314,4.703,2342,3.812,2343,3.812,2424,4.703,2430,3.812,2596,2.495,2598,2.266,2599,2.266,2600,2.495,2601,6.597,2689,1.845,2695,3.812,2698,3.812,2704,5.178,2723,6.309,2724,3.812,2726,3.812,2744,7.082,2752,4.703,2775,3.812,2781,3.812,2797,3.812,2810,3.812,2824,3.812,2832,3.812,2873,3.812,2926,2.495,2927,2.843,2928,2.843,2929,2.843,2930,2.843,2931,2.843,2932,2.843,2933,4.343,2934,2.843,2935,5.899,2936,4.343,2937,4.343,2938,4.343,2939,4.343,2940,4.343,2941,4.343,2942,4.343,2943,6.7,2944,7.515,2945,4.343,2946,5.899,2947,7.187,2948,5.899,2949,5.899,2950,5.899,2951,4.343,2952,4.343,2953,4.343,2954,5.899,2955,5.899,2956,7.515,2957,5.27,2958,5.899,2959,4.343,2960,4.343,2961,6.7,2962,7.187,2963,4.343,2964,4.343,2965,4.343,2966,4.343,2967,4.343,2968,4.343,2969,4.343,2970,4.343,2971,4.343,2972,4.343,2973,4.343,2974,4.343,2975,4.343,2976,4.343,2977,4.343,2978,4.343,2979,4.343,2980,5.899,2981,4.343,2982,4.343,2983,7.751,2984,7.515,2985,4.343,2986,4.343,2987,4.343,2988,4.343,2989,4.343,2990,4.343,2991,5.899,2992,4.343,2993,4.343,2994,4.343,2995,4.343,2996,4.343,2997,6.7,2998,4.343,2999,4.343,3000,5.899,3001,5.899,3002,5.899,3003,4.343,3004,4.343,3005,4.343,3006,4.343,3007,4.343,3008,5.899,3009,4.343,3010,4.343,3011,4.343,3012,4.343,3013,4.343,3014,4.343,3015,4.343,3016,4.343,3017,4.343,3018,4.343,3019,4.343,3020,4.343,3021,4.343,3022,2.843]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0125em",{"_index":2431,"title":{},"body":{"components/TrekMapPage.html":{}}}],["0.1",{"_index":1509,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.10.3",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":734,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["0.6",{"_index":2976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8",{"_index":2978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.8",{"_index":2647,"title":{},"body":{"dependencies.html":{}}}],["0.9.0",{"_index":2659,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2567,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2587,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2583,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2569,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2586,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2581,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2588,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2595,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2591,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2566,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2592,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["0/34",{"_index":2597,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":2594,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2584,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":2590,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2568,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2570,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2576,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":2987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":788,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["1",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1':'fr",{"_index":2294,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0",{"_index":2288,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0.1",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":2293,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.10.0",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":2654,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2665,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2638,"title":{},"body":{"dependencies.html":{}}}],["1/23",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2297,"title":{},"body":{"components/TrekCardComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":896,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["1000",{"_index":350,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["10000",{"_index":1134,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["100px",{"_index":2501,"title":{},"body":{"components/TreksMapPage.html":{}}}],["1024×1024px",{"_index":2798,"title":{},"body":{"index.html":{}}}],["10px",{"_index":915,"title":{},"body":{"components/FiltersComponent.html":{}}}],["11.0.1",{"_index":2628,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200×1200px",{"_index":2812,"title":{},"body":{"index.html":{}}}],["12px",{"_index":2298,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["13",{"_index":2961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":2988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":3007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":2313,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["16",{"_index":1111,"title":{},"body":{"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["16px",{"_index":1799,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["17",{"_index":2957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1485,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["195",{"_index":908,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["199",{"_index":909,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["1\\':\\'fr",{"_index":2317,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["2",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"license.html":{}}}],["2.0.1",{"_index":2650,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2649,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":2653,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2624,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":2663,"title":{},"body":{"dependencies.html":{}}}],["2/37",{"_index":2577,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1942,"title":{},"body":{"components/SelectFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":346,"title":{},"body":{"injectables/CacheService.html":{}}}],["2019",{"_index":2849,"title":{},"body":{"license.html":{}}}],["20px",{"_index":2300,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["24",{"_index":2290,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["24px",{"_index":1582,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["250",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":2955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2732×2732px",{"_index":2803,"title":{},"body":{"index.html":{}}}],["29",{"_index":2921,"title":{},"body":{"overview.html":{}}}],["3",{"_index":3013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":2645,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2661,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2627,"title":{},"body":{"dependencies.html":{}}}],["3.6.4",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1880,"title":{},"body":{"components/SearchComponent.html":{},"overview.html":{}}}],["3000",{"_index":1390,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["32px",{"_index":1797,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["3880ff",{"_index":3022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":348,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":2629,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":2656,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2636,"title":{},"body":{"dependencies.html":{}}}],["4.11.10",{"_index":2623,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":2634,"title":{},"body":{"dependencies.html":{}}}],["43",{"_index":2922,"title":{},"body":{"overview.html":{}}}],["48px*48px",{"_index":2973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4em",{"_index":484,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["5",{"_index":441,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":2662,"title":{},"body":{"dependencies.html":{}}}],["5.23.0",{"_index":2613,"title":{},"body":{"dependencies.html":{}}}],["5.27.0",{"_index":2615,"title":{},"body":{"dependencies.html":{}}}],["5.34.0",{"_index":2611,"title":{},"body":{"dependencies.html":{}}}],["5.6.4",{"_index":2667,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":911,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":2428,"title":{},"body":{"components/TrekMapPage.html":{}}}],["540px",{"_index":914,"title":{},"body":{"components/FiltersComponent.html":{}}}],["57px",{"_index":1263,"title":{},"body":{"components/LoaderComponent.html":{}}}],["5px",{"_index":2426,"title":{},"body":{"components/TrekMapPage.html":{}}}],["6",{"_index":2994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":2631,"title":{},"body":{"dependencies.html":{}}}],["6.0.2",{"_index":2651,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2632,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":349,"title":{},"body":{"injectables/CacheService.html":{},"components/TrekCardComponent.html":{}}}],["61b22f",{"_index":2995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["625b5d",{"_index":2990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":3017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.16",{"_index":2609,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7px",{"_index":2425,"title":{},"body":{"components/TrekMapPage.html":{}}}],["8",{"_index":2424,"title":{},"body":{"components/TrekMapPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["8.2.14",{"_index":2606,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":2316,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["9",{"_index":905,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"overview.html":{}}}],["a.geometry",{"_index":725,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["a.indexof(v",{"_index":2129,"title":{},"body":{"injectables/SettingsService.html":{}}}],["a.name.localecompare(b.name",{"_index":1959,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["a.properties.name",{"_index":732,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["a.properties.name.localecompare(b.properties.name",{"_index":1913,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["above",{"_index":2863,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1580,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["abstract/unsubscribe",{"_index":1380,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["accept",{"_index":1599,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["access",{"_index":526,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["accessibilities",{"_index":494,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["accesstoken",{"_index":2937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":1615,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["activatedroutesnapshot",{"_index":1648,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["activefiltersnumber",{"_index":681,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["actual_component",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["actually",{"_index":394,"title":{},"body":{"injectables/CacheService.html":{}}}],["add",{"_index":1253,"title":{},"body":{"components/LoaderComponent.html":{},"index.html":{}}}],["addsourceslayersevents",{"_index":1338,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["advice",{"_index":528,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["advised",{"_index":2913,"title":{},"body":{"license.html":{}}}],["advised_parking",{"_index":527,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["alertcontroller",{"_index":932,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["alertlocation",{"_index":1570,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertlocation.present",{"_index":1576,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertmsg",{"_index":2236,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["aliases",{"_index":2924,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":903,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["allow",{"_index":3001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabetical",{"_index":559,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":2757,"title":{},"body":{"index.html":{}}}],["alreadyaskgeolocationpermission",{"_index":1100,"title":{},"body":{"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{}}}],["always",{"_index":1638,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["alwaysdisplayeditems",{"_index":427,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["ambiance",{"_index":544,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["analytics",{"_index":2617,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["analytics/ngx",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["and/or",{"_index":2868,"title":{},"body":{"license.html":{}}}],["android",{"_index":2640,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["androidbuild",{"_index":2740,"title":{},"body":{"index.html":{}}}],["androidtests",{"_index":2830,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{}}}],["angular/common/locales/fr",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"modules/CustomPipesModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2607,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2608,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1564,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["animated",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["animation",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["animationc",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["any).indexof(filtervalue",{"_index":746,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["any).properties.id",{"_index":2411,"title":{},"body":{"components/TrekMapPage.html":{}}}],["any).setrotation(heading",{"_index":1477,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["any).sources",{"_index":1412,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["any).sources['tiles",{"_index":1409,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["any).trekbounds",{"_index":1755,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["api",{"_index":2726,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1587,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["apk",{"_index":2733,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/abstract/unsubscribe",{"_index":843,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/components/collapsible",{"_index":2170,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/connect",{"_index":2172,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/filter",{"_index":2143,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["app/components/filter/filter.component",{"_index":2142,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["app/components/filters/filters.component",{"_index":2141,"title":{},"body":{"modules/SharedFiltersModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/filters/filters.module",{"_index":2507,"title":{},"body":{"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["app/components/geolocate",{"_index":2151,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/in",{"_index":1378,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TreksOrderComponent.html":{}}}],["app/components/information",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/layers",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loader/loader.component",{"_index":2174,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/map",{"_index":2153,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/poi",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/poi/poi.component",{"_index":2160,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/components/progress/progress.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/search/search.component",{"_index":2145,"title":{},"body":{"modules/SharedFiltersModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/select",{"_index":648,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/SharedFiltersModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/components/trek",{"_index":2161,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/interfaces/interfaces",{"_index":647,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/map",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/${parentid}/${trekid",{"_index":1740,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/${trekid",{"_index":1739,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/:trekid",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/:trekid/:stageid",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/pipes/lower",{"_index":614,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["app/resolvers/more",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["app/resolvers/more.resolver",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{}}}],["app/resolvers/trek.resolver",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["app/resolvers/treks.resolver",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/services/cache/cache.service",{"_index":1596,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["app/services/filter",{"_index":844,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["app/services/geolocate/geolocate.service",{"_index":971,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksOrderComponent.html":{}}}],["app/services/loading/loading.service",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["app/services/more",{"_index":1651,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["app/services/offline",{"_index":845,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["app/services/online",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["app/services/search",{"_index":1886,"title":{},"body":{"components/SearchComponent.html":{}}}],["app/services/settings/settings.service",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/shared/custom",{"_index":2358,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["app/shared/shared",{"_index":922,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["app/shared/shared.module",{"_index":2437,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/tabs/more",{"_index":2182,"title":{},"body":{"components/TabsPage.html":{}}}],["app/tabs/treks",{"_index":1735,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{}}}],["app/tabs/treks/trek",{"_index":1736,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/tabs/treks/treks",{"_index":1741,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2697,"title":{},"body":{"index.html":{}}}],["applyfilters",{"_index":799,"title":{},"body":{"components/FiltersComponent.html":{}}}],["appmodule",{"_index":166,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1663,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":178,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":2791,"title":{},"body":{"index.html":{}}}],["argument",{"_index":2731,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2910,"title":{},"body":{"license.html":{}}}],["array",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(this.currentpois.features",{"_index":995,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["array.isarray(touristiccontents.features",{"_index":2123,"title":{},"body":{"injectables/SettingsService.html":{}}}],["arrival",{"_index":520,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["arrival_city",{"_index":534,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["artwork",{"_index":2807,"title":{},"body":{"index.html":{}}}],["ascent",{"_index":521,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["assets/i18n",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/map/{fontstack}/{range}.pbf",{"_index":2949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assume",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":623,"title":{},"body":{"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["attributioncontrol",{"_index":2946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attributiontext",{"_index":2965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":509,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["available",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["availablelanguage",{"_index":2775,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["availablelanguage[0",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["b",{"_index":724,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{}}}],["b.geometry",{"_index":726,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["b.properties.name",{"_index":733,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["background",{"_index":906,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["background'].tiles[0",{"_index":1410,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["backgroundgeolocation",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundgeolocationconfig",{"_index":1096,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationevents",{"_index":1097,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider",{"_index":1098,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider.distance_filter_provider",{"_index":1119,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["badge",{"_index":2646,"title":{},"body":{"dependencies.html":{}}}],["bar",{"_index":2621,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["baseurl",{"_index":1196,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["before",{"_index":1446,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["begin",{"_index":1313,"title":{},"body":{"injectables/LoadingService.html":{}}}],["begin(id",{"_index":1292,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject",{"_index":840,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["behaviorsubject([0",{"_index":2043,"title":{},"body":{"injectables/SettingsService.html":{}}}],["behaviorsubject(false",{"_index":1279,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject(null",{"_index":1089,"title":{},"body":{"injectables/GeolocateService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["below",{"_index":2766,"title":{},"body":{"index.html":{}}}],["best",{"_index":2805,"title":{},"body":{"index.html":{}}}],["beta.2",{"_index":2660,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":2302,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["binary",{"_index":2853,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":525,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["bootstrap",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["border",{"_index":786,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["bottom",{"_index":2315,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["bounds",{"_index":1420,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["bounds.extend(coord",{"_index":1423,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["broadcast",{"_index":403,"title":{},"body":{"injectables/CacheService.html":{}}}],["broadcasts",{"_index":372,"title":{},"body":{"injectables/CacheService.html":{}}}],["browse",{"_index":2918,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["bsd",{"_index":2838,"title":{},"body":{"index.html":{},"license.html":{}}}],["build",{"_index":2732,"title":{},"body":{"index.html":{}}}],["business",{"_index":2899,"title":{},"body":{"license.html":{}}}],["button",{"_index":1577,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["buttons",{"_index":1043,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["buttontext",{"_index":470,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["c",{"_index":2840,"title":{},"body":{"index.html":{},"license.html":{}}}],["cache",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["cacheservice",{"_index":316,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"coverage.html":{}}}],["calc(100",{"_index":1262,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{}}}],["cancel",{"_index":1046,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{}}}],["capitalize",{"_index":2502,"title":{},"body":{"components/TreksMapPage.html":{}}}],["card",{"_index":1794,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["card'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["card.component",{"_index":2163,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["card.component.html",{"_index":2213,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.scss",{"_index":2212,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts",{"_index":2211,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:117",{"_index":2237,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:21",{"_index":2230,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:22",{"_index":2227,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:23",{"_index":2229,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:24",{"_index":2225,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:25",{"_index":2226,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:26",{"_index":2228,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:28",{"_index":2239,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:29",{"_index":2240,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:30",{"_index":2243,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:31",{"_index":2224,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:36",{"_index":2241,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:37",{"_index":2242,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:38",{"_index":2244,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:42",{"_index":2234,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:81",{"_index":2232,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:86",{"_index":2233,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card/trek",{"_index":2162,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":1140,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["catcherror",{"_index":356,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksOrderComponent.html":{}}}],["catcherror((error",{"_index":410,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["categories",{"_index":2124,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categories.foreach((categoryid",{"_index":2130,"title":{},"body":{"injectables/SettingsService.html":{}}}],["category",{"_index":577,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["category.name",{"_index":2134,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categoryid",{"_index":2132,"title":{},"body":{"injectables/SettingsService.html":{}}}],["caused",{"_index":2901,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2719,"title":{},"body":{"index.html":{}}}],["center",{"_index":902,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{}}}],["change",{"_index":563,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["changed",{"_index":1256,"title":{},"body":{"components/LoaderComponent.html":{}}}],["changedetection",{"_index":421,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectionstrategy",{"_index":455,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectionstrategy.default",{"_index":1835,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":422,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectorref",{"_index":1841,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["changelayervisibility",{"_index":1223,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["changenotificationsmode",{"_index":937,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes",{"_index":960,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["changes.currentpois",{"_index":991,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes.filteredtreks",{"_index":1392,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changes.poi",{"_index":1774,"title":{},"body":{"components/PoiComponent.html":{}}}],["changescurrentpois",{"_index":990,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.currentvalue",{"_index":992,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.previousvalue",{"_index":993,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrenttreks",{"_index":1391,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.currentvalue",{"_index":1393,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.previousvalue",{"_index":1394,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["check",{"_index":2972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkauthorization",{"_index":1059,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checked",{"_index":564,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["checkedvalue.id",{"_index":752,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkedvalue.interval",{"_index":754,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkifbackgroundgeolocationisrunning",{"_index":1060,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checkifcangetcurrentheading",{"_index":1061,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checknetwork",{"_index":2452,"title":{},"body":{"components/TreksMapPage.html":{}}}],["checkstate",{"_index":820,"title":{},"body":{"components/FiltersComponent.html":{}}}],["checktonotify",{"_index":938,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["checktonotify(fromcoordinates",{"_index":952,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["children",{"_index":535,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["circle",{"_index":1496,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["circlecolorexpression",{"_index":1510,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push('match",{"_index":1511,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(['get",{"_index":1512,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(environment.map.clusterpaint['circle",{"_index":1516,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.color",{"_index":1515,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.id",{"_index":1514,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cities",{"_index":530,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["city",{"_index":2098,"title":{},"body":{"injectables/SettingsService.html":{}}}],["class",{"_index":59,"title":{"classes/UnSubscribe.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"modules/CustomPipesModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2553,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["clause",{"_index":2848,"title":{},"body":{"license.html":{}}}],["clickdeleteconfirm",{"_index":2217,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clickdeleteconfirm($event",{"_index":2231,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clicklocalnotifications",{"_index":933,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["clone",{"_index":2716,"title":{},"body":{"index.html":{}}}],["clonedeep",{"_index":1723,"title":{},"body":{"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedeep(context.mapconfig",{"_index":2480,"title":{},"body":{"components/TreksMapPage.html":{}}}],["clonedeep(environment.onlinemapconfig",{"_index":1754,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["clonedeep(this.filters$.getvalue",{"_index":2077,"title":{},"body":{"injectables/SettingsService.html":{}}}],["clonedeep(trek",{"_index":2083,"title":{},"body":{"injectables/SettingsService.html":{}}}],["close",{"_index":800,"title":{},"body":{"components/FiltersComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["cluster",{"_index":1486,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule",{"_index":608,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule_declarations",{"_index":609,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule_exports",{"_index":610,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_filterscomponentmodule",{"_index":917,"title":{},"body":{"modules/FiltersComponentModule.html":{},"overview.html":{}}}],["cluster_filterscomponentmodule_imports",{"_index":918,"title":{},"body":{"modules/FiltersComponentModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule",{"_index":1630,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_declarations",{"_index":1631,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_imports",{"_index":1632,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule",{"_index":1675,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_declarations",{"_index":1676,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_imports",{"_index":1677,"title":{},"body":{"modules/MorePageModule.html":{}}}],["cluster_sharedfiltersmodule",{"_index":2136,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedfiltersmodule_declarations",{"_index":2137,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedfiltersmodule_exports",{"_index":2138,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2147,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2148,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2149,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule",{"_index":2156,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_declarations",{"_index":2157,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_exports",{"_index":2158,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_shareduimodule",{"_index":2166,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_declarations",{"_index":2167,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_exports",{"_index":2168,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":2188,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":2189,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_imports",{"_index":2190,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule",{"_index":2351,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_declarations",{"_index":2352,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_imports",{"_index":2353,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["cluster_trekmappagemodule",{"_index":2433,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_declarations",{"_index":2434,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_imports",{"_index":2435,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["cluster_treksmappagemodule",{"_index":2504,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_declarations",{"_index":2505,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_imports",{"_index":2506,"title":{},"body":{"modules/TreksMapPageModule.html":{}}}],["cluster_trekspagemodule",{"_index":2534,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_declarations",{"_index":2535,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_imports",{"_index":2536,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["clusterid",{"_index":1524,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusterpaint",{"_index":2982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterradius",{"_index":1487,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusters",{"_index":1495,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clustertextpaint",{"_index":2985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":2861,"title":{},"body":{"license.html":{}}}],["collapsed",{"_index":443,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["collapsible",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["collapsiblelistcomponent",{"_index":98,"title":{"components/CollapsibleListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["color",{"_index":566,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["color=\"primary",{"_index":1963,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["colors",{"_index":2793,"title":{},"body":{"index.html":{}}}],["colsize",{"_index":3020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1579,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["combinelatest",{"_index":711,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TreksMapPage.html":{}}}],["combinelatest(treks",{"_index":861,"title":{},"body":{"components/FiltersComponent.html":{}}}],["command",{"_index":2743,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":921,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["commonsrc",{"_index":604,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["compact",{"_index":1438,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["complete",{"_index":404,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["componentprops",{"_index":657,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"overview.html":{}}}],["components/treks",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["concat",{"_index":3005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":1243,"title":{},"body":{"components/LoaderComponent.html":{}}}],["conditions",{"_index":2858,"title":{},"body":{"license.html":{}}}],["config",{"_index":2943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.xml",{"_index":2770,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":2819,"title":{},"body":{"index.html":{}}}],["configure",{"_index":2728,"title":{},"body":{"index.html":{}}}],["connect",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["connecterrorcomponent",{"_index":101,"title":{"components/ConnectErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":2396,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["connectionerror",{"_index":1610,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{}}}],["consequential",{"_index":2892,"title":{},"body":{"license.html":{}}}],["console.error('no",{"_index":2335,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["const",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["constructor(alertcontroller",{"_index":2222,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["constructor(backgroundgeolocation",{"_index":1070,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["constructor(cache",{"_index":1590,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["constructor(http",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["constructor(loading",{"_index":1245,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["constructor(modalcontroller",{"_index":629,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["constructor(modalctrl",{"_index":810,"title":{},"body":{"components/FiltersComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(more",{"_index":1645,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["constructor(navparams",{"_index":1225,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["constructor(offlinetreks",{"_index":1763,"title":{},"body":{"components/PoiComponent.html":{},"components/ProgressComponent.html":{}}}],["constructor(onlinetreks",{"_index":2441,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TabsPage.html":{}}}],["constructor(private",{"_index":364,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/InAppDisclosureComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["constructor(protected",{"_index":1305,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["constructor(public",{"_index":1207,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{}}}],["constructor(route",{"_index":1614,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["constructor(settings",{"_index":689,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{}}}],["contact",{"_index":574,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["container",{"_index":897,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["contains",{"_index":554,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["containsfilter",{"_index":486,"title":{"interfaces/ContainsFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["containsfilter(filter",{"_index":691,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["containsfiltershoulduseselectabove",{"_index":620,"title":{},"body":{"components/FilterComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":471,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["context",{"_index":2200,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{}}}],["context.mapconfig",{"_index":2405,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.offline",{"_index":2399,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.pois",{"_index":2402,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.touristiccategorieswithfeatures",{"_index":2404,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trek",{"_index":2401,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool",{"_index":2407,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.trekstool.filteredtreks",{"_index":2488,"title":{},"body":{"components/TreksMapPage.html":{}}}],["context.trekstool.getcommonimgsrc",{"_index":2408,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool.gettrekdetailsurl",{"_index":2410,"title":{},"body":{"components/TrekMapPage.html":{}}}],["contexts",{"_index":598,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["contour/contour.geojson",{"_index":2073,"title":{},"body":{"injectables/SettingsService.html":{}}}],["contract",{"_index":2905,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2873,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["coord",{"_index":1422,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates",{"_index":514,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["coordinates.push(feature.geometry.coordinates",{"_index":1419,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates.reduce",{"_index":1421,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[0",{"_index":1425,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[1",{"_index":1540,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["copyright",{"_index":2839,"title":{},"body":{"index.html":{},"license.html":{}}}],["cordova",{"_index":2639,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cordova@9.0.0",{"_index":2714,"title":{},"body":{"index.html":{}}}],["core",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["corpus",{"_index":2842,"title":{},"body":{"index.html":{},"license.html":{}}}],["count",{"_index":1500,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coverage",{"_index":2562,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":397,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["createmap",{"_index":1339,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["createtranslateloader",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["crins",{"_index":2846,"title":{},"body":{"index.html":{}}}],["criterionvalue",{"_index":744,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["cssclass",{"_index":660,"title":{},"body":{"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["currentdatasetting",{"_index":2067,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentdatasetting.values.map((value",{"_index":2069,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentheading",{"_index":1055,"title":{},"body":{"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{}}}],["currentheadingsubscription",{"_index":1056,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["currentmaxfiltervalues",{"_index":1920,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["currentmaxtreks",{"_index":1859,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentorder",{"_index":2512,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["currentpois",{"_index":943,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["currentpoistonotify",{"_index":934,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["currentposition",{"_index":935,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{}}}],["currentpositioninterval",{"_index":1057,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["currentprogress",{"_index":1838,"title":{},"body":{"components/ProgressComponent.html":{}}}],["currentsearchvalue",{"_index":1860,"title":{},"body":{"components/SearchComponent.html":{}}}],["currenttrek",{"_index":2362,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrek!.properties.name",{"_index":2423,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrekid",{"_index":2327,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["currenttypepoi",{"_index":1777,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["currenttypepoi.pictogram",{"_index":1782,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["custom",{"_index":2164,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["customattribution",{"_index":1439,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["customevent",{"_index":779,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["customize",{"_index":2769,"title":{},"body":{"index.html":{}}}],["custompipesmodule",{"_index":607,"title":{"modules/CustomPipesModule.html":{}},"body":{"modules/CustomPipesModule.html":{},"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["cypress",{"_index":1544,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["cypress:openheadless",{"_index":2833,"title":{},"body":{"index.html":{}}}],["cypress:rundocumentation",{"_index":2834,"title":{},"body":{"index.html":{}}}],["damage",{"_index":2916,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2893,"title":{},"body":{"license.html":{}}}],["data",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"license.html":{}}}],["data.context",{"_index":2394,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["data.id",{"_index":988,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["data.items",{"_index":1671,"title":{},"body":{"components/MorePage.html":{}}}],["data.selectedtrekid",{"_index":1558,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["data.temporaryfilter",{"_index":663,"title":{},"body":{"components/FilterComponent.html":{}}}],["data['item",{"_index":1623,"title":{},"body":{"components/MoreItemPage.html":{}}}],["datasetting",{"_index":570,"title":{"interfaces/DataSetting.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["datasetting.find((data",{"_index":2080,"title":{},"body":{"injectables/SettingsService.html":{}}}],["datasettings",{"_index":1343,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["debug",{"_index":1122,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["deburr",{"_index":1911,"title":{},"body":{"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{}}}],["deburr(searchvalue.tolowercase",{"_index":1914,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["deburr(trek.properties.name.tolowercase()).includes(searchvalue",{"_index":1916,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["deburr(value.name.tolowercase()).startswith(searchvalue",{"_index":1961,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["declarations",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["decorators",{"_index":1364,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["defaultsettings",{"_index":2059,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["delay",{"_index":401,"title":{},"body":{"injectables/CacheService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{}}}],["delete",{"_index":368,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["deleteconfirm",{"_index":2273,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deleteconfirm.present",{"_index":2280,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deletetrek",{"_index":2218,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["departure",{"_index":510,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["departure_city",{"_index":533,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["departurearrivaliconsize",{"_index":2977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":168,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["des",{"_index":2845,"title":{},"body":{"index.html":{}}}],["description",{"_index":523,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["description_teaser",{"_index":518,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["desiredaccuracy",{"_index":3011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desk",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["details",{"_index":1193,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["details.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["details.component.html",{"_index":1195,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.scss",{"_index":1194,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts",{"_index":1192,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1204,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":1205,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1200,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1206,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1806,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1202,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":1812,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1815,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1814,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1811,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1803,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1201,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":1807,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1808,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":1813,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":1809,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:31",{"_index":1810,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1805,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:84",{"_index":1804,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.module#trekdetailspagemodule",{"_index":2203,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details.module.ts",{"_index":2355,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page",{"_index":2357,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page.ts",{"_index":2589,"title":{},"body":{"coverage.html":{}}}],["details/${parentid}/${trekid",{"_index":1738,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/${this.parentid}/${this.trek.properties.id",{"_index":2257,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${this.trek.properties.id",{"_index":2258,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${trekid",{"_index":1737,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/:trekid",{"_index":2201,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/:trekid/:stageid",{"_index":2204,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/information",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"components/InformationDeskDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/poi",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/trek",{"_index":2202,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"coverage.html":{}}}],["developement",{"_index":2749,"title":{},"body":{"index.html":{}}}],["developmentenvironment.prod.ts",{"_index":2777,"title":{},"body":{"index.html":{}}}],["device",{"_index":2648,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["deviceorientation",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{}}}],["deviceorientationcompassheading",{"_index":1099,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["deviceorientationcompassheading).hasownproperty",{"_index":1161,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["difficulty",{"_index":491,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["direct",{"_index":2887,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1578,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["directive",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["directives",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["disablegeolocationnotification",{"_index":939,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["disclaimed",{"_index":2883,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2865,"title":{},"body":{"license.html":{}}}],["disclosure",{"_index":1173,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["disclosure'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["disclosure.component",{"_index":1379,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TreksOrderComponent.html":{}}}],["disclosure.component.html",{"_index":1175,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["disclosure.component.scss",{"_index":1174,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["disclosure.component.ts",{"_index":1172,"title":{},"body":{"components/InAppDisclosureComponent.html":{},"coverage.html":{}}}],["disclosure.component.ts:10",{"_index":1176,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["disclosure.component.ts:11",{"_index":1179,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["disclosure.component.ts:13",{"_index":1178,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["disclosure.component.ts:15",{"_index":1177,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["disclosure/in",{"_index":1171,"title":{},"body":{"components/InAppDisclosureComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["display",{"_index":899,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distance",{"_index":713,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distance(from",{"_index":1024,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["distancefilter",{"_index":3014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distancefromtreka",{"_index":727,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefromtrekb",{"_index":730,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distinctuntilchanged",{"_index":1374,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["distribution",{"_index":2870,"title":{},"body":{"license.html":{}}}],["docheck",{"_index":617,"title":{},"body":{"components/FilterComponent.html":{}}}],["document.createelement('div",{"_index":1467,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["documentation",{"_index":2563,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["domain.fr/mobile",{"_index":2940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":2741,"title":{},"body":{"index.html":{}}}],["download",{"_index":2816,"title":{},"body":{"index.html":{}}}],["downloads",{"_index":2818,"title":{},"body":{"index.html":{}}}],["duration",{"_index":519,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["during",{"_index":377,"title":{},"body":{"injectables/CacheService.html":{}}}],["dynamic",{"_index":2610,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1520,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["each",{"_index":392,"title":{},"body":{"injectables/CacheService.html":{}}}],["easier",{"_index":2709,"title":{},"body":{"index.html":{}}}],["easily",{"_index":2767,"title":{},"body":{"index.html":{}}}],["el",{"_index":1466,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["el.classname",{"_index":1469,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["element",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["element.id",{"_index":886,"title":{},"body":{"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["element.properties.id",{"_index":1899,"title":{},"body":{"components/SearchComponent.html":{}}}],["ellipsis",{"_index":2307,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["email",{"_index":545,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["emit",{"_index":399,"title":{},"body":{"injectables/CacheService.html":{}}}],["emits",{"_index":374,"title":{},"body":{"injectables/CacheService.html":{}}}],["emitted",{"_index":406,"title":{},"body":{"injectables/CacheService.html":{}}}],["empty",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":2781,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["enablegeolocationnotification",{"_index":940,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["enablehighaccuracy",{"_index":1136,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["enablerotation",{"_index":3006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":1795,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"index.html":{}}}],["enough",{"_index":2746,"title":{},"body":{"index.html":{}}}],["entrycomponents",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedFiltersModule.html":{}}}],["env/environment",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["environment",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1668,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{}}}],["environment.availablelanguage",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.indexof(defaultlanguage",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.length",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage[0",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.backgroundgeolocation",{"_index":1124,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["environment.backgroundgeolocation.interval",{"_index":1153,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["environment.containsfiltershoulduseselectabove",{"_index":644,"title":{},"body":{"components/FilterComponent.html":{}}}],["environment.map.attributiontext",{"_index":1440,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.clusterpaint",{"_index":1499,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.clustertextpaint",{"_index":1502,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.enablerotation",{"_index":1441,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.globalmapiconsize",{"_index":1518,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.treksfitboundsoptions",{"_index":1428,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zonelayerproperties",{"_index":1492,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zoneoutlinelayerproperties",{"_index":1494,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox",{"_index":1385,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox.accesstoken",{"_index":1386,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.meterstonotify",{"_index":1018,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["environment.offlinemapconfig",{"_index":2444,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.offlinemapconfig.style",{"_index":1411,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.onlinebaseurl",{"_index":1203,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{}}}],["environment.onlinemapconfig",{"_index":2445,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.prod.ts",{"_index":2772,"title":{},"body":{"index.html":{}}}],["environment.trekzoom.zoom",{"_index":1565,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["environment.ts",{"_index":2776,"title":{},"body":{"index.html":{}}}],["environment.usefirebase",{"_index":1656,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["erasefilters",{"_index":801,"title":{},"body":{"components/FiltersComponent.html":{}}}],["err",{"_index":1531,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["error",{"_index":467,"title":{},"body":{"components/ConnectErrorComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["error'},{'name",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["error.component",{"_index":2173,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["error.component.html",{"_index":469,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.scss",{"_index":468,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts",{"_index":466,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":478,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:11",{"_index":479,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:12",{"_index":477,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:13",{"_index":476,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:9",{"_index":480,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.status",{"_index":1658,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["error/connect",{"_index":465,"title":{},"body":{"components/ConnectErrorComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["errortranslation",{"_index":1566,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['confirmbutton",{"_index":1575,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['header",{"_index":1571,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['message",{"_index":1574,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["errortranslation['subheader",{"_index":1573,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["es6",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2912,"title":{},"body":{"license.html":{}}}],["event",{"_index":781,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"license.html":{}}}],["event.checked",{"_index":1956,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["event.detail.checked",{"_index":782,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["event.detail.value",{"_index":1236,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["event.filter",{"_index":879,"title":{},"body":{"components/FiltersComponent.html":{}}}],["event.filter.id",{"_index":877,"title":{},"body":{"components/FiltersComponent.html":{}}}],["event.stoppropagation",{"_index":2259,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["event.value.id",{"_index":1955,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["eventemitter",{"_index":352,"title":{},"body":{"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["everything",{"_index":386,"title":{},"body":{"injectables/CacheService.html":{}}}],["evt",{"_index":1980,"title":{},"body":{"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["evt.detail.value",{"_index":1983,"title":{},"body":{"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["exemplary",{"_index":2891,"title":{},"body":{"license.html":{}}}],["expandableitems",{"_index":428,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expanded",{"_index":429,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expandfiltervalues",{"_index":1923,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["expandfiltervalues(infinitescroll",{"_index":1930,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["expandtreks",{"_index":1863,"title":{},"body":{"components/SearchComponent.html":{}}}],["expandtreks(infinitescroll",{"_index":1868,"title":{},"body":{"components/SearchComponent.html":{}}}],["expansion",{"_index":1535,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["exports",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["express",{"_index":2874,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1255,"title":{},"body":{"components/LoaderComponent.html":{}}}],["extand",{"_index":2299,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["extends",{"_index":489,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{}}}],["extensive",{"_index":2835,"title":{},"body":{"index.html":{}}}],["external_url",{"_index":569,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["extra",{"_index":2304,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["f04141",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fails",{"_index":2349,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["false",{"_index":453,"title":{},"body":{"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":495,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["feature.geometry",{"_index":1416,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.geometry.coordinates",{"_index":999,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["feature.geometry.coordinates[0",{"_index":1417,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.geometry.coordinates[1",{"_index":1418,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.properties",{"_index":1541,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.properties.id",{"_index":987,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["feature.properties.name",{"_index":998,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["feature.properties[filter.id",{"_index":745,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["featurecollection",{"_index":496,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["featureproperties",{"_index":1522,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties.cluster_id",{"_index":1525,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features",{"_index":505,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["features.foreach((feature",{"_index":1551,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].geometry",{"_index":1537,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].properties",{"_index":1523,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresincluster",{"_index":1532,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fff",{"_index":2984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1504,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2825,"title":{},"body":{"index.html":{}}}],["files:appname",{"_index":2774,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2723,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":109,"title":{"interfaces/Filter.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filter'},{'name",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filter((currentposition",{"_index":1463,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["filter((loadingid",{"_index":1299,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["filter((trek",{"_index":1915,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["filter((v",{"_index":2128,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filter((value",{"_index":750,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/SelectFilterComponent.html":{}}}],["filter(treks",{"_index":693,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.component",{"_index":650,"title":{},"body":{"components/FilterComponent.html":{},"modules/SharedFiltersModule.html":{}}}],["filter.component.html",{"_index":619,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.component.scss",{"_index":618,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.component.ts",{"_index":1919,"title":{},"body":{"components/SelectFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:12",{"_index":1928,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:13",{"_index":1927,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":1945,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":1943,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:16",{"_index":1944,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:17",{"_index":1946,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:18",{"_index":1926,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:22",{"_index":1933,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:24",{"_index":1932,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":1929,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":1937,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:37",{"_index":1931,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:51",{"_index":1939,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:55",{"_index":1941,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":1934,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:76",{"_index":1936,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.id",{"_index":869,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.name",{"_index":671,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.name.tolowercase",{"_index":673,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.type",{"_index":720,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values",{"_index":749,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.values.filter((value",{"_index":736,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values.foreach((value",{"_index":884,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.values.length",{"_index":1962,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.values.sort(function(a",{"_index":1958,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter/select",{"_index":649,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"coverage.html":{}}}],["filtercomponent",{"_index":104,"title":{"components/FilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredfeatures",{"_index":715,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredfeatures.filter((feature",{"_index":718,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredtreks",{"_index":583,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["filteredtreks.sort((a",{"_index":723,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filters",{"_index":571,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["filters'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filters.cancelbutton",{"_index":1964,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filters.component.html",{"_index":793,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":792,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.confirmbutton",{"_index":1965,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filters.erase",{"_index":891,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.foreach((filter",{"_index":717,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filters.module",{"_index":923,"title":{},"body":{"modules/FiltersComponentModule.html":{}}}],["filters.module.ts",{"_index":2140,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["filters.oneresult",{"_index":893,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.push(filter",{"_index":2070,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filters.results",{"_index":894,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.selectplaceholder",{"_index":672,"title":{},"body":{"components/FilterComponent.html":{}}}],["filters.title",{"_index":889,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.zeroresult",{"_index":892,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filterscomponent",{"_index":106,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterscomponentmodule",{"_index":916,"title":{"modules/FiltersComponentModule.html":{}},"body":{"modules/FiltersComponentModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["filterssubscription",{"_index":794,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtertreks",{"_index":1697,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["filtertreksservice",{"_index":677,"title":{"injectables/FilterTreksService.html":{}},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["filtertreksservice.containsfilter",{"_index":721,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.filter(treks",{"_index":764,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{}}}],["filtertreksservice.getcheckedidforfilter",{"_index":739,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).indexof",{"_index":748,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedinterval(filter).foreach",{"_index":741,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getnumberofactivefilters(filters",{"_index":758,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.intervalfilter",{"_index":722,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.isfilteractive(filter",{"_index":719,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.sort",{"_index":763,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtervalue",{"_index":557,"title":{"interfaces/FilterValue.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filtervalue.checked",{"_index":667,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filtervaluecomponent",{"_index":108,"title":{"components/FilterValueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtervaluesbystep",{"_index":1921,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["finally",{"_index":1158,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["find",{"_index":2765,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1314,"title":{},"body":{"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["finish(id",{"_index":1296,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["firebase",{"_index":2652,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["firebaseanalytics",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["first",{"_index":2475,"title":{},"body":{"components/TreksMapPage.html":{},"index.html":{}}}],["first_picture",{"_index":508,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["fit",{"_index":2809,"title":{},"body":{"index.html":{}}}],["fitbounds",{"_index":1357,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fitness",{"_index":2880,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1264,"title":{},"body":{"components/LoaderComponent.html":{}}}],["flex",{"_index":900,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["fly",{"_index":1356,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["flytouserlocation",{"_index":1340,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["following",{"_index":2857,"title":{},"body":{"license.html":{}}}],["font",{"_index":483,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["foreground",{"_index":977,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["forkjoin",{"_index":2321,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["form",{"_index":2866,"title":{},"body":{"license.html":{}}}],["forms",{"_index":2854,"title":{},"body":{"license.html":{}}}],["found",{"_index":2336,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fr",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["frequency",{"_index":1110,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["fromcoordinates",{"_index":954,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["full",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["function",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{}}}],["functions",{"_index":2690,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2712,"title":{},"body":{"index.html":{}}}],["geographical",{"_index":2790,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":499,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["geojsonproperties",{"_index":1371,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource",{"_index":1372,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterexpansionzoom",{"_index":1536,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterleaves",{"_index":1529,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsourceraw",{"_index":1373,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geolocate",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["geolocate.asklocatepermission",{"_index":1033,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.cancel",{"_index":1034,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.open",{"_index":1035,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocatenotificationscomponent",{"_index":111,"title":{"components/GeolocateNotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geolocateservice",{"_index":946,"title":{"injectables/GeolocateService.html":{}},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["geolocation",{"_index":1123,"title":{},"body":{"injectables/GeolocateService.html":{},"injectables/SettingsService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["geolocation/ngx",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["geolocationconfig",{"_index":1117,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["geometry",{"_index":513,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["geosjon",{"_index":2786,"title":{},"body":{"index.html":{}}}],["geotrek",{"_index":2695,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["get('geolocate.error",{"_index":1567,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["get('geolocate.notificationtitle",{"_index":1115,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["get('trekcard",{"_index":2262,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["get(url",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcheckedidforfilter",{"_index":683,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedidforfilter(filter",{"_index":695,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval",{"_index":684,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval(filter",{"_index":697,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcommonimgsrc",{"_index":596,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getcurrentposition",{"_index":1062,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["getfilteredtreks",{"_index":685,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilteredtreks(treks",{"_index":699,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilters",{"_index":2006,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getfilters(settings",{"_index":2019,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek",{"_index":2007,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek(trek",{"_index":2021,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getmapconfigfortrekbyid",{"_index":1688,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getmapconfigfortrekbyid(trek",{"_index":594,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getminimaltrekbyid",{"_index":1689,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getminimaltrekbyid(trekid",{"_index":1701,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getmoreitembyid",{"_index":1588,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitembyid(id",{"_index":1592,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitems",{"_index":1589,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getnumberofactivefilters",{"_index":686,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getnumberofactivefilters(filters",{"_index":701,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getpoisfortrekbyid",{"_index":1690,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(id",{"_index":586,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(trekid",{"_index":1704,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gets",{"_index":371,"title":{},"body":{"injectables/CacheService.html":{}}}],["getsettings",{"_index":2008,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getting",{"_index":2693,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettouristiccategorieswithfeatures",{"_index":2009,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccategorieswithfeatures(touristiccontents",{"_index":2024,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccontentsfortrekbyid",{"_index":587,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(id",{"_index":2543,"title":{},"body":{"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(trekid",{"_index":1706,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettouristiceventsfortrekbyid",{"_index":588,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(id",{"_index":2545,"title":{},"body":{"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(trekid",{"_index":1708,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekbyid",{"_index":1691,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(id",{"_index":584,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(trekid",{"_index":1710,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekdetailsurl",{"_index":1692,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekdetailsurl(trekid",{"_index":590,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc",{"_index":1693,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc(trek",{"_index":591,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl",{"_index":1694,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl(trekid",{"_index":593,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreks",{"_index":1695,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettreksmapurl",{"_index":592,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreksurl",{"_index":589,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getvalue",{"_index":1298,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["getvalueforpropertybyid",{"_index":2010,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getvalueforpropertybyid(propertyname",{"_index":2026,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getzonefromstorage",{"_index":2011,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getzonefromurl",{"_index":2012,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gi",{"_index":2115,"title":{},"body":{"injectables/SettingsService.html":{}}}],["git",{"_index":2715,"title":{},"body":{"index.html":{}}}],["git@github.com:geotrekce/geotrek",{"_index":2717,"title":{},"body":{"index.html":{}}}],["given",{"_index":1730,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gl",{"_index":503,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":2817,"title":{},"body":{"index.html":{}}}],["globalization",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["globalmapiconsize",{"_index":2971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyphs",{"_index":2948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["goods",{"_index":2896,"title":{},"body":{"license.html":{}}}],["google",{"_index":2672,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["googleservice",{"_index":2822,"title":{},"body":{"index.html":{}}}],["gradle",{"_index":2643,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graph",{"_index":2919,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1641,"title":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1642,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"overview.html":{}}}],["h",{"_index":2289,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["handlefiltersstate",{"_index":802,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handlefiltersstate(checkstate",{"_index":818,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handler",{"_index":1049,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["handleselect",{"_index":803,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handleselect(event",{"_index":821,"title":{},"body":{"components/FiltersComponent.html":{}}}],["header",{"_index":1039,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1598,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["heading",{"_index":1476,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["height",{"_index":898,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["here",{"_index":2727,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":2311,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hidealllabel",{"_index":433,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["hits",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{}}}],["holder",{"_index":2885,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2872,"title":{},"body":{"license.html":{}}}],["html",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["htmlionmodalelement",{"_index":2387,"title":{},"body":{"components/TrekMapPage.html":{}}}],["http",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/functions.html":{}}}],["http://geotrek.fr",{"_index":2699,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpclientmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1650,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["httpevent",{"_index":1276,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httphandler",{"_index":1273,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpheaders",{"_index":1595,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpinterceptor",{"_index":1277,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpoptions",{"_index":1597,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httprequest",{"_index":1271,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpresponse",{"_index":1278,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://b.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://c.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://my",{"_index":2939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydratedtrek",{"_index":536,"title":{"interfaces/HydratedTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["hydratedtrek.properties.advice",{"_index":2122,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.arrival_city",{"_index":2094,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.cities",{"_index":2096,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure",{"_index":2284,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.departure_city",{"_index":2092,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure_city?.name",{"_index":2285,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.description",{"_index":2117,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.difficulty",{"_index":2085,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.difficulty?.name",{"_index":2286,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.duration",{"_index":2287,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.id",{"_index":1553,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.information_desks.foreach((information_desk",{"_index":2110,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.length",{"_index":2292,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.name",{"_index":1554,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.networks",{"_index":2101,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice",{"_index":2088,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice.color",{"_index":1556,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.practice.pictogram",{"_index":1555,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["hydratedtrek.properties.route",{"_index":2090,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.themes",{"_index":2105,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties?.name",{"_index":2282,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrekproperties",{"_index":537,"title":{"interfaces/HydratedTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["icon",{"_index":472,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":2783,"title":{},"body":{"index.html":{}}}],["iconsize",{"_index":2981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":490,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ideally",{"_index":2797,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2564,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1282,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.length",{"_index":1286,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.push(id",{"_index":1294,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ignore",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1458,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":1796,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["imgpoi",{"_index":1981,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["imgpractice",{"_index":1549,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SelectTrekComponent.html":{}}}],["imgpracticesrc",{"_index":2214,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["imgsrc",{"_index":2215,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["implements",{"_index":419,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["implied",{"_index":2875,"title":{},"body":{"license.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["important",{"_index":2795,"title":{},"body":{"index.html":{}}}],["imports",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["inappdisclosure.datausage",{"_index":1189,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.description",{"_index":1183,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.displayrequest",{"_index":1190,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.geolocatefeatures",{"_index":1184,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.geolocateformap",{"_index":1185,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.geolocatefornavigate",{"_index":1187,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.geolocatefornotification",{"_index":1188,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.geolocateforsort",{"_index":1186,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosure.title",{"_index":1182,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["inappdisclosurecomponent",{"_index":114,"title":{"components/InAppDisclosureComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["incidental",{"_index":2889,"title":{},"body":{"license.html":{}}}],["including",{"_index":2877,"title":{},"body":{"license.html":{}}}],["increment",{"_index":408,"title":{},"body":{"injectables/CacheService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2888,"title":{},"body":{"license.html":{}}}],["infinitescroll",{"_index":1870,"title":{},"body":{"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{}}}],["infinitescroll.target.complete",{"_index":1903,"title":{},"body":{"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{}}}],["infinity",{"_index":1530,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["info.plist",{"_index":2823,"title":{},"body":{"index.html":{}}}],["inform",{"_index":1568,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["information",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["information_desk.type",{"_index":2111,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desk_types",{"_index":2112,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desks",{"_index":531,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["informationdesk",{"_index":532,"title":{"interfaces/InformationDesk.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationdesk.municipality",{"_index":1215,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.name",{"_index":1213,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.phone",{"_index":1217,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.postal_code",{"_index":1214,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdeskdetailscomponent",{"_index":116,"title":{"components/InformationDeskDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationdeskpicture",{"_index":1197,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationiconsize",{"_index":2974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["informationintro",{"_index":567,"title":{"interfaces/InformationIntro.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationitem",{"_index":568,"title":{"interfaces/InformationItem.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informations.service",{"_index":1652,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["informations.service.ts",{"_index":1586,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["informations.service.ts:14",{"_index":1591,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:21",{"_index":1594,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:33",{"_index":1593,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations/more",{"_index":1585,"title":{},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["inherited",{"_index":831,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["initializeapp",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["initialorder",{"_index":3021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialsize",{"_index":434,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["initialstate",{"_index":435,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["injectable",{"_index":315,"title":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["inner",{"_index":785,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["input",{"_index":454,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{}}}],["inputs",{"_index":432,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{}}}],["inside",{"_index":1527,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["install",{"_index":2711,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2700,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2707,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2720,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1543,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["instanceof",{"_index":1311,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["instead",{"_index":2759,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1268,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["intercept(req",{"_index":1270,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interceptor",{"_index":1265,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1266,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interface",{"_index":485,"title":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["interfaces",{"_index":487,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["internationalization",{"_index":2779,"title":{},"body":{"index.html":{}}}],["interruption",{"_index":2900,"title":{},"body":{"license.html":{}}}],["interval",{"_index":555,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["intervalfilter",{"_index":562,"title":{"interfaces/IntervalFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["intervalfilter(filter",{"_index":703,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["ion",{"_index":675,"title":{},"body":{"components/FilterComponent.html":{},"components/TrekMapPage.html":{}}}],["ionic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["ionic/storage",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"injectables/SettingsService.html":{},"dependencies.html":{}}}],["ionic@5.4.11",{"_index":2713,"title":{},"body":{"index.html":{}}}],["ionicmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ionicmodule.forroot",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewdidenter",{"_index":804,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["ionviewdidleave",{"_index":2453,"title":{},"body":{"components/TreksMapPage.html":{}}}],["ionviewwillenter",{"_index":1199,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/TreksOrderComponent.html":{}}}],["ionviewwillleave",{"_index":1839,"title":{},"body":{"components/ProgressComponent.html":{}}}],["ios",{"_index":2734,"title":{},"body":{"index.html":{}}}],["iosandroid",{"_index":2737,"title":{},"body":{"index.html":{}}}],["is_park_centered",{"_index":524,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isalert",{"_index":2238,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["isfilteractive",{"_index":687,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfilteractive(filter",{"_index":705,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfirstcheck",{"_index":2513,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["isininterval",{"_index":740,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isinview",{"_index":2448,"title":{},"body":{"components/TreksMapPage.html":{}}}],["isloading",{"_index":1288,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isloading(id",{"_index":1301,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isoffline",{"_index":595,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isonline",{"_index":809,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["isstage",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["item",{"_index":1607,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{}}}],["item'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["item.module#moreitempagemodule",{"_index":2209,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["item.module.ts",{"_index":1634,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page",{"_index":1636,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page.html",{"_index":1609,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.scss",{"_index":1608,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts",{"_index":1606,"title":{},"body":{"components/MoreItemPage.html":{},"coverage.html":{}}}],["item.page.ts:13",{"_index":1620,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:14",{"_index":1621,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:15",{"_index":1617,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:21",{"_index":1618,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:36",{"_index":1619,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.resolver",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["item.resolver.ts",{"_index":1644,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:16",{"_index":1646,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.resolver.ts:23",{"_index":1649,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item/more",{"_index":1605,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["items",{"_index":436,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["itemtemplate",{"_index":437,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["j",{"_index":2291,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["java",{"_index":2748,"title":{},"body":{"index.html":{}}}],["jdk",{"_index":2751,"title":{},"body":{"index.html":{}}}],["js",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(await",{"_index":2060,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(settings",{"_index":2050,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(true",{"_index":1181,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["json.stringify(zone",{"_index":2055,"title":{},"body":{"injectables/SettingsService.html":{}}}],["justify",{"_index":901,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["key",{"_index":363,"title":{},"body":{"injectables/CacheService.html":{}}}],["keyboard",{"_index":2655,"title":{},"body":{"dependencies.html":{}}}],["kilometers",{"_index":1020,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["kit",{"_index":2750,"title":{},"body":{"index.html":{}}}],["km",{"_index":2295,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["kmtonotify",{"_index":1017,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["language",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":400,"title":{},"body":{"injectables/CacheService.html":{}}}],["latest",{"_index":2703,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":546,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["launch",{"_index":980,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["layer",{"_index":2964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layer.name",{"_index":1237,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layers",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["layersvisibilitycomponent",{"_index":120,"title":{"components/LayersVisibilityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layervisibilitychange",{"_index":1224,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layervisibilitychange(event",{"_index":1228,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layout",{"_index":1503,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1433,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{}}}],["legend",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["length",{"_index":512,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["letter",{"_index":2429,"title":{},"body":{"components/TrekMapPage.html":{}}}],["liability",{"_index":2903,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2886,"title":{},"body":{"license.html":{}}}],["licence",{"_index":2836,"title":{},"body":{"index.html":{}}}],["license",{"_index":2847,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":2878,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2789,"title":{},"body":{"index.html":{}}}],["line",{"_index":2744,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["lines",{"_index":784,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["linux",{"_index":2739,"title":{},"body":{"index.html":{}}}],["list",{"_index":423,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["list.component",{"_index":2171,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["list.component.html",{"_index":426,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.scss",{"_index":425,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts",{"_index":418,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["list.component.ts:16",{"_index":445,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:17",{"_index":448,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:18",{"_index":440,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:19",{"_index":442,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:20",{"_index":444,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:21",{"_index":447,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:23",{"_index":451,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:24",{"_index":452,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:25",{"_index":439,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:29",{"_index":449,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:38",{"_index":450,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list/collapsible",{"_index":417,"title":{},"body":{"components/CollapsibleListComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["literal",{"_index":342,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/Poi.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicEvent.html":{},"interfaces/Trek.html":{}}}],["loadchildren",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loaded",{"_index":2398,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loader",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["loader.component.html",{"_index":1240,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1239,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.dismiss",{"_index":2269,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loader.present",{"_index":2265,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadercomponent",{"_index":123,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderstatus",{"_index":1241,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["loadimages",{"_index":1451,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loadimages.subscribe",{"_index":1478,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loading",{"_index":1242,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loadingcontroller",{"_index":2223,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadingid",{"_index":1300,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids",{"_index":1281,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids.indexof(id",{"_index":1304,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadinginterceptor",{"_index":179,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"overview.html":{}}}],["loadingservice",{"_index":1246,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["loadsettings",{"_index":2013,"title":{},"body":{"injectables/SettingsService.html":{}}}],["loadtreks",{"_index":1696,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["local",{"_index":2657,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["localefr",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["localnotifications",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["located",{"_index":2799,"title":{},"body":{"index.html":{}}}],["location",{"_index":560,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{}}}],["location.latitude",{"_index":1145,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["locationprovider",{"_index":1118,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["lockscreen",{"_index":981,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["lodash",{"_index":1382,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["lodash.clonedeep",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["lodash.deburr",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["lodash.throttle",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["longitude",{"_index":547,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["loss",{"_index":2897,"title":{},"body":{"license.html":{}}}],["lot",{"_index":2773,"title":{},"body":{"index.html":{}}}],["lowerround",{"_index":1323,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"components/TrekCardComponent.html":{}}}],["lowerroundpipe",{"_index":611,"title":{"pipes/LowerRoundPipe.html":{}},"body":{"modules/CustomPipesModule.html":{},"pipes/LowerRoundPipe.html":{},"coverage.html":{},"overview.html":{}}}],["macos",{"_index":2736,"title":{},"body":{"index.html":{}}}],["make",{"_index":412,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["makina",{"_index":2841,"title":{},"body":{"index.html":{},"license.html":{}}}],["map",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["map(([treks",{"_index":762,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((checkedvalue",{"_index":751,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((data",{"_index":2486,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map((filters",{"_index":757,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((loadingids",{"_index":1303,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["map((touristiccontent",{"_index":2126,"title":{},"body":{"injectables/SettingsService.html":{}}}],["map.module#trekmappagemodule",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map.module#treksmappagemodule",{"_index":2206,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["map.module.ts",{"_index":2436,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page",{"_index":2438,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page.html",{"_index":2361,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.scss",{"_index":2360,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts",{"_index":2359,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["map.page.ts:104",{"_index":2375,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:106",{"_index":2459,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:109",{"_index":2379,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:111",{"_index":2466,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:120",{"_index":2467,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:127",{"_index":2377,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:136",{"_index":2463,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:137",{"_index":2372,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:140",{"_index":2462,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:141",{"_index":2380,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:145",{"_index":2374,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:146",{"_index":2460,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:154",{"_index":2457,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:30",{"_index":2384,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:31",{"_index":2383,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:32",{"_index":2391,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:33",{"_index":2385,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:34",{"_index":2392,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:35",{"_index":2382,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:36",{"_index":2388,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:37",{"_index":2386,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:38",{"_index":2381,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:39",{"_index":2389,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:40",{"_index":2369,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:41",{"_index":2468,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:42",{"_index":2470,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:43",{"_index":2456,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:46",{"_index":2469,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:47",{"_index":2390,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:49",{"_index":2471,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:52",{"_index":2472,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:55",{"_index":2370,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:59",{"_index":2465,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:84",{"_index":2464,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:88",{"_index":2458,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map/trek",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["map/treks",{"_index":2205,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["mapbox",{"_index":502,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":1383,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl.accesstoken",{"_index":1387,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.attributioncontrol",{"_index":1437,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.lnglatbounds(coordinates[0",{"_index":1424,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.map",{"_index":1426,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.marker",{"_index":1472,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.navigationcontrol",{"_index":1430,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.scalecontrol",{"_index":1434,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxoptions",{"_index":501,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig",{"_index":602,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig.center",{"_index":1757,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["mapgenerally",{"_index":2787,"title":{},"body":{"index.html":{}}}],["mapisloaded",{"_index":1344,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["mapisloaded(event",{"_index":2371,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mapisloaded(loaded",{"_index":2461,"title":{},"body":{"components/TreksMapPage.html":{}}}],["maptrek.disablenotification",{"_index":1053,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.enablenotification",{"_index":1052,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.poisalert.cancelbutton",{"_index":1985,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["maptrek.poisalert.confirmbutton",{"_index":1986,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["maptreks.treksalert.cancelbutton",{"_index":2003,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreks.treksalert.confirmbutton",{"_index":2004,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreks.treksalert.informuser",{"_index":2001,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreks.treksalert.title",{"_index":2000,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["maptreksvizcomponent",{"_index":125,"title":{"components/MapTreksVizComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maptrekvizcomponent",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapviz",{"_index":1335,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["margin",{"_index":1798,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TreksMapPage.html":{}}}],["marker",{"_index":1367,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["markerposition",{"_index":1336,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["matching",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":2869,"title":{},"body":{"license.html":{}}}],["math.floor(value",{"_index":1328,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["math.random",{"_index":735,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["mauron85/cordova",{"_index":2625,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":743,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["maximumage",{"_index":1135,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["maxpitch",{"_index":2958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{}}}],["maxzoom",{"_index":1483,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":912,"title":{},"body":{"components/FiltersComponent.html":{}}}],["medium",{"_index":676,"title":{},"body":{"components/FilterComponent.html":{}}}],["merchantability",{"_index":2879,"title":{},"body":{"license.html":{}}}],["mergefilterstreks",{"_index":2449,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap",{"_index":2474,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap((context",{"_index":2487,"title":{},"body":{"components/TreksMapPage.html":{}}}],["message",{"_index":1041,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["met",{"_index":2859,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["meterstonotify",{"_index":3008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["metric",{"_index":1436,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["min",{"_index":742,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TrekCardComponent.html":{}}}],["minimaltrek",{"_index":506,"title":{"interfaces/MinimalTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltrekproperties",{"_index":507,"title":{"interfaces/MinimalTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltreks",{"_index":504,"title":{"interfaces/MinimalTreks.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimize",{"_index":2312,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["minimum",{"_index":2721,"title":{},"body":{"index.html":{}}}],["minzoom",{"_index":2956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2689,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2696,"title":{},"body":{"index.html":{}}}],["mobile.git",{"_index":2718,"title":{},"body":{"index.html":{}}}],["modal",{"_index":655,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["modal.dismiss",{"_index":2416,"title":{},"body":{"components/TrekMapPage.html":{}}}],["modal.ondiddismiss",{"_index":662,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["modal.present",{"_index":661,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["modalcontroller",{"_index":630,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["modalctrl",{"_index":814,"title":{},"body":{"components/FiltersComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["modalpoidetails",{"_index":2363,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mode",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["modification",{"_index":2855,"title":{},"body":{"license.html":{}}}],["module",{"_index":165,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["modules",{"_index":167,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["more'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["more.page",{"_index":1679,"title":{},"body":{"modules/MorePageModule.html":{}}}],["more.page.html",{"_index":1662,"title":{},"body":{"components/MorePage.html":{}}}],["more.page.scss",{"_index":1661,"title":{},"body":{"components/MorePage.html":{}}}],["more/more",{"_index":2208,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["more/more.module",{"_index":2197,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["more/more.module#morepagemodule",{"_index":2207,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["moreinformationintro.title",{"_index":1673,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsintro",{"_index":1664,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsservice",{"_index":1583,"title":{"injectables/MoreInformationsService.html":{}},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["moreitem",{"_index":1611,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.external_url",{"_index":1628,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.title",{"_index":1627,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitemid",{"_index":1612,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"modules/TabsPageRoutingModule.html":{}}}],["moreitempage",{"_index":131,"title":{"components/MoreItemPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moreitempagemodule",{"_index":1629,"title":{"modules/MoreItemPageModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreitemresolver",{"_index":198,"title":{"guards/MoreItemResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["morepage",{"_index":134,"title":{"components/MorePage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["morepagemodule",{"_index":1674,"title":{"modules/MorePageModule.html":{}},"body":{"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreresolver",{"_index":201,"title":{"guards/MoreResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["ms",{"_index":379,"title":{},"body":{"injectables/CacheService.html":{}}}],["multi",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["multipoint",{"_index":497,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["municipality",{"_index":548,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["national",{"_index":2844,"title":{},"body":{"index.html":{}}}],["native",{"_index":3010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["native/background",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":2612,"title":{},"body":{"dependencies.html":{}}}],["native/device",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"dependencies.html":{}}}],["native/file",{"_index":2616,"title":{},"body":{"dependencies.html":{}}}],["native/file/ngx",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["native/firebase",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"dependencies.html":{}}}],["native/globalization",{"_index":2618,"title":{},"body":{"dependencies.html":{}}}],["native/globalization/ngx",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["native/ionic",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/local",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["native/network",{"_index":2619,"title":{},"body":{"dependencies.html":{}}}],["native/network/ngx",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["native/screen",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"dependencies.html":{}}}],["native/social",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/splash",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/zip",{"_index":2622,"title":{},"body":{"dependencies.html":{}}}],["native/zip/ngx",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["navanimation",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["navigatetochildren",{"_index":2365,"title":{},"body":{"components/TrekMapPage.html":{}}}],["navigatetochildren(id",{"_index":2373,"title":{},"body":{"components/TrekMapPage.html":{}}}],["navigatetotrek",{"_index":1345,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigatetotrek(id",{"_index":1872,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigation",{"_index":597,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["navigator",{"_index":2531,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.geolocation.getcurrentposition",{"_index":1167,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":1147,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["navigator.language.slice(0",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["navparams",{"_index":1198,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TreksOrderComponent.html":{}}}],["nb",{"_index":895,"title":{},"body":{"components/FiltersComponent.html":{}}}],["nbtemporaryfilterstreks",{"_index":795,"title":{},"body":{"components/FiltersComponent.html":{}}}],["need",{"_index":1445,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["negligence",{"_index":2908,"title":{},"body":{"license.html":{}}}],["network",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["networks",{"_index":529,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["new",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["next",{"_index":1272,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"guards/TrekContextResolver.html":{}}}],["next.handle(req).pipe",{"_index":1309,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ngdocheck",{"_index":622,"title":{},"body":{"components/FilterComponent.html":{}}}],["ngmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ngonchanges",{"_index":941,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngonchanges(changes",{"_index":957,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngondestroy",{"_index":805,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngoninit",{"_index":430,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["noanimation",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["noanimation(animationc",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["node.js",{"_index":2705,"title":{},"body":{"index.html":{}}}],["none",{"_index":2057,"title":{},"body":{"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["nonetwork",{"_index":2450,"title":{},"body":{"components/TreksMapPage.html":{}}}],["notice",{"_index":2864,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2658,"title":{},"body":{"dependencies.html":{}}}],["notifications",{"_index":929,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["notifications'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["notifications.component",{"_index":2152,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifications.component.html",{"_index":931,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":930,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":927,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications.component.ts:123",{"_index":956,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:129",{"_index":955,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:133",{"_index":953,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:176",{"_index":963,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:32",{"_index":966,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:33",{"_index":965,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:34",{"_index":968,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:35",{"_index":948,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:36",{"_index":949,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:37",{"_index":950,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:38",{"_index":947,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:41",{"_index":969,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:42",{"_index":967,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:43",{"_index":964,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:48",{"_index":962,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:71",{"_index":959,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:84",{"_index":961,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:94",{"_index":951,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications/geolocate",{"_index":926,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications/ngx",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["notificationsmodeisactive",{"_index":936,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notificationtext",{"_index":1081,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notificationtitle",{"_index":1114,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notifiedindex",{"_index":1022,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notify",{"_index":3009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nowrap",{"_index":2310,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["npm",{"_index":2706,"title":{},"body":{"index.html":{}}}],["null",{"_index":339,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["numberofactivefilters",{"_index":738,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksMapPage.html":{}}}],["numstage",{"_index":2220,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["nvm",{"_index":2710,"title":{},"body":{"index.html":{}}}],["object",{"_index":1160,"title":{},"body":{"injectables/GeolocateService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.cache).length",{"_index":383,"title":{},"body":{"injectables/CacheService.html":{}}}],["observable",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"interfaces/TreksService.html":{}}}],["observable.create",{"_index":1452,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["observable.pipe",{"_index":413,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer",{"_index":405,"title":{},"body":{"injectables/CacheService.html":{},"components/MapTreksVizComponent.html":{}}}],["observer.complete",{"_index":1461,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["of('connectionerror",{"_index":1659,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["of(null",{"_index":2333,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["official",{"_index":2760,"title":{},"body":{"index.html":{}}}],["offline",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["offline/:trekid",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offline/:trekid/:stageid",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offlinemapconfig",{"_index":2959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offlinetreks",{"_index":811,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["offlinetreksservice",{"_index":812,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["offset",{"_index":1508,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["on('click",{"_index":984,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["on(backgroundgeolocationevents.location",{"_index":1142,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["on(backgroundgeolocationevents.start",{"_index":1129,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["onchanges",{"_index":928,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ondestroy",{"_index":791,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["one",{"_index":2348,"title":{},"body":{"guards/TrekContextResolver.html":{},"index.html":{}}}],["oninit",{"_index":420,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["online",{"_index":2942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinebaseurl",{"_index":2724,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["onlinemapconfig",{"_index":2941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinetreks",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["onlinetrekserror",{"_index":1687,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["onlinetreksservice",{"_index":28,"title":{"injectables/OnlineTreksService.html":{}},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["onsameurlnavigation",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["opacity",{"_index":2991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":2832,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["openjdk",{"_index":2753,"title":{},"body":{"index.html":{}}}],["openselect",{"_index":624,"title":{},"body":{"components/FilterComponent.html":{}}}],["opensource",{"_index":2837,"title":{},"body":{"index.html":{}}}],["openstreetmap",{"_index":2966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opentopomap",{"_index":2967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options).pipe",{"_index":390,"title":{},"body":{"injectables/CacheService.html":{}}}],["oracle",{"_index":2761,"title":{},"body":{"index.html":{}}}],["order",{"_index":558,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["order!.type",{"_index":2528,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order'},{'name",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["order.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["order.component.html",{"_index":2511,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.scss",{"_index":2510,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts",{"_index":2509,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:22",{"_index":2523,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:23",{"_index":2522,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:24",{"_index":2516,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:38",{"_index":2517,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:48",{"_index":2520,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:98",{"_index":2518,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.name",{"_index":2533,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.type",{"_index":765,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["order.value",{"_index":766,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["order/treks",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["ordering",{"_index":2046,"title":{},"body":{"injectables/SettingsService.html":{}}}],["orders",{"_index":2514,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["ordervalue",{"_index":2521,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["orientation",{"_index":2614,"title":{},"body":{"dependencies.html":{}}}],["orientation/ngx",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{}}}],["originaltrek",{"_index":600,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["others",{"_index":2756,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":2909,"title":{},"body":{"license.html":{}}}],["out",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1493,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":481,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["outputs",{"_index":474,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["overflow",{"_index":2308,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["overlap",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":2920,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2768,"title":{},"body":{"index.html":{}}}],["package",{"_index":2604,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":2314,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["pages/tabs/tabs.module#tabspagemodule",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/trek",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paint",{"_index":1498,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["parc",{"_index":2843,"title":{},"body":{"index.html":{}}}],["parent",{"_index":2342,"title":{},"body":{"guards/TrekContextResolver.html":{},"miscellaneous/variables.html":{}}}],["parentid",{"_index":585,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parenttrek",{"_index":605,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parking",{"_index":2784,"title":{},"body":{"index.html":{}}}],["parking_location",{"_index":540,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parkingiconsize",{"_index":2975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":2881,"title":{},"body":{"license.html":{}}}],["path",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["pathmatch",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["permissions",{"_index":1040,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["permitted",{"_index":2856,"title":{},"body":{"license.html":{}}}],["persmissionsconfirm",{"_index":1037,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["persmissionsconfirm.present",{"_index":1051,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["personal",{"_index":2725,"title":{},"body":{"index.html":{}}}],["phone",{"_index":549,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["photo_url",{"_index":550,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picto",{"_index":2303,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["pictogram",{"_index":565,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picture",{"_index":517,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["picture!.author",{"_index":1789,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture!.legend",{"_index":1788,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture.url",{"_index":1733,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["pictures",{"_index":516,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pipe",{"_index":761,"title":{"pipes/LowerRoundPipe.html":{}},"body":{"injectables/FilterTreksService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"guards/TrekContextResolver.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(delay(0",{"_index":1259,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["pipe(map((ids",{"_index":1285,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["pipes",{"_index":1320,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["pipes.module",{"_index":2165,"title":{},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{}}}],["pipes.module.ts",{"_index":613,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["pipetransform",{"_index":1327,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["placeholder",{"_index":674,"title":{},"body":{"components/FilterComponent.html":{}}}],["placement",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["platforms",{"_index":2827,"title":{},"body":{"index.html":{}}}],["play",{"_index":2641,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["plugin",{"_index":2626,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["poi",{"_index":139,"title":{"interfaces/Poi.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["poi'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["poi.component",{"_index":2439,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["poi.component.html",{"_index":1760,"title":{},"body":{"components/PoiComponent.html":{},"components/SelectPoiComponent.html":{}}}],["poi.component.scss",{"_index":1759,"title":{},"body":{"components/PoiComponent.html":{},"components/SelectPoiComponent.html":{}}}],["poi.component.ts",{"_index":1967,"title":{},"body":{"components/SelectPoiComponent.html":{},"coverage.html":{}}}],["poi.component.ts:10",{"_index":1974,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:11",{"_index":1973,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:16",{"_index":1972,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:20",{"_index":1976,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:22",{"_index":1975,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:26",{"_index":1977,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.component.ts:30",{"_index":1979,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.name",{"_index":1984,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["poi.properties.email",{"_index":1792,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.name",{"_index":1790,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0].author",{"_index":1831,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0]?.legend",{"_index":1830,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.website",{"_index":1793,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi/select",{"_index":1966,"title":{},"body":{"components/SelectPoiComponent.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["poi_types",{"_index":1827,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poicollapseinitialsize",{"_index":3015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poicomponent",{"_index":136,"title":{"components/PoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poidetailscomponent",{"_index":138,"title":{"components/PoiDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poiimg",{"_index":1801,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["point",{"_index":498,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["point(a.geometry.coordinates",{"_index":728,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point(b.geometry.coordinates",{"_index":731,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point(feature.coordinates",{"_index":1025,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(fromcoordinates",{"_index":1021,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(userlocation",{"_index":729,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point).coordinates",{"_index":1538,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count",{"_index":1497,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count_abbreviated",{"_index":1505,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointreferencelayersproperties",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["points",{"_index":1399,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["points_reference",{"_index":543,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pois",{"_index":572,"title":{"interfaces/Pois.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["poislayersproperties",{"_index":2979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popover",{"_index":2412,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popover.dismiss",{"_index":2414,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popovercontroller",{"_index":2368,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["popoverctrl",{"_index":2367,"title":{},"body":{"components/TrekMapPage.html":{}}}],["position",{"_index":1168,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["position.coords.latitude",{"_index":1149,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["position.coords.longitude",{"_index":1148,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["possibility",{"_index":2914,"title":{},"body":{"license.html":{}}}],["postal_code",{"_index":551,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practical_info",{"_index":573,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice",{"_index":511,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practices",{"_index":1337,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.foreach((practice",{"_index":1455,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.length",{"_index":1460,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pratiques",{"_index":1791,"title":{},"body":{"components/PoiComponent.html":{}}}],["presentconfirmfeatures",{"_index":1341,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentconfirmfeatures(features",{"_index":1360,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentdeleteconfirm",{"_index":2219,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentdeleteconfirm(isalert",{"_index":2235,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentfilters",{"_index":2454,"title":{},"body":{"components/TreksMapPage.html":{}}}],["presentinappdisclosure",{"_index":1342,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TreksOrderComponent.html":{}}}],["presentinformationdeskdetails",{"_index":2366,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentinformationdeskdetails(informationdesk",{"_index":2376,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentpersmissionsconfirm",{"_index":942,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["presentpoidetails",{"_index":945,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["presentpoidetails(poi",{"_index":2378,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentsearch",{"_index":2455,"title":{},"body":{"components/TreksMapPage.html":{}}}],["prevent",{"_index":1254,"title":{},"body":{"components/LoaderComponent.html":{}}}],["previous",{"_index":2344,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["previously",{"_index":2828,"title":{},"body":{"index.html":{}}}],["primary",{"_index":2796,"title":{},"body":{"index.html":{}}}],["primarycolor",{"_index":2601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["priority",{"_index":978,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["private",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["problem",{"_index":1569,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["proceeding",{"_index":2701,"title":{},"body":{"index.html":{}}}],["procurement",{"_index":2894,"title":{},"body":{"license.html":{}}}],["prod",{"_index":2762,"title":{},"body":{"index.html":{}}}],["production",{"_index":2936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":541,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["profits",{"_index":2898,"title":{},"body":{"license.html":{}}}],["progress",{"_index":910,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["progress'},{'name",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["progress.component.html",{"_index":1837,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progress.component.scss",{"_index":1836,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progressbarwidth",{"_index":1244,"title":{},"body":{"components/LoaderComponent.html":{}}}],["progresscomponent",{"_index":140,"title":{"components/ProgressComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1165,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["promise.resolve(new",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["properties",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["property",{"_index":539,"title":{"interfaces/Property.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["property.values.find((value",{"_index":2082,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyname",{"_index":2028,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyvalue",{"_index":2081,"title":{},"body":{"injectables/SettingsService.html":{}}}],["protected",{"_index":797,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["provide",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2815,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":362,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["providers",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"components/SearchComponent.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["public",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["publishreplay",{"_index":357,"title":{},"body":{"injectables/CacheService.html":{}}}],["publishreplay(1",{"_index":402,"title":{},"body":{"injectables/CacheService.html":{}}}],["pulse",{"_index":1470,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["purpose",{"_index":2882,"title":{},"body":{"license.html":{}}}],["radiopois",{"_index":1970,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["radiotreks",{"_index":1548,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SelectTrekComponent.html":{}}}],["radiotreks.push(trek",{"_index":1557,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["radius",{"_index":1517,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["rando",{"_index":2698,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":561,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{}}}],["raster",{"_index":2944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["redistribution",{"_index":2852,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":2860,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1840,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["refcount",{"_index":358,"title":{},"body":{"injectables/CacheService.html":{}}}],["refresh",{"_index":1613,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["refreshdelay",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{}}}],["regexp",{"_index":2113,"title":{},"body":{"injectables/SettingsService.html":{}}}],["regexp(`src=\"${this.apiurl",{"_index":2114,"title":{},"body":{"injectables/SettingsService.html":{}}}],["registerlocaledata",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localefr",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":1507,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["reject",{"_index":1166,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["release",{"_index":2644,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["releaseandroid",{"_index":2763,"title":{},"body":{"index.html":{}}}],["releasecustomization",{"_index":2764,"title":{},"body":{"index.html":{}}}],["reload",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remove",{"_index":2826,"title":{},"body":{"index.html":{}}}],["removetrek",{"_index":2266,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["replace(/src\\=\\\"\\//gi",{"_index":2119,"title":{},"body":{"injectables/SettingsService.html":{}}}],["replace(regexp",{"_index":2118,"title":{},"body":{"injectables/SettingsService.html":{}}}],["replaysubject",{"_index":373,"title":{},"body":{"injectables/CacheService.html":{}}}],["represents",{"_index":2788,"title":{},"body":{"index.html":{}}}],["reproduce",{"_index":2867,"title":{},"body":{"license.html":{}}}],["req",{"_index":1275,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.method",{"_index":1306,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.urlwithparams",{"_index":1307,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["request",{"_index":376,"title":{},"body":{"injectables/CacheService.html":{}}}],["requests",{"_index":2347,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["require('@turf/distance').default",{"_index":714,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["require('lodash.clonedeep",{"_index":1724,"title":{},"body":{"injectables/OnlineTreksService.html":{},"miscellaneous/variables.html":{}}}],["require('mapbox",{"_index":1384,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":2722,"title":{},"body":{"index.html":{}}}],["res://ic_stat_panorama",{"_index":975,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["res://icon",{"_index":973,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["reserved",{"_index":2851,"title":{},"body":{"license.html":{}}}],["reset",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":2014,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resetheading",{"_index":1087,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["resetposition",{"_index":1085,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["resize",{"_index":1447,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["resolve",{"_index":1639,"title":{},"body":{"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{}}}],["resolve(route",{"_index":1647,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["resolve(true",{"_index":1169,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["resources",{"_index":2814,"title":{},"body":{"index.html":{}}}],["resources/icon.png",{"_index":2800,"title":{},"body":{"index.html":{}}}],["resources/splash.png",{"_index":2804,"title":{},"body":{"index.html":{}}}],["resourcesother",{"_index":2813,"title":{},"body":{"index.html":{}}}],["response",{"_index":375,"title":{},"body":{"injectables/CacheService.html":{}}}],["ressources",{"_index":2780,"title":{},"body":{"index.html":{}}}],["result",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2862,"title":{},"body":{"license.html":{}}}],["retry",{"_index":475,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["return",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["returs",{"_index":1731,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["revoke",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoked",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking(observable",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{}}}],["rgba(189",{"_index":907,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["right",{"_index":1581,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["rights",{"_index":2850,"title":{},"body":{"license.html":{}}}],["rm",{"_index":2829,"title":{},"body":{"index.html":{}}}],["roboto",{"_index":1506,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":1045,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["root'},{'name",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["roughly",{"_index":2808,"title":{},"body":{"index.html":{}}}],["round.pipe",{"_index":615,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["round.pipe.ts",{"_index":1322,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"coverage.html":{}}}],["round.pipe.ts:5",{"_index":1326,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["route",{"_index":522,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["route.data['isstage",{"_index":2323,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["route.data['offline",{"_index":2322,"title":{},"body":{"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["route.parammap.get('moreitemid",{"_index":1653,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["route.parammap.get('stageid",{"_index":2326,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["route.parammap.get('trekid",{"_index":2324,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["router",{"_index":1616,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["routereusestrategy",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["routerlink",{"_index":2216,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["routermodule",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["routermodule.forchild",{"_index":2539,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":1640,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":293,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2730,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1637,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["rxjs",{"_index":355,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":500,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["rxjs/internal/observable/of",{"_index":1682,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/observable/throwerror",{"_index":1683,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/subscription",{"_index":2473,"title":{},"body":{"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["rxjs/operators",{"_index":361,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksMapPage.html":{}}}],["savefiltersstate",{"_index":2015,"title":{},"body":{"injectables/SettingsService.html":{}}}],["savefiltersstate(filters",{"_index":2033,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate",{"_index":2016,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate(order",{"_index":2035,"title":{},"body":{"injectables/SettingsService.html":{}}}],["screen",{"_index":913,"title":{},"body":{"components/FiltersComponent.html":{},"dependencies.html":{}}}],["screen's",{"_index":2806,"title":{},"body":{"index.html":{}}}],["screen/ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["screenorientation",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["screens",{"_index":2802,"title":{},"body":{"index.html":{}}}],["sdk",{"_index":2742,"title":{},"body":{"index.html":{}}}],["search",{"_index":1856,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{}}}],["search'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["search(searchvalue",{"_index":1875,"title":{},"body":{"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{}}}],["search(treks",{"_index":1909,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["search.component.html",{"_index":1858,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1857,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.noresult",{"_index":1907,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.title",{"_index":1904,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcomponent",{"_index":142,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchtreks",{"_index":1865,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchtreksservice",{"_index":1855,"title":{"injectables/SearchTreksService.html":{}},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["searchvalue",{"_index":1877,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{}}}],["searchvalue.tolowercase",{"_index":1960,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["searchvaluesinfilter",{"_index":1924,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["searchvaluesinfilter(filter",{"_index":1935,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["secondary",{"_index":1047,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["select",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["selectchange",{"_index":627,"title":{},"body":{"components/FilterComponent.html":{}}}],["selecteditems",{"_index":621,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["selecteditems.join",{"_index":670,"title":{},"body":{"components/FilterComponent.html":{}}}],["selecteditems.push(filtervalue.name",{"_index":668,"title":{},"body":{"components/FilterComponent.html":{}}}],["selectedpoichange",{"_index":1969,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["selectedpoichange(evt",{"_index":1978,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["selectedpoiid",{"_index":1968,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["selectedtrekchange",{"_index":1991,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["selectedtrekchange(evt",{"_index":1997,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["selectedtrekid",{"_index":1990,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["selectfiltercomponent",{"_index":144,"title":{"components/SelectFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["selectpoicomponent",{"_index":146,"title":{"components/SelectPoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selecttrekcomponent",{"_index":147,"title":{"components/SelectTrekComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sending",{"_index":381,"title":{},"body":{"injectables/CacheService.html":{}}}],["sent",{"_index":395,"title":{},"body":{"injectables/CacheService.html":{}}}],["serverun",{"_index":2729,"title":{},"body":{"index.html":{}}}],["service",{"_index":1283,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.getvalue",{"_index":1289,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.next(isloading",{"_index":1290,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["services",{"_index":2642,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["services.json",{"_index":2821,"title":{},"body":{"index.html":{}}}],["set",{"_index":391,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["setlnglat(coordinates",{"_index":1473,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["setofflinesettings",{"_index":2017,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setting.id",{"_index":1826,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings",{"_index":29,"title":{"interfaces/Settings.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["settings.data",{"_index":2065,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.data.find",{"_index":2068,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters",{"_index":2064,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters$.pipe",{"_index":756,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["settings.filters.foreach((filter",{"_index":2066,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.find((setting",{"_index":1825,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings.json",{"_index":2072,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":30,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["settingssub",{"_index":1802,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["setup",{"_index":2735,"title":{},"body":{"index.html":{}}}],["shall",{"_index":2884,"title":{},"body":{"license.html":{}}}],["sharedfiltersmodule",{"_index":919,"title":{"modules/SharedFiltersModule.html":{}},"body":{"modules/FiltersComponentModule.html":{},"modules/SharedFiltersModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule",{"_index":2146,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedtreksmodule",{"_index":2155,"title":{"modules/SharedTreksModule.html":{}},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shareduimodule",{"_index":1633,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharing",{"_index":2620,"title":{},"body":{"dependencies.html":{}}}],["sharing/ngx",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["shouldshowinappdisclosure",{"_index":1063,"title":{},"body":{"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TreksOrderComponent.html":{}}}],["showalldata",{"_index":2221,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["showalllabel",{"_index":438,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["showappsettings",{"_index":1064,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["showcompass",{"_index":1431,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["showimgrulesifparkcentered",{"_index":3019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showlocationsettings",{"_index":1065,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["silent",{"_index":979,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["simplechange",{"_index":970,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["simplechanges",{"_index":958,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["size",{"_index":482,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["slug",{"_index":542,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["smallicon",{"_index":974,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["socialsharing",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["software",{"_index":2871,"title":{},"body":{"license.html":{}}}],["sort",{"_index":688,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(filteredtreks",{"_index":707,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(function(a",{"_index":1917,"title":{},"body":{"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sources",{"_index":2950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2301,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["spacing",{"_index":2430,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":2890,"title":{},"body":{"license.html":{}}}],["splash",{"_index":2801,"title":{},"body":{"index.html":{}}}],["splashscreen",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["sqlite",{"_index":2668,"title":{},"body":{"dependencies.html":{}}}],["square",{"_index":2811,"title":{},"body":{"index.html":{}}}],["src",{"_index":1550,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{}}}],["src/.../app.module.ts",{"_index":2691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter",{"_index":2930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../geolocate",{"_index":2929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":2925,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../map",{"_index":2933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../offline",{"_index":2927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../online",{"_index":2928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unsubscribe.ts",{"_index":2692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../variables.ts",{"_index":2934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts",{"_index":2554,"title":{},"body":{"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts:11",{"_index":2557,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:17",{"_index":2556,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:5",{"_index":2555,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/collapsible",{"_index":416,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["src/app/components/connect",{"_index":464,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/filter",{"_index":767,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts",{"_index":616,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts:20",{"_index":633,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:21",{"_index":632,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:22",{"_index":635,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:26",{"_index":634,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:27",{"_index":646,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:28",{"_index":645,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:29",{"_index":631,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:33",{"_index":637,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:37",{"_index":636,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:47",{"_index":643,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:57",{"_index":638,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:74",{"_index":640,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filters/filters.component.ts",{"_index":789,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/components/filters/filters.component.ts:100",{"_index":817,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:108",{"_index":816,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:112",{"_index":829,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:116",{"_index":830,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:122",{"_index":824,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:127",{"_index":827,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:18",{"_index":841,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:19",{"_index":838,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:20",{"_index":834,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:21",{"_index":835,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:22",{"_index":837,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:23",{"_index":813,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:27",{"_index":839,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:35",{"_index":825,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:39",{"_index":823,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:67",{"_index":819,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:83",{"_index":822,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:94",{"_index":815,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.module.ts",{"_index":920,"title":{},"body":{"modules/FiltersComponentModule.html":{}}}],["src/app/components/geolocate",{"_index":925,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/in",{"_index":1170,"title":{},"body":{"components/InAppDisclosureComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":1191,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/layers",{"_index":1218,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":1238,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:12",{"_index":1249,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":1248,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:14",{"_index":1251,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":1247,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:17",{"_index":1252,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:24",{"_index":1250,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/map",{"_index":1329,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/poi",{"_index":1800,"title":{},"body":{"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts",{"_index":1758,"title":{},"body":{"components/PoiComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts:20",{"_index":1767,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:21",{"_index":1766,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:22",{"_index":1765,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:23",{"_index":1768,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:25",{"_index":1770,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:26",{"_index":1773,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:27",{"_index":1764,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:30",{"_index":1771,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:31",{"_index":1772,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:34",{"_index":1769,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/progress/progress.component.ts",{"_index":1834,"title":{},"body":{"components/ProgressComponent.html":{},"coverage.html":{}}}],["src/app/components/progress/progress.component.ts:16",{"_index":1845,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:17",{"_index":1842,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:20",{"_index":1846,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:24",{"_index":1843,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:33",{"_index":1844,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/search/search.component.ts",{"_index":1854,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:24",{"_index":1882,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:25",{"_index":1881,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:26",{"_index":1885,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:27",{"_index":1883,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:28",{"_index":1884,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:29",{"_index":1866,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:43",{"_index":1874,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:47",{"_index":1871,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:65",{"_index":1867,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:69",{"_index":1876,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:81",{"_index":1873,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:85",{"_index":1879,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:89",{"_index":1869,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/select",{"_index":1918,"title":{},"body":{"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"coverage.html":{}}}],["src/app/components/trek",{"_index":2210,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["src/app/components/treks",{"_index":2508,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces.ts",{"_index":488,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/interfaces.ts:256",{"_index":2547,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:257",{"_index":2542,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:258",{"_index":2544,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:262",{"_index":2546,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:266",{"_index":2552,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:267",{"_index":2548,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:268",{"_index":2549,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:269",{"_index":2551,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:270",{"_index":2550,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:271",{"_index":2541,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:272",{"_index":2540,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/pages/more/more",{"_index":1604,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"coverage.html":{}}}],["src/app/pages/more/more.module.ts",{"_index":1678,"title":{},"body":{"modules/MorePageModule.html":{}}}],["src/app/pages/more/more.page.ts",{"_index":1660,"title":{},"body":{"components/MorePage.html":{},"coverage.html":{}}}],["src/app/pages/more/more.page.ts:14",{"_index":1670,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:15",{"_index":1669,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:16",{"_index":1665,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:22",{"_index":1666,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:37",{"_index":1667,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/tabs/tabs.module.ts",{"_index":2193,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/pages/tabs/tabs.page.ts",{"_index":2175,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/pages/tabs/tabs.page.ts:10",{"_index":2179,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/pages/tabs/tabs.routing.module.ts",{"_index":2198,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/pages/trek",{"_index":2354,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks",{"_index":2447,"title":{},"body":{"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks/treks.module.ts",{"_index":2537,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["src/app/pages/treks/treks.page.ts",{"_index":2593,"title":{},"body":{"coverage.html":{}}}],["src/app/pipes/lower",{"_index":1321,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"coverage.html":{}}}],["src/app/resolvers/more",{"_index":1643,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts",{"_index":1680,"title":{},"body":{"guards/MoreResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts:16",{"_index":1681,"title":{},"body":{"guards/MoreResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts",{"_index":2318,"title":{},"body":{"guards/TrekContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/trek.resolver.ts:27",{"_index":2319,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts:38",{"_index":2320,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts",{"_index":2440,"title":{},"body":{"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/treks.resolver.ts:13",{"_index":2442,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts:21",{"_index":2443,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/services/cache/cache.service.ts",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/app/services/cache/cache.service.ts:10",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:11",{"_index":351,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:12",{"_index":347,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:13",{"_index":353,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:14",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:34",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:68",{"_index":340,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/filter",{"_index":678,"title":{},"body":{"injectables/FilterTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/geolocate/geolocate.service.ts",{"_index":1054,"title":{},"body":{"injectables/GeolocateService.html":{},"coverage.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:135",{"_index":1086,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:158",{"_index":1080,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:223",{"_index":1083,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:23",{"_index":1092,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:232",{"_index":1074,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:24",{"_index":1090,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:25",{"_index":1091,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:250",{"_index":1077,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:254",{"_index":1078,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:258",{"_index":1075,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:26",{"_index":1071,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:29",{"_index":1088,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:30",{"_index":1093,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:31",{"_index":1095,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:32",{"_index":1094,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:36",{"_index":1076,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:43",{"_index":1072,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:48",{"_index":1073,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:53",{"_index":1082,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/loading/loading.service.ts",{"_index":1267,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading/loading.service.ts:16",{"_index":1319,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:18",{"_index":1315,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:32",{"_index":1316,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:38",{"_index":1317,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:49",{"_index":1318,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:59",{"_index":1269,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/loading/loading.service.ts:62",{"_index":1274,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/more",{"_index":1584,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["src/app/services/offline",{"_index":2596,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/online",{"_index":1686,"title":{},"body":{"injectables/OnlineTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/search",{"_index":1908,"title":{},"body":{"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts",{"_index":2005,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts:104",{"_index":2023,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:113",{"_index":2030,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:117",{"_index":2029,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:127",{"_index":2034,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:131",{"_index":2036,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:135",{"_index":2032,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:147",{"_index":2027,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:168",{"_index":2022,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:251",{"_index":2025,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:31",{"_index":2038,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:33",{"_index":2039,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:34",{"_index":2041,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:39",{"_index":2044,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:40",{"_index":2018,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:43",{"_index":2040,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:44",{"_index":2042,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:50",{"_index":2031,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:75",{"_index":2037,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:83",{"_index":2020,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/custom",{"_index":612,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["src/app/shared/shared",{"_index":2139,"title":{},"body":{"modules/SharedFiltersModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2150,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/assets/i18n",{"_index":2778,"title":{},"body":{"index.html":{}}}],["src/assets/map/icons",{"_index":2782,"title":{},"body":{"index.html":{}}}],["src/assets/map/zone/zone.geojson",{"_index":2785,"title":{},"body":{"index.html":{}}}],["src/environments/environment.prod.ts",{"_index":2598,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2599,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/variables.ts",{"_index":2600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/theme/variables.scss",{"_index":2792,"title":{},"body":{"index.html":{}}}],["src=\"${commonsrc",{"_index":2120,"title":{},"body":{"injectables/SettingsService.html":{}}}],["stage",{"_index":2343,"title":{},"body":{"guards/TrekContextResolver.html":{},"miscellaneous/variables.html":{}}}],["stageid",{"_index":2325,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["stagepaint",{"_index":2986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":2305,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["started",{"_index":2694,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startersrc/environments/environment.ts",{"_index":2771,"title":{},"body":{"index.html":{}}}],["startforeground",{"_index":1120,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startlocation",{"_index":1131,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.latitude",{"_index":1139,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.longitude",{"_index":1138,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startnotificationsmodetracking",{"_index":1066,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startnotificationsmodetracking(notificationtext",{"_index":1079,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startonmaptracking",{"_index":1067,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["state",{"_index":1280,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["statements",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":682,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{}}}],["stationaryradius",{"_index":3012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":1102,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TreksMapPage.html":{}}}],["status.authorization",{"_index":1104,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["status.isrunning",{"_index":1105,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["statusbar",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["stopnotificationsmodetracking",{"_index":1068,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoponmaptracking",{"_index":1069,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoponmaptracking(resetheading",{"_index":1084,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoponterminate",{"_index":1121,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["storage",{"_index":1058,"title":{},"body":{"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"injectables/SettingsService.html":{},"dependencies.html":{}}}],["store",{"_index":2820,"title":{},"body":{"index.html":{}}}],["stores",{"_index":398,"title":{},"body":{"injectables/CacheService.html":{}}}],["street",{"_index":552,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["strict",{"_index":2906,"title":{},"body":{"license.html":{}}}],["string",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":2947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":415,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["styleurls",{"_index":424,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["subheader",{"_index":1572,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["subscribe",{"_index":985,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["subscribe(([filteredtreks",{"_index":2490,"title":{},"body":{"components/TreksMapPage.html":{}}}],["subscribe((data",{"_index":1112,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["subscribe((isloading",{"_index":1287,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["subscribe((location",{"_index":1143,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["subscribe((status",{"_index":1260,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["subscribe(async",{"_index":1036,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{}}}],["subscribed",{"_index":409,"title":{},"body":{"injectables/CacheService.html":{}}}],["subscription",{"_index":836,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["subscription.unsubscribe",{"_index":2561,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["subscriptions",{"_index":798,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["substitute",{"_index":2895,"title":{},"body":{"license.html":{}}}],["such",{"_index":2915,"title":{},"body":{"license.html":{}}}],["super",{"_index":847,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["super.ngondestroy",{"_index":888,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["super.ngoninit",{"_index":848,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["support",{"_index":2670,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":2702,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2917,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1501,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["system",{"_index":2758,"title":{},"body":{"index.html":{}}}],["t",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{}}}],["tabbar.more",{"_index":2186,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.offline",{"_index":2185,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.treks",{"_index":2184,"title":{},"body":{"components/TabsPage.html":{}}}],["table",{"_index":2603,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2176,"title":{},"body":{"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs'},{'name",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["tabs.page",{"_index":2194,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":2178,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":2177,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.routing.module",{"_index":2195,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabspage",{"_index":149,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":2187,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tabspageroutingmodule",{"_index":2191,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":359,"title":{},"body":{"injectables/CacheService.html":{}}}],["take(1",{"_index":407,"title":{},"body":{"injectables/CacheService.html":{}}}],["tap",{"_index":360,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["tap((event",{"_index":1310,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["tap((item",{"_index":1655,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["tempfilter",{"_index":867,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempfilter.id",{"_index":868,"title":{},"body":{"components/FiltersComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["templateref",{"_index":446,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["temporaryfilter",{"_index":641,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["temporaryfilter.values",{"_index":666,"title":{},"body":{"components/FilterComponent.html":{}}}],["temporaryfilter.values.find",{"_index":870,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilterindex",{"_index":875,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters",{"_index":796,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters).length",{"_index":864,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.find",{"_index":866,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.findindex",{"_index":876,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.foreach((filter",{"_index":883,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters[temporaryfilterindex",{"_index":878,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue",{"_index":871,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue.id",{"_index":872,"title":{},"body":{"components/FiltersComponent.html":{}}}],["test",{"_index":1545,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["testing",{"_index":2831,"title":{},"body":{"index.html":{}}}],["text",{"_index":1029,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":2107,"title":{},"body":{"injectables/SettingsService.html":{}}}],["themepois",{"_index":1971,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["themes",{"_index":492,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["theory",{"_index":2902,"title":{},"body":{"license.html":{}}}],["this.activefiltersnumber",{"_index":755,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.addsourceslayersevents",{"_index":1479,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.alertcontroller.create",{"_index":1038,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.alwaysdisplayeditems",{"_index":458,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.apiurl}/${parentid}/pois/${trekid}.geojson",{"_index":1746,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${parentid}/touristic_contents/${trekid}.geojson",{"_index":1748,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${parentid}/touristic_events/${trekid}.geojson",{"_index":1750,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${parentid}/treks/${trekid}.geojson",{"_index":1744,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/pois.geojson",{"_index":1747,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/touristic_contents.geojson",{"_index":1749,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/touristic_events.geojson",{"_index":1751,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${trekid}/trek.geojson",{"_index":1745,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/flatpages.json",{"_index":1602,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.apiurl}/flatpages/${id}.json",{"_index":1603,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.apiurl}/treks.geojson",{"_index":1743,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.backgroundgeolocation",{"_index":1128,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.checkstatus",{"_index":1103,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.configure(geolocationconfig",{"_index":1127,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.getcurrentlocation",{"_index":1132,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["this.backgroundgeolocation.showappsettings",{"_index":1163,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showlocationsettings",{"_index":1164,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.start",{"_index":1146,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.stop",{"_index":1126,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.baseurl}${this.informationdesk.picture",{"_index":1212,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.cache",{"_index":366,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.get",{"_index":1601,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["this.cache.hasownproperty(url",{"_index":382,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[revoked",{"_index":369,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[url",{"_index":388,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.changelayervisibility",{"_index":1231,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.changelayervisibility(event.detail.checked",{"_index":1235,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.checkifbackgroundgeolocationisrunning",{"_index":1125,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.checkifcangetcurrentheading",{"_index":1106,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.checknetwork",{"_index":2476,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.checktonotify(coordinates",{"_index":1014,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications",{"_index":982,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications$.unsubscribe",{"_index":1000,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.close",{"_index":860,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.commonsrc",{"_index":659,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.commonsrc}${practice.pictogram",{"_index":1457,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.connectionerror",{"_index":1624,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.createmap",{"_index":1395,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.currentheading$.next(data.trueheading",{"_index":1113,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentheading$.next(null",{"_index":1155,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentheadingsubscription",{"_index":1107,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentheadingsubscription.unsubscribe",{"_index":1154,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentmaxfiltervalues",{"_index":1951,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.currentmaxtreks",{"_index":1900,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentorder",{"_index":2527,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.currentpois",{"_index":994,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["this.currentpois.features.find",{"_index":986,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpois.features.map((feature",{"_index":997,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify",{"_index":996,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.findindex",{"_index":1023,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.length",{"_index":1016,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.splice(notifiedindex",{"_index":1031,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].id",{"_index":1027,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].name",{"_index":1030,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition",{"_index":1001,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition$.next",{"_index":1137,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([location.longitude",{"_index":1144,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next(null",{"_index":1141,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.unsubscribe",{"_index":1015,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpositioninterval",{"_index":1151,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentprogress",{"_index":1847,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentprogress$.unsubscribe",{"_index":1851,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentsearchvalue",{"_index":1895,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currenttrek",{"_index":2400,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.currenttrek.properties.id",{"_index":2422,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.data$.getvalue",{"_index":2079,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(defaultsettings.data",{"_index":2063,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(settings.data",{"_index":2052,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.datasettings.find",{"_index":1453,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.deletetrek",{"_index":2279,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.deviceorientation",{"_index":1108,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.deviceorientation.getcurrentheading",{"_index":1157,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.disablegeolocationnotification",{"_index":1002,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.enablegeolocationnotification",{"_index":1009,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.expandableitems",{"_index":461,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.expanded",{"_index":456,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.filter",{"_index":658,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["this.filter.values",{"_index":1949,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.filter.values.find((value",{"_index":652,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.filteredtreks",{"_index":1400,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["this.filteredtreks.foreach((feature",{"_index":1415,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.filteredtreks.length",{"_index":1901,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filters",{"_index":856,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters$.next(filters",{"_index":2075,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(defaultsettings",{"_index":2062,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(settings",{"_index":2051,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filterssubscription",{"_index":854,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filterssubscription.unsubscribe",{"_index":887,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filtertreks.activefiltersnumber",{"_index":2489,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.filtertreks.getfilteredtreks(this.treks",{"_index":1725,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.filtervaluesbystep",{"_index":1953,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.firebaseanalytics.setcurrentscreen",{"_index":2341,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.firebaseanalytics.setcurrentscreen(`${item.title",{"_index":1657,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["this.firebaseanalytics.setcurrentscreen(`information",{"_index":1685,"title":{},"body":{"guards/MoreResolver.html":{}}}],["this.firebaseanalytics.setcurrentscreen(`treks",{"_index":2446,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["this.flytouserlocation",{"_index":1388,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.checkauthorization",{"_index":1004,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.checkifcangetcurrentheading",{"_index":1468,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.currentheading$.subscribe((heading",{"_index":1475,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.currentposition",{"_index":1462,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.currentposition$.subscribe",{"_index":1013,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.getcurrentposition",{"_index":1560,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.shouldshowinappdisclosure",{"_index":1480,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TreksOrderComponent.html":{}}}],["this.geolocate.showappsettings",{"_index":1050,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.startnotificationsmodetracking(this.trekname",{"_index":1007,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.startonmaptracking",{"_index":1012,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.geolocate.stopnotificationsmodetracking",{"_index":1011,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.stoponmaptracking",{"_index":1405,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.stoponmaptracking(false",{"_index":1006,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.getcurrentposition",{"_index":1150,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.getsettings().subscribe(async",{"_index":2048,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettreks().subscribe",{"_index":1727,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.getvalueforpropertybyid",{"_index":2086,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('cities",{"_index":2099,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('networks",{"_index":2103,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('themes",{"_index":2108,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getzonefromurl().subscribe",{"_index":2053,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.globalization.getpreferredlanguage",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hits",{"_index":367,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[revoked",{"_index":370,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[url",{"_index":396,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.http.get",{"_index":1742,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.http.get(this.apiurl",{"_index":2071,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.http.get(url",{"_index":389,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hydratedtrek",{"_index":2246,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice",{"_index":2251,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice.pictogram",{"_index":2253,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgpracticesrc",{"_index":2252,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgsrc",{"_index":2249,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.informationdesk",{"_index":1208,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdesk.picture",{"_index":1210,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdeskpicture",{"_index":1211,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.initializeapp",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initialsize",{"_index":460,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.initialstate",{"_index":457,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.isinview",{"_index":2492,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.isonline",{"_index":849,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.isstage",{"_index":2255,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.items.length",{"_index":463,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice",{"_index":462,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(0",{"_index":459,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.layers",{"_index":1233,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.loaderstatus",{"_index":1257,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loaderstatus$.unsubscribe",{"_index":1261,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loading.begin('trek",{"_index":2393,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.begin('treks",{"_index":2477,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.begin(loadingid",{"_index":1308,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.finish",{"_index":2345,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.loading.finish('trek",{"_index":2395,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.finish('treks",{"_index":2497,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.finish(loadingid",{"_index":1312,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.status",{"_index":1258,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loadingcontroller.create",{"_index":2263,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.loadingids",{"_index":1284,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.getvalue",{"_index":1293,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next",{"_index":1297,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next(ids",{"_index":1295,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe",{"_index":1302,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.localnotifications",{"_index":983,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.haspermission",{"_index":1008,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.requestpermission",{"_index":1010,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.schedule",{"_index":1026,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.setdefaults",{"_index":972,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.location.back",{"_index":2183,"title":{},"body":{"components/TabsPage.html":{},"components/TrekMapPage.html":{}}}],["this.map",{"_index":1396,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addcontrol",{"_index":1429,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addimage(practice.id.tostring",{"_index":1459,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addlayer",{"_index":1490,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('treks",{"_index":1482,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('zone",{"_index":1488,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.dragrotate.disable",{"_index":1442,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.easeto",{"_index":1539,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.fitbounds(bounds",{"_index":1427,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.flyto",{"_index":1561,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getsource",{"_index":1528,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getsource('treks",{"_index":1398,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getzoom",{"_index":1526,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.loadimage",{"_index":1456,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('click",{"_index":1519,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('load",{"_index":1450,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.queryrenderedfeatures(e.point",{"_index":1521,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.remove",{"_index":1404,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.resize",{"_index":1449,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.touchzoomrotate.disablerotation",{"_index":1443,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig",{"_index":1406,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.mapconfig.maxzoom",{"_index":1484,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig.style",{"_index":1407,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapisloaded(false",{"_index":2483,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.mapisloaded.emit(true",{"_index":1547,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapviz.nativeelement.mapinstance",{"_index":1546,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition",{"_index":1402,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.addto(this.map",{"_index":1474,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.remove",{"_index":1403,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.setlnglat(coordinates",{"_index":1465,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.maxsize",{"_index":384,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.mergefilterstreks",{"_index":2484,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.modalcontroller.create",{"_index":656,"title":{},"body":{"components/FilterComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.modalcontroller.dismiss",{"_index":1950,"title":{},"body":{"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{}}}],["this.modalcontroller.gettop",{"_index":2415,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalctrl.dismiss",{"_index":885,"title":{},"body":{"components/FiltersComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(id",{"_index":1898,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(true",{"_index":882,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.modalpoidetails",{"_index":2417,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.dismiss",{"_index":2418,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.ondiddismiss().then",{"_index":2419,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.present",{"_index":2420,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.more.getmoreitembyid(moreitemid).pipe",{"_index":1654,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["this.more.getmoreitems().pipe",{"_index":1684,"title":{},"body":{"guards/MoreResolver.html":{}}}],["this.moreinformationsintro",{"_index":1672,"title":{},"body":{"components/MorePage.html":{}}}],["this.moreitem",{"_index":1625,"title":{},"body":{"components/MoreItemPage.html":{}}}],["this.navigatetotrek(data",{"_index":2495,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.navigatetotrek.emit(data.selectedtrekid",{"_index":1559,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navigatetotrek.emit(feature.properties.id",{"_index":1542,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navparams.get('changelayervisibility",{"_index":1232,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('commonsrc",{"_index":1819,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('informationdesk",{"_index":1209,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.navparams.get('isonline",{"_index":1888,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.navparams.get('layers",{"_index":1234,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('offline",{"_index":1818,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('orders",{"_index":2525,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.navparams.get('poi",{"_index":1817,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.nbtemporaryfilterstreks",{"_index":863,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.network.type",{"_index":2056,"title":{},"body":{"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["this.nonetwork",{"_index":2498,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.notificationsmodeisactive",{"_index":1003,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.numberofactivefilters",{"_index":2491,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.offline",{"_index":1408,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.offlinetreks",{"_index":1890,"title":{},"body":{"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.offlinetreks.currentprogressdownload$.subscribe",{"_index":1848,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.offlinetreks.getcommonimgsrc",{"_index":853,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc",{"_index":1786,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc(this.trek",{"_index":2250,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.treks",{"_index":851,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks",{"_index":1889,"title":{},"body":{"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.onlinetreks.getcommonimgsrc",{"_index":852,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc",{"_index":1787,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc(this.trek",{"_index":2254,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.onlinetreks.loadtreks",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/TreksMapPage.html":{}}}],["this.onlinetreks.onlinetrekserror$.subscribe((error",{"_index":2482,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.onlinetreks.treks",{"_index":850,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetrekserror$.next(error",{"_index":1729,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.onlinetrekserror$.next(null",{"_index":1726,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.order$.next",{"_index":2076,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.orders",{"_index":2524,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.parentid",{"_index":2267,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.picture",{"_index":1784,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(9999",{"_index":2180,"title":{},"body":{"components/TabsPage.html":{}}}],["this.platform.backbutton.subscribewithpriority(99999",{"_index":859,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["this.platform.is('android",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.is('ios",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.ready().then(async",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.poi",{"_index":1816,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties",{"_index":1820,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures",{"_index":1821,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures.length",{"_index":1783,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0",{"_index":1785,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0].url",{"_index":1822,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.type",{"_index":1776,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.popovercontroller.dismiss",{"_index":2530,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.popoverctrl.gettop",{"_index":2413,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.practices",{"_index":1454,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.practices.values.foreach((practice",{"_index":1513,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentconfirmfeatures",{"_index":1534,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentdeleteconfirm",{"_index":2260,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentdeleteconfirm(true",{"_index":2271,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentinappdisclosure",{"_index":1481,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TreksOrderComponent.html":{}}}],["this.presentpersmissionsconfirm",{"_index":1005,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.presentpoidetails.emit(poi",{"_index":989,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.ref.detectchanges",{"_index":1850,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["this.refreshdelay",{"_index":378,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit",{"_index":387,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit(revoked",{"_index":414,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.subscribe((revoked",{"_index":365,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.route.data.pipe",{"_index":2485,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.route.data.subscribe((data",{"_index":1622,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.router.navigate",{"_index":2334,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.router.url",{"_index":1626,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.trekstool.gettrekdetailsurl(id",{"_index":2496,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.router.url",{"_index":2181,"title":{},"body":{"components/TabsPage.html":{}}}],["this.routerlink",{"_index":2256,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.savefiltersstate(filters",{"_index":2078,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.screenorientation.onchange().subscribe",{"_index":1444,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.searchtreks.search",{"_index":1896,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchtreks.search(this.treks.features",{"_index":1893,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchvaluesinfilter",{"_index":1957,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.selectchange.emit",{"_index":665,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selecteditems",{"_index":669,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selectedpoiid",{"_index":1982,"title":{},"body":{"components/SelectPoiComponent.html":{}}}],["this.selectedtrekid",{"_index":1999,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["this.setofflinesettings",{"_index":2047,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settings.data$.subscribe((settings",{"_index":1824,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settings.filters",{"_index":759,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.filters$.subscribe((filters",{"_index":855,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.gethydratedtrek",{"_index":1552,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.settings.getzonefromstorage",{"_index":1489,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.settings.loadsettings",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/TreksMapPage.html":{}}}],["this.settings.order",{"_index":760,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.order$.subscribe((order",{"_index":2526,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.savefiltersstate(this.temporaryfilters$.getvalue",{"_index":881,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.saveorderstate(ordervalue",{"_index":2529,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settingsservice.gethydratedtrek",{"_index":2339,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingsservice.gettouristiccategorieswithfeatures",{"_index":2340,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingssub",{"_index":1823,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settingssub.unsubscribe",{"_index":1829,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.splashscreen.hide",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status.subscribe",{"_index":1291,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.statusbar.stylelightcontent",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get",{"_index":1101,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.storage.get('zone",{"_index":2074,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.get(`settings",{"_index":2061,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.remove('zone",{"_index":2058,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.set",{"_index":1180,"title":{},"body":{"components/InAppDisclosureComponent.html":{}}}],["this.storage.set('settings",{"_index":2049,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.set('zone",{"_index":2054,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.subscriptions",{"_index":2558,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.foreach((subscription",{"_index":2559,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.push",{"_index":858,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.subscriptions$$.push(this.mergefilterstreks",{"_index":2493,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.temporaryfilter",{"_index":1947,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.temporaryfilter.values.find",{"_index":1954,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.temporaryfilters$).subscribe",{"_index":862,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.getvalue",{"_index":865,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(filters",{"_index":857,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(temporaryfilters",{"_index":874,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.touristiccategorieswithfeatures",{"_index":2403,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.translate",{"_index":1032,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.translate.getdefaultlang",{"_index":1600,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["this.translate.setdefaultlang(defaultlanguage",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.trek",{"_index":2247,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.trek.properties.id",{"_index":2268,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.treks",{"_index":1892,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treks$.getvalue",{"_index":1752,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks$.next(data",{"_index":1728,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks.features",{"_index":1897,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treksbystep",{"_index":1902,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.trekstool",{"_index":2406,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.trekstool.getcommonimgsrc",{"_index":2481,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.gettrekdetailsurl(id",{"_index":2421,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.trekstool.gettreksurl",{"_index":2479,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.treksurl",{"_index":2478,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekurl",{"_index":2409,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.typeimgsrc",{"_index":1781,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.typepois",{"_index":1775,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.typepois.values.find",{"_index":1778,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.unsubscribefilters",{"_index":880,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.updateselecteditems(data.temporaryfilter",{"_index":664,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.updateselecteditems(this.filter",{"_index":651,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.valuechange.emit",{"_index":654,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["this.valuestodisplay",{"_index":1948,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.valuestodisplay.length",{"_index":1952,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.viewisload",{"_index":1894,"title":{},"body":{"components/SearchComponent.html":{}}}],["throttle",{"_index":1381,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throttle(this.flytouserlocation",{"_index":1389,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throttletime",{"_index":1375,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throttletime(environment.backgroundgeolocation.interval",{"_index":1464,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throw",{"_index":1533,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throwerror",{"_index":354,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["throwerror(error",{"_index":411,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["thumbnail",{"_index":538,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["tiles",{"_index":1413,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["tiles/{z}/{x}/{y}.png",{"_index":2960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiles[0",{"_index":1414,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["tilesize",{"_index":2954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":393,"title":{},"body":{"injectables/CacheService.html":{}}}],["timeout",{"_index":1133,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["title",{"_index":473,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["todo",{"_index":385,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["toggleexpandables",{"_index":431,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["toolbar.filters",{"_index":2499,"title":{},"body":{"components/TreksMapPage.html":{}}}],["toolbar.ordertitle",{"_index":2532,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["toolbar.search",{"_index":2500,"title":{},"body":{"components/TreksMapPage.html":{}}}],["tools",{"_index":2745,"title":{},"body":{"index.html":{}}}],["top",{"_index":1432,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["topo",{"_index":2945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["topromise",{"_index":1116,"title":{},"body":{"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["tort",{"_index":2907,"title":{},"body":{"license.html":{}}}],["touristiccategorie",{"_index":578,"title":{"interfaces/TouristicCategorie.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccategorieswithfeatures",{"_index":603,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["touristiccategorieswithfeatures.push",{"_index":2133,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccategorywithfeatures",{"_index":579,"title":{"interfaces/TouristicCategoryWithFeatures.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontent",{"_index":576,"title":{"interfaces/TouristicContent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["touristiccontent.properties.category",{"_index":2127,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontent_categories",{"_index":2131,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontentcollapseinitialsize",{"_index":3016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontentlayersproperties",{"_index":3004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontents",{"_index":575,"title":{"interfaces/TouristicContents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontents.features",{"_index":2125,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontents.features.filter",{"_index":2135,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristicevent",{"_index":581,"title":{"interfaces/TouristicEvent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristicevents",{"_index":580,"title":{"interfaces/TouristicEvents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trackbyfilterid",{"_index":806,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackbyfilterid(index",{"_index":826,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters",{"_index":807,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters(index",{"_index":828,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfiltervalues",{"_index":1925,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["trackfiltervalues(index",{"_index":1938,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["tracktrek",{"_index":1864,"title":{},"body":{"components/SearchComponent.html":{}}}],["tracktrek(index",{"_index":1878,"title":{},"body":{"components/SearchComponent.html":{}}}],["trad",{"_index":1028,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.asklocatepermission",{"_index":1042,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.cancel",{"_index":1044,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.open",{"_index":1048,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["transform",{"_index":1324,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"components/TreksMapPage.html":{}}}],["transform(value",{"_index":1325,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["translate",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["translate/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forchild",{"_index":924,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forroot",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{}}}],["translationtrekcard",{"_index":2261,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.askdelete",{"_index":2275,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.cancelbutton",{"_index":2277,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.confirmbutton",{"_index":2276,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletelabel",{"_index":2278,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletetitle",{"_index":2274,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletioninprogress",{"_index":2264,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.errorwhiledeleting",{"_index":2270,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.trekisdelete",{"_index":2272,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trash",{"_index":2296,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["trek",{"_index":130,"title":{"interfaces/Trek.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trek'},{'name",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["trek.bbox",{"_index":1756,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.component",{"_index":1377,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/TreksMapPageModule.html":{}}}],["trek.component.html",{"_index":1989,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.scss",{"_index":1988,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts",{"_index":1987,"title":{},"body":{"components/SelectTrekComponent.html":{},"coverage.html":{}}}],["trek.component.ts:10",{"_index":1993,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:15",{"_index":1992,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:19",{"_index":1995,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:21",{"_index":1994,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:25",{"_index":1996,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.component.ts:29",{"_index":1998,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.details.contact",{"_index":1833,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.details.informationdesk.website",{"_index":1216,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["trek.details.stage",{"_index":2281,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trek.details.usefulinformation",{"_index":1832,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.downloadalert.loading",{"_index":1852,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.downloadalert.storage",{"_index":1853,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.features.find((feature",{"_index":1753,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.name",{"_index":2002,"title":{},"body":{"components/SelectTrekComponent.html":{}}}],["trek.properties.advice",{"_index":2121,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.arrival_city",{"_index":2093,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities",{"_index":2095,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities.map",{"_index":2097,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.departure_city",{"_index":2091,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.description",{"_index":2116,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.difficulty",{"_index":2084,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.first_picture",{"_index":1732,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.first_picture.url",{"_index":1734,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.information_desks",{"_index":2109,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.name",{"_index":1906,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{}}}],["trek.properties.networks",{"_index":2100,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.networks.map",{"_index":2102,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.practice",{"_index":2087,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.route",{"_index":2089,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes",{"_index":2104,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes.map",{"_index":2106,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek/select",{"_index":1376,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SelectTrekComponent.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["trekarrowlayerproperties",{"_index":2996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekcardcomponent",{"_index":151,"title":{"components/TrekCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekcontext",{"_index":599,"title":{"interfaces/TrekContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekcontextresolver",{"_index":217,"title":{"guards/TrekContextResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["trekdetails",{"_index":3018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekdetailspage",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekdetailspagemodule",{"_index":2350,"title":{"modules/TrekDetailsPageModule.html":{}},"body":{"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekfitboundsoptions",{"_index":2969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekid",{"_index":1703,"title":{},"body":{"injectables/OnlineTreksService.html":{},"guards/TrekContextResolver.html":{},"interfaces/TreksService.html":{}}}],["treklinelayerproperties",{"_index":2993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekmappage",{"_index":154,"title":{"components/TrekMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekmappagemodule",{"_index":2432,"title":{"modules/TrekMapPageModule.html":{}},"body":{"modules/TrekMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekname",{"_index":944,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trekproperties",{"_index":515,"title":{"interfaces/TrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treks",{"_index":127,"title":{"interfaces/Treks.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.departure",{"_index":2283,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks.features",{"_index":716,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.module",{"_index":2356,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{}}}],["treks.module.ts",{"_index":2159,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["treks.page",{"_index":2538,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["treks.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["treks.service.ts",{"_index":680,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.service.ts:101",{"_index":1711,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:106",{"_index":706,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:110",{"_index":702,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:120",{"_index":1705,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:122",{"_index":704,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:136",{"_index":692,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:143",{"_index":1707,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:156",{"_index":696,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:162",{"_index":698,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:165",{"_index":1709,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:166",{"_index":690,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:174",{"_index":700,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:187",{"_index":1702,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:196",{"_index":1700,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:22",{"_index":710,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:24",{"_index":694,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:27",{"_index":1721,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:28",{"_index":1719,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:30",{"_index":1722,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:31",{"_index":1720,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:32",{"_index":1698,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:43",{"_index":1718,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:56",{"_index":1713,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:61",{"_index":709,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:66",{"_index":1699,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:70",{"_index":1717,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:74",{"_index":1712,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:80",{"_index":1714,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:84",{"_index":1716,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:88",{"_index":1715,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:9",{"_index":1910,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.sort(function(a",{"_index":1912,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks/filter",{"_index":679,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/offline",{"_index":846,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/online",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/search",{"_index":1887,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["treks/treks.module",{"_index":2196,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["treks/treks.page",{"_index":2199,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["treksbystep",{"_index":1861,"title":{},"body":{"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["trekscontext",{"_index":606,"title":{"interfaces/TreksContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekscontextresolver",{"_index":219,"title":{"guards/TreksContextResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["trekservice",{"_index":2245,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trekservice.getcommonimgsrc",{"_index":2248,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treksfitboundsoptions",{"_index":2968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["treksmappage",{"_index":156,"title":{"components/TreksMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treksmappagemodule",{"_index":2503,"title":{"modules/TreksMapPageModule.html":{}},"body":{"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksorderchange",{"_index":2515,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksorderchange(ordervalue",{"_index":2519,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksordercomponent",{"_index":157,"title":{"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekspage",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["trekspagemodule",{"_index":2192,"title":{"modules/TreksPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksservice",{"_index":582,"title":{"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treksservice.getcommonimgsrc",{"_index":2338,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getmapconfigfortrekbyid",{"_index":2337,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getpoisfortrekbyid(currenttrekid",{"_index":2329,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiccontentsfortrekbyid(currenttrekid",{"_index":2330,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiceventsfortrekbyid(currenttrekid",{"_index":2331,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(currenttrekid",{"_index":2328,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(parentid",{"_index":2332,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["trekssource",{"_index":1397,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekssource.setdata",{"_index":1401,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekstool",{"_index":601,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["trekstool.treks$.subscribe((treks",{"_index":1891,"title":{},"body":{"components/SearchComponent.html":{}}}],["treksurl",{"_index":2451,"title":{},"body":{"components/TreksMapPage.html":{}}}],["trekurl",{"_index":2364,"title":{},"body":{"components/TrekMapPage.html":{}}}],["trekzoom",{"_index":2963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trueheading",{"_index":1162,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["try",{"_index":1130,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["turf/distance",{"_index":2630,"title":{},"body":{"dependencies.html":{}}}],["turf/helpers",{"_index":712,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["two",{"_index":2346,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InAppDisclosureComponent.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2923,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeimgsrc",{"_index":1761,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typeof",{"_index":1159,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["typepoi",{"_index":1779,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepoi.id",{"_index":1780,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois",{"_index":1762,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois.values.find",{"_index":1828,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["types/lodash.clonedeep",{"_index":2633,"title":{},"body":{"dependencies.html":{}}}],["types/lodash.deburr",{"_index":2635,"title":{},"body":{"dependencies.html":{}}}],["types/mapbox",{"_index":2637,"title":{},"body":{"dependencies.html":{}}}],["ui.module",{"_index":1635,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ui.module.ts",{"_index":2169,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":747,"title":{},"body":{"injectables/FilterTreksService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{}}}],["unit",{"_index":1435,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["units",{"_index":1019,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["unsubscribe",{"_index":790,"title":{"classes/UnSubscribe.html":{}},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(subscription",{"_index":2560,"title":{},"body":{"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(this.mergefilterstreks",{"_index":2494,"title":{},"body":{"components/TreksMapPage.html":{}}}],["unsubscribe:11",{"_index":833,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:17",{"_index":832,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:5",{"_index":842,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribefilters",{"_index":808,"title":{},"body":{"components/FiltersComponent.html":{}}}],["unsure",{"_index":2755,"title":{},"body":{"index.html":{}}}],["updateselecteditems",{"_index":625,"title":{},"body":{"components/FilterComponent.html":{}}}],["updateselecteditems(temporaryfilter",{"_index":639,"title":{},"body":{"components/FilterComponent.html":{}}}],["uppercase",{"_index":890,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["url",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":493,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["use",{"_index":2752,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2045,"title":{},"body":{"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["usedthe",{"_index":2794,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["usefirebase",{"_index":2824,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userlocation",{"_index":708,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["userlocation.latitude",{"_index":1563,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["userlocation.longitude",{"_index":1562,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["usermsg",{"_index":1905,"title":{},"body":{"components/SearchComponent.html":{}}}],["usually",{"_index":2708,"title":{},"body":{"index.html":{}}}],["val",{"_index":1849,"title":{},"body":{"components/ProgressComponent.html":{}}}],["value",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["value'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["value.checked",{"_index":653,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.checked).length",{"_index":737,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.component",{"_index":2144,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["value.component.html",{"_index":771,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.scss",{"_index":770,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts",{"_index":769,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["value.component.ts:10",{"_index":775,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:11",{"_index":774,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:12",{"_index":776,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:15",{"_index":773,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:19",{"_index":777,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:21",{"_index":780,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.id",{"_index":873,"title":{},"body":{"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{}}}],["value.interval",{"_index":753,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.name",{"_index":783,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.slice(0",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["value/filter",{"_index":768,"title":{},"body":{"components/FilterValueComponent.html":{},"modules/SharedFiltersModule.html":{},"coverage.html":{}}}],["valuechange",{"_index":628,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["valuechanged",{"_index":626,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["valuechanged(event",{"_index":1940,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["valuechanged(undefined",{"_index":642,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuecheckchanged",{"_index":772,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["valuecheckchanged($event",{"_index":778,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["values",{"_index":556,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["valuestodisplay",{"_index":1922,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["var",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["variable",{"_index":2573,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2926,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":2938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verified",{"_index":2747,"title":{},"body":{"index.html":{}}}],["version",{"_index":2704,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vibrate",{"_index":976,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["view",{"_index":1471,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viewchild",{"_index":1370,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viewchild('mapviz",{"_index":1365,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viewisload",{"_index":1862,"title":{},"body":{"components/SearchComponent.html":{}}}],["visibility",{"_index":1220,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"miscellaneous/variables.html":{}}}],["visibility'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["visibility.component",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["visibility.component.html",{"_index":1222,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.scss",{"_index":1221,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts",{"_index":1219,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["visibility.component.ts:10",{"_index":1230,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:11",{"_index":1226,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:15",{"_index":1227,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:20",{"_index":1229,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility/layers",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["visible",{"_index":2980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viz",{"_index":1332,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz'},{'name",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["viz.component",{"_index":2154,"title":{},"body":{"modules/SharedModule.html":{}}}],["viz.component.html",{"_index":1334,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.scss",{"_index":1333,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts",{"_index":1331,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viz.component.ts:111",{"_index":1354,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:251",{"_index":1353,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:402",{"_index":1361,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:44",{"_index":1363,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:445",{"_index":1355,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:45",{"_index":1368,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:46",{"_index":1369,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:469",{"_index":1362,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:48",{"_index":1366,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:50",{"_index":1349,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:51",{"_index":1350,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:52",{"_index":1348,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:53",{"_index":1347,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:54",{"_index":1351,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:56",{"_index":1352,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:57",{"_index":1346,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:76",{"_index":1358,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:96",{"_index":1359,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz/map",{"_index":1330,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InAppDisclosureComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/SelectPoiComponent.html":{},"components/SelectTrekComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["warranties",{"_index":2876,"title":{},"body":{"license.html":{}}}],["watchheading",{"_index":1109,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["way",{"_index":2911,"title":{},"body":{"license.html":{}}}],["website",{"_index":553,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["webview",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["webview/ngx",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["weight",{"_index":2427,"title":{},"body":{"components/TrekMapPage.html":{}}}],["whether",{"_index":2904,"title":{},"body":{"license.html":{}}}],["white",{"_index":2309,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["whitelist",{"_index":2664,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":787,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["window.clearinterval(this.currentpositioninterval",{"_index":1156,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["window.setinterval",{"_index":1152,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["window.settimeout",{"_index":1448,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["windows",{"_index":2738,"title":{},"body":{"index.html":{}}}],["within",{"_index":2810,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":380,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":2397,"title":{},"body":{"components/TrekMapPage.html":{}}}],["works",{"_index":2754,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":2306,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["x",{"_index":2666,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":341,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"interfaces/TreksService.html":{}}}],["z",{"_index":904,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["zip",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["zone",{"_index":1491,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["zone.js",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["zonelayerproperties",{"_index":2989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoneoutlinelayerproperties",{"_index":2992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, translate: TranslateService, globalization: Globalization, onlineTreks: OnlineTreksService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalization\n                                                  \n                                                        \n                                                                    Globalization\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '@env/environment';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private translate: TranslateService,\n    private globalization: Globalization,\n    private onlineTreks: OnlineTreksService,\n    private settings: SettingsService\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      let defaultLanguage;\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        defaultLanguage = (\n          await this.globalization.getPreferredLanguage()\n        ).value.slice(0, 2);\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n      } else {\n        defaultLanguage = navigator.language.slice(0, 2);\n      }\n\n      // we assume that availableLanguage[0] is default language if user language is not available\n      if (\n        environment.availableLanguage &&\n        environment.availableLanguage.length > 0\n      ) {\n        if (environment.availableLanguage.indexOf(defaultLanguage) === -1) {\n          defaultLanguage = environment.availableLanguage[0];\n        }\n      } else {\n        // or 'fr' if array is empty\n        defaultLanguage = 'fr';\n      }\n\n      this.translate.setDefaultLang(defaultLanguage);\n\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoadingInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { LoadingInterceptor } from '@app/services/loading/loading.service';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { Animation } from '@ionic/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { DeviceOrientation } from '@ionic-native/device-orientation/ngx';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\n\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport { ProgressComponent } from '@app/components/progress/progress.component';\nimport { LayersVisibilityComponent } from '@app/components/layers-visibility/layers-visibility.component';\n\nimport { TreksOrderComponent } from './components/treks-order/treks-order.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function noAnimation(AnimationC: Animation): Promise {\n  return Promise.resolve(new AnimationC());\n}\n\nregisterLocaleData(localeFr, 'fr');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  entryComponents: [\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    IonicModule.forRoot({\n      mode: 'md',\n      animated: true,\n      navAnimation: noAnimation\n    }),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    IonicStorageModule.forRoot()\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    File,\n    Zip,\n    WebView,\n    BackgroundGeolocation,\n    LocalNotifications,\n    ScreenOrientation,\n    Globalization,\n    SocialSharing,\n    Network,\n    FirebaseAnalytics,\n    DeviceOrientation,\n    MoreResolver,\n    MoreItemResolver,\n    TrekContextResolver,\n    TreksContextResolver,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'app', pathMatch: 'full' },\n  {\n    path: 'app',\n    loadChildren: './pages/tabs/tabs.module#TabsPageModule'\n  },\n  {\n    path: 'app/map/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule'\n  },\n  {\n    path: 'app/map/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { isStage: true }\n  },\n  {\n    path: 'app/map-offline/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true }\n  },\n  {\n    path: 'app/map-offline/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true, isStage: true }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Public\n                                hits\n                            \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                refreshDelay\n                            \n                            \n                                    Public\n                                revoke\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                revoking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            revoking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoking(observable: Observable, revoked?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:68\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    revoked\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 4 * 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            revoke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, publishReplay, refCount, take, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n  private cache: { [key: string]: Observable } = {};\n  private refreshDelay = 4 * 60 * 60 * 1000;\n  private maxSize = 200;\n  public revoke: EventEmitter = new EventEmitter();\n  public hits: { [key: string]: number } = {};\n\n  constructor(private http: HttpClient) {\n    this.revoke.subscribe((revoked: string | null) => {\n      if (!revoked) {\n        this.cache = {};\n        this.hits = {};\n      } else {\n        delete this.cache[revoked];\n        delete this.hits[revoked];\n      }\n    });\n  }\n\n  /*\n   * gets an observable\n   * that broadcasts a ReplaySubject\n   * which emits the response of a get request\n   * during this.refreshDelay ms without sending a new http request\n   */\n  public get(url: string, options: any): Observable {\n    if (!this.cache.hasOwnProperty(url)) {\n      if (Object.keys(this.cache).length >= this.maxSize) {\n        // TODO: do not revoke everything\n        this.revoke.emit();\n      }\n      this.cache[url] = this.http.get(url, options).pipe(\n        // set hits to 0 each time request is actually sent\n        tap(() => {\n          this.hits[url] = 0;\n        }),\n        // create a ReplaySubject that stores and emit last response during delay\n        publishReplay(1, this.refreshDelay),\n        // broadcast ReplaySubject\n        refCount(),\n        // complete each observer after response has been emitted\n        take(1),\n        // increment hits each time request is subscribed\n        tap(() => {\n          const hits = this.hits[url];\n          this.hits[url] = hits ? hits + 1 : 1;\n        }),\n        catchError((error) => {\n          delete this.cache[url];\n          return throwError(error);\n        })\n      );\n    }\n    return this.cache[url];\n  }\n\n  /*\n   Make the observable revoke the cache when it emits\n   */\n  public revoking(\n    observable: Observable,\n    revoked?: string | null\n  ): Observable {\n    return observable.pipe(\n      tap(() => {\n        this.revoke.emit(revoked);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsibleListComponent.html":{"url":"components/CollapsibleListComponent.html","title":"component - CollapsibleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsibleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/collapsible-list/collapsible-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapsible-list\n            \n\n            \n                styleUrls\n                ./collapsible-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collapsible-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alwaysDisplayedItems\n                            \n                            \n                                    Public\n                                expandableItems\n                            \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleExpandables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideAllLabel\n                            \n                            \n                                initialSize\n                            \n                            \n                                initialState\n                            \n                            \n                                items\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                showAllLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/collapsible-list/collapsible-list.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialSize\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialState\n                    \n                \n                \n                    \n                        Type :     \"expanded\" | \"collapsed\"\n\n                    \n                \n                \n                    \n                        Default value : 'collapsed'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpandables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpandables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alwaysDisplayedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandableItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  TemplateRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'app-collapsible-list',\n  templateUrl: './collapsible-list.component.html',\n  styleUrls: ['./collapsible-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollapsibleListComponent implements OnInit {\n  @Input() items: T[];\n  @Input() showAllLabel: string;\n  @Input() hideAllLabel: string;\n  @Input() initialSize = 5;\n  @Input() initialState: 'expanded' | 'collapsed' = 'collapsed';\n  @Input() itemTemplate: TemplateRef;\n\n  public alwaysDisplayedItems: T[] = [];\n  public expandableItems: T[] = [];\n  public expanded = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.expanded = this.initialState === 'expanded';\n    this.alwaysDisplayedItems = this.items.slice(0, this.initialSize);\n    this.expandableItems = this.items.slice(\n      this.initialSize,\n      this.items.length\n    );\n  }\n\n  public toggleExpandables() {\n    this.expanded = !this.expanded;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n    \n    \n  \n\n 0\">\n  \n    \n      {{ showAllLabel }}\n    \n    \n      {{ hideAllLabel }}\n    \n  \n\n\n    \n\n    \n                \n                    ./collapsible-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 0\">            {{ showAllLabel }}              {{ hideAllLabel }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollapsibleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectErrorComponent.html":{"url":"components/ConnectErrorComponent.html","title":"component - ConnectErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConnectErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connect-error/connect-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-error\n            \n\n            \n                styleUrls\n                ./connect-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        retry\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-connect-error',\n  templateUrl: './connect-error.component.html',\n  styleUrls: ['./connect-error.component.scss']\n})\nexport class ConnectErrorComponent {\n  @Input() public title = '';\n  @Input() public content = '';\n  @Input() public icon = '';\n  @Input() public buttonText = '';\n  @Output() public retry = new EventEmitter();\n\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      {{ title }}\n    \n  \n  \n    \n      {{ content }}\n    \n  \n  \n    \n      \n        {{ buttonText }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./connect-error.component.scss\n                \n                .icon-size {\n  font-size: 4em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ title }}                  {{ content }}                          {{ buttonText }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainsFilter.html":{"url":"interfaces/ContainsFilter.html","title":"interface - ContainsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomPipesModule.html":{"url":"modules/CustomPipesModule.html","title":"module - CustomPipesModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomPipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomPipesModule\n\n\n\ncluster_CustomPipesModule_declarations\n\n\n\ncluster_CustomPipesModule_exports\n\n\n\n\nLowerRoundPipe\n\nLowerRoundPipe\n\n\n\nCustomPipesModule\n\nCustomPipesModule\n\nCustomPipesModule -->\n\nLowerRoundPipe->CustomPipesModule\n\n\n\n\n\nLowerRoundPipe \n\nLowerRoundPipe \n\nLowerRoundPipe  -->\n\nCustomPipesModule->LowerRoundPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/custom-pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LowerRoundPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LowerRoundPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LowerRoundPipe } from '@app/pipes/lower-round.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [LowerRoundPipe],\n  exports: [LowerRoundPipe]\n})\nexport class CustomPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSetting.html":{"url":"interfaces/DataSetting.html","title":"interface - DataSetting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSetting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hideAllLabel\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        showAllLabel\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideAllLabel\n                                    \n                                \n                                \n                                    \n                                        hideAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllLabel\n                                    \n                                \n                                \n                                    \n                                        showAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\" | \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\" | \"interval\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     FilterValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containsFilterShouldUseSelectAbove\n                            \n                            \n                                    Public\n                                selectedItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                openSelect\n                            \n                            \n                                    Public\n                                updateSelectedItems\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter/filter.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            openSelect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSelect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateSelectedItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems(temporaryFilter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    temporaryFilter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containsFilterShouldUseSelectAbove\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.containsFilterShouldUseSelectAbove\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  DoCheck\n} from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit, DoCheck {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n  @Output() public selectChange = new EventEmitter();\n  public selectedItems = '';\n  public containsFilterShouldUseSelectAbove =\n    environment.containsFilterShouldUseSelectAbove;\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {\n    this.updateSelectedItems(this.filter);\n  }\n\n  ngDoCheck() {\n    if (\n      !this.filter.values.find((value) => {\n        return value.checked;\n      })\n    ) {\n      this.updateSelectedItems(this.filter);\n    }\n  }\n\n  public valueChanged({\n    checked,\n    value\n  }: {\n    checked: boolean;\n    value: FilterValue;\n  }): void {\n    this.valueChange.emit({ checked: checked, value: value });\n  }\n\n  public async openSelect(): Promise {\n    const modal = await this.modalController.create({\n      component: SelectFilterComponent,\n      componentProps: { filter: this.filter, commonSrc: this.commonSrc },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.temporaryFilter) {\n      this.updateSelectedItems(data.temporaryFilter);\n      this.selectChange.emit({ filter: data.temporaryFilter });\n    }\n  }\n\n  public updateSelectedItems(temporaryFilter: Filter) {\n    const selectedItems: string[] = [];\n\n    for (const filterValue of temporaryFilter.values) {\n      if (filterValue.checked) {\n        selectedItems.push(filterValue.name);\n      }\n    }\n    this.selectedItems = selectedItems.join(', ');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ filter.name }}\n  \n\n\n  \n  \n\n\n\n  \n    \n      {{\n        selectedItems === ''\n          ? ('filters.selectPlaceholder' | translate) +\n            ' ' +\n            filter.name.toLowerCase()\n          : selectedItems\n      }}\n    \n  \n\n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .select-placeholder {\n  color: var(--ion-color-medium);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.name }}                  {{        selectedItems === \\'\\'          ? (\\'filters.selectPlaceholder\\' | translate) +            \\' \\' +            filter.name.toLowerCase()          : selectedItems      }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterTreksService.html":{"url":"injectables/FilterTreksService.html","title":"injectable - FilterTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter-treks/filter-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeFiltersNumber$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                containsFilter\n                            \n                            \n                                    Static\n                                filter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedIdForFilter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedInterval\n                            \n                            \n                                    Public\n                                getFilteredTreks\n                            \n                            \n                                    Private\n                                    Static\n                                getNumberOfActiveFilters\n                            \n                            \n                                    Private\n                                    Static\n                                intervalFilter\n                            \n                            \n                                    Private\n                                    Static\n                                isFilterActive\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter-treks/filter-treks.service.ts:166\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsFilter(filter: ContainsFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                ContainsFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(treks: MinimalTreks | null, filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTreks | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedIdForFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedIdForFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedInterval\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedInterval(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFilteredTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredTreks(treks$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getNumberOfActiveFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumberOfActiveFilters(filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            intervalFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intervalFilter(filter: IntervalFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IntervalFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isFilterActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFilterActive(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(filteredTreks: MinimalTrek[], order: Order, userLocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filteredTreks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeFiltersNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter-treks/filter-treks.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { point } from '@turf/helpers';\n\nimport {\n  ContainsFilter,\n  Filter,\n  IntervalFilter,\n  MinimalTrek,\n  MinimalTreks,\n  Order\n} from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\nconst distance = require('@turf/distance').default;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterTreksService {\n  public activeFiltersNumber$: Observable;\n\n  public static filter(\n    treks: MinimalTreks | null,\n    filters: Filter[] | null\n  ): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n\n    let filteredFeatures = treks.features;\n\n    if (filters) {\n      filters.forEach((filter) => {\n        filteredFeatures = filteredFeatures.filter((feature) => {\n          if (!FilterTreksService.isFilterActive(filter)) {\n            return true;\n          }\n\n          if (filter.type === 'contains') {\n            return FilterTreksService.containsFilter(\n              filter as ContainsFilter,\n              feature\n            );\n          } else if (filter.type === 'interval') {\n            return FilterTreksService.intervalFilter(\n              filter as IntervalFilter,\n              feature\n            );\n          }\n\n          return false;\n        });\n      });\n    }\n\n    return filteredFeatures;\n  }\n\n  public static sort(\n    filteredTreks: MinimalTrek[],\n    order: Order,\n    userLocation?: number[]\n  ): MinimalTrek[] {\n    return filteredTreks.sort((a: MinimalTrek, b: MinimalTrek) => {\n      // Sort by user location\n      if (order === 'location' && userLocation && userLocation !== null) {\n        if (!a.geometry || !b.geometry) {\n          return !a.geometry ? 1 : -1;\n        }\n\n        const distanceFromTrekA = distance(\n          point(a.geometry.coordinates),\n          point(userLocation)\n        );\n        const distanceFromTrekB = distance(\n          point(b.geometry.coordinates),\n          point(userLocation)\n        );\n\n        if (distanceFromTrekA  distanceFromTrekB) {\n          return 1;\n        }\n        return 0;\n      }\n      if (order === 'alphabetical') {\n        if (a.properties.name  b.properties.name) {\n          return 1;\n        }\n        return 0;\n      }\n      if (order === 'random') {\n        return 0.5 - Math.random();\n      }\n      return 0;\n    });\n  }\n\n  private static isFilterActive(filter: Filter): boolean {\n    return filter.values.filter((value) => value.checked).length > 0;\n  }\n\n  private static getNumberOfActiveFilters(filters: Filter[] | null): number {\n    let numberOfActiveFilters = 0;\n    if (!!filters) {\n      filters.forEach((filter) => {\n        numberOfActiveFilters += FilterTreksService.getCheckedIdForFilter(\n          filter\n        ).length;\n      });\n    }\n    return numberOfActiveFilters;\n  }\n\n  private static intervalFilter(filter: IntervalFilter, feature: MinimalTrek) {\n    let isInInterval = false;\n    FilterTreksService.getCheckedInterval(filter).forEach(\n      ([min, max]: [number, number]) => {\n        const criterionValue: number = feature.properties[filter.id];\n        if (criterionValue >= min && criterionValue \n            (feature.properties[filter.id] as any).indexOf(filterValue) !== -1\n        ) !== undefined\n      );\n    } else {\n      return (\n        FilterTreksService.getCheckedIdForFilter(filter).indexOf(\n          feature.properties[filter.id] as any\n        ) !== -1\n      );\n    }\n  }\n\n  private static getCheckedIdForFilter(filter: Filter): number[] {\n    return filter.values\n      .filter((value) => value.checked)\n      .map((checkedValue) => checkedValue.id);\n  }\n\n  private static getCheckedInterval(filter: Filter): [number, number][] {\n    return filter.values\n      .filter((value) => !!value.interval && value.checked)\n      .map((checkedValue) => checkedValue.interval) as [number, number][];\n  }\n\n  constructor(private settings: SettingsService) {\n    this.activeFiltersNumber$ = settings.filters$.pipe(\n      map((filters) => FilterTreksService.getNumberOfActiveFilters(filters))\n    );\n  }\n\n  public getFilteredTreks(\n    treks$: Observable\n  ): Observable {\n    return combineLatest([\n      treks$,\n      this.settings.filters$,\n      this.settings.order$\n    ]).pipe(\n      map(([treks, filters, order]) => {\n        if (treks && filters && order) {\n          return FilterTreksService.sort(\n            FilterTreksService.filter(treks, filters),\n            order.type,\n            order.value\n          );\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterValue.html":{"url":"interfaces/FilterValue.html","title":"interface - FilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checked\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        interval\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterValueComponent.html":{"url":"components/FilterValueComponent.html","title":"component - FilterValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter-value/filter-value.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-value\n            \n\n            \n                styleUrls\n                ./filter-value.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-value.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueCheckChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter-value/filter-value.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         FilterValue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueCheckChanged($event: CustomEvent, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            CustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter-value',\n  templateUrl: './filter-value.component.html',\n  styleUrls: ['./filter-value.component.scss']\n})\nexport class FilterValueComponent implements OnInit {\n  @Input() value: FilterValue;\n  @Input() commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public valueCheckChanged($event: CustomEvent, value: FilterValue) {\n    this.valueChange.emit({ checked: $event.detail.checked, value: value });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ value.name }}\n  \n\n\n    \n\n    \n                \n                    ./filter-value.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ value.name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filters/filters.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Private\n                                filtersSubscription\n                            \n                            \n                                    Public\n                                nbTemporaryFiltersTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                temporaryFilters$\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilters\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                eraseFilters\n                            \n                            \n                                    Public\n                                handleFiltersState\n                            \n                            \n                                    Public\n                                handleSelect\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                trackByFilterId\n                            \n                            \n                                    Public\n                                trackFilters\n                            \n                            \n                                    Public\n                                unsubscribeFilters\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOnline\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, settings: SettingsService, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOnline\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            eraseFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eraseFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleSelect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSelect(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackByFilterId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackByFilterId(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilters(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribeFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Filter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filtersSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nbTemporaryFiltersTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temporaryFilters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { Filter, FilterValue, MinimalTreks } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss']\n})\nexport class FiltersComponent extends UnSubscribe implements OnInit, OnDestroy {\n  public temporaryFilters$ = new BehaviorSubject([]);\n  public nbTemporaryFiltersTreks = 0;\n  public commonSrc: string;\n  public filters: Filter[];\n  private filtersSubscription: Subscription;\n  @Input() public isOnline: boolean;\n\n  constructor(\n    private modalCtrl: ModalController,\n    public settings: SettingsService,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const treks$ = this.isOnline\n      ? this.onlineTreks.treks$\n      : this.offlineTreks.treks$;\n    this.commonSrc = this.isOnline\n      ? this.onlineTreks.getCommonImgSrc()\n      : this.offlineTreks.getCommonImgSrc();\n\n    this.filtersSubscription = this.settings.filters$.subscribe((filters) => {\n      this.filters = filters || [];\n      this.temporaryFilters$.next(filters || []);\n    });\n\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n\n      combineLatest(treks$, this.temporaryFilters$).subscribe(\n        ([treks, temporaryFilters]: [MinimalTreks | null, Filter[]]) => {\n          this.nbTemporaryFiltersTreks = !!treks\n            ? FilterTreksService.filter(treks, temporaryFilters).length\n            : 0;\n        }\n      )\n    );\n  }\n\n  public handleFiltersState(\n    checkState: boolean,\n    filter: Filter,\n    value: FilterValue\n  ): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    const temporaryFilter = temporaryFilters.find(\n      (tempFilter) => tempFilter.id === filter.id\n    ) as Filter;\n    const filterValue = temporaryFilter.values.find(\n      (tempValue) => tempValue.id === value.id\n    ) as FilterValue;\n    filterValue.checked = checkState;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public handleSelect(event: { filter: Filter }): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    let temporaryFilterIndex = temporaryFilters.findIndex(\n      (tempFilter) => tempFilter.id === event.filter.id\n    );\n    if (temporaryFilterIndex !== -1) {\n      temporaryFilters[temporaryFilterIndex] = event.filter;\n      this.temporaryFilters$.next(temporaryFilters);\n    }\n  }\n\n  public applyFilters(): void {\n    this.unsubscribeFilters();\n    this.settings.saveFiltersState(this.temporaryFilters$.getValue());\n    this.modalCtrl.dismiss(true);\n  }\n\n  public eraseFilters(): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    temporaryFilters.forEach((filter) => {\n      filter.values.forEach((value) => (value.checked = false));\n    });\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public trackFilters(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n\n  public unsubscribeFilters(): void {\n    if (this.filtersSubscription) {\n      this.filtersSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.unsubscribeFilters();\n  }\n\n  public trackByFilterId(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'filters.title' | translate | uppercase }}\n    \n      \n        {{ 'filters.erase' | translate }}\n      \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n    \n      \n        \n        \n      \n    \n  \n\n\n\n  \n    \n    filters.zeroresult\n    filters.oneresult\n     1\">\n      {{ 'filters.results' | translate: { nb: nbTemporaryFiltersTreks } }}\n    \n  \n\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n.loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n@media screen and (max-width: 540px) {\n  .min-font {\n    font-size: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'filters.title\\' | translate | uppercase }}                  {{ \\'filters.erase\\' | translate }}                                                                                filters.zeroresult    filters.oneresult     1\">      {{ \\'filters.results\\' | translate: { nb: nbTemporaryFiltersTreks } }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersComponentModule.html":{"url":"modules/FiltersComponentModule.html","title":"module - FiltersComponentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersComponentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersComponentModule\n\n\n\ncluster_FiltersComponentModule_imports\n\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\n\n\nFiltersComponentModule\n\nFiltersComponentModule\n\nFiltersComponentModule -->\n\nSharedFiltersModule->FiltersComponentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/filters/filters.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedFiltersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedFiltersModule } from '@app/shared/shared-filters.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedFiltersModule,\n    TranslateModule.forChild()\n  ]\n})\nexport class FiltersComponentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeolocateNotificationsComponent.html":{"url":"components/GeolocateNotificationsComponent.html","title":"component - GeolocateNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeolocateNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geolocate-notifications\n            \n\n            \n                styleUrls\n                ./geolocate-notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geolocate-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                clicklocalNotifications$\n                            \n                            \n                                currentPoisToNotify\n                            \n                            \n                                    Private\n                                currentPosition$\n                            \n                            \n                                    Public\n                                localNotifications\n                            \n                            \n                                notificationsModeIsActive\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeNotificationsMode\n                            \n                            \n                                checkToNotify\n                            \n                            \n                                disableGeolocationNotification\n                            \n                            \n                                enableGeolocationNotification\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentPersmissionsConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPois\n                            \n                            \n                                trekName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                presentPoiDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, localNotifications: LocalNotifications, alertController: AlertController, geolocate: GeolocateService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localNotifications\n                                                  \n                                                        \n                                                                    LocalNotifications\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPois\n                    \n                \n                \n                    \n                        Type :         Pois\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trekName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        presentPoiDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeNotificationsMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeNotificationsMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkToNotify\n                        \n                        \n                    \n                \n            \n            \n                \ncheckToNotify(fromCoordinates: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromCoordinates\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \ndisableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \nenableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPersmissionsConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPersmissionsConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clicklocalNotifications$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPoisToNotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalNotifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsModeIsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Subscription } from 'rxjs';\nimport { point } from '@turf/helpers';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst distance = require('@turf/distance').default;\n\nimport { Pois } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-geolocate-notifications',\n  templateUrl: './geolocate-notifications.component.html',\n  styleUrls: ['./geolocate-notifications.component.scss']\n})\nexport class GeolocateNotificationsComponent\n  implements OnInit, OnChanges, OnDestroy {\n  currentPoisToNotify: any[] = [];\n  clicklocalNotifications$: Subscription;\n  notificationsModeIsActive = false;\n  @Input() currentPois: Pois;\n  @Input() trekName: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  private currentPosition$: Subscription;\n\n  constructor(\n    public platform: Platform,\n    public localNotifications: LocalNotifications,\n    public alertController: AlertController,\n    private geolocate: GeolocateService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.localNotifications.setDefaults({\n        icon: 'res://icon',\n        smallIcon: 'res://ic_stat_panorama',\n        vibrate: true,\n        foreground: true,\n        priority: 2,\n        silent: false,\n        launch: true,\n        lockscreen: true\n      });\n      this.clicklocalNotifications$ = this.localNotifications\n        .on('click')\n        .subscribe(({ data }) => {\n          const poi = this.currentPois.features.find(\n            (feature) => feature.properties.id === data.id\n          );\n          this.presentPoiDetails.emit(poi);\n        });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    if (changesCurrentPois.currentValue && !changesCurrentPois.previousValue) {\n      if (this.currentPois && Array.isArray(this.currentPois.features)) {\n        this.currentPoisToNotify = this.currentPois.features.map((feature) => ({\n          id: feature.properties.id,\n          name: feature.properties.name,\n          coordinates: feature.geometry.coordinates\n        }));\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.clicklocalNotifications$) {\n      this.clicklocalNotifications$.unsubscribe();\n    }\n\n    if (this.currentPosition$) {\n      this.disableGeolocationNotification();\n    }\n  }\n\n  async changeNotificationsMode() {\n    if (!this.notificationsModeIsActive) {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        if (!(await this.geolocate.checkAuthorization())) {\n          this.presentPersmissionsConfirm();\n        } else {\n          this.geolocate.stopOnMapTracking(false, false);\n          this.geolocate.startNotificationsModeTracking(this.trekName);\n          if (await this.localNotifications.hasPermission()) {\n            this.notificationsModeIsActive = true;\n            this.enableGeolocationNotification();\n          } else {\n            await this.localNotifications.requestPermission();\n          }\n        }\n      } else {\n        this.geolocate.stopOnMapTracking(false, false);\n        this.geolocate.startNotificationsModeTracking(this.trekName);\n        this.notificationsModeIsActive = true;\n        this.enableGeolocationNotification();\n      }\n    } else {\n      this.notificationsModeIsActive = false;\n      this.geolocate.stopNotificationsModeTracking();\n      this.geolocate.startOnMapTracking();\n      this.disableGeolocationNotification();\n    }\n  }\n\n  enableGeolocationNotification(): void {\n    this.currentPosition$ = this.geolocate.currentPosition$.subscribe(\n      (coordinates) => this.checkToNotify(coordinates)\n    );\n  }\n\n  disableGeolocationNotification(): void {\n    this.currentPosition$.unsubscribe();\n  }\n\n  checkToNotify(fromCoordinates: number[]) {\n    if (\n      fromCoordinates &&\n      this.currentPoisToNotify &&\n      this.currentPoisToNotify.length > 0\n    ) {\n      const kmToNotify = environment.metersToNotify / 1000;\n      const options = {\n        units: 'kilometers'\n      };\n      const from = point(fromCoordinates);\n      const notifiedIndex = this.currentPoisToNotify.findIndex(\n        (feature) =>\n          distance(from, point(feature.coordinates), options)  {\n            this.localNotifications.schedule({\n              id: this.currentPoisToNotify[notifiedIndex].id,\n              title: trad,\n              text: this.currentPoisToNotify[notifiedIndex].name,\n              data: {\n                id: this.currentPoisToNotify[notifiedIndex].id\n              },\n              icon: 'res://icon',\n              smallIcon: 'res://ic_stat_panorama',\n              vibrate: true,\n              foreground: true,\n              priority: 2,\n              silent: false,\n              launch: true,\n              lockscreen: true\n            });\n\n            this.currentPoisToNotify.splice(notifiedIndex, 1);\n          });\n        }\n      }\n    }\n  }\n\n  async presentPersmissionsConfirm() {\n    await this.translate\n      .get([\n        'geolocate.askLocatePermission',\n        'geolocate.cancel',\n        'geolocate.open'\n      ])\n      .subscribe(async (trad) => {\n        const persmissionsConfirm = await this.alertController.create({\n          header: 'Permissions',\n          message: trad['geolocate.askLocatePermission'],\n          buttons: [\n            {\n              text: trad['geolocate.cancel'],\n              role: 'cancel',\n              cssClass: 'secondary'\n            },\n            {\n              text: trad['geolocate.open'],\n              handler: () => {\n                this.geolocate.showAppSettings();\n              }\n            }\n          ]\n        });\n\n        await persmissionsConfirm.present();\n      });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ 'mapTrek.enableNotification' | translate }}\n\n\n\n  \n  {{ 'mapTrek.disableNotification' | translate }}\n\n\n    \n\n    \n                \n                    ./geolocate-notifications.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'mapTrek.enableNotification\\' | translate }}    {{ \\'mapTrek.disableNotification\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeolocateNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocateService.html":{"url":"injectables/GeolocateService.html","title":"injectable - GeolocateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeolocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocate/geolocate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundGeolocation\n                            \n                            \n                                    Public\n                                currentHeading$\n                            \n                            \n                                    Public\n                                currentHeadingSubscription\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                currentPositionInterval\n                            \n                            \n                                    Public\n                                deviceOrientation\n                            \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Public\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuthorization\n                            \n                            \n                                    Async\n                                checkIfBackgroundGeolocationIsRunning\n                            \n                            \n                                    Async\n                                checkIfCanGetCurrentHeading\n                            \n                            \n                                    Async\n                                getCurrentPosition\n                            \n                            \n                                    Async\n                                shouldShowInAppDisclosure\n                            \n                            \n                                showAppSettings\n                            \n                            \n                                showLocationSettings\n                            \n                            \n                                    Async\n                                startNotificationsModeTracking\n                            \n                            \n                                    Async\n                                startOnMapTracking\n                            \n                            \n                                stopNotificationsModeTracking\n                            \n                            \n                                stopOnMapTracking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backgroundGeolocation: BackgroundGeolocation, deviceOrientation: DeviceOrientation, storage: Storage, platform: Platform, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geolocate/geolocate.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceOrientation\n                                                  \n                                                        \n                                                                    DeviceOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAuthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkIfBackgroundGeolocationIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfBackgroundGeolocationIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkIfCanGetCurrentHeading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfCanGetCurrentHeading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCurrentPosition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            shouldShowInAppDisclosure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldShowInAppDisclosure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAppSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowAppSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startNotificationsModeTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startNotificationsModeTracking(notificationText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startOnMapTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startOnMapTracking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopNotificationsModeTracking\n                        \n                        \n                    \n                \n            \n            \n                \nstopNotificationsModeTracking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopOnMapTracking\n                        \n                        \n                    \n                \n            \n            \n                \nstopOnMapTracking(resetHeading: boolean, resetPosition: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    resetHeading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    resetPosition\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backgroundGeolocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BackgroundGeolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentHeading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentHeadingSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPositionInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deviceOrientation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DeviceOrientation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  BackgroundGeolocation,\n  BackgroundGeolocationConfig,\n  BackgroundGeolocationEvents,\n  BackgroundGeolocationLocationProvider\n} from '@ionic-native/background-geolocation/ngx';\nimport { Storage } from '@ionic/storage';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\nimport {\n  DeviceOrientation,\n  DeviceOrientationCompassHeading\n} from '@ionic-native/device-orientation/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocateService {\n  public currentPosition$: BehaviorSubject = new BehaviorSubject(null);\n  public currentHeading$: BehaviorSubject = new BehaviorSubject(null);\n  public currentHeadingSubscription: Subscription | null = null;\n  public currentPositionInterval: number | null;\n\n  constructor(\n    public backgroundGeolocation: BackgroundGeolocation,\n    public deviceOrientation: DeviceOrientation,\n    public storage: Storage,\n    public platform: Platform,\n    private translate: TranslateService\n  ) {}\n\n  async shouldShowInAppDisclosure() {\n    const alreadyAskGeolocationPermission = await this.storage.get(\n      'alreadyAskGeolocationPermission'\n    );\n    return !!!alreadyAskGeolocationPermission;\n  }\n\n  async checkAuthorization() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.authorization !== 0;\n  }\n\n  async checkIfBackgroundGeolocationIsRunning() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.isRunning;\n  }\n\n  async startOnMapTracking() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      if (\n        (await this.checkIfCanGetCurrentHeading()) &&\n        this.currentHeadingSubscription === null\n      ) {\n        this.currentHeadingSubscription = this.deviceOrientation\n          .watchHeading({ frequency: 16 })\n          .subscribe((data: DeviceOrientationCompassHeading) =>\n            this.currentHeading$.next(data.trueHeading)\n          );\n      }\n\n      const notificationTitle: string = await this.translate\n        .get('geolocate.notificationTitle')\n        .toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider:\n          BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        startForeground: false,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText: 'Geolocation',\n        ...environment.backgroundGeolocation\n      };\n\n      if (await this.checkIfBackgroundGeolocationIsRunning()) {\n        this.backgroundGeolocation.stop();\n      }\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.start)\n        .subscribe(async () => {\n          try {\n            const startLocation = await this.backgroundGeolocation.getCurrentLocation(\n              {\n                timeout: 10000,\n                maximumAge: 0,\n                enableHighAccuracy: true\n              }\n            );\n            this.currentPosition$.next([\n              startLocation.longitude,\n              startLocation.latitude\n            ]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.location)\n        .subscribe((location) => {\n          try {\n            this.currentPosition$.next([location.longitude, location.latitude]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation.start();\n    } else {\n      navigator.geolocation.getCurrentPosition((position) =>\n        this.currentPosition$.next([\n          position.coords.longitude,\n          position.coords.latitude\n        ])\n      );\n    }\n\n    // this.getCurrentPosition();\n    // this.currentPositionInterval = window.setInterval(() => {\n    //   this.getCurrentPosition();\n    // }, environment.backgroundGeolocation.interval);\n    //\n  }\n\n  stopOnMapTracking(\n    resetHeading: boolean = true,\n    resetPosition: boolean = true\n  ) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      if (resetHeading && this.currentHeadingSubscription) {\n        this.currentHeadingSubscription.unsubscribe();\n        this.currentHeadingSubscription = null;\n        this.currentHeading$.next(null);\n      }\n      this.backgroundGeolocation.stop();\n    }\n\n    if (resetPosition) {\n      this.currentPosition$.next(null);\n    }\n\n    // if (this.currentPositionInterval !== null) {\n    //   window.clearInterval(this.currentPositionInterval);\n    //   this.currentPositionInterval = null;\n    // }\n  }\n\n  async startNotificationsModeTracking(notificationText: string) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const notificationTitle: string = await this.translate\n        .get('geolocate.notificationTitle')\n        .toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider:\n          BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        startForeground: true,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText,\n        ...environment.backgroundGeolocation\n      };\n\n      if (await this.checkIfBackgroundGeolocationIsRunning()) {\n        this.backgroundGeolocation.stop();\n      }\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.start)\n        .subscribe(async () => {\n          try {\n            const startLocation = await this.backgroundGeolocation.getCurrentLocation(\n              {\n                timeout: 10000,\n                maximumAge: 0,\n                enableHighAccuracy: true\n              }\n            );\n            this.currentPosition$.next([\n              startLocation.longitude,\n              startLocation.latitude\n            ]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.location)\n        .subscribe((location) => {\n          try {\n            this.currentPosition$.next([location.longitude, location.latitude]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation.start();\n    } else {\n      navigator.geolocation.getCurrentPosition((position) =>\n        this.currentPosition$.next([\n          position.coords.longitude,\n          position.coords.latitude\n        ])\n      );\n    }\n  }\n\n  stopNotificationsModeTracking() {\n    if (\n      (this.platform.is('ios') || this.platform.is('android')) &&\n      this.checkIfBackgroundGeolocationIsRunning()\n    ) {\n      this.backgroundGeolocation.stop();\n    }\n  }\n\n  async checkIfCanGetCurrentHeading() {\n    let currentHeading: DeviceOrientationCompassHeading | null = null;\n    try {\n      currentHeading =\n        this.platform.is('ios') || this.platform.is('android')\n          ? await this.deviceOrientation.getCurrentHeading()\n          : null;\n    } finally {\n      return (\n        currentHeading !== null &&\n        typeof currentHeading === 'object' &&\n        (currentHeading as DeviceOrientationCompassHeading).hasOwnProperty(\n          'trueHeading'\n        )\n      );\n    }\n  }\n\n  showAppSettings() {\n    this.backgroundGeolocation.showAppSettings();\n  }\n\n  showLocationSettings() {\n    this.backgroundGeolocation.showLocationSettings();\n  }\n\n  async getCurrentPosition() {\n    let startLocation;\n    try {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        startLocation = await this.backgroundGeolocation.getCurrentLocation({\n          timeout: 10000,\n          maximumAge: 0,\n          enableHighAccuracy: true\n        });\n      } else {\n        await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              if (position) {\n                startLocation = {\n                  longitude: position.coords.longitude,\n                  latitude: position.coords.latitude\n                };\n              }\n              resolve(true);\n            },\n            () => reject()\n          );\n        });\n      }\n    } catch (error) {\n      startLocation = null;\n    } finally {\n      this.currentPosition$.next(\n        startLocation\n          ? [startLocation.longitude, startLocation.latitude]\n          : startLocation\n      );\n\n      return startLocation;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrek.html":{"url":"interfaces/HydratedTrek.html","title":"interface - HydratedTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         HydratedTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrekProperties.html":{"url":"interfaces/HydratedTrekProperties.html","title":"interface - HydratedTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        accessibilities\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        ambiance\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        children\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        networks\n                                \n                                \n                                        parking_location\n                                \n                                \n                                        pictures\n                                \n                                \n                                            Optional\n                                        points_reference\n                                \n                                \n                                        practice\n                                \n                                \n                                        profile\n                                \n                                \n                                        route\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                                \n                                        themes\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ambiance\n                                    \n                                \n                                \n                                    \n                                        ambiance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Treks\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking_location\n                                    \n                                \n                                \n                                    \n                                        parking_location:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points_reference\n                                    \n                                \n                                \n                                    \n                                        points_reference:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InAppDisclosureComponent.html":{"url":"components/InAppDisclosureComponent.html","title":"component - InAppDisclosureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InAppDisclosureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/in-app-disclosure/in-app-disclosure.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-in-app-disclosure\n            \n\n            \n                styleUrls\n                ./in-app-disclosure.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./in-app-disclosure.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/in-app-disclosure/in-app-disclosure.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/in-app-disclosure/in-app-disclosure.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/in-app-disclosure/in-app-disclosure.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/in-app-disclosure/in-app-disclosure.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-in-app-disclosure',\n  templateUrl: './in-app-disclosure.component.html',\n  styleUrls: ['./in-app-disclosure.component.scss']\n})\nexport class InAppDisclosureComponent implements OnInit {\n  constructor(private modalCtrl: ModalController, public storage: Storage) {}\n\n  ngOnInit() {}\n\n  public async close() {\n    await this.storage.set(\n      'alreadyAskGeolocationPermission',\n      JSON.stringify(true)\n    );\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      {{ 'inAppDisclosure.title' | translate }}\n    \n  \n  \n    \n      {{ 'inAppDisclosure.description' | translate }}\n    \n  \n  \n    \n      {{ 'inAppDisclosure.geolocateFeatures' | translate }}\n    \n  \n  \n    \n      \n        {{ 'inAppDisclosure.geolocateForMap' | translate }}\n      \n    \n    \n      \n        {{ 'inAppDisclosure.geolocateForSort' | translate }}\n      \n    \n    \n      \n        {{ 'inAppDisclosure.geolocateForNavigate' | translate }}\n      \n    \n    \n      \n        {{ 'inAppDisclosure.geolocateForNotification' | translate }}\n      \n    \n  \n  \n    \n      {{ 'inAppDisclosure.dataUsage' | translate }}\n    \n  \n\n\n\n  \n    \n    {{ 'inAppDisclosure.displayRequest' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./in-app-disclosure.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'inAppDisclosure.title\\' | translate }}                  {{ \\'inAppDisclosure.description\\' | translate }}                  {{ \\'inAppDisclosure.geolocateFeatures\\' | translate }}                          {{ \\'inAppDisclosure.geolocateForMap\\' | translate }}                            {{ \\'inAppDisclosure.geolocateForSort\\' | translate }}                            {{ \\'inAppDisclosure.geolocateForNavigate\\' | translate }}                            {{ \\'inAppDisclosure.geolocateForNotification\\' | translate }}                        {{ \\'inAppDisclosure.dataUsage\\' | translate }}                {{ \\'inAppDisclosure.displayRequest\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InAppDisclosureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationDesk.html":{"url":"interfaces/InformationDesk.html","title":"interface - InformationDesk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationDesk\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        municipality\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        photo_url\n                                \n                                \n                                        picture\n                                \n                                \n                                        postal_code\n                                \n                                \n                                        street\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        municipality\n                                    \n                                \n                                \n                                    \n                                        municipality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url\n                                    \n                                \n                                \n                                    \n                                        photo_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postal_code\n                                    \n                                \n                                \n                                    \n                                        postal_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number | Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number | Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationDeskDetailsComponent.html":{"url":"components/InformationDeskDetailsComponent.html","title":"component - InformationDeskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationDeskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-desk-details/information-desk-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-desk-details\n            \n\n            \n                styleUrls\n                ./information-desk-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-desk-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                informationDesk\n                            \n                            \n                                informationDeskPicture\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDesk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationDesk\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDeskPicture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { InformationDesk } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-information-desk-details',\n  templateUrl: './information-desk-details.component.html',\n  styleUrls: ['./information-desk-details.component.scss']\n})\nexport class InformationDeskDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  informationDesk: InformationDesk;\n  informationDeskPicture = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.informationDesk = this.navParams.get('informationDesk');\n    if (this.informationDesk && this.informationDesk.picture) {\n      this.informationDeskPicture = `${this.baseUrl}${this.informationDesk.picture}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ informationDesk.name }}\n  \n\n\n\n  \n    \n    \n      \n      \n      \n        {{ informationDesk.postal_code }} {{ informationDesk.municipality }}\n      \n      \n        \n          {{ 'trek.details.informationDesk.website' | translate }}\n        \n        -  Email  -\n        {{\n          informationDesk.phone\n        }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./information-desk-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ informationDesk.name }}                                      {{ informationDesk.postal_code }} {{ informationDesk.municipality }}                              {{ \\'trek.details.informationDesk.website\\' | translate }}                -  Email  -        {{          informationDesk.phone        }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationDeskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationIntro.html":{"url":"interfaces/InformationIntro.html","title":"interface - InformationIntro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationIntro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationItem.html":{"url":"interfaces/InformationItem.html","title":"interface - InformationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        external_url\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        external_url\n                                    \n                                \n                                \n                                    \n                                        external_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntervalFilter.html":{"url":"interfaces/IntervalFilter.html","title":"interface - IntervalFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntervalFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayersVisibilityComponent.html":{"url":"components/LayersVisibilityComponent.html","title":"component - LayersVisibilityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayersVisibilityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layers-visibility/layers-visibility.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layers-visibility\n            \n\n            \n                styleUrls\n                ./layers-visibility.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layers-visibility.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLayerVisibility\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                layerVisibilityChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layerVisibilityChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerVisibilityChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLayerVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-layers-visibility',\n  templateUrl: './layers-visibility.component.html',\n  styleUrls: ['./layers-visibility.component.scss']\n})\nexport class LayersVisibilityComponent {\n  changeLayerVisibility: any;\n  layers: any;\n\n  constructor(private navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.changeLayerVisibility = this.navParams.get('changeLayerVisibility');\n    this.layers = this.navParams.get('layers');\n  }\n\n  public layerVisibilityChange(event: any) {\n    this.changeLayerVisibility(event.detail.checked, event.detail.value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ layer.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./layers-visibility.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ layer.name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayersVisibilityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Private\n                                loaderStatus$\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                progressBarWidth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        condition\n                    \n                \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressBarWidth\n                    \n                \n                \n                    \n                        Default value : '50%'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { delay } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnDestroy {\n  @Input() public progressBarWidth = '50%';\n  @Input() public condition: boolean | null = null;\n  public loaderStatus: Boolean;\n  private loaderStatus$: Subscription;\n\n  constructor(public loading: LoadingService) {\n    // add delay to prevent expression has changed after it was checked\n    this.loaderStatus$ = this.loading.status\n      .pipe(delay(0))\n      .subscribe((status) => (this.loaderStatus = status));\n  }\n\n  ngOnDestroy(): void {\n    this.loaderStatus$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader-container {\n  height: calc(100% - 57px);\n  width: 100%;\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public status = new BehaviorSubject(false); // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds\n      .pipe(map((ids: string[]) => ids.length > 0))\n      .subscribe((isLoading: boolean) => {\n        if (isLoading !== service.status.getValue()) {\n          service.status.next(isLoading);\n        }\n      });\n    this.status.subscribe();\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds\n        .getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(\n      map((loadingIds: string[]) => {\n        return loadingIds.indexOf(id) >= 0;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next.handle(req).pipe(\n      tap((event: HttpEvent) => {\n        if (event instanceof HttpResponse) {\n          this.loading.finish(loadingId);\n        }\n      }),\n      catchError((error: any) => {\n        this.loading.finish(loadingId);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadingIds\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                begin\n                            \n                            \n                                finish\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            begin\n                        \n                        \n                    \n                \n            \n            \n                \nbegin(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finish\n                        \n                        \n                    \n                \n            \n            \n                \nfinish(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoading\n                        \n                        \n                    \n                \n            \n            \n                \nisLoading(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public status = new BehaviorSubject(false); // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds\n      .pipe(map((ids: string[]) => ids.length > 0))\n      .subscribe((isLoading: boolean) => {\n        if (isLoading !== service.status.getValue()) {\n          service.status.next(isLoading);\n        }\n      });\n    this.status.subscribe();\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds\n        .getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(\n      map((loadingIds: string[]) => {\n        return loadingIds.indexOf(id) >= 0;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next.handle(req).pipe(\n      tap((event: HttpEvent) => {\n        if (event instanceof HttpResponse) {\n          this.loading.finish(loadingId);\n        }\n      }),\n      catchError((error: any) => {\n        this.loading.finish(loadingId);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/LowerRoundPipe.html":{"url":"pipes/LowerRoundPipe.html","title":"pipe - LowerRoundPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  LowerRoundPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/lower-round.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        lowerRound\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/lower-round.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'lowerRound' })\nexport class LowerRoundPipe implements PipeTransform {\n  transform(value: number): number {\n    return Math.floor(value);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTreksVizComponent.html":{"url":"components/MapTreksVizComponent.html","title":"component - MapTreksVizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapTreksVizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-treks-viz\n            \n\n            \n                styleUrls\n                ./map-treks-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-treks-viz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                mapViz\n                            \n                            \n                                    Private\n                                markerPosition\n                            \n                            \n                                    Private\n                                practices\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addSourcesLayersEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                    Public\n                                    Async\n                                flyToUserLocation\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                presentConfirmFeatures\n                            \n                            \n                                    Public\n                                    Async\n                                presentInAppDisclosure\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                dataSettings\n                            \n                            \n                                filteredTreks\n                            \n                            \n                                mapConfig\n                            \n                            \n                                offline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService, screenOrientation: ScreenOrientation, platform: Platform, geolocate: GeolocateService, modalController: ModalController, alertController: AlertController, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        screenOrientation\n                                                  \n                                                        \n                                                                    ScreenOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSettings\n                    \n                \n                \n                    \n                        Type :         DataSetting[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredTreks\n                    \n                \n                \n                    \n                        Type :     MinimalTrek[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Type :     MapboxOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:54\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mapIsLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateToTrek\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:56\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addSourcesLayersEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSourcesLayersEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            flyToUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flyToUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:445\n                \n            \n\n\n            \n                \n                    Fly to user location else fitbounds to trek\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirmFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmFeatures(features: Feature[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:402\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                            Feature[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInAppDisclosure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInAppDisclosure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:469\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapViz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mapViz', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Marker | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            practices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataSetting\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport {\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  Map,\n  MapboxOptions,\n  Marker\n} from 'mapbox-gl';\nimport { Observable } from 'rxjs';\nimport { filter, distinctUntilChanged, throttleTime } from 'rxjs/operators';\nimport { SelectTrekComponent } from '@app/components/select-trek/select-trek.component';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\n\nimport { MinimalTrek, DataSetting, Trek } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '../abstract/unsubscribe';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { throttle } from 'lodash';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-treks-viz',\n  templateUrl: './map-treks-viz.component.html',\n  styleUrls: ['./map-treks-viz.component.scss']\n})\nexport class MapTreksVizComponent extends UnSubscribe\n  implements OnChanges, OnDestroy {\n  private map: Map;\n  private markerPosition: Marker | undefined;\n  private practices: DataSetting;\n\n  @ViewChild('mapViz', { static: false }) mapViz: any;\n\n  @Input() public filteredTreks: MinimalTrek[] | null = null;\n  @Input() public mapConfig: MapboxOptions;\n  @Input() public dataSettings: DataSetting[];\n  @Input() public commonSrc: string;\n  @Input() public offline: Boolean;\n\n  @Output() public navigateToTrek = new EventEmitter();\n  @Output() public mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private settings: SettingsService,\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private geolocate: GeolocateService,\n    private modalController: ModalController,\n    private alertController: AlertController,\n    private translate: TranslateService\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n\n    this.flyToUserLocation = throttle(this.flyToUserLocation, 3000);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTreks: SimpleChange = changes.filteredTreks;\n    if (\n      changesCurrentTreks.currentValue &&\n      !changesCurrentTreks.previousValue\n    ) {\n      this.createMap();\n    } else {\n      if (this.map) {\n        const treksSource = this.map.getSource('treks-points') as GeoJSONSource;\n        if (treksSource && this.filteredTreks) {\n          treksSource.setData({\n            type: 'FeatureCollection',\n            features: this.filteredTreks\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.markerPosition) {\n      this.markerPosition.remove();\n      this.markerPosition = undefined;\n    }\n\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopOnMapTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap() {\n    if (this.mapConfig && this.mapConfig.style && this.filteredTreks) {\n      if (\n        this.offline &&\n        (this.platform.is('ios') || this.platform.is('android'))\n      ) {\n        (this.mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.commonSrc +\n          (environment.offlineMapConfig.style as any).sources[\n            'tiles-background'\n          ].tiles[0];\n      }\n\n      const coordinates: number[][] = [];\n\n      this.filteredTreks.forEach((feature) => {\n        if (\n          feature &&\n          feature.geometry &&\n          feature.geometry.coordinates &&\n          feature.geometry.coordinates[0] &&\n          feature.geometry.coordinates[1]\n        ) {\n          coordinates.push(feature.geometry.coordinates);\n        }\n      });\n\n      const bounds: any = coordinates.reduce(\n        (bounds, coord) => bounds.extend(coord),\n        new mapboxgl.LngLatBounds(coordinates[0], coordinates[0])\n      );\n\n      this.map = new mapboxgl.Map({\n        ...this.mapConfig,\n        container: 'map-treks'\n      });\n\n      this.map.fitBounds(bounds, environment.map.TreksfitBoundsOptions);\n\n      this.map.addControl(\n        new mapboxgl.NavigationControl({ showCompass: false }),\n        'top-left'\n      );\n\n      this.map.addControl(\n        new mapboxgl.ScaleControl({\n          unit: 'metric'\n        })\n      );\n\n      this.map.addControl(\n        new mapboxgl.AttributionControl({\n          compact: false,\n          customAttribution: environment.map.attributionText\n        })\n      );\n\n      if (!environment.map.enableRotation) {\n        this.map.dragRotate.disable();\n        this.map.touchZoomRotate.disableRotation();\n      }\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          })\n        );\n      }\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create(\n          (observer: any) => {\n            const practices: DataSetting | undefined = this.dataSettings.find(\n              (data) => data.id === 'practice'\n            );\n            if (practices) {\n              this.practices = practices;\n              practices.values.forEach((practice, index: number) => {\n                this.map.loadImage(\n                  `${this.commonSrc}${practice.pictogram}`,\n                  (error: any, image: any) => {\n                    this.map.addImage(practice.id.toString(), image);\n                    if (index + 1 === practices.values.length) {\n                      observer.complete();\n                    }\n                  }\n                );\n              });\n            }\n          }\n        );\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$\n            .pipe(\n              filter((currentPosition) => currentPosition !== null),\n              distinctUntilChanged(),\n              throttleTime(environment.backgroundGeolocation.interval)\n            )\n            .subscribe(async (coordinates: any) => {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates);\n              } else {\n                const el = document.createElement('div');\n                const currentHeading = await this.geolocate.checkIfCanGetCurrentHeading();\n                el.className = currentHeading ? 'pulse-and-view' : 'pulse';\n\n                this.markerPosition = new mapboxgl.Marker({\n                  element: el\n                }).setLngLat(coordinates);\n                if (this.markerPosition) {\n                  this.markerPosition.addTo(this.map);\n                }\n              }\n            }),\n          this.geolocate.currentHeading$.subscribe((heading) => {\n            if (this.markerPosition && heading) {\n              (this.markerPosition as any).setRotation(heading);\n            }\n          }),\n          loadImages.subscribe({\n            complete: async () => {\n              this.addSourcesLayersEvents();\n\n              const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n              if (shouldShowInAppDisclosure) {\n                await this.presentInAppDisclosure();\n              }\n              this.geolocate.startOnMapTracking();\n            }\n          })\n        );\n      });\n    }\n  }\n\n  async addSourcesLayersEvents() {\n    this.map.addSource('treks-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: this.filteredTreks\n      },\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50\n    } as GeoJSONSourceRaw);\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: await this.settings.getZoneFromStorage()\n    });\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterTextPaint,\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 16,\n        'text-offset': [0, 0.1]\n      }\n    });\n\n    const circleColorExpression: any[] = [];\n    circleColorExpression.push('match');\n    circleColorExpression.push(['get', 'practice']);\n    this.practices.values.forEach((practice) => {\n      circleColorExpression.push(practice.id);\n      circleColorExpression.push(practice.color);\n    });\n    circleColorExpression.push(environment.map.clusterPaint['circle-color']);\n\n    this.map.addLayer({\n      id: 'trek-point',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        ...environment.map.clusterPaint,\n        'circle-color': circleColorExpression as any,\n        'circle-radius': 16\n      }\n    });\n\n    this.map.addLayer({\n      id: 'trek-point-icon',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['get', 'practice'],\n        'icon-size': environment.map.globalMapIconSize\n      }\n    });\n\n    this.map.on('click', 'clusters-circle', (e) => {\n      const features = this.map.queryRenderedFeatures(e.point, {\n        layers: ['clusters-circle']\n      });\n\n      const featureProperties = features[0].properties;\n      if (!!featureProperties) {\n        const clusterId = featureProperties.cluster_id;\n\n        if (this.map.getZoom() === this.mapConfig.maxZoom) {\n          // no more zoom, display features inside cluster\n          (this.map.getSource(\n            'treks-points'\n          ) as GeoJSONSource).getClusterLeaves(\n            featureProperties.cluster_id,\n            Infinity,\n            0,\n            (\n              err: any,\n              featuresInCluster: Feature[]\n            ) => {\n              if (err) {\n                throw err;\n              }\n              this.presentConfirmFeatures(\n                featuresInCluster as Feature[]\n              );\n            }\n          );\n        } else {\n          // zoom to next cluster expansion\n          (this.map.getSource(\n            'treks-points'\n          ) as GeoJSONSource).getClusterExpansionZoom(\n            clusterId,\n            (err: any, zoom: number) => {\n              if (err) {\n                return;\n              }\n              const coordinates = (features[0].geometry as Point).coordinates;\n              this.map.easeTo({\n                center: [coordinates[0], coordinates[1]],\n                zoom: zoom\n              });\n            }\n          );\n        }\n      }\n    });\n\n    this.map.on('click', 'trek-point', (e) => {\n      const feature = this.map.queryRenderedFeatures(e.point, {\n        layers: ['trek-point']\n      })[0];\n      if (!!feature.properties) {\n        this.navigateToTrek.emit(feature.properties.id);\n      }\n    });\n\n    // map instance for cypress test\n    this.mapViz.nativeElement.mapInstance = this.map;\n\n    this.mapIsLoaded.emit(true);\n  }\n\n  async presentConfirmFeatures(\n    features: Feature[]\n  ) {\n    const radioTreks: {\n      id: number;\n      name: string;\n      imgPractice: { src: string; color: string | undefined };\n    }[] = [];\n\n    features.forEach((feature) => {\n      const hydratedTrek = this.settings.getHydratedTrek(\n        feature as Trek,\n        this.commonSrc\n      );\n      const trek = {\n        id: hydratedTrek.properties.id,\n        name: hydratedTrek.properties.name,\n        imgPractice: {\n          src: this.commonSrc + hydratedTrek.properties.practice.pictogram,\n          color: hydratedTrek.properties.practice.color\n        }\n      };\n      radioTreks.push(trek);\n    });\n\n    const modal = await this.modalController.create({\n      component: SelectTrekComponent,\n      componentProps: { radioTreks },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.selectedTrekId) {\n      this.navigateToTrek.emit(data.selectedTrekId);\n    }\n  }\n\n  /**\n   * Fly to user location else fitbounds to trek\n   */\n  public async flyToUserLocation() {\n    const userLocation = await this.geolocate.getCurrentPosition();\n    if (userLocation) {\n      this.map.flyTo({\n        center: [userLocation.longitude, userLocation.latitude],\n        animate: false,\n        zoom: environment.trekZoom.zoom\n      });\n    } else {\n      const errorTranslation: any = await this.translate\n        .get('geolocate.error')\n        .toPromise();\n      // Inform user about problem\n      const alertLocation = await this.alertController.create({\n        header: errorTranslation['header'],\n        subHeader: errorTranslation['subHeader'],\n        message: errorTranslation['message'],\n        buttons: [errorTranslation['confirmButton']]\n      });\n\n      await alertLocation.present();\n    }\n  }\n\n  public async presentInAppDisclosure(): Promise {\n    const modal = await this.modalController.create({\n      component: InAppDisclosureComponent,\n      componentProps: {},\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    await modal.onDidDismiss();\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./map-treks-viz.component.scss\n                \n                .options-button-container {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 24px;\n  top: 24px;\n  z-index: 5;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapTreksVizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrek.html":{"url":"interfaces/MinimalTrek.html","title":"interface - MinimalTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         MinimalTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MinimalTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrekProperties.html":{"url":"interfaces/MinimalTrekProperties.html","title":"interface - MinimalTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessibilities\n                                \n                                \n                                        departure\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        first_picture\n                                \n                                \n                                        id\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        practice\n                                \n                                \n                                        themes\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_picture\n                                    \n                                \n                                \n                                    \n                                        first_picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTreks.html":{"url":"interfaces/MinimalTreks.html","title":"interface - MinimalTreks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTreks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     MinimalTrek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreInformationsService.html":{"url":"injectables/MoreInformationsService.html","title":"injectable - MoreInformationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MoreInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/more-informations/more-informations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMoreItemById\n                            \n                            \n                                    Public\n                                getMoreItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: CacheService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItemById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItemById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InformationIntro, InformationItem } from '@app/interfaces/interfaces';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoreInformationsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  constructor(\n    private cache: CacheService,\n    private translate: TranslateService\n  ) {}\n\n  public getMoreItems(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.cache.get(\n      `${this.apiUrl}/flatpages.json`,\n      httpOptions\n    );\n  }\n\n  public getMoreItemById(id: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.cache.get(\n      `${this.apiUrl}/flatpages/${id}.json`,\n      httpOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoreItemPage.html":{"url":"components/MoreItemPage.html","title":"component - MoreItemPage","body":"\n                   \n\n\n\n\n\n  Components\n  MoreItemPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more-item/more-item.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more-item\n            \n\n            \n                styleUrls\n                ./more-item.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more-item.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectionError\n                            \n                            \n                                moreItem\n                            \n                            \n                                moreItemId\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationItem } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more-item',\n  templateUrl: './more-item.page.html',\n  styleUrls: ['./more-item.page.scss']\n})\nexport class MoreItemPage extends UnSubscribe implements OnInit, OnDestroy {\n  moreItem: InformationItem;\n  moreItemId: number;\n  connectionError = false;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data) => {\n        const item = data['item'] as (InformationItem | 'connectionError');\n        if (item === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreItem = item;\n        }\n      })\n    );\n  }\n\n  refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ moreItem.title }}\n  \n\n\n  \n  \n  \n  \n    \n      \n        \n          \n          \n             {{ moreItem.external_url }} \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more-item.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ moreItem.title }}                                                             {{ moreItem.external_url }}                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoreItemPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoreItemPageModule.html":{"url":"modules/MoreItemPageModule.html","title":"module - MoreItemPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MoreItemPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more-item/more-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoreItemPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { MoreItemPage } from './more-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoreItemPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      item: MoreItemResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MoreItemPage]\n})\nexport class MoreItemPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreItemResolver.html":{"url":"guards/MoreItemResolver.html","title":"guard - MoreItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more-item.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more-item.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/more-item.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { InformationItem } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreItemResolver\n  implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const moreItemId = +(route.paramMap.get('moreItemId'));\n    return this.more.getMoreItemById(moreItemId).pipe(\n      tap((item) => {\n        if (\n          (this.platform.is('ios') || this.platform.is('android')) &&\n          environment.useFirebase\n        ) {\n          this.firebaseAnalytics.setCurrentScreen(`${item.title}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorePage.html":{"url":"components/MorePage.html","title":"component - MorePage","body":"\n                   \n\n\n\n\n\n  Components\n  MorePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more\n            \n\n            \n                styleUrls\n                ./more.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                connectionError\n                            \n                            \n                                moreInformationsIntro\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreInformationsIntro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationIntro[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '@env/environment';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationIntro } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.page.html',\n  styleUrls: ['./more.page.scss']\n})\nexport class MorePage extends UnSubscribe implements OnInit {\n  moreInformationsIntro: InformationIntro[];\n  connectionError = false;\n  public appName: string = environment.appName;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const items: InformationIntro[] | 'connectionError' = data.items;\n        if (items === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreInformationsIntro = items;\n        }\n      })\n    );\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n\n\n\n  \n  \n  \n\n  \n    \n      \n        \n          {{ moreInformationIntro.title }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}                                       {{ moreInformationIntro.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MorePageModule.html":{"url":"modules/MorePageModule.html","title":"module - MorePageModule","body":"\n                   \n\n\n\n\n    Modules\n    MorePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_MorePageModule_imports\n\n\n\n\nMorePage\n\nMorePage\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MorePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MorePage } from './more.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    component: MorePage,\n    resolve: {\n      items: MoreResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MorePage]\n})\nexport class MorePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreResolver.html":{"url":"guards/MoreResolver.html","title":"guard - MoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more.resolver.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { InformationIntro } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreResolver\n  implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve = (route: ActivatedRouteSnapshot) =>\n    this.more.getMoreItems().pipe(\n      tap(() => {\n        if (\n          (this.platform.is('ios') || this.platform.is('android')) &&\n          environment.useFirebase\n        ) {\n          this.firebaseAnalytics.setCurrentScreen(`Information`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineTreksService.html":{"url":"injectables/OnlineTreksService.html","title":"injectable - OnlineTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OnlineTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online-treks/online-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                filteredTreks$\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreksError$\n                            \n                            \n                                    Public\n                                treks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCommonImgSrc\n                            \n                            \n                                    Public\n                                getMapConfigForTrekById\n                            \n                            \n                                    Public\n                                getMinimalTrekById\n                            \n                            \n                                    Public\n                                getPoisForTrekById\n                            \n                            \n                                    Public\n                                getTouristicContentsForTrekById\n                            \n                            \n                                    Public\n                                getTouristicEventsForTrekById\n                            \n                            \n                                    Public\n                                getTrekById\n                            \n                            \n                                    Public\n                                getTrekDetailsUrl\n                            \n                            \n                                    Public\n                                getTrekImageSrc\n                            \n                            \n                                    Public\n                                getTrekMapUrl\n                            \n                            \n                                    Private\n                                getTreks\n                            \n                            \n                                    Public\n                                getTreksMapUrl\n                            \n                            \n                                    Public\n                                getTreksUrl\n                            \n                            \n                                    Public\n                                loadTreks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cache: CacheService, filterTreks: FilterTreksService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapConfigForTrekById(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinimalTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinimalTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoisForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicContentsForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicEventsForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekDetailsUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekMapUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreksError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents\n} from '@app/interfaces/interfaces';\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { environment } from '@env/environment';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnlineTreksService implements TreksService {\n  public offline = false;\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public onlineTreksError$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private cache: CacheService,\n    private filterTreks: FilterTreksService,\n    private translate: TranslateService\n  ) {\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n  }\n\n  public loadTreks() {\n    this.onlineTreksError$.next(null);\n    this.getTreks().subscribe(\n      (data) => {\n        this.treks$.next(data);\n      },\n      (error) => {\n        this.onlineTreksError$.next(error);\n      }\n    );\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      return (\n        environment.onlineBaseUrl +\n        (!!picture ? picture.url : trek.properties.first_picture.url)\n      );\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    return `${environment.onlineBaseUrl}`;\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks';\n  }\n\n  public getTrekDetailsUrl(trekId: number, parentId?: number): string {\n    return !parentId\n      ? `/app/tabs/treks/trek-details/${trekId}`\n      : `/app/tabs/treks/trek-details/${parentId}/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number, parentId?: number): string {\n    return !parentId ? `/app/map/${trekId}` : `/app/map/${parentId}/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n\n    return this.http.get(\n      `${this.apiUrl}/treks.geojson`,\n      httpOptions\n    );\n  }\n\n  public getTrekById(trekId: number, parentId?: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/treks/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/trek.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getPoisForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/pois/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/pois.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getTouristicContentsForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_contents/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/touristic_contents.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getTouristicEventsForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_events/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/touristic_events.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getMinimalTrekById(trekId: number): MinimalTrek | undefined {\n    const trek = this.treks$.getValue();\n    if (!!trek) {\n      return trek.features.find((feature) => feature.properties.id === trekId);\n    } else {\n      return undefined;\n    }\n  }\n\n  public getMapConfigForTrekById(trek: Trek): MapboxOptions {\n    const mapConfig: MapboxOptions = {\n      ...cloneDeep(environment.onlineMapConfig),\n      zoom: environment.trekZoom.zoom\n    };\n    (mapConfig as any).trekBounds = trek.bbox as [\n      number,\n      number,\n      number,\n      number\n    ];\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        legend\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiComponent.html":{"url":"components/PoiComponent.html","title":"component - PoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi/poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi\n            \n\n            \n                styleUrls\n                ./poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                offline\n                            \n                            \n                                poi\n                            \n                            \n                                typePois\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi/poi.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        poi\n                    \n                \n                \n                    \n                        Type :         Poi\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typePois\n                    \n                \n                \n                    \n                        Type :         DataSetting | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi/poi.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Picture, Poi, Trek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-poi',\n  templateUrl: './poi.component.html',\n  styleUrls: ['./poi.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoiComponent implements OnChanges {\n  @Input() public poi: Poi;\n  @Input() public offline = false;\n  @Input() public commonSrc: string;\n  @Input() public typePois: DataSetting | undefined;\n\n  public baseUrl = environment.onlineBaseUrl;\n  public picture: Picture | null = null;\n  public typeImgSrc: string | null = null;\n\n  constructor(\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.poi) {\n      if (this.typePois && this.poi.properties.type) {\n        const currentTypePoi = this.typePois.values.find(\n          (typePoi) => typePoi.id === this.poi.properties.type\n        );\n        if (currentTypePoi) {\n          this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n        }\n      }\n\n      if (this.poi.properties.pictures.length > 0) {\n        this.picture = this.poi.properties.pictures[0];\n        if (this.offline) {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.offlineTreks.getTrekImageSrc(\n              {} as Trek,\n              this.poi.properties.pictures[0]\n            )\n          };\n        } else {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.onlineTreks.getTrekImageSrc(\n              {} as Trek,\n              this.poi.properties.pictures[0]\n            )\n          };\n        }\n      } else {\n        this.picture = null;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ picture!.legend }}\n      ({{ picture!.author }})\n    \n  \n  \n    \n      \n      \n        {{ poi.properties.name }}\n      \n    \n  \n  \n    \n      \n        \n      \n    \n\n    \n      \n        Information pratiques\n        \n      \n    \n\n    \n      \n        Contact\n        \n        \n          \n            {{ poi.properties.email }}\n          \n        \n        \n           {{ poi.properties.website }} \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi.component.scss\n                \n                .card-header-container {\n  align-items: flex-end;\n  display: flex;\n  .img-header {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ picture!.legend }}      ({{ picture!.author }})                                {{ poi.properties.name }}                                                            Information pratiques                                    Contact                                      {{ poi.properties.email }}                                     {{ poi.properties.website }}                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiDetailsComponent.html":{"url":"components/PoiDetailsComponent.html","title":"component - PoiDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi-details/poi-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi-details\n            \n\n            \n                styleUrls\n                ./poi-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                poi\n                            \n                            \n                                    Public\n                                poiImg\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                settingsSub\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams, settings: SettingsService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poiImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { Poi, Picture, Trek } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-poi-details',\n  templateUrl: './poi-details.component.html',\n  styleUrls: ['./poi-details.component.scss']\n})\nexport class PoiDetailsComponent {\n  public offline = false;\n  public baseUrl = environment.onlineBaseUrl;\n  public poi: Poi;\n  public poiImg = '';\n  public typeImgSrc: string | null = null;\n  public settingsSub: Subscription;\n  public picture: Picture | null = null;\n  public commonSrc: string;\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navParams: NavParams,\n    public settings: SettingsService,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService\n  ) {}\n\n  ionViewWillEnter() {\n    this.poi = this.navParams.get('poi');\n    this.offline = this.navParams.get('offline');\n    this.commonSrc = this.navParams.get('commonSrc');\n\n    if (\n      this.poi &&\n      this.poi.properties &&\n      this.poi.properties.pictures &&\n      this.poi.properties.pictures.length > 0 &&\n      this.poi.properties.pictures[0].url\n    ) {\n      this.picture = this.poi.properties.pictures[0];\n      if (this.offline) {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.offlineTreks.getTrekImageSrc(\n            {} as Trek,\n            this.poi.properties.pictures[0]\n          )\n        };\n      } else {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.onlineTreks.getTrekImageSrc(\n            {} as Trek,\n            this.poi.properties.pictures[0]\n          )\n        };\n      }\n    } else {\n      this.picture = null;\n    }\n\n    this.settingsSub = this.settings.data$.subscribe((settings) => {\n      if (settings) {\n        const typePois = settings.find((setting) => setting.id === 'poi_types');\n\n        if (typePois && this.poi.properties.type) {\n          const currentTypePoi = typePois.values.find(\n            (typePoi) => typePoi.id === this.poi.properties.type\n          );\n          if (currentTypePoi) {\n            this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n          }\n        }\n      }\n    });\n  }\n\n  close(): void {\n    this.settingsSub.unsubscribe();\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ poi.properties.name }}\n  \n\n\n\n  \n    \n      \n      \n        \n        {{ poi.properties.pictures[0]?.legend }}\n        ({{ poi.properties.pictures[0].author }})\n      \n    \n\n    \n      \n        \n          \n        \n      \n\n      \n        \n          trek.details.usefulInformation\n          \n        \n      \n\n      \n        \n          trek.details.contact\n          \n          \n            \n              {{ poi.properties.email }}\n            \n          \n          \n            \n              {{ poi.properties.website }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi-details.component.scss\n                \n                .card-legend {\n  align-items: flex-end;\n  display: flex;\n  .img-legend {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ poi.properties.name }}                                    {{ poi.properties.pictures[0]?.legend }}        ({{ poi.properties.pictures[0].author }})                                                                            trek.details.usefulInformation                                                trek.details.contact                                              {{ poi.properties.email }}                                                          {{ poi.properties.website }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pois.html":{"url":"interfaces/Pois.html","title":"interface - Pois","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pois\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressComponent.html":{"url":"components/ProgressComponent.html","title":"component - ProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/progress/progress.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress\n            \n\n            \n                styleUrls\n                ./progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentProgress\n                            \n                            \n                                    Private\n                                currentProgress$\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/progress/progress.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentProgress$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  changeDetection: ChangeDetectionStrategy.Default,\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss']\n})\nexport class ProgressComponent {\n  public currentProgress: number;\n  private currentProgress$: Subscription;\n\n  constructor(\n    public offlineTreks: OfflineTreksService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(\n      (val) => {\n        this.currentProgress = val;\n        this.ref.detectChanges();\n      }\n    );\n  }\n\n  ionViewWillLeave(): void {\n    this.currentProgress$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ 'trek.downloadAlert.loading' | translate }}\n        \n        \n          \n          \n        \n      \n      \n        \n          \n          \n            {{ 'trek.downloadAlert.storage' | translate }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./progress.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'trek.downloadAlert.loading\\' | translate }}                                                                                                {{ \\'trek.downloadAlert.storage\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Property.html":{"url":"interfaces/Property.html","title":"interface - Property","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Property\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SearchTreksService\n                \n            \n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentMaxTreks\n                            \n                            \n                                    Public\n                                currentSearchValue\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Private\n                                treks\n                            \n                            \n                                    Public\n                                treksByStep\n                            \n                            \n                                    Public\n                                viewIsLoad\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                expandTreks\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                navigateToTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Public\n                                trackTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, searchTreks: SearchTreksService, navParams: NavParams, platform: Platform, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchTreks\n                                                  \n                                                        \n                                                                        SearchTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            expandTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    expandTreks(infiniteScroll: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infiniteScroll\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackTrek(index: number, element: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentMaxTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentSearchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTreks | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksByStep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewIsLoad\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\n\nimport { MinimalTrek, MinimalTreks, Trek } from '@app/interfaces/interfaces';\nimport { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\n\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchTreksService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent extends UnSubscribe implements OnInit {\n  public filteredTreks: MinimalTrek[] = [];\n  public currentSearchValue: string;\n  public viewIsLoad = false;\n  private treks: MinimalTreks | null = null;\n  public treksByStep = 30;\n  public currentMaxTreks = 30;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private searchTreks: SearchTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n    private ref: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const isOnline = this.navParams.get('isOnline');\n    const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      treksTool.treks$.subscribe((treks) => {\n        this.treks = treks;\n        if (this.treks) {\n          this.filteredTreks = this.searchTreks.search(this.treks.features, '');\n        }\n        this.viewIsLoad = true;\n        this.ref.detectChanges();\n      })\n    );\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public search(searchValue: string): void {\n    this.currentSearchValue = searchValue;\n    if (this.treks) {\n      this.filteredTreks = this.searchTreks.search(\n        this.treks.features,\n        searchValue\n      );\n    } else {\n      this.filteredTreks = [];\n    }\n  }\n\n  public navigateToTrek(id: number) {\n    this.modalCtrl.dismiss(id);\n  }\n\n  public trackTrek(index: number, element: Trek): number | null {\n    return element ? element.properties.id : null;\n  }\n\n  public expandTreks(infiniteScroll: any) {\n    if (this.currentMaxTreks  this.filteredTreks.length) {\n        this.currentMaxTreks = this.filteredTreks.length;\n      } else {\n        this.currentMaxTreks += this.treksByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'search.title' | translate | uppercase }}\n  \n  \n    \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n     0; else userMsg\">\n      \n        {{ trek.properties.name }}\n        \n      \n    \n    \n      \n        \n          \n            {{ 'search.noResult' | translate }}\n          \n        \n      \n    \n    \n       \n    \n  \n\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'search.title\\' | translate | uppercase }}                                       0; else userMsg\">              {{ trek.properties.name }}                                                          {{ \\'search.noResult\\' | translate }}                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchTreksService.html":{"url":"injectables/SearchTreksService.html","title":"injectable - SearchTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-treks/search-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(treks: MinimalTrek[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search-treks/search-treks.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MinimalTrek } from '@app/interfaces/interfaces';\nimport { deburr } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchTreksService {\n  public search(treks: MinimalTrek[], searchValue: string): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n    if (!!!searchValue) {\n      return treks.sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n    }\n    searchValue = deburr(searchValue.toLowerCase());\n    return treks\n      .filter((trek) => {\n        return deburr(trek.properties.name.toLowerCase()).includes(searchValue);\n      })\n      .sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectFilterComponent.html":{"url":"components/SelectFilterComponent.html","title":"component - SelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/select-filter/select-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-filter\n            \n\n            \n                styleUrls\n                ./select-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentMaxFilterValues\n                            \n                            \n                                filterValuesByStep\n                            \n                            \n                                selectedItems\n                            \n                            \n                                temporaryFilter\n                            \n                            \n                                valuesToDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                expandFilterValues\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Public\n                                searchValuesInFilter\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                trackFilterValues\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/select-filter/select-filter.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            expandFilterValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    expandFilterValues(infiniteScroll: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infiniteScroll\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchValuesInFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchValuesInFilter(filter: Filter, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FilterValue[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilterValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilterValues(index: number, element: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentMaxFilterValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterValuesByStep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temporaryFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Filter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valuesToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FilterValue[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\nimport { deburr } from 'lodash';\n\n@Component({\n  selector: 'app-select-filter',\n  templateUrl: './select-filter.component.html',\n  styleUrls: ['./select-filter.component.scss']\n})\nexport class SelectFilterComponent implements OnInit {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  selectedItems: any[];\n  currentMaxFilterValues = 20;\n  filterValuesByStep = 20;\n  temporaryFilter: Filter;\n  valuesToDisplay: FilterValue[];\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {}\n\n  ionViewDidEnter(): void {\n    this.temporaryFilter = this.filter;\n    this.valuesToDisplay = [...this.filter.values];\n  }\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ temporaryFilter: this.temporaryFilter });\n  }\n\n  public expandFilterValues(infiniteScroll: any): void {\n    if (this.currentMaxFilterValues \n        this.valuesToDisplay.length\n      ) {\n        this.currentMaxFilterValues = this.valuesToDisplay.length;\n      } else {\n        this.currentMaxFilterValues += this.filterValuesByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n\n  public trackFilterValues(index: number, element: FilterValue): number | null {\n    return element ? element.id : null;\n  }\n\n  public valueChanged(event: { checked: boolean; value: FilterValue }): void {\n    const filterValue = this.temporaryFilter.values.find(\n      (value) => value.id === event.value.id\n    );\n    if (filterValue) {\n      filterValue.checked = event.checked;\n    }\n  }\n\n  public search(searchValue: string): void {\n    if (searchValue) {\n      this.valuesToDisplay = this.searchValuesInFilter(\n        this.filter,\n        searchValue\n      );\n    } else {\n      this.valuesToDisplay = [...this.filter.values];\n    }\n    this.currentMaxFilterValues = this.filterValuesByStep;\n  }\n\n  public searchValuesInFilter(\n    filter: Filter,\n    searchValue: string\n  ): FilterValue[] {\n    if (!filter) {\n      return [];\n    }\n\n    if (!!!searchValue) {\n      return filter.values.sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    }\n    searchValue = searchValue.toLowerCase();\n    return filter.values\n      .filter((value) => {\n        return deburr(value.name.toLowerCase()).startsWith(searchValue);\n      })\n      .sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ filter.values.length + ' ' + filter.name }}\n  \n   filterValuesByStep\"\n    color=\"primary\"\n  >\n    \n    \n  \n\n\n\n  \n  \n\n  \n     \n  \n\n\n\n  \n    \n      \n        {{ 'filters.cancelButton' | translate }}\n      \n      \n        {{ 'filters.confirmButton' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select-filter.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.values.length + \\' \\' + filter.name }}     filterValuesByStep\"    color=\"primary\"  >                                           {{ \\'filters.cancelButton\\' | translate }}                    {{ \\'filters.confirmButton\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectPoiComponent.html":{"url":"components/SelectPoiComponent.html","title":"component - SelectPoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectPoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/select-poi/select-poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-poi\n            \n\n            \n                styleUrls\n                ./select-poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select-poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedPoiId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                selectedPoiChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                radioPois\n                            \n                            \n                                themePois\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/select-poi/select-poi.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        radioPois\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-poi/select-poi.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        themePois\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-poi/select-poi.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectedPoiChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedPoiChange(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-poi/select-poi.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedPoiId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-poi/select-poi.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-select-poi',\n  templateUrl: './select-poi.component.html',\n  styleUrls: ['./select-poi.component.scss']\n})\nexport class SelectPoiComponent implements OnInit {\n  @Input() public themePois: string;\n  @Input() public radioPois: {\n    id: number;\n    name: string;\n    imgPoi: { src: string; color: string | undefined };\n  }[];\n  selectedPoiId: number;\n\n  constructor(private modalController: ModalController) {}\n\n  ngOnInit() {}\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ selectedPoiId: this.selectedPoiId });\n  }\n\n  public selectedPoiChange(evt: any): void {\n    this.selectedPoiId = evt.detail.value;\n  }\n}\n\n    \n\n    \n        \n  \n     {{ themePois | translate }} \n  \n\n\n\n  \n    \n      \n        \n        \n        {{ poi.name }}\n      \n    \n  \n\n\n\n  \n    \n      \n        {{ 'mapTrek.poisAlert.cancelButton' | translate }}\n      \n      \n        {{ 'mapTrek.poisAlert.confirmButton' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select-poi.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ themePois | translate }}                                       {{ poi.name }}                                {{ \\'mapTrek.poisAlert.cancelButton\\' | translate }}                    {{ \\'mapTrek.poisAlert.confirmButton\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectPoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectTrekComponent.html":{"url":"components/SelectTrekComponent.html","title":"component - SelectTrekComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectTrekComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/select-trek/select-trek.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-trek\n            \n\n            \n                styleUrls\n                ./select-trek.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select-trek.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTrekId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                selectedTrekChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                radioTreks\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/select-trek/select-trek.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        radioTreks\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-trek/select-trek.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectedTrekChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectedTrekChange(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-trek/select-trek.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTrekId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-trek/select-trek.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-select-trek',\n  templateUrl: './select-trek.component.html',\n  styleUrls: ['./select-trek.component.scss']\n})\nexport class SelectTrekComponent implements OnInit {\n  @Input() public radioTreks: {\n    id: number;\n    name: string;\n    imgPractice: { src: string; color: string | undefined };\n  }[];\n  selectedTrekId: number;\n\n  constructor(private modalController: ModalController) {}\n\n  ngOnInit() {}\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ selectedTrekId: this.selectedTrekId });\n  }\n\n  public selectedTrekChange(evt: any): void {\n    this.selectedTrekId = evt.detail.value;\n  }\n}\n\n    \n\n    \n        \n  \n     {{ 'mapTreks.treksAlert.title' | translate }} \n  \n\n\n\n  \n    \n      \n        {{ 'mapTreks.treksAlert.informUser' | translate }}\n      \n\n      \n        \n        \n        {{ trek.name }}\n      \n    \n  \n\n\n\n  \n    \n      \n        {{ 'mapTreks.treksAlert.cancelButton' | translate }}\n      \n      \n        {{ 'mapTreks.treksAlert.confirmButton' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select-trek.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ \\'mapTreks.treksAlert.title\\' | translate }}                       {{ \\'mapTreks.treksAlert.informUser\\' | translate }}                                    {{ trek.name }}                                {{ \\'mapTreks.treksAlert.cancelButton\\' | translate }}                    {{ \\'mapTreks.treksAlert.confirmButton\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectTrekComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         DataSetting[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataSetting[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Public\n                                filters$\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                order$\n                            \n                            \n                                    Public\n                                storage\n                            \n                            \n                                    Public\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFilters\n                            \n                            \n                                    Public\n                                getHydratedTrek\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getTouristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                getValueForPropertyById\n                            \n                            \n                                    Public\n                                    Async\n                                getZoneFromStorage\n                            \n                            \n                                    Public\n                                getZoneFromUrl\n                            \n                            \n                                    Public\n                                loadSettings\n                            \n                            \n                                    Public\n                                resetFilters\n                            \n                            \n                                    Public\n                                saveFiltersState\n                            \n                            \n                                    Public\n                                saveOrderState\n                            \n                            \n                                    Private\n                                    Async\n                                setOfflineSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: Storage, platform: Platform, network: Network, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings/settings.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilters(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHydratedTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHydratedTrek(trek: Trek, commonSrc: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commonSrc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HydratedTrek\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicCategoriesWithFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicCategoriesWithFeatures(touristicContents: TouristicContents)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touristicContents\n                                    \n                                                TouristicContents\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TouristicCategoryWithFeatures[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueForPropertyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueForPropertyById(propertyName: string, id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Property | InformationDesk | TouristicCategorie | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getZoneFromStorage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getZoneFromStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getZoneFromUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getZoneFromUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFiltersState(filters: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveOrderState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrderState(order: Order, geolocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    geolocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setOfflineSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOfflineSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            order$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([0, 0])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GeoJSON } from 'geojson';\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { Platform } from '@ionic/angular';\nimport { Network } from '@ionic-native/network/ngx';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  Trek,\n  Filter,\n  Settings,\n  DataSetting,\n  HydratedTrek,\n  Property,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  TouristicCategorie,\n  Order\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public filters$ = new BehaviorSubject(null);\n  public order$ = new BehaviorSubject(null);\n  // User location, used for ordering treks by distance\n  public userLocation$ = new BehaviorSubject([0, 0]);\n  public data$ = new BehaviorSubject(null);\n\n  constructor(\n    public http: HttpClient,\n    public storage: Storage,\n    private platform: Platform,\n    private network: Network,\n    private translate: TranslateService\n  ) {}\n\n  public loadSettings() {\n    this.setOfflineSettings();\n\n    this.getSettings().subscribe(async (settings) => {\n      await this.storage.set('settings', JSON.stringify(settings));\n      this.filters$.next(this.getFilters(settings));\n      this.data$.next(settings.data);\n    });\n\n    this.getZoneFromUrl().subscribe(\n      async (zone) => {\n        await this.storage.set('zone', JSON.stringify(zone));\n      },\n      async () => {\n        if (\n          ((this.platform.is('ios') || this.platform.is('android')) &&\n            this.network.type !== 'none') ||\n          (!this.platform.is('ios') && !this.platform.is('android'))\n        ) {\n          await this.storage.remove('zone');\n        }\n      }\n    );\n  }\n\n  private async setOfflineSettings() {\n    const defaultSettings = JSON.parse(await this.storage.get(`settings`));\n    if (defaultSettings) {\n      this.filters$.next(this.getFilters(defaultSettings));\n      this.data$.next(defaultSettings.data);\n    }\n  }\n\n  private getFilters(settings: Settings) {\n    const filters: Filter[] = [];\n    if (settings && settings.filters && settings.data) {\n      settings.filters.forEach((filter) => {\n        const currentDataSetting = settings.data.find(\n          (data: DataSetting) => data.id === filter.id\n        );\n        if (currentDataSetting) {\n          filter = { ...filter, ...currentDataSetting, values: [] };\n          filter.values = currentDataSetting.values.map((value) => ({\n            ...value,\n            checked: false\n          }));\n          filters.push(filter);\n        }\n      });\n    }\n\n    return filters;\n  }\n\n  public getSettings(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.http.get(this.apiUrl + '/settings.json', httpOptions);\n  }\n\n  public getZoneFromUrl(): Observable {\n    return this.http.get(this.apiUrl + '/contour/contour.geojson');\n  }\n\n  public async getZoneFromStorage() {\n    const zone = JSON.parse(await this.storage.get('zone'));\n    return zone\n      ? zone\n      : {\n          type: 'FeatureCollection',\n          features: []\n        };\n  }\n\n  public saveFiltersState(filters: Filter[]): void {\n    this.filters$.next(filters);\n  }\n\n  public saveOrderState(order: Order, geolocation?: number[]): void {\n    this.order$.next({ type: order, value: geolocation });\n  }\n\n  public resetFilters(): void {\n    let filters = cloneDeep(this.filters$.getValue());\n    if (!!filters) {\n      filters.forEach((filter) => {\n        filter.values.forEach((value) => (value.checked = false));\n      });\n    } else {\n      filters = [];\n    }\n    this.saveFiltersState(filters);\n  }\n\n  private getValueForPropertyById(\n    propertyName: string,\n    id: number | string\n  ): Property | InformationDesk | TouristicCategorie | string {\n    const dataSetting = this.data$.getValue();\n\n    if (dataSetting) {\n      const property = dataSetting.find((data) => data.id === propertyName);\n      if (property) {\n        const propertyValue = property.values.find((value) => value.id === id);\n        if (propertyValue) {\n          return propertyValue;\n        } else {\n          return { id: -1, name: '' };\n        }\n      }\n    }\n\n    return { id: -1, name: '' };\n  }\n\n  public getHydratedTrek(trek: Trek, commonSrc: string): HydratedTrek {\n    const hydratedTrek: HydratedTrek = cloneDeep(trek) as any;\n\n    if (trek.properties.difficulty) {\n      hydratedTrek.properties.difficulty = this.getValueForPropertyById(\n        'difficulty',\n        trek.properties.difficulty\n      ) as Property;\n    }\n\n    if (trek.properties.practice) {\n      hydratedTrek.properties.practice = this.getValueForPropertyById(\n        'practice',\n        trek.properties.practice\n      ) as Property;\n    }\n\n    if (trek.properties.route) {\n      hydratedTrek.properties.route = this.getValueForPropertyById(\n        'route',\n        trek.properties.route\n      ) as Property;\n    }\n\n    if (trek.properties.departure_city) {\n      hydratedTrek.properties.departure_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.departure_city\n      ) as Property;\n    }\n\n    if (trek.properties.arrival_city) {\n      hydratedTrek.properties.arrival_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.arrival_city\n      ) as Property;\n    }\n\n    if (trek.properties.cities) {\n      hydratedTrek.properties.cities = trek.properties.cities.map(\n        (city) => this.getValueForPropertyById('cities', city) as Property\n      );\n    }\n\n    if (trek.properties.networks) {\n      hydratedTrek.properties.networks = trek.properties.networks.map(\n        (network) =>\n          this.getValueForPropertyById('networks', network) as Property\n      );\n    }\n\n    if (trek.properties.themes) {\n      hydratedTrek.properties.themes = trek.properties.themes.map(\n        (theme) => this.getValueForPropertyById('themes', theme) as Property\n      );\n    }\n\n    if (trek.properties.information_desks) {\n      hydratedTrek.properties.information_desks.forEach((information_desk) => {\n        information_desk.type = this.getValueForPropertyById(\n          'information_desk_types',\n          information_desk.type as number\n        ) as Property;\n      });\n    }\n\n    const regexp = new RegExp(`src=\"${this.apiUrl}`, 'gi');\n\n    if (trek.properties.description) {\n      hydratedTrek.properties.description = trek.properties.description\n        .replace(regexp, 'src=\"')\n        .replace(/src\\=\\\"\\//gi, `src=\"${commonSrc}/`);\n    }\n\n    if (trek.properties.advice) {\n      hydratedTrek.properties.advice = trek.properties.advice\n        .replace(regexp, 'src=\"')\n        .replace(/src\\=\\\"\\//gi, `src=\"${commonSrc}/`);\n    }\n\n    return hydratedTrek;\n  }\n\n  public getTouristicCategoriesWithFeatures(\n    touristicContents: TouristicContents\n  ): TouristicCategoryWithFeatures[] {\n    const touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[] = [];\n    if (touristicContents && Array.isArray(touristicContents.features)) {\n      const categories = touristicContents.features\n        .map((touristicContent) => touristicContent.properties.category)\n        .filter((v, i, a) => a.indexOf(v) === i);\n      categories.forEach((categoryId) => {\n        const category = this.getValueForPropertyById(\n          'touristiccontent_categories',\n          categoryId\n        ) as TouristicCategorie;\n        touristicCategoriesWithFeatures.push({\n          id: categoryId,\n          name: category ? category.name : '',\n          features: touristicContents.features.filter(\n            (touristicContent) =>\n              touristicContent.properties.category === categoryId\n          )\n        });\n      });\n    }\n\n    return touristicCategoriesWithFeatures;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedFiltersModule.html":{"url":"modules/SharedFiltersModule.html","title":"module - SharedFiltersModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedFiltersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedFiltersModule\n\n\n\ncluster_SharedFiltersModule_declarations\n\n\n\ncluster_SharedFiltersModule_exports\n\n\n\n\nFilterComponent\n\nFilterComponent\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\nSharedFiltersModule -->\n\nFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nSharedFiltersModule -->\n\nFilterValueComponent->SharedFiltersModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nSharedFiltersModule -->\n\nFiltersComponent->SharedFiltersModule\n\n\n\n\n\nInAppDisclosureComponent\n\nInAppDisclosureComponent\n\nSharedFiltersModule -->\n\nInAppDisclosureComponent->SharedFiltersModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSharedFiltersModule -->\n\nSearchComponent->SharedFiltersModule\n\n\n\n\n\nSelectFilterComponent\n\nSelectFilterComponent\n\nSharedFiltersModule -->\n\nSelectFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterComponent \n\nFilterComponent \n\nFilterComponent  -->\n\nSharedFiltersModule->FilterComponent \n\n\n\n\n\nFilterValueComponent \n\nFilterValueComponent \n\nFilterValueComponent  -->\n\nSharedFiltersModule->FilterValueComponent \n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nSharedFiltersModule->FiltersComponent \n\n\n\n\n\nInAppDisclosureComponent \n\nInAppDisclosureComponent \n\nInAppDisclosureComponent  -->\n\nSharedFiltersModule->InAppDisclosureComponent \n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSharedFiltersModule->SearchComponent \n\n\n\n\n\nSelectFilterComponent \n\nSelectFilterComponent \n\nSelectFilterComponent  -->\n\nSharedFiltersModule->SelectFilterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-filters.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InAppDisclosureComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FiltersComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InAppDisclosureComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { FilterComponent } from '@app/components/filter/filter.component';\nimport { FilterValueComponent } from '@app/components/filter-value/filter-value.component';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\n\n@NgModule({\n  declarations: [\n    FiltersComponent,\n    FilterComponent,\n    FilterValueComponent,\n    SelectFilterComponent,\n    SearchComponent,\n    InAppDisclosureComponent\n  ],\n  imports: [CommonModule, TranslateModule.forChild()],\n  entryComponents: [FiltersComponent, SelectFilterComponent],\n  exports: [\n    FiltersComponent,\n    FilterComponent,\n    FilterValueComponent,\n    SelectFilterComponent,\n    SearchComponent,\n    InAppDisclosureComponent\n  ]\n})\nexport class SharedFiltersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { GeolocateNotificationsComponent } from '@app/components/geolocate-notifications/geolocate-notifications.component';\nimport { MapTrekVizComponent } from '@app/components/map-trek-viz/map-trek-viz.component';\nimport { MapTreksVizComponent } from '@app/components/map-treks-viz/map-treks-viz.component';\n\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [\n    MapTreksVizComponent,\n    MapTrekVizComponent,\n    GeolocateNotificationsComponent\n  ],\n  imports: [CommonModule, IonicModule, TranslateModule.forChild()],\n  exports: [\n    MapTreksVizComponent,\n    MapTrekVizComponent,\n    GeolocateNotificationsComponent\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedTreksModule.html":{"url":"modules/SharedTreksModule.html","title":"module - SharedTreksModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedTreksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PoiComponent } from '@app/components/poi/poi.component';\nimport { TrekCardComponent } from '@app/components/trek-card/trek-card.component';\nimport { CustomPipesModule } from './custom-pipes.module';\n\n@NgModule({\n  declarations: [PoiComponent, TrekCardComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule,\n    TranslateModule.forChild(),\n    CustomPipesModule\n  ],\n  exports: [PoiComponent, TrekCardComponent]\n})\nexport class SharedTreksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapsibleListComponent } from '@app/components/collapsible-list/collapsible-list.component';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectErrorComponent } from '@app/components/connect-error/connect-error.component';\nimport { LoaderComponent } from '@app/components/loader/loader.component';\n\n@NgModule({\n  declarations: [\n    CollapsibleListComponent,\n    ConnectErrorComponent,\n    LoaderComponent\n  ],\n  imports: [CommonModule, IonicModule, RouterModule],\n  exports: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent]\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tabs/tabs.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss']\n})\nexport class TabsPage {\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private location: Location\n  ) {\n    this.platform.backButton.subscribeWithPriority(9999, () => {\n      const url = this.router.url;\n      if (\n        url !== '/app/tabs/treks' &&\n        url !== '/app/tabs/treks-offline' &&\n        url !== '/app/tabs/more'\n      ) {\n        this.location.back();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'tabbar.treks' | translate }}\n    \n    \n      \n      {{ 'tabbar.offline' | translate }}\n    \n    \n      \n      {{ 'tabbar.more' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'tabbar.treks\\' | translate }}                    {{ \\'tabbar.offline\\' | translate }}                    {{ \\'tabbar.more\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MorePageModule\n                        \n                        \n                            SharedUiModule\n                        \n                        \n                            TabsPageRoutingModule\n                        \n                        \n                            TreksPageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\nimport { TabsPageRoutingModule } from './tabs.routing.module';\nimport { TreksPageModule } from '../treks/treks.module';\nimport { MorePageModule } from '../more/more.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n    TreksPageModule,\n    MorePageModule,\n    TranslateModule.forChild(),\n    SharedUiModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { TreksPage } from '../treks/treks.page';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'treks',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule'\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { isStage: true }\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule'\n          }\n        ]\n      },\n      {\n        path: 'treks-offline',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            data: { offline: true },\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true }\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true, isStage: true }\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n            data: { offline: true }\n          }\n        ]\n      },\n      {\n        path: 'more',\n        children: [\n          {\n            path: '',\n            loadChildren: '../more/more.module#MorePageModule'\n          },\n          {\n            path: ':moreItemId',\n            loadChildren:\n              '../more/more-item/more-item.module#MoreItemPageModule'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/app/tabs/treks',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategorie.html":{"url":"interfaces/TouristicCategorie.html","title":"interface - TouristicCategorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategoryWithFeatures.html":{"url":"interfaces/TouristicCategoryWithFeatures.html","title":"interface - TouristicCategoryWithFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategoryWithFeatures\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContent.html":{"url":"interfaces/TouristicContent.html","title":"interface - TouristicContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContents.html":{"url":"interfaces/TouristicContents.html","title":"interface - TouristicContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvent.html":{"url":"interfaces/TouristicEvent.html","title":"interface - TouristicEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvents.html":{"url":"interfaces/TouristicEvents.html","title":"interface - TouristicEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trek.html":{"url":"interfaces/Trek.html","title":"interface - Trek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Trek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         TrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekCardComponent.html":{"url":"components/TrekCardComponent.html","title":"component - TrekCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrekCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trek-card/trek-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-card\n            \n\n            \n                styleUrls\n                ./trek-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hydratedTrek\n                            \n                            \n                                    Public\n                                imgPracticeSrc\n                            \n                            \n                                    Public\n                                imgSrc\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                routerLink\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickDeleteConfirm\n                            \n                            \n                                    Private\n                                    Async\n                                deleteTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                presentDeleteConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isStage\n                            \n                            \n                                numStage\n                            \n                            \n                                offline\n                            \n                            \n                                parentId\n                            \n                            \n                                showAllData\n                            \n                            \n                                trek\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, loadingController: LoadingController, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, settings: SettingsService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trek-card/trek-card.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isStage\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        numStage\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trek\n                    \n                \n                \n                    \n                        Type :         Trek\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickDeleteConfirm($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            deleteTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTrek()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            presentDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentDeleteConfirm(isAlert?: boolean, alertMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAlert\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alertMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hydratedTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HydratedTrek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgPracticeSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routerLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Trek, HydratedTrek, Picture } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trek-card',\n  templateUrl: './trek-card.component.html',\n  styleUrls: ['./trek-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrekCardComponent implements OnInit {\n  @Input() public trek: Trek;\n  @Input() public offline = false;\n  @Input() public showAllData: boolean;\n  @Input() public isStage = false;\n  @Input() public numStage = 0;\n  @Input() public parentId: number | undefined = undefined;\n\n  public hydratedTrek: HydratedTrek;\n  public imgSrc: string;\n  public routerLink: string;\n  public imgPracticeSrc: string;\n\n  constructor(\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    public settings: SettingsService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    const trekService = this.offline ? this.offlineTreks : this.onlineTreks;\n    this.hydratedTrek = this.settings.getHydratedTrek(\n      this.trek,\n      trekService.getCommonImgSrc()\n    );\n    if (this.offline) {\n      this.imgSrc = this.offlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.offlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram\n          } as Picture\n        );\n      }\n    } else {\n      this.imgSrc = this.onlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.onlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram\n          } as Picture\n        );\n      }\n    }\n\n    if (this.isStage) {\n      this.routerLink = `/app/tabs/treks${\n        this.offline ? '-offline' : ''\n      }/trek-details/${this.parentId}/${this.trek.properties.id}`;\n    } else {\n      this.routerLink = `/app/tabs/treks${\n        this.offline ? '-offline' : ''\n      }/trek-details/${this.trek.properties.id}`;\n    }\n  }\n\n  public clickDeleteConfirm($event: Event) {\n    $event.stopPropagation();\n    this.presentDeleteConfirm();\n  }\n\n  private async deleteTrek() {\n    const translationTrekCard = await this.translate\n      .get('trekCard')\n      .toPromise();\n\n    const loader = await this.loadingController.create({\n      message: translationTrekCard.deletionInProgress\n    });\n    await loader.present();\n\n    this.offlineTreks\n      .removeTrek(\n        this.isStage && this.parentId ? this.parentId : this.trek.properties.id,\n        true\n      )\n      .subscribe(\n        () => {},\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(\n            true,\n            translationTrekCard.errorWhileDeleting\n          );\n        },\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(true, translationTrekCard.trekIsDelete);\n        }\n      );\n  }\n\n  private async presentDeleteConfirm(isAlert?: boolean, alertMsg?: string) {\n    const translationTrekCard = await this.translate\n      .get('trekCard')\n      .toPromise();\n    const deleteConfirm = await this.alertController.create({\n      header: translationTrekCard.deleteTitle,\n      message: isAlert ? alertMsg : translationTrekCard.askDelete,\n      buttons: isAlert\n        ? [translationTrekCard.confirmButton]\n        : [\n            {\n              text: translationTrekCard.cancelButton,\n              role: 'cancel',\n              cssClass: 'secondary'\n            },\n            {\n              text: translationTrekCard.deleteLabel,\n              handler: () => {\n                this.deleteTrek();\n              }\n            }\n          ]\n    });\n\n    await deleteConfirm.present();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n  \n    \n    \n      \n        {{\n          isStage\n            ? ('trek.details.stage' | translate) + ' ' + numStage + ' - '\n            : ''\n        }}\n        {{ hydratedTrek.properties?.name }}\n      \n    \n  \n  \n    \n      \n        {{ 'treks.departure' | translate }}\n        \n          {{ hydratedTrek.properties.departure }}\n        \n        \n          {{ hydratedTrek.properties.departure_city?.name }}\n        \n      \n      \n        \n          \n        \n        \n          {{ hydratedTrek.properties.difficulty?.name }}\n        \n        \n          {{\n            hydratedTrek.properties.duration | lowerRound | number: '1.0-0'\n          }}h 0\"\n            >{{\n              60 * (hydratedTrek.properties.duration % 1) | number: '1.0-0'\n            }}min\n        \n        = 24 && showAllData\"\n        >\n          {{ hydratedTrek.properties.duration / 24 | number: '1.0-0' }}j\n        \n        \n          {{ hydratedTrek.properties.length / 1000 | number: '1.1-1':'fr' }} km\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-card.component.scss\n                \n                .trash-button {\n  position: absolute;\n  z-index: 10;\n  top: 12px;\n  right: 12px;\n}\n\n.extand-card {\n  height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.picto-practice {\n  max-width: 24px;\n  max-height: 24px;\n}\n\n.extra-content-card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.minimize-title {\n  font-size: 15px;\n}\n\n.minimize-padding-bottom {\n  padding-bottom: 8px;\n}\n\n.no-padding-top {\n  padding-top: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{          isStage            ? (\\'trek.details.stage\\' | translate) + \\' \\' + numStage + \\' - \\'            : \\'\\'        }}        {{ hydratedTrek.properties?.name }}                                {{ \\'treks.departure\\' | translate }}                  {{ hydratedTrek.properties.departure }}                          {{ hydratedTrek.properties.departure_city?.name }}                                                                {{ hydratedTrek.properties.difficulty?.name }}                          {{            hydratedTrek.properties.duration | lowerRound | number: \\'1.0-0\\'          }}h 0\"            >{{              60 * (hydratedTrek.properties.duration % 1) | number: \\'1.0-0\\'            }}min                = 24 && showAllData\"        >          {{ hydratedTrek.properties.duration / 24 | number: \\'1.0-0\\' }}j                          {{ hydratedTrek.properties.length / 1000 | number: \\'1.1-1\\':\\'fr\\' }} km                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekContext.html":{"url":"interfaces/TrekContext.html","title":"interface - TrekContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonSrc\n                                \n                                \n                                        isStage\n                                \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        originalTrek\n                                \n                                \n                                        parentTrek\n                                \n                                \n                                        pois\n                                \n                                \n                                        touristicCategoriesWithFeatures\n                                \n                                \n                                        touristicContents\n                                \n                                \n                                        touristicEvents\n                                \n                                \n                                        trek\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonSrc\n                                    \n                                \n                                \n                                    \n                                        commonSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStage\n                                    \n                                \n                                \n                                    \n                                        isStage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     MapboxOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MapboxOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalTrek\n                                    \n                                \n                                \n                                    \n                                        originalTrek:         Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTrek\n                                    \n                                \n                                \n                                    \n                                        parentTrek:         Trek | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Pois\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pois\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicCategoriesWithFeatures\n                                    \n                                \n                                \n                                    \n                                        touristicCategoriesWithFeatures:         TouristicCategoryWithFeatures[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicCategoryWithFeatures[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicContents\n                                    \n                                \n                                \n                                    \n                                        touristicContents:         TouristicContents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicEvents\n                                    \n                                \n                                \n                                    \n                                        touristicEvents:         TouristicEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trek\n                                    \n                                \n                                \n                                    \n                                        trek:         HydratedTrek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TrekContextResolver.html":{"url":"guards/TrekContextResolver.html","title":"guard - TrekContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TrekContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/trek.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, router: Router, settingsService: SettingsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/trek.resolver.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/trek.resolver.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Pois,\n  Trek,\n  HydratedTrek,\n  TrekContext,\n  TreksService,\n  TouristicContents,\n  TouristicEvents\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class TrekContextResolver\n  implements Resolve {\n  constructor(\n    private loading: LoadingService,\n    private offlineTreks: OfflineTreksService,\n    private onlineTreks: OnlineTreksService,\n    private router: Router,\n    private settingsService: SettingsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const offline = !!route.data['offline'];\n    const isStage = !!route.data['isStage'];\n    const trekId = +(route.paramMap.get('trekId'));\n    const stageId = +(route.paramMap.get('stageId'));\n    const currentTrekId = isStage ? stageId : trekId;\n    const parentId: number | undefined = isStage ? trekId : undefined;\n\n    const treksService: TreksService = offline\n      ? this.offlineTreks\n      : this.onlineTreks;\n\n    return forkJoin(\n      treksService.getTrekById(currentTrekId, parentId),\n      treksService.getPoisForTrekById(currentTrekId, parentId),\n      treksService.getTouristicContentsForTrekById(currentTrekId, parentId),\n      treksService.getTouristicEventsForTrekById(currentTrekId, parentId),\n      isStage && parentId ? treksService.getTrekById(parentId) : of(null)\n    ).pipe(\n      map(\n        ([trek, pois, touristicContents, touristicEvents, parentTrek]: [\n          Trek | null,\n          Pois,\n          TouristicContents,\n          TouristicEvents,\n          Trek | null\n        ]): TrekContext | null => {\n          if (trek === null) {\n            this.router.navigate(['/']);\n            console.error('No trek found: ', currentTrekId);\n            return null;\n          } else {\n            const mapConfig: MapboxOptions = treksService.getMapConfigForTrekById(\n              isStage && parentId ? (parentTrek as Trek) : (trek as Trek),\n              offline\n            );\n            const commonSrc = treksService.getCommonImgSrc();\n            const hydratedTrek: HydratedTrek = this.settingsService.getHydratedTrek(\n              trek,\n              commonSrc\n            );\n            const touristicCategoriesWithFeatures = this.settingsService.getTouristicCategoriesWithFeatures(\n              touristicContents\n            );\n\n            if (\n              (this.platform.is('ios') || this.platform.is('android')) &&\n              environment.useFirebase\n            ) {\n              this.firebaseAnalytics.setCurrentScreen(\n                `${trek.properties.name}`\n              );\n            }\n\n            // get parent trek to display trek name\n            // trek stage\n            // trek previous\n            // trek next\n\n            return {\n              treksTool: treksService,\n              offline: offline,\n              originalTrek: trek,\n              trek: hydratedTrek,\n              pois,\n              touristicContents,\n              touristicCategoriesWithFeatures,\n              touristicEvents,\n              mapConfig,\n              commonSrc,\n              isStage,\n              parentTrek\n            };\n          }\n        }\n      ),\n      catchError((error: HttpErrorResponse) => {\n        this.loading.finish(); // there are two requests. finish loading if one fails\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekDetailsPageModule.html":{"url":"modules/TrekDetailsPageModule.html","title":"module - TrekDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekDetailsPageModule_imports\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-details/trek-details.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TrekDetailsPage } from './trek-details.page';\nimport { CustomPipesModule } from '@app/shared/custom-pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    },\n    component: TrekDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedTreksModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n    CustomPipesModule\n  ],\n  declarations: [TrekDetailsPage]\n})\nexport class TrekDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekMapPage.html":{"url":"components/TrekMapPage.html","title":"component - TrekMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrekMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/trek-map/trek-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-map\n            \n\n            \n                styleUrls\n                ./trek-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                connectionError\n                            \n                            \n                                    Public\n                                currentPois\n                            \n                            \n                                    Public\n                                currentTrek\n                            \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                modalPoiDetails\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                touristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                trekUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                    Public\n                                navigateToChildren\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                presentInformationDeskDetails\n                            \n                            \n                                    Public\n                                    Async\n                                presentPoiDetails\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, modalController: ModalController, route: ActivatedRoute, router: Router, settings: SettingsService, platform: Platform, popoverCtrl: PopoverController, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/trek-map/trek-map.page.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToChildren\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToChildren(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInformationDeskDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInformationDeskDetails(informationDesk: InformationDesk)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    informationDesk\n                                    \n                                                InformationDesk\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentPoiDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPoiDetails(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPois\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pois\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HydratedTrek | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalPoiDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLIonModalElement | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicCategoryWithFeatures[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trekUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ModalController, Platform, PopoverController } from '@ionic/angular';\n\nimport { MapboxOptions } from 'mapbox-gl';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport {\n  HydratedTrek,\n  Poi,\n  Pois,\n  TrekContext,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TreksService\n} from '@app/interfaces/interfaces';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-trek-map',\n  templateUrl: './trek-map.page.html',\n  styleUrls: ['./trek-map.page.scss']\n})\nexport class TrekMapPage extends UnSubscribe implements OnDestroy {\n  public currentTrek: HydratedTrek | null = null;\n  public currentPois: Pois;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public loader = true;\n  public trekUrl = '';\n  public connectionError = false;\n  public modalPoiDetails: HTMLIonModalElement | null;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public offline = false;\n  private treksTool: TreksService;\n\n  constructor(\n    private loading: LoadingService,\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public settings: SettingsService,\n    private platform: Platform,\n    private popoverCtrl: PopoverController,\n    private location: Location\n  ) {\n    super();\n  }\n\n  ionViewDidEnter(): void {\n    this.loading.begin('trek-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data): void => {\n        const context: TrekContext | 'connectionError' = data.context;\n        if (context === 'connectionError') {\n          this.connectionError = true;\n          this.loading.finish('trek-map'); // if there is a connection error, map won't be loaded\n        } else {\n          this.connectionError = false;\n          this.offline = context.offline;\n          this.currentTrek = context.trek;\n          this.currentPois = context.pois;\n          this.touristicCategoriesWithFeatures =\n            context.touristicCategoriesWithFeatures;\n          this.mapConfig = context.mapConfig;\n          this.treksTool = context.treksTool;\n          this.commonSrc = context.treksTool.getCommonImgSrc();\n          this.trekUrl = context.treksTool.getTrekDetailsUrl(\n            (this.currentTrek as any).properties.id\n          );\n        }\n      })\n    );\n\n    if (this.platform.is('android')) {\n      this.subscriptions$$.push(\n        this.platform.backButton.subscribeWithPriority(99999, async () => {\n          // close popover\n          try {\n            const popover = await this.popoverCtrl.getTop();\n            if (popover) {\n              popover.dismiss();\n              return;\n            }\n\n            const modal = await this.modalController.getTop();\n            if (modal) {\n              modal.dismiss();\n              return;\n            }\n\n            this.location.back();\n          } catch (error) {}\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  public async presentPoiDetails(poi: Poi): Promise {\n    if (this.modalPoiDetails) {\n      await this.modalPoiDetails.dismiss();\n    }\n\n    this.modalPoiDetails = await this.modalController.create({\n      component: PoiDetailsComponent,\n      componentProps: { poi, offline: this.offline, commonSrc: this.commonSrc },\n      cssClass: 'full-size'\n    });\n\n    this.modalPoiDetails.onDidDismiss().then(() => {\n      this.modalPoiDetails = null;\n    });\n\n    return await this.modalPoiDetails.present();\n  }\n\n  public async presentInformationDeskDetails(\n    informationDesk: InformationDesk\n  ): Promise {\n    const modal = await this.modalController.create({\n      component: InformationDeskDetailsComponent,\n      componentProps: { informationDesk }\n    });\n    return await modal.present();\n  }\n\n  public mapIsLoaded(event: Event): void {\n    this.loading.finish('trek-map');\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n  public navigateToChildren(id: number) {\n    if (this.currentTrek) {\n      this.router.navigate([\n        this.treksTool.getTrekDetailsUrl(id, this.currentTrek.properties.id)\n      ]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ currentTrek!.properties.name }}\n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-map.page.scss\n                \n                .bottom-container {\n  z-index: 8;\n  position: absolute;\n  bottom: 0;\n  padding: 0px 7px 5px 7px;\n  width: 100%;\n}\n\nion-header {\n  .custom-title {\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: 0.0125em;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ currentTrek!.properties.name }}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekMapPageModule.html":{"url":"modules/TrekMapPageModule.html","title":"module - TrekMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TrekMapPageModule_imports\n\n\n\n\nSelectPoiComponent\n\nSelectPoiComponent\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSelectPoiComponent->TrekMapPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-map/trek-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SelectPoiComponent\n                        \n                        \n                            TrekMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TrekMapPage } from './trek-map.page';\nimport { SelectPoiComponent } from '@app/components/select-poi/select-poi.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrekMapPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [TrekMapPage, SelectPoiComponent]\n})\nexport class TrekMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekProperties.html":{"url":"interfaces/TrekProperties.html","title":"interface - TrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MinimalTrekProperties\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        children\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        duration\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        networks\n                                \n                                \n                                        pictures\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Treks\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Treks.html":{"url":"interfaces/Treks.html","title":"interface - Treks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Treks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Trek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksContext.html":{"url":"interfaces/TreksContext.html","title":"interface - TreksContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TreksContextResolver.html":{"url":"guards/TreksContextResolver.html","title":"guard - TreksContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TreksContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/treks.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/treks.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/treks.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nimport { TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\n@Injectable()\nexport class TreksContextResolver implements Resolve {\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline\n      ? this.offlineTreks\n      : this.onlineTreks;\n    const mapConfig =\n      offline && (this.platform.is('ios') || this.platform.is('android'))\n        ? environment.offlineMapConfig\n        : environment.onlineMapConfig;\n\n    if (\n      (this.platform.is('ios') || this.platform.is('android')) &&\n      environment.useFirebase\n    ) {\n      this.firebaseAnalytics.setCurrentScreen(`Treks`);\n    }\n\n    return of({\n      treksTool: treksService,\n      offline: offline,\n      mapConfig\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksMapPage.html":{"url":"components/TreksMapPage.html","title":"component - TreksMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TreksMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/treks-map/treks-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                FilterTreksService\n                \n            \n\n\n            \n                selector\n                app-treks-map\n            \n\n            \n                styleUrls\n                ./treks-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Public\n                                isInView\n                            \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Private\n                                mergeFiltersTreks$\n                            \n                            \n                                    Public\n                                noNetwork\n                            \n                            \n                                    Public\n                                numberOfActiveFilters\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                treksUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkNetwork\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ionViewDidLeave\n                            \n                            \n                                    Public\n                                loadTreks\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentFilters\n                            \n                            \n                                    Public\n                                    Async\n                                presentSearch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, filterTreks: FilterTreksService, modalController: ModalController, onlineTreks: OnlineTreksService, router: Router, route: ActivatedRoute, settings: SettingsService, network: Network, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/treks-map/treks-map.page.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkNetwork\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkNetwork()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(loaded: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loaded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInView\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeFiltersTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberOfActiveFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { environment } from '@env/environment';\nimport { unsubscribe, UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport {\n  MinimalTrek,\n  TreksContext,\n  TreksService\n} from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, mergeMap, first, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-treks-map',\n  templateUrl: './treks-map.page.html',\n  styleUrls: ['./treks-map.page.scss'],\n  providers: [FilterTreksService]\n})\nexport class TreksMapPage extends UnSubscribe implements OnInit, OnDestroy {\n  private mergeFiltersTreks$: Subscription;\n  public filteredTreks: MinimalTrek[];\n  public numberOfActiveFilters: string;\n  public offline: boolean;\n  private treksTool: TreksService;\n  public isInView = false;\n  public treksUrl: string;\n  public appName: string = environment.appName;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public currentPosition$: Subscription;\n  public noNetwork = false;\n  public loaderStatus: Boolean;\n\n  constructor(\n    public loading: LoadingService,\n    private filterTreks: FilterTreksService,\n    private modalController: ModalController,\n    public onlineTreks: OnlineTreksService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public settings: SettingsService,\n    private network: Network,\n    private platform: Platform\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.checkNetwork();\n\n    this.loading.begin('treks-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const context: TreksContext = data.context;\n        this.offline = context.offline;\n        this.treksTool = context.treksTool;\n        this.treksUrl = this.treksTool.getTreksUrl();\n        this.mapConfig = cloneDeep(context.mapConfig);\n        this.commonSrc = this.treksTool.getCommonImgSrc();\n      }),\n      this.onlineTreks.onlineTreksError$.subscribe((error) => {\n        if (!!error) {\n          this.loading.finish(); // if there was a connection error, map could not be loaded\n        }\n      }),\n      this.loading.status\n        .pipe(delay(0))\n        .subscribe((status) => (this.loaderStatus = status))\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n  ionViewDidEnter(): void {\n    this.mapIsLoaded(false);\n    this.mergeFiltersTreks$ = combineLatest([\n      this.route.data.pipe(\n        first(),\n        map((data) => data.context),\n        mergeMap((context: TreksContext) => context.treksTool.filteredTreks$)\n      ),\n      this.filterTreks.activeFiltersNumber$\n    ]).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n      this.numberOfActiveFilters =\n        numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n      this.filteredTreks = filteredTreks;\n      this.isInView = true;\n    });\n    this.subscriptions$$.push(this.mergeFiltersTreks$);\n  }\n\n  ionViewDidLeave(): void {\n    this.isInView = false;\n    unsubscribe(this.mergeFiltersTreks$);\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public mapIsLoaded(loaded: boolean): void {\n    if (loaded) {\n      this.loading.finish('treks-map');\n    }\n  }\n\n  public loadTreks(): void {\n    this.checkNetwork();\n    if (!this.noNetwork) {\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    }\n  }\n\n  public checkNetwork(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n   0)\n    \"\n  >\n    \n      \n        \n          \n            {{ 'toolbar.filters' | translate }} {{ numberOfActiveFilters\n            }}\n          \n            {{ 'toolbar.search' | translate }}\n        \n      \n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-map.page.scss\n                \n                .custom-button {\n  width: 100px;\n  text-transform: capitalize;\n}\n\n.button-margin-left {\n  margin-left: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}      0)    \"  >                                        {{ \\'toolbar.filters\\' | translate }} {{ numberOfActiveFilters            }}                      {{ \\'toolbar.search\\' | translate }}                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksMapPageModule.html":{"url":"modules/TreksMapPageModule.html","title":"module - TreksMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule_imports\n\n\n\n\nSelectTrekComponent\n\nSelectTrekComponent\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSelectTrekComponent->TreksMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks-map/treks-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SelectTrekComponent\n                        \n                        \n                            TreksMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FiltersComponentModule } from '@app/components/filters/filters.module';\n\nimport { TreksMapPage } from './treks-map.page';\nimport { SelectTrekComponent } from '@app/components/select-trek/select-trek.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TreksMapPage,\n    resolve: {\n      context: TreksContextResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n    FiltersComponentModule\n  ],\n  declarations: [TreksMapPage, SelectTrekComponent]\n})\nexport class TreksMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksOrderComponent.html":{"url":"components/TreksOrderComponent.html","title":"component - TreksOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreksOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/treks-order/treks-order.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treks-order\n            \n\n            \n                styleUrls\n                ./treks-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-order.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentOrder\n                            \n                            \n                                isFirstCheck\n                            \n                            \n                                orders\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                    Async\n                                presentInAppDisclosure\n                            \n                            \n                                    Public\n                                    Async\n                                treksOrderChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams, settings: SettingsService, platform: Platform, backgroundGeolocation: BackgroundGeolocation, popoverController: PopoverController, modalController: ModalController, geolocate: GeolocateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/treks-order/treks-order.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInAppDisclosure\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInAppDisclosure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            treksOrderChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    treksOrderChange(orderValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirstCheck\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\nimport {\n  NavParams,\n  Platform,\n  PopoverController,\n  ModalController\n} from '@ionic/angular';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Order } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-treks-order',\n  templateUrl: './treks-order.component.html',\n  styleUrls: ['./treks-order.component.scss']\n})\nexport class TreksOrderComponent extends UnSubscribe {\n  orders: any;\n  currentOrder: Order;\n  isFirstCheck = true;\n\n  constructor(\n    private navParams: NavParams,\n    private settings: SettingsService,\n    private platform: Platform,\n    private backgroundGeolocation: BackgroundGeolocation,\n    private popoverController: PopoverController,\n    private modalController: ModalController,\n    private geolocate: GeolocateService\n  ) {\n    super();\n  }\n\n  ionViewWillEnter() {\n    this.orders = this.navParams.get('orders');\n\n    this.subscriptions$$.push(\n      this.settings.order$.subscribe((order) => {\n        this.currentOrder = order!.type;\n      })\n    );\n  }\n\n  public async treksOrderChange(orderValue: string) {\n    let error = false;\n    if (orderValue === 'location') {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        let startLocation;\n        try {\n          const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n          if (shouldShowInAppDisclosure) {\n            await this.presentInAppDisclosure();\n          }\n          startLocation = await this.backgroundGeolocation.getCurrentLocation();\n        } catch (catchError) {\n          error = true;\n        }\n        if (startLocation) {\n          this.settings.saveOrderState(orderValue, [\n            startLocation.longitude,\n            startLocation.latitude\n          ]);\n        } else {\n          error = true;\n        }\n        await this.popoverController.dismiss({ error });\n      } else if ('geolocation' in navigator) {\n        const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n        if (shouldShowInAppDisclosure) {\n          await this.presentInAppDisclosure();\n        }\n        navigator.geolocation.getCurrentPosition(\n          async (position) => {\n            this.settings.saveOrderState(orderValue, [\n              position.coords.longitude,\n              position.coords.latitude\n            ]);\n            await this.popoverController.dismiss();\n          },\n          async () => {\n            await this.popoverController.dismiss({ error: true });\n          }\n        );\n      }\n    } else if (orderValue === 'alphabetical') {\n      this.settings.saveOrderState(orderValue);\n      await this.popoverController.dismiss();\n    } else if (orderValue === 'random') {\n      this.settings.saveOrderState(orderValue);\n      await this.popoverController.dismiss();\n    }\n  }\n\n  public async presentInAppDisclosure(): Promise {\n    const modal = await this.modalController.create({\n      component: InAppDisclosureComponent,\n      componentProps: {},\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    await modal.onDidDismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'toolbar.orderTitle' | translate }}\n    \n    \n      {{ order.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-order.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'toolbar.orderTitle\\' | translate }}              {{ order.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InAppDisclosureComponent', 'selector': 'app-in-app-disclosure'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'SelectPoiComponent', 'selector': 'app-select-poi'},{'name': 'SelectTrekComponent', 'selector': 'app-select-trek'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksPageModule.html":{"url":"modules/TreksPageModule.html","title":"module - TreksPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\ncluster_TreksPageModule_imports\n\n\n\n\nTreksPage\n\nTreksPage\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks/treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { FiltersComponentModule } from '@app/components/filters/filters.module';\n\nimport { RouterModule } from '@angular/router';\nimport { TreksPage } from './treks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedTreksModule,\n    SharedUiModule,\n    FiltersComponentModule,\n    RouterModule.forChild([]),\n    TranslateModule.forChild()\n  ],\n  declarations: [TreksPage]\n})\nexport class TreksPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksService.html":{"url":"interfaces/TreksService.html","title":"interface - TreksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filteredTreks$\n                                \n                                \n                                        offline\n                                \n                                \n                                        treks$\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCommonImgSrc\n                                \n                                \n                                    getMapConfigForTrekById\n                                \n                                \n                                    getPoisForTrekById\n                                \n                                \n                                    getTouristicContentsForTrekById\n                                \n                                \n                                    getTouristicEventsForTrekById\n                                \n                                \n                                    getTrekById\n                                \n                                \n                                    getTrekDetailsUrl\n                                \n                                \n                                    getTrekImageSrc\n                                \n                                \n                                    getTrekMapUrl\n                                \n                                \n                                    getTreksMapUrl\n                                \n                                \n                                    getTreksUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetMapConfigForTrekById(trek: Trek, isOffline: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:271\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isOffline\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoisForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicContentsForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicEventsForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekDetailsUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:267\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:268\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekMapUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredTreks$\n                                    \n                                \n                                \n                                    \n                                        filteredTreks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treks$\n                                    \n                                \n                                \n                                    \n                                        treks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnSubscribe.html":{"url":"classes/UnSubscribe.html","title":"class - UnSubscribe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnSubscribe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/abstract/unsubscribe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nexport class UnSubscribe implements OnInit, OnDestroy {\n  protected subscriptions$$: Subscription[];\n\n  constructor() {\n    this.subscriptions$$ = [];\n  }\n\n  ngOnInit() {\n    if (!!this.subscriptions$$) {\n      this.subscriptions$$ = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$$.forEach((subscription: Subscription) =>\n      unsubscribe(subscription)\n    );\n    this.subscriptions$$ = [];\n  }\n}\n\nexport function unsubscribe(subscription: Subscription) {\n  if (subscription && subscription.unsubscribe) {\n    subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            noAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            class\n            UnSubscribe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            function\n            unsubscribe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/collapsible-list/collapsible-list.component.ts\n            \n            component\n            CollapsibleListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/connect-error/connect-error.component.ts\n            \n            component\n            ConnectErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter-value/filter-value.component.ts\n            \n            component\n            FilterValueComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            component\n            GeolocateNotificationsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/in-app-disclosure/in-app-disclosure.component.ts\n            \n            component\n            InAppDisclosureComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/information-desk-details/information-desk-details.component.ts\n            \n            component\n            InformationDeskDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/layers-visibility/layers-visibility.component.ts\n            \n            component\n            LayersVisibilityComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            component\n            MapTrekVizComponent\n            \n                5 %\n                (2/37)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            component\n            MapTreksVizComponent\n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/poi-details/poi-details.component.ts\n            \n            component\n            PoiDetailsComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/poi/poi.component.ts\n            \n            component\n            PoiComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/progress/progress.component.ts\n            \n            component\n            ProgressComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/select-filter/select-filter.component.ts\n            \n            component\n            SelectFilterComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/select-poi/select-poi.component.ts\n            \n            component\n            SelectPoiComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/select-trek/select-trek.component.ts\n            \n            component\n            SelectTrekComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/trek-card/trek-card.component.ts\n            \n            component\n            TrekCardComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/treks-order/treks-order.component.ts\n            \n            component\n            TreksOrderComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            ContainsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            DataSetting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            FilterValue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrekProperties\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationDesk\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationIntro\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            IntervalFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrekProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTreks\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Poi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Pois\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Property\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Settings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategorie\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategoryWithFeatures\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Trek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekContext\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekProperties\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Treks\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/more/more-item/more-item.page.ts\n            \n            component\n            MoreItemPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/more/more.page.ts\n            \n            component\n            MorePage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/trek-details/trek-details.page.ts\n            \n            component\n            TrekDetailsPage\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                src/app/pages/trek-map/trek-map.page.ts\n            \n            component\n            TrekMapPage\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pages/treks-map/treks-map.page.ts\n            \n            component\n            TreksMapPage\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/pages/treks/treks.page.ts\n            \n            component\n            TreksPage\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/app/pipes/lower-round.pipe.ts\n            \n            pipe\n            LowerRoundPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resolvers/more-item.resolver.ts\n            \n            guard\n            MoreItemResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/more.resolver.ts\n            \n            guard\n            MoreResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/trek.resolver.ts\n            \n            guard\n            TrekContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/treks.resolver.ts\n            \n            guard\n            TreksContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            injectable\n            FilterTreksService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/geolocate/geolocate.service.ts\n            \n            injectable\n            GeolocateService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/more-informations/more-informations.service.ts\n            \n            injectable\n            MoreInformationsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            injectable\n            OfflineTreksService\n            \n                0 %\n                (0/34)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            injectable\n            OnlineTreksService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/search-treks/search-treks.service.ts\n            \n            injectable\n            SearchTreksService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/variables.ts\n            \n            variable\n            primaryColor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/common : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/http : ^7.2.16\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @ionic-native/background-geolocation : ^5.34.0\n        \n            @ionic-native/core : ^5.23.0\n        \n            @ionic-native/device-orientation : ^5.27.0\n        \n            @ionic-native/file : ^5.23.0\n        \n            @ionic-native/firebase-analytics : ^5.23.0\n        \n            @ionic-native/globalization : ^5.23.0\n        \n            @ionic-native/ionic-webview : ^5.23.0\n        \n            @ionic-native/local-notifications : ^5.23.0\n        \n            @ionic-native/network : ^5.23.0\n        \n            @ionic-native/screen-orientation : ^5.23.0\n        \n            @ionic-native/social-sharing : ^5.23.0\n        \n            @ionic-native/splash-screen : ^5.23.0\n        \n            @ionic-native/status-bar : ^5.23.0\n        \n            @ionic-native/zip : ^5.23.0\n        \n            @ionic/angular : ^4.11.10\n        \n            @ionic/storage : ^2.2.0\n        \n            @mauron85/cordova-plugin-background-geolocation : ^3.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @turf/distance : ^6.0.1\n        \n            @turf/helpers : ^6.1.4\n        \n            @types/lodash.clonedeep : ^4.5.6\n        \n            @types/lodash.deburr : ^4.1.6\n        \n            @types/mapbox-gl : ^1.8.1\n        \n            cordova-android-play-services-gradle-release : 3.0.0\n        \n            cordova-plugin-badge : ^0.8.8\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-device-orientation : ^2.0.1\n        \n            cordova-plugin-file : ^6.0.2\n        \n            cordova-plugin-firebase-analytics : ^2.0.4\n        \n            cordova-plugin-globalization : 1.11.0\n        \n            cordova-plugin-ionic-keyboard : ^2.2.0\n        \n            cordova-plugin-ionic-webview : ^4.1.3\n        \n            cordova-plugin-local-notification : ^0.9.0-beta.2\n        \n            cordova-plugin-network-information : ^2.0.2\n        \n            cordova-plugin-screen-orientation : ^3.0.2\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-plugin-x-socialsharing : ^5.6.4\n        \n            cordova-plugin-zip : 3.1.0\n        \n            cordova-sqlite-storage : ^5.0.0\n        \n            cordova-support-android-plugin : ^1.0.1\n        \n            cordova-support-google-services : ^1.4.0\n        \n            core-js : ^3.6.4\n        \n            es6-promise-plugin : 4.2.2\n        \n            lodash.clonedeep : ^4.5.0\n        \n            lodash.deburr : ^4.1.0\n        \n            lodash.throttle : ^4.1.1\n        \n            mapbox-gl : ^1.10.0\n        \n            rxjs : ^6.5.4\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            noAnimation   (src/.../app.module.ts)\n                        \n                        \n                            unsubscribe   (src/.../unsubscribe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            noAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nnoAnimation(AnimationC)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    AnimationC\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/components/abstract/unsubscribe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGeotrek Mobile\nMobile application of Geotrek Rando (http://geotrek.fr).\nINSTALLATION\nBefore proceeding, make sure the latest version of Node.js and npm are installed.\nIt is usually easier to do with NVM\nnpm install -g ionic@5.4.11\n\nnpm install -g cordova@9.0.0\n\ngit clone git@github.com:GeotrekCE/Geotrek-mobile.git\n\ncd Geotrek-mobile\n\nnpm installRUN THE APP IN THE BROWSER\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environment.ts' with your personal api url (the one you can create here and configure here)\nionic serveRUN THE APP ON DEVICE\n/!\\ The run argument build the apk, then install it on the device\niOS\nNeed iOS environment setup available only on macOS\nionic cordova run iosAndroid\nNeed Android environment setup available on Windows, macOS and Linux\nionic cordova run androidBUILD RELEASE APP\n/!\\ The build argument just build the apk, but don't install it on the device\nYou will need the android SDK (Command line tools may be enough, to be verified). You will also need the Java Developement Kit (JDK), you can use the openjdk-8-jdk package (this version works, unsure for others) that may already be installed on your linux system (instead of the official Oracle JDK).\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environment.prod.ts' with your personal api url\niOS\nionic cordova build ios --prod --releaseAndroid\nionic cordova build android --prod --releaseCUSTOMIZATION OPTIONS\nYou can find below all available options. You can easily overwrite them to customize your app.\nconfig.xml\nApp id\nApp name\nGeotrek Startersrc/environments/environment.ts & environment.prod.ts\nYou can overwrite a lot of options inside these files:AppName (header of the app) , availableLanguage, api url, map options and more\nenvironment.ts will be use for developmentenvironment.prod.ts will be use for release app\nsrc/assets/i18n\nYou can find all the internationalization ressources here (by default Fr and En)\nsrc/assets/map/icons/\nLocal icons to display on the map, like departure or parking icon\nsrc/assets/map/zone/zone.geojson\nGeosjon to display on the mapGenerally represents the limits of the geographical area of the application\nsrc/theme/variables.scss\nColors that will be usedThe most important point here is the primary color to customize your application\nicons and splashscreen\n\nThe source image for icons should ideally be at least 1024×1024px and located in resources/icon.png\n\nThe source image for splash screens should ideally be at least 2732×2732px and located in resources/splash.png. For best results, the splash screen's artwork should roughly fit within a square (1200×1200px) at the center of the image.\n\n\nThen you just have to run\nionic cordova resourcesOther resources\n\nAll others resources are provided by the api\nWe download a global package for offline mode when user downloads his first trek\n\nFirebase Analytics Configuration\nIn order to use Firebase analytics, you had to create a Firebase App.\n\nThen store google-services.json and GoogleService-Info.plist in ./Analytics/\nIn config.xml, add\n\n  \n    \n    ...\n  \n  \n    \n    ...\n  \nSet true to useFirebase variable in environment files\n\nRemove Firebase Analytics\nIn order to build the app without Firebase you had to\n\nSet false to useFirebase variable in environment files\n\nRun this list of command\n(If you add platforms previously, be sure to delete them)\n\n\n    ionic cordova platform rm android\n\n    ionic cordova platform rm ios\n\n    ionic cordova plugin rm cordova-plugin-firebase-analytics\n\n    ionic cordova plugin rm cordova-android-play-services-gradle-release\n\n    ionic cordova plugin rm cordova-support-google-services\n\n    ionic cordova plugin rm cordova-support-android-plugin\n\n    ionic cordova platform add android\n\n    ionic cordova build androidTests\nEnd-to-end testing\nOpen cypress\nnpm run cypress:openHeadless mode\nnpm run cypress:runDocumentation\nAccess to extensive documentation\nLICENCE\n\nOpenSource - BSD\nCopyright (c) Makina Corpus - Parc National des Écrins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2019, Makina Corpus\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomPipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersComponentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoreItemPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MorePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedFiltersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedTreksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CustomPipesModule\n\n\n\ncluster_CustomPipesModule_declarations\n\n\n\ncluster_CustomPipesModule_exports\n\n\n\ncluster_FiltersComponentModule\n\n\n\ncluster_FiltersComponentModule_imports\n\n\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_SharedFiltersModule\n\n\n\ncluster_SharedFiltersModule_declarations\n\n\n\ncluster_SharedFiltersModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nLowerRoundPipe\n\nLowerRoundPipe\n\n\n\nCustomPipesModule\n\nCustomPipesModule\n\nCustomPipesModule -->\n\nLowerRoundPipe->CustomPipesModule\n\n\n\n\n\nLowerRoundPipe \n\nLowerRoundPipe \n\nLowerRoundPipe  -->\n\nCustomPipesModule->LowerRoundPipe \n\n\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\n\n\nFiltersComponentModule\n\nFiltersComponentModule\n\nFiltersComponentModule -->\n\nSharedFiltersModule->FiltersComponentModule\n\n\n\n\n\nFilterComponent \n\nFilterComponent \n\nFilterComponent  -->\n\nSharedFiltersModule->FilterComponent \n\n\n\n\n\nFilterValueComponent \n\nFilterValueComponent \n\nFilterValueComponent  -->\n\nSharedFiltersModule->FilterValueComponent \n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nSharedFiltersModule->FiltersComponent \n\n\n\n\n\nInAppDisclosureComponent \n\nInAppDisclosureComponent \n\nInAppDisclosureComponent  -->\n\nSharedFiltersModule->InAppDisclosureComponent \n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSharedFiltersModule->SearchComponent \n\n\n\n\n\nSelectFilterComponent \n\nSelectFilterComponent \n\nSelectFilterComponent  -->\n\nSharedFiltersModule->SelectFilterComponent \n\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\nMorePage\n\nMorePage\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nSharedFiltersModule -->\n\nFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nSharedFiltersModule -->\n\nFilterValueComponent->SharedFiltersModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nSharedFiltersModule -->\n\nFiltersComponent->SharedFiltersModule\n\n\n\n\n\nInAppDisclosureComponent\n\nInAppDisclosureComponent\n\nSharedFiltersModule -->\n\nInAppDisclosureComponent->SharedFiltersModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSharedFiltersModule -->\n\nSearchComponent->SharedFiltersModule\n\n\n\n\n\nSelectFilterComponent\n\nSelectFilterComponent\n\nSharedFiltersModule -->\n\nSelectFilterComponent->SharedFiltersModule\n\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSelectPoiComponent\n\nSelectPoiComponent\n\nTrekMapPageModule -->\n\nSelectPoiComponent->TrekMapPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSelectTrekComponent\n\nSelectTrekComponent\n\nTreksMapPageModule -->\n\nSelectTrekComponent->TreksMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nTreksPage\n\nTreksPage\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        43 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    Order\n                \n            \n            \n                \n                        \"alphabetical\" | \"location\" | \"random\" | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneDeep   (src/.../offline-treks.service.ts)\n                        \n                        \n                            cloneDeep   (src/.../online-treks.service.ts)\n                        \n                        \n                            distance   (src/.../geolocate-notifications.component.ts)\n                        \n                        \n                            distance   (src/.../filter-treks.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-trek-viz.component.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-treks-viz.component.ts)\n                        \n                        \n                            primaryColor   (src/.../variables.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/offline-treks/offline-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/online-treks/online-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/app/services/filter-treks/filter-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: true,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en', 'it'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png'\n          ],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    maxPitch: 0\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 12,\n    maxPitch: 0\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13\n  },\n  map: {\n    attributionText:\n      '© OpenStreetMap contributors | © OpenTopoMap ',\n    TreksfitBoundsOptions: { animate: false, padding: 50 },\n    TrekfitBoundsOptions: { animate: false, padding: 75 },\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poisLayersProperties: {\n      visibility: 'visible',\n      iconSize: 1\n    },\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1\n    },\n    clusterTextPaint: {\n      'text-color': '#fff'\n    },\n    stagePaint: {\n      // style stage circle on parent map\n      'circle-color': '#fff',\n      'circle-stroke-color': '#000000',\n      'circle-radius': 14,\n      'circle-stroke-width': 1\n    },\n    zoneLayerProperties: {\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0\n      }\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 4\n      }\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F'\n      }\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5\n      }\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff'\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1]\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12\n        }\n      }\n    },\n    touristicContentLayersProperties: {\n      visibility: 'visible',\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1\n        }\n      }\n    },\n    enableRotation: false\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000\n  },\n  poiCollapseInitialSize: 5,\n  touristicContentCollapseInitialSize: 5,\n  containsFilterShouldUseSelectAbove: 7,\n  trekDetails: {\n    showImgRulesIfParkCentered: true\n  },\n  colSize: 12,\n  initialOrder: 'alphabetical'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: false,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en', 'it'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png'\n          ],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    maxPitch: 0\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256\n        }\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13\n        }\n      ]\n    },\n    minZoom: 0,\n    maxZoom: 12,\n    maxPitch: 0\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 17,\n    zoom: 13\n  },\n  map: {\n    attributionText:\n      '© OpenStreetMap contributors | © OpenTopoMap ',\n    TreksfitBoundsOptions: { animate: false, padding: 50 },\n    TrekfitBoundsOptions: { animate: false, padding: 75 },\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poisLayersProperties: {\n      visibility: 'visible',\n      iconSize: 1\n    },\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1\n    },\n    clusterTextPaint: {\n      'text-color': '#fff'\n    },\n    stagePaint: {\n      // style stage circle on parent map\n      'circle-color': '#fff',\n      'circle-stroke-color': '#000000',\n      'circle-radius': 14,\n      'circle-stroke-width': 1\n    },\n    zoneLayerProperties: {\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0\n      }\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 4\n      }\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F'\n      }\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5\n      }\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff'\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1]\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12\n        }\n      }\n    },\n    touristicContentLayersProperties: {\n      visibility: 'visible',\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true\n        }\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1\n        }\n      }\n    },\n    enableRotation: false\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000\n  },\n  poiCollapseInitialSize: 5,\n  touristicContentCollapseInitialSize: 5,\n  containsFilterShouldUseSelectAbove: 7,\n  trekDetails: {\n    showImgRulesIfParkCentered: true\n  },\n  colSize: 12,\n  initialOrder: 'alphabetical'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/environments/variables.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            primaryColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#3880ff'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
