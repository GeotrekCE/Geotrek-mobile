var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.582,1,1.256]],["body/components/AppComponent.html",[0,0.95,1,2.187,2,1.996,3,0.13,4,0.091,5,1.546,6,1.546,7,1.546,8,0.104,9,4.027,10,1.5,11,2.968,12,2.713,13,3.244,14,2.057,15,6.11,16,0.33,17,1.409,18,7.32,19,1.409,20,3.654,21,3.425,22,5.88,23,6.365,24,2.8,25,4.259,26,6.365,27,3.811,28,3.578,29,1.371,30,3.578,31,1.292,32,4.592,33,1.029,34,0.011,35,0.494,36,0.315,37,0.917,38,4.592,39,1.029,40,1.372,41,0.232,42,0.595,43,1.645,44,1.645,45,1.697,46,1.873,47,1.154,48,3.23,49,3.654,50,4.027,51,3.654,52,4.027,53,2.549,54,2.245,55,2.337,56,4.027,57,2.549,58,0.13,59,0.556,60,2.462,61,4.592,62,4.592,63,7.621,64,2.438,65,2.337,66,2.438,67,4.592,68,4.862,69,4.592,70,4.592,71,4.592,72,4.027,73,4.027,74,0.518,75,4.196,76,2.969,77,3.654,78,4.592,79,4.592,80,1.811,81,4.592,82,2.438,83,4.592,84,4.492,85,4.027,86,4.027,87,4.592,88,4.592,89,4.592,90,0.362,91,2.057,92,2.057,93,1.546,94,2.465,95,1.546,96,1.546,97,1.372,98,1.546,99,1.546,100,1.372,101,1.546,102,1.546,103,1.372,104,2.057,105,1.372,106,1.546,107,1.372,108,0.556,109,1.546,110,1.372,111,1.546,112,1.546,113,1.372,114,1.5,115,1.456,116,2.312,117,1.372,118,1.5,119,1.546,120,1.372,121,1.546,122,1.372,123,1.626,124,0.711,125,2.057,126,1.413,127,0.683,128,1.372,129,1.333,130,1.546,131,1.372,132,1.546,133,1.372,134,1.546,135,1.372,136,0.575,137,1.372,138,1.546,139,1.372,140,1.546,141,1.372,142,1.546,143,1.333,144,1.546,145,1.372,146,1.546,147,1.413,148,1.372,149,2.057,150,1.372,151,1.372,152,1.546,153,1.372,154,1.546,155,1.546,156,0.006,157,0.008,158,0.006]],["title/modules/AppModule.html",[159,1.118,160,3.089]],["body/modules/AppModule.html",[1,2.498,3,0.123,4,0.086,8,0.151,22,4.327,23,4.684,26,4.684,34,0.011,41,0.25,42,0.563,43,2.108,44,1.556,47,1.091,48,3.932,49,3.456,50,3.809,51,3.456,52,3.809,56,3.809,58,0.188,59,0.526,84,3.193,90,0.342,113,2.397,115,1.866,117,2.397,135,2.397,137,2.397,151,2.397,156,0.006,157,0.007,158,0.006,159,1.156,160,6.375,161,1.658,162,1.771,163,2.918,164,2.918,165,2.722,166,1.771,167,3.809,168,3.809,169,3.809,170,3.809,171,3.809,172,5.296,173,4.986,174,2.321,175,1.833,176,1.833,177,3.456,178,5.161,179,2.484,180,5.886,181,4.908,182,5.886,183,2.306,184,2.484,185,5.886,186,5.161,187,2.983,188,5.886,189,4.344,190,5.886,191,1.556,192,4.042,193,3.809,194,3.809,195,4.042,196,3.809,197,2.983,198,2.124,199,5.886,200,5.886,201,4.344,202,4.344,203,1.833,204,4.344,205,4.344,206,2.124,207,5.886,208,4.344,209,3.809,210,3.602,211,3.805,212,3.456,213,3.805,214,3.456,215,4.327,216,3.193,217,3.456,218,4.344,219,5.161,220,3.809,221,4.344,222,5.161,223,3.456,224,3.809,225,5.161,226,3.456,227,3.809,228,5.161,229,4.344,230,4.344,231,3.456,232,5.161,233,3.809,234,4.344,235,4.327,236,3.809,237,4.042,238,2.808,239,2.983,240,4.344,241,4.344,242,4.344,243,3.809,244,3.193,245,5.161,246,3.809,247,3.193,248,4.344,249,4.344,250,3.456,251,4.344,252,4.344,253,3.456,254,4.344,255,4.684,256,3.809,257,2.108,258,1.898,259,4.344,260,4.344,261,4.344,262,3.809,263,2.808,264,4.344,265,3.809,266,4.344,267,4.344,268,3.809,269,4.344,270,4.344,271,2.484,272,4.344,273,3.456,274,4.344,275,6.676,276,4.344,277,3.456,278,4.344,279,4.344,280,5.886,281,4.344]],["title/modules/AppRoutingModule.html",[159,1.118,172,2.886]],["body/modules/AppRoutingModule.html",[3,0.171,4,0.12,8,0.137,12,2.244,34,0.011,41,0.206,42,0.787,58,0.171,59,0.735,156,0.008,157,0.009,158,0.008,161,2.318,166,2.476,172,5.008,179,2.562,184,3.077,191,2.175,271,3.421,282,6.072,283,6.072,284,3.872,285,4.15,286,1.526,287,5.154,288,5.324,289,5.324,290,4.17,291,7.271,292,6.072,293,6.072,294,8.107,295,5.96,296,8.107,297,6.072,298,1.56,299,1.781,300,7.292,301,6.072,302,1.333,303,6.072,304,6.072,305,6.072,306,6.072]],["title/injectables/CacheService.html",[307,1.459,308,2.886]],["body/injectables/CacheService.html",[3,0.126,4,0.089,8,0.101,13,2.378,16,0.322,17,1.386,19,1.386,31,1.709,33,1.693,34,0.012,35,0.488,36,0.571,37,1.354,39,1.346,41,0.205,42,0.58,58,0.126,59,0.542,60,2.545,74,0.852,80,2.37,82,3.19,156,0.006,157,0.008,158,0.006,181,5.327,183,2.378,257,2.429,258,2.964,286,1.125,307,2.086,308,4.127,309,2.486,310,3.927,311,0.702,312,5.766,313,2.368,314,8.079,315,6.781,316,6.781,317,7.558,318,6.009,319,3.564,320,6.009,321,4.985,322,6.009,323,1.133,324,4.657,325,4.479,326,5.269,327,1.004,328,1.777,329,6.009,330,7.246,331,1.364,332,4.479,333,2.741,334,3.058,335,2.259,336,4.479,337,0.974,338,6.009,339,4.479,340,4.781,341,6.354,342,4.781,343,4.479,344,4.886,345,4.479,346,2.896,347,1.709,348,2.896,349,4.479,350,6.009,351,4.479,352,4.657,353,2.486,354,2.486,355,6.009,356,4.479,357,4.479,358,4.479,359,5.946,360,4.479,361,4.479,362,4.479,363,4.479,364,6.781,365,6.009,366,6.781,367,7.246,368,6.009,369,6.009,370,4.479,371,3.564,372,4.479,373,4.479,374,4.479,375,4.479,376,1.192,377,4.479,378,4.479,379,6.781,380,4.479,381,4.479,382,3.927,383,6.781,384,6.009,385,4.479,386,4.479,387,6.781,388,3.927,389,4.479,390,4.479,391,4.479,392,3.293,393,4.479,394,4.479,395,1.158,396,4.479,397,4.479,398,4.479,399,4.479,400,4.479,401,2.896,402,2.896,403,3.927,404,4.479,405,4.479]],["title/components/CollapsibleListComponent.html",[0,0.582,97,1.256]],["body/components/CollapsibleListComponent.html",[0,0.925,1,1.301,2,1.926,3,0.123,4,0.086,5,1.466,6,1.466,7,1.466,8,0.098,10,1.423,11,2.957,12,2.703,14,1.986,16,0.313,17,1.36,19,1.542,31,1.769,34,0.011,35,0.424,36,0.541,39,1.321,40,1.762,41,0.123,42,0.564,58,0.123,59,0.527,74,0.844,80,2.326,90,0.343,91,1.986,92,1.986,93,1.466,94,2.412,95,1.466,96,1.466,97,2.141,98,2.703,99,1.466,100,1.301,101,1.466,102,1.466,103,1.301,104,1.986,105,1.301,106,1.466,107,1.301,108,0.527,109,1.466,110,1.301,111,1.466,112,1.466,113,1.301,114,1.423,115,1.381,116,2.251,117,1.301,118,1.423,119,1.466,120,1.301,121,1.466,122,1.301,123,1.569,124,0.696,125,1.986,126,1.34,127,0.669,128,1.301,129,1.264,130,1.466,131,1.301,132,1.466,133,1.301,134,1.466,135,1.301,136,0.546,137,1.301,138,1.466,139,1.301,140,1.466,141,1.301,142,1.466,143,1.264,144,1.466,145,1.301,146,1.466,147,1.34,148,1.301,149,1.986,150,1.301,151,1.301,152,1.466,153,1.301,154,1.466,155,1.466,156,0.006,157,0.008,158,0.006,311,0.689,313,2.358,323,0.992,326,6.767,335,2.237,406,1.512,407,7.381,408,6.698,409,3.819,410,1.926,411,3.268,412,4.05,413,4.335,414,3.812,415,2.047,416,6.685,417,5.897,418,6.685,419,6.685,420,7.717,421,3.131,422,7.164,423,3.001,424,1.992,425,6.685,426,6.685,427,3.711,428,6.685,429,1.992,430,5.897,431,4.355,432,4.692,433,4.355,434,7.164,435,4.355,436,4.355,437,6.685,438,4.355,439,4.355,440,4.355,441,4.355,442,4.355,443,4.355,444,2.251,445,4.017,446,2.991,447,6.685,448,4.355,449,4.355,450,4.355,451,4.355,452,4.355,453,4.355,454,4.355]],["title/components/ConnectErrorComponent.html",[0,0.582,100,1.256]],["body/components/ConnectErrorComponent.html",[0,0.98,1,1.46,2,2.079,3,0.138,4,0.097,5,1.645,6,1.645,7,1.645,8,0.11,10,1.596,11,2.981,12,2.724,14,2.143,16,0.351,19,1.632,31,1.687,34,0.011,35,0.458,36,0.335,41,0.138,42,0.633,58,0.138,59,0.591,74,0.846,90,0.385,91,2.143,92,2.143,93,1.645,94,2.525,95,1.645,96,1.645,97,1.46,98,1.645,99,1.645,100,2.241,101,2.772,102,1.645,103,1.46,104,2.143,105,1.46,106,1.645,107,1.46,108,0.591,109,1.645,110,1.46,111,1.645,112,1.645,113,1.46,114,1.596,115,1.549,116,2.383,117,1.46,118,1.596,119,1.645,120,1.46,121,1.645,122,1.46,123,1.693,124,0.728,125,2.143,126,1.503,127,0.7,128,1.46,129,1.418,130,1.645,131,1.46,132,1.645,133,1.46,134,1.645,135,1.46,136,0.612,137,1.46,138,1.645,139,1.46,140,1.645,141,1.46,142,1.645,143,1.418,144,1.645,145,1.46,146,1.645,147,1.503,148,1.46,149,2.143,150,1.46,151,1.46,152,1.645,153,1.46,154,1.645,155,1.645,156,0.006,157,0.008,158,0.006,258,2.135,313,2.192,335,2.241,344,4.576,406,1.696,415,2.21,423,3.239,445,3.958,455,7.12,456,6.461,457,4.283,458,4.371,459,7.078,460,6.364,461,7.776,462,1.845,463,5.15,464,1.899,465,4.371,466,7.078,467,6.364,468,4.885,469,4.885,470,4.885,471,4.885,472,4.371,473,3.703,474,3.158,475,4.885]],["title/interfaces/ContainsFilter.html",[476,0.44,477,1.056]],["body/interfaces/ContainsFilter.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.694,34,0.011,35,0.578,36,0.59,41,0.167,58,0.245,74,0.392,90,0.397,108,0.833,124,0.63,127,0.691,136,0.63,156,0.004,157,0.006,158,0.004,298,0.694,299,0.848,302,1.082,311,0.886,323,1.238,327,1.128,328,1.567,331,0.948,337,1.435,376,1.339,395,1.301,424,0.925,429,0.925,462,0.824,464,1.584,476,0.907,477,1.265,478,0.925,479,0.898,480,1.78,481,1.678,482,1.832,483,1.886,484,1.886,485,1.886,486,2.038,487,2.057,488,1.621,489,1.681,490,0.898,491,0.952,492,1.404,493,0.779,494,0.779,495,0.801,496,1.857,497,1.096,498,1.53,499,0.952,500,1.378,501,1.575,502,1.301,503,1.621,504,1.911,505,1.857,506,1.301,507,1.777,508,1.749,509,1.621,510,1.378,511,1.378,512,1.378,513,1.096,514,1.886,515,1.378,516,1.559,517,1.339,518,1.378,519,1.378,520,1.378,521,1.339,522,1.378,523,1.404,524,1.378,525,1.378,526,1.339,527,1.161,528,1.301,529,1.339,530,2.019,531,0.952,532,0.952,533,1.378,534,0.952,535,0.952,536,1.339,537,0.952,538,0.952,539,0.952,540,0.952,541,0.952,542,0.952,543,0.952,544,1.378,545,1.339,546,1.53,547,1.339,548,1.161,549,0.824,550,0.779,551,0.873,552,0.952,553,0.801,554,1.378,555,1.229,556,0.824,557,0.824,558,0.952,559,1.194,560,0.873,561,1.365,562,0.952,563,0.925,564,1.404,565,1.445,566,0.898,567,0.873,568,1.229,569,1.445,570,1.301,571,1.326,572,0.824,573,0.952,574,1.804,575,0.952,576,0.952,577,0.952,578,0.925,579,0.925,580,0.925,581,0.925,582,0.925,583,0.925,584,0.952,585,0.925,586,0.952,587,0.952,588,0.848,589,0.925,590,1.194,591,1.161,592,0.873,593,0.714,594,0.925,595,0.848]],["title/modules/CustomPipesModule.html",[159,1.118,596,2.716]],["body/modules/CustomPipesModule.html",[3,0.181,4,0.127,8,0.145,34,0.011,41,0.212,42,0.829,58,0.181,59,0.774,90,0.504,156,0.008,157,0.01,158,0.008,159,1.702,161,2.442,162,2.609,163,3.492,164,2.796,165,2.609,166,3.258,174,2.967,175,2.699,176,2.699,179,2.699,184,3.174,596,5.562,597,5.609,598,5.609,599,5.609,600,6.053,601,6.397,602,6.397,603,6.397,604,6.397]],["title/interfaces/DataSetting.html",[476,0.44,559,0.997]],["body/interfaces/DataSetting.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.695,34,0.011,35,0.592,36,0.589,41,0.167,58,0.245,74,0.393,90,0.397,108,0.786,124,0.631,127,0.692,136,0.631,156,0.004,157,0.006,158,0.004,298,0.695,299,0.85,302,1.083,311,0.887,323,1.239,327,1.13,328,1.568,331,0.949,337,1.435,376,1.341,395,1.303,424,0.927,429,0.927,462,0.826,464,1.586,476,0.908,477,0.875,478,0.927,479,0.9,480,1.767,481,1.679,482,1.577,483,1.623,484,1.623,485,1.623,486,2.039,487,2.058,488,1.623,489,1.683,490,0.9,491,0.954,492,1.406,493,0.78,494,0.78,495,0.803,496,1.858,497,1.098,498,1.532,499,0.954,500,1.381,501,1.577,502,1.303,503,1.623,504,1.912,505,1.858,506,1.303,507,1.779,508,1.75,509,1.623,510,1.381,511,1.381,512,1.381,513,1.098,514,1.888,515,1.381,516,1.56,517,1.341,518,1.381,519,1.381,520,1.381,521,1.341,522,1.381,523,1.406,524,1.381,525,1.381,526,1.341,527,1.162,528,1.303,529,1.341,530,2.055,531,0.954,532,0.954,533,1.381,534,0.954,535,0.954,536,1.341,537,0.954,538,0.954,539,0.954,540,0.954,541,0.954,542,0.954,543,0.954,544,1.381,545,1.341,546,1.532,547,1.834,548,1.162,549,0.826,550,0.78,551,0.875,552,0.954,553,0.803,554,1.381,555,1.231,556,0.826,557,0.826,558,0.954,559,1.406,560,0.875,561,1.366,562,0.954,563,0.927,564,1.406,565,1.447,566,0.9,567,0.875,568,1.231,569,1.447,570,1.303,571,1.328,572,0.826,573,0.954,574,1.805,575,0.954,576,0.954,577,0.954,578,0.927,579,0.927,580,0.927,581,0.927,582,0.927,583,0.927,584,0.954,585,0.927,586,0.954,587,0.954,588,0.85,589,0.927,590,1.196,591,1.162,592,0.875,593,0.716,594,0.927,595,0.85]],["title/interfaces/Filter.html",[108,0.509,476,0.44]],["body/interfaces/Filter.html",[3,0.097,4,0.068,8,0.077,16,0.246,29,0.683,34,0.011,35,0.591,36,0.594,41,0.166,58,0.245,74,0.386,90,0.392,108,0.828,124,0.625,127,0.688,136,0.623,156,0.004,157,0.006,158,0.004,298,0.683,299,0.835,302,1.072,311,0.883,323,1.24,327,1.115,328,1.559,331,0.937,337,1.434,376,1.324,395,1.287,424,1.714,429,1.714,462,0.812,464,1.573,476,0.906,477,0.86,478,0.91,479,0.885,480,1.761,481,1.675,482,1.561,483,1.607,484,1.607,485,1.607,486,2.032,487,2.049,488,1.607,489,1.671,490,0.885,491,0.937,492,1.392,493,0.767,494,0.767,495,0.789,496,1.847,497,1.084,498,1.517,499,0.937,500,1.363,501,1.561,502,1.287,503,1.607,504,1.9,505,1.847,506,1.287,507,1.764,508,1.741,509,1.607,510,1.363,511,1.363,512,1.363,513,1.084,514,1.874,515,1.363,516,1.552,517,1.324,518,1.363,519,1.363,520,1.363,521,1.324,522,1.363,523,1.392,524,1.363,525,1.363,526,1.324,527,1.148,528,1.287,529,1.324,530,2.013,531,0.937,532,0.937,533,1.363,534,0.937,535,0.937,536,1.324,537,0.937,538,0.937,539,0.937,540,0.937,541,0.937,542,0.937,543,0.937,544,1.363,545,1.714,546,1.77,547,1.821,548,1.485,549,0.812,550,0.767,551,0.86,552,0.937,553,0.789,554,1.363,555,1.215,556,0.812,557,0.812,558,0.937,559,1.181,560,0.86,561,1.353,562,0.937,563,0.91,564,1.392,565,1.432,566,0.885,567,0.86,568,1.215,569,1.432,570,1.287,571,1.314,572,0.812,573,0.937,574,1.794,575,0.937,576,0.937,577,0.937,578,0.91,579,0.91,580,0.91,581,0.91,582,0.91,583,0.91,584,0.937,585,0.91,586,0.937,587,0.937,588,0.835,589,0.91,590,1.181,591,1.148,592,0.86,593,0.703,594,0.91,595,0.835]],["title/components/FilterComponent.html",[0,0.582,103,1.256]],["body/components/FilterComponent.html",[0,0.949,1,1.173,2,1.793,3,0.111,4,0.078,5,1.322,6,1.322,7,1.322,8,0.089,10,1.282,11,2.934,12,2.682,14,1.849,16,0.282,17,1.266,19,0.905,24,2.239,31,1.739,33,1.419,34,0.011,35,0.519,36,0.552,37,1.264,39,1.617,40,2.234,41,0.204,42,0.509,45,1.451,46,1.601,47,0.986,58,0.111,59,0.475,66,3.361,74,0.619,90,0.309,91,1.849,92,1.849,93,1.322,94,2.429,95,1.322,96,1.322,97,1.173,98,1.322,99,1.322,100,1.173,101,1.322,102,1.322,103,2.049,104,1.849,105,1.173,106,1.322,107,1.173,108,1.009,109,1.322,110,1.173,111,1.322,112,1.322,113,1.173,114,1.282,115,1.245,116,2.132,117,1.173,118,1.282,119,1.322,120,1.173,121,1.322,122,1.173,123,1.461,124,0.666,125,1.849,126,1.208,127,0.64,128,1.173,129,1.139,130,1.322,131,1.173,132,1.322,133,1.173,134,1.322,135,1.173,136,0.492,137,1.173,138,1.322,139,1.173,140,1.322,141,1.892,142,1.849,143,1.139,144,1.322,145,1.173,146,1.322,147,1.208,148,1.173,149,1.849,150,1.173,151,1.173,152,1.322,153,1.173,154,1.322,155,1.322,156,0.005,157,0.007,158,0.005,257,1.406,258,2.399,263,3.549,286,1.723,290,2.696,298,1.096,311,0.642,313,2.427,323,0.949,334,2.794,335,2.234,344,4.665,406,1.363,410,1.793,411,3.095,415,1.906,421,2.996,423,2.794,445,3.222,465,3.771,472,4.348,473,2.284,516,0.807,548,1.46,553,1.581,555,1.341,593,1.409,605,3.442,606,6.331,607,5.551,608,4.814,609,5.551,610,6.866,611,6.856,612,3.514,613,6.856,614,5.49,615,5.551,616,6.331,617,5.551,618,3.442,619,4.35,620,5.49,621,3.926,622,3.926,623,3.926,624,3.926,625,3.926,626,3.926,627,3.926,628,5.49,629,3.926,630,3.124,631,3.926,632,3.926,633,5.49,634,3.926,635,1.245,636,3.442,637,2.886,638,3.442,639,2.403,640,5.49,641,3.926,642,2.886,643,3.442,644,3.124,645,3.124,646,3.124,647,3.442,648,2.403,649,2.696,650,3.124,651,3.442,652,5.49,653,3.926,654,3.926,655,3.926,656,3.124,657,3.926,658,3.926,659,3.926,660,4.814,661,5.49,662,5.49,663,3.926,664,3.442,665,3.926]],["title/injectables/FilterTreksService.html",[307,1.459,666,2.716]],["body/injectables/FilterTreksService.html",[3,0.105,4,0.074,8,0.084,13,1.983,16,0.268,17,1.222,19,0.861,29,1.058,30,3.278,31,1.707,33,1.787,34,0.011,35,0.573,36,0.553,37,1.592,39,1.762,41,0.208,42,0.484,57,2.073,58,0.105,59,0.452,60,2.589,74,0.421,76,2.414,80,2.645,82,3.906,108,1.039,123,0.994,124,0.651,156,0.005,157,0.007,158,0.005,257,3.049,271,1.576,286,1.685,307,1.84,309,2.073,311,0.619,313,2.179,328,1.635,331,1.502,333,2.286,337,1.341,347,1.425,353,2.073,354,2.073,444,2.023,477,1.848,486,1.901,489,0.912,495,1.546,497,1.813,516,1.378,545,0.994,546,0.966,549,1.914,550,1.188,551,1.901,560,1.976,572,0.886,635,1.184,639,2.286,642,2.745,666,3.427,667,6.482,668,5.267,669,2.565,670,6.161,671,8.587,672,5.3,673,5.3,674,5.3,675,5.3,676,5.3,677,6.161,678,3.734,679,3.734,680,3.734,681,3.734,682,5.3,683,3.734,684,5.3,685,3.734,686,5.3,687,3.734,688,5.3,689,3.734,690,5.3,691,3.274,692,5.3,693,3.734,694,5.3,695,3.274,696,5.3,697,5.635,698,3.734,699,3.734,700,2.972,701,2.972,702,2.565,703,2.972,704,6.161,705,3.734,706,4.647,707,3.734,708,3.734,709,5.3,710,3.734,711,3.734,712,3.734,713,3.274,714,5.3,715,3.734,716,5.3,717,3.734,718,5.3,719,5.3,720,3.734,721,3.734,722,3.734,723,3.734,724,5.3,725,3.734,726,5.402,727,3.734,728,3.734,729,3.734,730,2.565,731,6.161,732,5.3,733,2.972,734,3.734,735,2.073,736,3.734,737,3.734,738,3.734,739,3.274,740,3.734,741,3.734,742,3.734,743,3.734,744,3.734,745,3.734,746,3.734,747,3.734,748,3.274,749,3.734,750,3.734,751,3.734,752,3.734,753,3.274,754,3.734]],["title/interfaces/FilterValue.html",[476,0.44,548,0.969]],["body/interfaces/FilterValue.html",[3,0.096,4,0.068,8,0.077,16,0.245,29,0.681,34,0.011,35,0.59,36,0.591,37,1.424,41,0.165,58,0.244,74,0.385,90,0.392,108,0.779,124,0.625,127,0.687,136,0.622,156,0.004,157,0.006,158,0.004,298,0.681,299,0.833,302,1.071,311,0.882,323,1.239,327,1.113,328,1.558,331,0.935,337,1.438,376,1.322,395,1.284,424,0.908,429,0.908,462,0.81,464,1.571,476,0.906,477,0.857,478,0.908,479,0.882,480,1.76,481,1.674,482,1.558,483,1.604,484,1.604,485,1.604,486,2.031,487,2.047,488,1.604,489,1.669,490,0.882,491,0.934,492,1.39,493,0.764,494,0.764,495,0.787,496,1.845,497,1.081,498,1.514,499,0.934,500,1.36,501,1.558,502,1.284,503,1.604,504,1.899,505,1.845,506,1.284,507,1.762,508,1.74,509,1.604,510,1.36,511,1.36,512,1.36,513,1.081,514,1.872,515,1.36,516,1.607,517,1.322,518,1.36,519,1.36,520,1.36,521,1.322,522,1.36,523,1.39,524,1.36,525,1.36,526,1.322,527,1.145,528,1.284,529,1.322,530,2.012,531,0.934,532,0.934,533,1.36,534,0.934,535,0.934,536,1.322,537,0.934,538,0.934,539,0.934,540,0.934,541,0.934,542,0.934,543,0.934,544,1.36,545,1.322,546,1.845,547,1.322,548,1.35,549,0.81,550,0.764,551,0.857,552,0.934,553,1.483,554,1.872,555,1.669,556,0.81,557,0.81,558,0.934,559,1.179,560,0.857,561,1.35,562,0.934,563,0.908,564,1.39,565,1.43,566,0.882,567,0.857,568,1.213,569,1.43,570,1.284,571,1.312,572,0.81,573,0.934,574,1.793,575,0.934,576,0.934,577,0.934,578,0.908,579,0.908,580,0.908,581,0.908,582,0.908,583,0.908,584,0.934,585,0.908,586,0.934,587,0.934,588,0.833,589,0.908,590,1.179,591,1.145,592,0.857,593,0.701,594,0.908,595,0.833]],["title/components/FilterValueComponent.html",[0,0.582,107,1.256]],["body/components/FilterValueComponent.html",[0,0.968,1,1.424,2,2.046,3,0.135,4,0.094,5,1.605,6,1.605,7,1.605,8,0.108,10,1.557,11,2.976,12,2.72,14,2.109,16,0.343,17,1.444,19,1.613,31,1.675,33,1.068,34,0.011,35,0.503,36,0.509,37,0.952,39,1.403,40,1.871,41,0.177,42,0.618,58,0.135,59,0.577,90,0.376,91,2.109,92,2.109,93,1.605,94,2.501,95,1.605,96,1.605,97,1.424,98,1.605,99,1.605,100,1.424,101,1.605,102,1.605,103,1.424,104,2.109,105,1.424,106,1.605,107,2.22,108,0.991,109,1.605,110,1.424,111,1.605,112,1.605,113,1.424,114,1.557,115,1.511,116,2.355,117,1.424,118,1.557,119,1.605,120,1.424,121,1.605,122,1.424,123,1.666,124,0.721,125,2.109,126,1.467,127,0.693,128,1.424,129,1.383,130,1.605,131,1.424,132,1.605,133,1.424,134,1.605,135,1.424,136,0.597,137,1.424,138,1.605,139,1.424,140,1.605,141,1.424,142,1.605,143,1.383,144,1.605,145,1.424,146,1.605,147,1.467,148,1.424,149,2.109,150,1.424,151,1.424,152,1.605,153,1.424,154,1.605,155,1.605,156,0.006,157,0.008,158,0.006,258,2.083,313,2.094,323,0.867,335,2.499,344,4.522,406,1.655,410,2.046,411,3.419,415,2.174,421,3.246,423,3.187,445,3.56,465,4.301,472,4.301,548,1.826,553,1.099,593,1.437,617,6.133,635,1.511,643,4.179,755,7.078,756,6.423,757,4.179,758,6.994,759,6.262,760,6.262,761,6.262,762,4.766,763,4.766,764,4.766,765,6.262,766,6.994,767,4.766,768,2.531,769,4.766,770,6.262,771,3.793,772,3.793,773,3.793,774,2.33,775,3.273]],["title/components/FiltersComponent.html",[0,0.582,105,1.256]],["body/components/FiltersComponent.html",[0,0.763,1,0.918,2,1.502,3,0.087,4,0.061,5,1.035,6,1.035,7,1.035,8,0.069,10,1.004,11,2.871,12,2.624,14,1.548,16,0.44,17,1.06,19,1.06,21,3.113,24,2.802,27,3.058,28,2.99,29,1.307,30,3.201,31,1.772,33,1.467,34,0.011,35,0.512,36,0.548,37,1.307,39,1.776,40,2.483,41,0.211,42,0.398,47,0.772,53,1.706,54,1.503,55,2.804,57,1.706,58,0.087,59,0.372,60,2.192,74,0.519,80,2.173,82,2.441,90,0.242,91,1.548,92,2.567,93,1.035,94,2.059,95,1.035,96,1.035,97,0.918,98,1.035,99,1.035,100,0.918,101,1.035,102,1.035,103,0.918,104,1.548,105,1.828,106,1.035,107,0.918,108,1.006,109,1.035,110,0.918,111,1.035,112,1.035,113,0.918,114,1.004,115,0.974,116,1.855,117,0.918,118,1.004,119,1.035,120,0.918,121,1.035,122,0.918,123,1.224,124,0.692,125,1.548,126,0.946,127,0.571,128,0.918,129,0.892,130,1.035,131,0.918,132,1.035,133,0.918,134,1.035,135,0.918,136,0.385,137,0.918,138,1.035,139,0.918,140,1.035,141,0.918,142,1.035,143,0.892,144,1.035,145,0.918,146,1.035,147,0.946,148,0.918,149,1.548,150,0.918,151,0.918,152,1.035,153,0.918,154,1.035,155,1.035,156,0.004,157,0.006,158,0.004,210,2.814,257,1.647,258,2.01,286,1.726,290,2.111,311,0.537,313,2.452,323,0.951,331,1.341,334,2.341,335,1.957,337,1.154,347,1.173,406,1.067,410,1.502,411,2.694,415,1.597,421,3.113,423,2.341,427,1.706,444,1.173,445,2.341,462,0.729,473,1.788,474,2.973,480,1.001,495,1.06,516,1.346,548,1.584,560,1.726,593,1.132,619,3.558,630,2.446,635,0.974,642,2.26,648,1.881,656,2.446,666,1.987,668,1.987,700,2.446,730,2.111,733,2.446,748,2.695,768,1.632,774,3.201,776,2.695,777,3.359,778,3.206,779,5.51,780,4.598,781,5.51,782,6.548,783,7.123,784,2.552,785,2.552,786,6.116,787,4.2,788,6.116,789,4.598,790,4.598,791,4.2,792,3.625,793,4.598,794,4.598,795,6.116,796,4.384,797,2.26,798,3.206,799,3.394,800,4.598,801,3.381,802,3.074,803,3.074,804,3.074,805,4.598,806,3.074,807,4.598,808,4.598,809,3.074,810,3.074,811,3.074,812,3.074,813,4.598,814,3.074,815,4.598,816,3.074,817,3.074,818,3.206,819,1.788,820,1.788,821,3.074,822,3.074,823,2.771,824,3.074,825,3.074,826,3.074,827,3.562,828,3.074,829,1.788,830,1.881,831,2.446,832,1.788,833,1.632,834,1.788,835,2.111,836,4.598,837,3.074,838,3.074,839,3.074,840,3.074,841,4.598,842,3.074,843,3.074,844,3.074,845,1.788,846,2.446,847,2.695,848,3.074,849,3.074,850,3.074,851,3.074,852,5.51,853,3.074,854,4.598,855,2.695,856,3.074,857,3.074,858,2.446,859,5.51,860,4.598,861,3.074,862,3.074,863,3.074,864,3.074,865,4.598,866,3.074,867,3.074,868,3.074,869,2.695,870,2.26,871,4.032,872,3.074,873,2.26,874,4.598,875,4.032,876,4.598,877,4.598,878,4.598,879,4.598,880,4.598,881,3.784,882,1.987,883,1.987,884,1.632,885,1.881,886,2.26,887,2.814,888,1.987,889,1.987,890,2.26,891,2.111,892,2.446,893,2.446,894,2.446,895,2.26,896,2.26,897,2.26,898,3.074,899,2.695,900,3.074,901,3.074]],["title/modules/FiltersComponentModule.html",[159,1.118,902,2.886]],["body/modules/FiltersComponentModule.html",[3,0.179,4,0.126,8,0.144,34,0.011,41,0.237,42,0.823,43,2.276,44,2.276,47,1.597,58,0.179,59,0.769,90,0.501,156,0.008,157,0.01,158,0.008,159,1.691,161,2.426,162,2.592,163,2.778,164,2.778,165,2.592,166,2.592,174,2.955,175,2.682,176,2.682,179,3.162,184,3.162,198,3.663,203,2.682,206,3.107,902,5.843,903,5.573,904,5.573,905,5.843,906,6.355,907,3.663,908,3.698,909,6.355,910,3.235]],["title/components/GeolocateNotificationsComponent.html",[0,0.582,110,1.256]],["body/components/GeolocateNotificationsComponent.html",[0,0.789,1,0.973,2,1.568,3,0.092,4,0.065,5,1.096,6,1.096,7,1.096,8,0.074,10,1.063,11,2.887,12,2.639,14,1.616,16,0.234,17,1.107,19,1.107,20,2.59,21,3.323,24,2.959,25,3.66,31,1.763,33,1.277,34,0.011,35,0.505,36,0.544,37,1.138,39,1.669,40,2.272,41,0.218,42,0.422,43,1.166,44,1.166,45,1.203,46,1.327,47,1.206,48,1.531,58,0.092,59,0.394,60,2.064,64,2.548,65,2.443,66,3.853,68,2.59,74,0.367,82,1.728,90,0.257,91,1.616,92,1.616,93,1.096,94,2.118,95,1.096,96,1.096,97,0.973,98,1.096,99,1.096,100,0.973,101,1.096,102,1.096,103,0.973,104,1.616,105,0.973,106,1.096,107,0.973,108,0.394,109,1.096,110,1.88,111,2.64,112,1.096,113,0.973,114,1.063,115,1.032,116,1.919,117,0.973,118,1.063,119,1.096,120,0.973,121,1.096,122,0.973,123,1.277,124,0.611,125,1.616,126,1.002,127,0.587,128,0.973,129,0.945,130,1.096,131,0.973,132,1.096,133,0.973,134,1.096,135,0.973,136,0.601,137,0.973,138,1.096,139,0.973,140,1.096,141,0.973,142,1.096,143,0.945,144,1.096,145,0.973,146,1.096,147,1.002,148,0.973,149,1.616,150,0.973,151,0.973,152,1.096,153,0.973,154,1.096,155,1.096,156,0.004,157,0.006,158,0.004,222,6.78,223,2.59,224,2.854,258,1.423,271,2.83,286,1.871,298,0.958,311,0.561,313,2.143,323,0.664,324,3.296,335,0.973,337,0.924,342,2.59,344,3.685,347,1.243,406,1.13,410,1.568,411,2.787,415,1.666,421,2.749,423,2.443,444,2.176,445,2.901,463,2.236,464,0.795,465,3.296,472,3.296,481,1.138,486,0.818,489,0.795,505,0.842,561,1.314,612,3.895,635,1.032,649,2.236,701,2.59,702,2.236,703,2.59,778,3.317,792,3.202,823,3.039,911,6.662,912,6.155,913,2.59,914,4.536,915,4.208,916,5.7,917,4.799,918,6.153,919,5.7,920,5.7,921,4.536,922,5.7,923,6.29,924,4.799,925,6.29,926,6.29,927,3.819,928,6.29,929,4.998,930,5.7,931,4.998,932,4.32,933,4.799,934,3.255,935,3.255,936,3.255,937,3.255,938,4.799,939,3.255,940,3.255,941,3.255,942,3.255,943,3.819,944,5.006,945,3.255,946,2.59,947,3.255,948,3.255,949,3.255,950,3.255,951,3.255,952,3.255,953,3.255,954,3.255,955,3.255,956,4.208,957,2.854,958,3.255,959,3.255,960,3.255,961,3.255,962,3.255,963,3.255,964,3.255,965,4.799,966,3.255,967,3.255,968,3.819,969,2.59,970,3.255,971,3.255,972,3.255,973,3.255,974,3.255,975,2.854,976,3.255,977,3.255,978,3.255,979,2.854,980,3.255,981,3.255,982,4.799,983,4.799,984,6.29,985,3.255,986,3.255,987,3.255,988,4.799,989,3.255,990,4.799,991,3.255,992,2.854,993,3.255,994,3.255,995,3.255,996,3.255,997,3.255,998,3.255,999,3.255,1000,3.255,1001,3.255,1002,3.255,1003,3.255,1004,3.255,1005,4.799,1006,4.208,1007,3.915,1008,3.255,1009,3.255,1010,3.255,1011,3.255,1012,3.255,1013,3.255,1014,3.255,1015,3.255,1016,3.255,1017,3.255,1018,3.255,1019,3.255,1020,3.255,1021,2.59,1022,1.992,1023,3.255,1024,2.854,1025,3.255,1026,2.59,1027,3.255,1028,2.59,1029,2.393,1030,2.59,1031,3.255,1032,2.59,1033,3.255,1034,3.255,1035,4.799,1036,4.799]],["title/injectables/GeolocateService.html",[307,1.459,932,2.886]],["body/injectables/GeolocateService.html",[3,0.138,4,0.097,8,0.111,13,2.604,16,0.353,17,1.471,19,1.471,21,3.673,24,2.892,25,4.37,31,1.778,33,1.43,34,0.011,35,0.459,36,0.533,37,1.274,39,1.788,40,2.119,41,0.225,42,0.635,43,1.757,44,1.757,45,1.813,46,2,47,1.232,48,2.307,58,0.138,59,0.594,60,1.509,64,3.388,65,3.248,66,4.134,74,0.553,80,2.516,156,0.006,157,0.008,158,0.006,187,3.368,215,6.124,216,3.606,217,3.903,257,2.285,258,2.788,271,2.692,286,1.956,307,2.215,309,2.722,311,0.746,313,2.348,323,1.04,335,1.466,347,1.872,354,2.722,444,1.872,612,4.623,827,4.585,921,5.643,932,4.382,1037,4.301,1038,7.51,1039,7.51,1040,7.51,1041,7.51,1042,6.38,1043,7.51,1044,4.905,1045,6.38,1046,4.905,1047,4.905,1048,4.905,1049,4.905,1050,6.38,1051,4.905,1052,6.38,1053,4.905,1054,4.905,1055,5.077,1056,4.905,1057,6.38,1058,4.905,1059,4.905,1060,4.382,1061,6.38,1062,4.905,1063,4.905,1064,6.38,1065,4.905,1066,4.905,1067,4.905,1068,4.905,1069,4.905,1070,3.903,1071,4.905,1072,4.905,1073,4.905,1074,4.905,1075,4.905,1076,4.905,1077,4.301,1078,4.301,1079,4.905,1080,4.301,1081,4.905,1082,4.905,1083,4.905,1084,4.905,1085,4.905,1086,3.171,1087,4.905,1088,4.905,1089,4.301,1090,4.905,1091,4.905,1092,4.905,1093,4.905]],["title/interfaces/HydratedTrek.html",[476,0.44,527,0.969]],["body/interfaces/HydratedTrek.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.695,34,0.011,35,0.578,36,0.593,41,0.167,58,0.245,74,0.393,90,0.397,108,0.786,124,0.631,127,0.692,136,0.631,156,0.004,157,0.006,158,0.004,298,0.695,299,0.85,302,1.083,311,0.93,323,1.238,327,1.13,328,1.568,331,0.949,334,2.566,337,1.435,376,1.341,395,1.303,424,0.927,429,0.927,462,0.826,464,1.586,476,0.908,477,0.875,478,0.927,479,0.9,480,1.781,481,1.654,482,1.577,483,1.623,484,1.623,485,1.623,486,2.055,487,2.058,488,1.623,489,1.683,490,0.9,491,0.954,492,1.406,493,0.78,494,0.78,495,0.803,496,1.858,497,1.098,498,1.532,499,0.954,500,1.381,501,1.577,502,1.303,503,1.623,504,2.058,505,1.858,506,1.303,507,1.779,508,1.75,509,1.623,510,1.381,511,1.381,512,1.381,513,1.098,514,1.888,515,1.381,516,1.56,517,1.341,518,1.381,519,1.381,520,1.381,521,1.341,522,1.381,523,1.406,524,1.381,525,1.381,526,1.341,527,1.366,528,1.679,529,1.341,530,2.02,531,0.954,532,0.954,533,1.381,534,0.954,535,0.954,536,1.341,537,0.954,538,0.954,539,0.954,540,0.954,541,0.954,542,0.954,543,0.954,544,1.381,545,1.341,546,1.532,547,1.341,548,1.162,549,0.826,550,0.78,551,0.875,552,0.954,553,0.803,554,1.381,555,1.231,556,0.826,557,0.826,558,0.954,559,1.196,560,0.875,561,1.366,562,0.954,563,0.927,564,1.406,565,1.447,566,0.9,567,0.875,568,1.231,569,1.447,570,1.303,571,1.328,572,0.826,573,0.954,574,1.805,575,0.954,576,0.954,577,0.954,578,0.927,579,0.927,580,0.927,581,0.927,582,0.927,583,0.927,584,0.954,585,0.927,586,0.954,587,0.954,588,0.85,589,0.927,590,1.196,591,1.162,592,0.875,593,0.716,594,0.927,595,0.85]],["title/interfaces/HydratedTrekProperties.html",[476,0.44,528,1.086]],["body/interfaces/HydratedTrekProperties.html",[3,0.085,4,0.06,8,0.068,16,0.218,29,0.604,34,0.011,35,0.579,36,0.603,37,1.456,41,0.154,58,0.242,74,0.342,90,0.358,108,0.735,124,0.664,127,0.662,136,0.57,156,0.004,157,0.006,158,0.004,298,0.604,299,0.739,302,0.998,311,0.852,323,1.239,327,1.019,328,1.499,331,0.856,337,1.436,376,1.21,395,1.176,424,0.806,429,0.806,462,0.718,464,1.482,476,0.896,477,0.761,478,0.806,479,0.783,480,1.721,481,1.647,482,1.818,483,1.871,484,1.871,485,1.871,486,1.986,487,1.984,488,1.496,489,1.589,490,0.783,491,0.829,492,1.296,493,0.678,494,0.678,495,0.698,496,1.767,497,0.99,498,1.412,499,0.829,500,1.245,501,1.818,502,1.682,503,1.871,504,1.818,505,1.767,506,1.176,507,1.941,508,1.752,509,1.871,510,1.782,511,1.782,512,1.782,513,1.416,514,1.997,515,1.782,516,1.561,517,1.731,518,1.782,519,1.782,520,1.782,521,1.731,522,1.782,523,1.544,524,1.782,525,1.782,526,1.731,527,1.049,528,1.412,529,1.731,530,2.149,531,1.662,532,1.662,533,1.782,534,1.662,535,1.662,536,1.21,537,0.829,538,0.829,539,0.829,540,0.829,541,0.829,542,0.829,543,0.829,544,1.245,545,1.21,546,1.412,547,1.21,548,1.049,549,0.718,550,0.678,551,0.761,552,0.829,553,0.698,554,1.245,555,1.11,556,0.718,557,0.718,558,0.829,559,1.079,560,0.761,561,1.259,562,0.829,563,0.806,564,1.296,565,1.333,566,0.783,567,0.761,568,1.11,569,1.333,570,1.176,571,1.224,572,0.718,573,0.829,574,1.717,575,0.829,576,0.829,577,0.829,578,0.806,579,0.806,580,0.806,581,0.806,582,0.806,583,0.806,584,0.829,585,0.806,586,0.829,587,0.829,588,0.739,589,0.806,590,1.079,591,1.049,592,0.761,593,0.622,594,0.806,595,0.739]],["title/interfaces/InformationDesk.html",[476,0.44,523,0.997]],["body/interfaces/InformationDesk.html",[3,0.093,4,0.065,8,0.074,16,0.237,29,0.657,34,0.011,35,0.587,36,0.599,41,0.162,58,0.244,74,0.371,90,0.382,108,0.766,124,0.614,127,0.68,136,0.606,156,0.004,157,0.006,158,0.004,298,0.657,299,0.804,302,1.049,311,0.873,323,1.241,327,1.084,328,1.541,331,0.911,337,1.437,376,1.288,395,1.251,424,0.876,429,0.876,462,0.781,464,1.544,476,0.903,477,0.827,478,0.876,479,0.851,480,1.749,481,1.667,482,1.527,483,1.571,484,1.571,485,1.571,486,2.018,487,2.029,488,1.571,489,1.645,490,0.851,491,0.902,492,1.361,493,0.738,494,0.738,495,0.759,496,1.822,497,1.054,498,1.484,499,0.902,500,1.325,501,1.527,502,1.251,503,1.571,504,1.875,505,1.822,506,1.251,507,1.732,508,1.812,509,1.571,510,1.325,511,1.325,512,1.325,513,1.054,514,2.046,515,1.325,516,1.536,517,1.288,518,1.325,519,1.325,520,1.325,521,1.288,522,1.325,523,1.501,524,1.325,525,1.325,526,1.288,527,1.116,528,1.251,529,1.288,530,2.036,531,0.902,532,0.902,533,1.325,534,0.902,535,0.902,536,1.793,537,1.732,538,1.732,539,1.732,540,1.732,541,1.732,542,1.732,543,1.732,544,1.846,545,1.288,546,1.484,547,1.288,548,1.116,549,0.781,550,0.738,551,0.827,552,0.902,553,0.759,554,1.325,555,1.182,556,0.781,557,0.781,558,0.902,559,1.148,560,0.827,561,1.323,562,0.902,563,0.876,564,1.361,565,1.401,566,0.851,567,0.827,568,1.182,569,1.401,570,1.251,571,1.286,572,0.781,573,0.902,574,1.77,575,0.902,576,0.902,577,0.902,578,0.876,579,0.876,580,0.876,581,0.876,582,0.876,583,0.876,584,0.902,585,0.876,586,0.902,587,0.902,588,0.804,589,0.876,590,1.148,591,1.116,592,0.827,593,0.677,594,0.876,595,0.804]],["title/components/InformationDeskDetailsComponent.html",[0,0.582,113,1.256]],["body/components/InformationDeskDetailsComponent.html",[0,0.933,1,1.323,2,1.947,3,0.125,4,0.088,5,1.49,6,1.49,7,1.49,8,0.1,10,1.446,11,2.961,12,2.706,14,2.007,16,0.318,17,1.375,19,1.021,24,2.431,31,1.704,33,0.992,34,0.011,35,0.485,36,0.516,37,0.884,39,1.336,40,2.014,41,0.204,42,0.573,45,1.636,46,1.805,47,1.112,58,0.125,59,0.536,74,0.672,90,0.349,91,2.007,92,2.007,93,1.49,94,2.428,95,1.49,96,1.49,97,1.323,98,1.49,99,1.49,100,1.323,101,1.49,102,1.49,103,1.323,104,2.007,105,1.323,106,1.49,107,1.323,108,0.536,109,1.49,110,1.323,111,1.49,112,1.49,113,2.155,114,2.632,115,2.78,116,2.27,117,1.323,118,1.446,119,1.49,120,1.323,121,1.49,122,1.323,123,1.586,124,0.7,125,2.007,126,1.362,127,0.673,128,1.323,129,1.285,130,1.49,131,1.323,132,1.49,133,1.323,134,1.49,135,1.323,136,0.554,137,1.323,138,1.49,139,1.323,140,1.49,141,1.323,142,1.49,143,1.285,144,1.49,145,1.323,146,1.49,147,1.362,148,1.323,149,2.007,150,1.323,151,1.323,152,1.49,153,1.323,154,1.49,155,1.49,156,0.006,157,0.008,158,0.006,247,6.001,311,0.697,313,2.122,323,0.613,335,1.781,406,1.537,415,2.07,523,1.84,536,1.586,619,4.38,635,1.403,787,4.953,797,3.254,801,5.302,870,3.254,1094,7.158,1095,3.522,1096,5.227,1097,5.91,1098,5.227,1099,5.364,1100,6.74,1101,5.666,1102,4.663,1103,5.961,1104,4.426,1105,3.881,1106,3.854,1107,4.426,1108,4.426,1109,5.227,1110,3.04,1111,5.961,1112,4.426,1113,4.426,1114,4.426,1115,4.426,1116,5.961,1117,5.961,1118,5.961,1119,5.961,1120,5.961]],["title/interfaces/InformationIntro.html",[476,0.44,556,0.997]],["body/interfaces/InformationIntro.html",[3,0.099,4,0.069,8,0.079,16,0.252,29,0.699,34,0.011,35,0.579,36,0.587,41,0.168,58,0.245,74,0.395,90,0.399,108,0.788,124,0.632,127,0.693,136,0.634,156,0.004,157,0.006,158,0.004,298,0.699,299,0.854,302,1.086,311,0.888,323,1.239,327,1.134,328,1.57,331,0.953,337,1.437,376,1.346,395,1.308,424,0.931,429,0.931,462,0.83,464,1.812,476,0.908,477,0.879,478,0.931,479,0.905,480,1.768,481,1.68,482,1.581,483,1.627,484,1.627,485,1.627,486,2.041,487,2.06,488,1.627,489,1.686,490,0.905,491,0.958,492,1.41,493,0.784,494,0.784,495,0.807,496,1.861,497,1.102,498,1.536,499,0.958,500,1.386,501,1.581,502,1.308,503,1.627,504,1.915,505,1.861,506,1.308,507,1.783,508,1.752,509,1.627,510,1.386,511,1.386,512,1.386,513,1.102,514,1.891,515,1.386,516,1.562,517,1.346,518,1.386,519,1.386,520,1.386,521,1.346,522,1.386,523,1.41,524,1.386,525,1.386,526,1.346,527,1.167,528,1.308,529,1.346,530,2.022,531,0.958,532,0.958,533,1.386,534,0.958,535,0.958,536,1.346,537,0.958,538,0.958,539,0.958,540,0.958,541,0.958,542,0.958,543,0.958,544,1.386,545,1.346,546,1.536,547,1.346,548,1.167,549,0.83,550,0.784,551,0.879,552,0.958,553,0.807,554,1.386,555,1.235,556,1.2,557,0.83,558,0.958,559,1.2,560,0.879,561,1.37,562,0.958,563,0.931,564,1.41,565,1.451,566,0.905,567,0.879,568,1.235,569,1.451,570,1.308,571,1.331,572,0.83,573,0.958,574,1.808,575,0.958,576,0.958,577,0.958,578,0.931,579,0.931,580,0.931,581,0.931,582,0.931,583,0.931,584,0.958,585,0.931,586,0.958,587,0.958,588,0.854,589,0.931,590,1.2,591,1.167,592,0.879,593,0.719,594,0.931,595,0.854]],["title/interfaces/InformationItem.html",[476,0.44,557,0.997]],["body/interfaces/InformationItem.html",[3,0.098,4,0.069,8,0.078,16,0.249,29,0.692,34,0.011,35,0.578,36,0.59,41,0.167,58,0.245,74,0.391,90,0.396,108,0.784,124,0.629,127,0.691,136,0.629,156,0.004,157,0.006,158,0.004,298,0.692,299,0.846,302,1.08,311,0.886,323,1.24,327,1.125,328,1.565,331,0.946,337,1.436,376,1.337,395,1.299,424,0.922,429,0.922,462,1.537,464,1.807,476,0.907,477,0.871,478,0.922,479,0.896,480,1.765,481,1.678,482,1.572,483,1.618,484,1.618,485,1.618,486,2.037,487,2.055,488,1.618,489,1.68,490,0.896,491,0.949,492,1.402,493,0.776,494,0.776,495,0.799,496,1.855,497,1.094,498,1.528,499,0.949,500,1.376,501,1.572,502,1.299,503,1.618,504,1.909,505,1.855,506,1.299,507,1.775,508,1.748,509,1.618,510,1.376,511,1.376,512,1.376,513,1.094,514,1.884,515,1.376,516,1.558,517,1.337,518,1.376,519,1.376,520,1.376,521,1.337,522,1.376,523,1.402,524,1.376,525,1.376,526,1.337,527,1.158,528,1.299,529,1.337,530,2.018,531,0.949,532,0.949,533,1.376,534,0.949,535,0.949,536,1.337,537,0.949,538,0.949,539,0.949,540,0.949,541,0.949,542,0.949,543,0.949,544,1.376,545,1.337,546,1.528,547,1.337,548,1.158,549,0.822,550,0.776,551,0.871,552,0.949,553,0.799,554,1.376,555,1.226,556,0.822,557,1.192,558,1.775,559,1.192,560,0.871,561,1.362,562,0.949,563,0.922,564,1.402,565,1.443,566,0.896,567,0.871,568,1.226,569,1.443,570,1.299,571,1.324,572,0.822,573,0.949,574,1.802,575,0.949,576,0.949,577,0.949,578,0.922,579,0.922,580,0.922,581,0.922,582,0.922,583,0.922,584,0.949,585,0.922,586,0.949,587,0.949,588,0.846,589,0.922,590,1.192,591,1.158,592,0.871,593,0.712,594,0.922,595,0.846]],["title/interfaces/IntervalFilter.html",[476,0.44,551,1.056]],["body/interfaces/IntervalFilter.html",[3,0.099,4,0.07,8,0.079,16,0.253,29,0.702,34,0.011,35,0.579,36,0.589,41,0.168,58,0.245,74,0.396,90,0.4,108,0.837,124,0.633,127,0.694,136,0.636,156,0.004,157,0.006,158,0.004,298,0.702,299,0.858,302,1.089,311,0.889,323,1.239,327,1.137,328,1.572,331,0.956,337,1.436,376,1.35,395,1.312,424,0.935,429,0.935,462,0.834,464,1.593,476,0.908,477,0.883,478,0.935,479,0.909,480,1.784,481,1.681,482,1.585,483,1.631,484,1.631,485,1.631,486,2.042,487,2.063,488,1.631,489,1.689,490,0.909,491,0.963,492,1.413,493,0.788,494,0.788,495,0.81,496,1.864,497,1.105,498,1.54,499,0.963,500,1.39,501,1.585,502,1.312,503,1.631,504,1.918,505,1.864,506,1.312,507,1.786,508,1.754,509,1.631,510,1.39,511,1.39,512,1.39,513,1.105,514,1.895,515,1.39,516,1.564,517,1.35,518,1.39,519,1.39,520,1.39,521,1.35,522,1.39,523,1.413,524,1.39,525,1.39,526,1.35,527,1.17,528,1.312,529,1.35,530,2.024,531,0.963,532,0.963,533,1.39,534,0.963,535,0.963,536,1.35,537,0.963,538,0.963,539,0.963,540,0.963,541,0.963,542,0.963,543,0.963,544,1.39,545,1.35,546,1.54,547,1.35,548,1.17,549,0.834,550,0.788,551,1.275,552,0.963,553,0.81,554,1.39,555,1.239,556,0.834,557,0.834,558,0.963,559,1.204,560,0.883,561,1.373,562,0.963,563,0.935,564,1.413,565,1.454,566,0.909,567,0.883,568,1.239,569,1.454,570,1.312,571,1.335,572,0.834,573,0.963,574,1.811,575,0.963,576,0.963,577,0.963,578,0.935,579,0.935,580,0.935,581,0.935,582,0.935,583,0.935,584,0.963,585,0.935,586,0.963,587,0.963,588,0.858,589,0.935,590,1.204,591,1.17,592,0.883,593,0.722,594,0.935,595,0.858]],["title/components/LayersVisibilityComponent.html",[0,0.582,117,1.256]],["body/components/LayersVisibilityComponent.html",[0,0.981,1,1.463,2,2.082,3,0.138,4,0.097,5,1.648,6,1.648,7,1.648,8,0.111,10,1.599,11,2.981,12,2.725,14,2.146,16,0.352,17,1.469,19,1.129,31,1.646,33,1.428,34,0.011,35,0.54,36,0.514,37,1.272,39,1.428,40,1.904,41,0.18,42,0.634,47,1.23,58,0.138,59,0.592,90,0.386,91,2.146,92,2.146,93,1.648,94,2.527,95,1.648,96,1.648,97,1.463,98,1.648,99,1.648,100,1.463,101,1.648,102,1.648,103,1.463,104,2.146,105,1.463,106,1.648,107,1.463,108,0.592,109,1.648,110,1.463,111,1.648,112,1.648,113,1.463,114,1.599,115,1.552,116,2.386,117,2.243,118,2.764,119,1.648,120,1.463,121,1.648,122,1.463,123,1.696,124,0.729,125,2.146,126,1.506,127,0.7,128,1.463,129,1.421,130,1.648,131,1.463,132,1.648,133,1.463,134,1.648,135,1.463,136,0.613,137,1.463,138,1.648,139,1.463,140,1.648,141,1.463,142,1.648,143,1.421,144,1.648,145,1.463,146,1.648,147,1.506,148,1.463,149,2.146,150,1.463,151,1.463,152,1.648,153,1.463,154,1.648,155,1.648,156,0.006,157,0.008,158,0.006,250,6.348,311,0.745,313,1.997,406,1.7,415,2.212,639,2.996,768,2.599,771,3.895,772,3.895,773,3.895,774,2.393,775,3.362,1101,5.479,1102,4.852,1121,6.995,1122,4.292,1123,6.372,1124,7.085,1125,6.372,1126,7.085,1127,6.372,1128,4.292,1129,6.372,1130,4.895,1131,6.372,1132,4.895,1133,4.895,1134,4.895,1135,4.895,1136,4.895,1137,4.895,1138,4.895,1139,4.292,1140,6.372]],["title/components/LoaderComponent.html",[0,0.582,120,1.256]],["body/components/LoaderComponent.html",[0,0.953,1,1.379,2,2.002,3,0.13,4,0.091,5,1.554,6,1.554,7,1.554,8,0.104,10,1.507,11,2.969,12,2.714,14,2.064,16,0.441,17,1.413,19,1.064,31,1.694,33,1.034,34,0.011,35,0.495,36,0.523,37,0.921,39,1.034,40,1.832,41,0.207,42,0.598,58,0.13,59,0.558,60,2.118,74,0.691,90,0.364,91,2.064,92,2.064,93,1.554,94,2.469,95,1.554,96,1.554,97,1.379,98,1.554,99,1.554,100,1.379,101,1.554,102,1.554,103,1.379,104,2.064,105,1.379,106,1.554,107,1.379,108,0.558,109,1.554,110,1.379,111,1.554,112,1.554,113,1.379,114,1.507,115,1.463,116,2.317,117,1.379,118,1.507,119,1.554,120,2.191,121,1.554,122,1.379,123,1.631,124,0.712,125,2.064,126,1.42,127,0.684,128,1.379,129,1.339,130,1.554,131,1.379,132,1.554,133,1.379,134,1.554,135,1.379,136,0.578,137,1.379,138,1.554,139,1.379,140,1.554,141,1.379,142,1.554,143,1.339,144,1.554,145,1.379,146,1.554,147,1.42,148,1.379,149,2.064,150,1.379,151,1.379,152,1.554,153,1.379,154,1.554,155,1.554,156,0.006,157,0.008,158,0.006,197,3.169,210,4.488,311,0.716,313,2.257,331,1.381,335,1.832,347,1.761,353,2.561,392,4.506,406,1.602,410,2.002,415,2.128,423,3.12,427,2.561,445,3.503,462,1.095,516,1.507,553,1.064,774,2.996,778,4.005,792,3.733,823,3.119,881,3.169,882,2.983,883,2.983,884,2.449,885,2.824,886,3.392,887,3.751,888,2.983,889,2.983,890,3.392,891,3.169,892,3.671,893,3.671,894,3.671,895,3.392,896,3.392,897,5.06,1060,3.169,1086,2.983,1110,3.169,1141,4.045,1142,6.882,1143,6.129,1144,6.881,1145,4.741,1146,6.882,1147,6.882,1148,3.169,1149,4.441,1150,6.129,1151,4.614,1152,4.614,1153,4.614,1154,4.614,1155,4.614,1156,4.045,1157,4.614,1158,4.614,1159,4.614,1160,5.374,1161,4.045,1162,4.614,1163,4.045,1164,4.614,1165,4.614]],["title/interceptors/LoadingInterceptor.html",[173,2.716,1166,3.684]],["body/interceptors/LoadingInterceptor.html",[3,0.15,4,0.105,8,0.12,13,2.825,16,0.383,17,1.55,19,1.55,31,1.422,33,1.506,34,0.011,35,0.483,36,0.46,37,1.342,39,1.192,40,2.009,41,0.219,42,0.689,58,0.19,59,0.814,60,1.637,80,2.651,123,1.416,156,0.007,157,0.009,158,0.007,173,4.346,183,2.825,257,2.773,258,2.938,286,1.945,307,2.559,313,1.5,323,1.129,328,1.638,346,3.44,347,2.031,348,3.44,352,3.654,353,2.953,354,2.953,401,3.44,402,3.44,410,1.738,414,3.44,481,1.342,516,1.093,735,2.953,768,2.825,827,4.346,1060,3.654,1145,4.764,1148,3.654,1149,4.505,1167,5.32,1168,4.233,1169,6.722,1170,5.32,1171,5.894,1172,6.788,1173,5.692,1174,6.788,1175,5.32,1176,5.32,1177,5.894,1178,5.894,1179,5.894,1180,4.665,1181,4.665,1182,4.665,1183,6.462,1184,4.665,1185,4.665,1186,4.665,1187,4.665,1188,4.665,1189,4.665,1190,4.665,1191,4.665,1192,4.665,1193,4.665,1194,5.894,1195,4.665,1196,5.894,1197,4.665,1198,4.665,1199,4.665,1200,5.894,1201,4.665,1202,4.665,1203,4.665,1204,4.665,1205,4.665,1206,4.665,1207,4.665,1208,4.665,1209,3.256,1210,4.665,1211,4.665,1212,5.894]],["title/injectables/LoadingService.html",[307,1.459,1149,2.445]],["body/injectables/LoadingService.html",[3,0.143,4,0.101,8,0.115,13,2.693,16,0.365,17,1.504,19,1.662,31,1.704,33,1.615,34,0.011,35,0.518,36,0.494,37,1.439,39,1.615,40,2.273,41,0.215,42,0.657,58,0.184,59,0.789,60,2.218,74,0.735,80,2.572,123,1.35,156,0.006,157,0.008,158,0.006,173,3.279,183,2.693,257,2.724,258,3.324,286,1.911,307,2.502,309,2.815,311,0.762,313,2.032,323,1.184,328,1.609,333,3.104,335,1.949,346,3.279,347,1.936,348,3.279,352,3.484,353,2.815,354,2.815,401,3.279,402,3.279,410,1.657,414,3.279,481,1.571,516,1.042,735,2.815,768,2.693,827,4.659,1060,4.949,1145,4.216,1149,4.193,1168,4.036,1171,4.448,1172,5.718,1173,4.794,1174,5.718,1177,5.718,1178,5.718,1179,5.718,1180,5.718,1181,4.448,1182,6.319,1183,6.319,1184,4.448,1185,4.448,1186,4.448,1187,4.448,1188,4.448,1189,6.319,1190,4.448,1191,4.448,1192,4.448,1193,5.718,1194,5.718,1195,4.448,1196,5.718,1197,5.718,1198,4.448,1199,4.448,1200,5.718,1201,5.718,1202,4.448,1203,4.448,1204,4.448,1205,4.448,1206,4.448,1207,4.448,1208,4.448,1209,3.104,1210,4.448,1211,4.448,1212,5.718,1213,6.521,1214,5.718,1215,6.521,1216,5.072,1217,5.072,1218,5.072,1219,5.072]],["title/pipes/LowerRoundPipe.html",[600,2.886,1209,2.572]],["body/pipes/LowerRoundPipe.html",[3,0.183,4,0.129,8,0.147,10,2.12,17,1.497,31,1.373,33,1.454,34,0.011,35,0.578,36,0.445,37,1.296,39,1.454,41,0.183,42,0.841,58,0.183,59,0.786,156,0.008,157,0.01,158,0.008,257,2.325,335,1.939,337,1.368,410,2.12,600,5.21,1209,4.643,1220,6.49,1221,6.652,1222,5.691,1223,6.652,1224,5.691,1225,7.586,1226,6.49,1227,7.586,1228,6.49]],["title/components/MapTreksVizComponent.html",[0,0.582,122,1.256]],["body/components/MapTreksVizComponent.html",[0,0.659,1,0.728,2,1.256,3,0.069,4,0.13,5,0.82,6,0.82,7,0.82,8,0.055,10,0.796,11,2.799,12,2.558,14,1.295,16,0.45,17,0.887,19,0.887,21,2.865,24,1.943,25,3.149,31,1.698,33,1.068,34,0.012,35,0.45,36,0.559,37,0.951,39,1.522,40,2.09,41,0.21,42,0.316,43,0.873,44,0.873,45,1.422,46,0.993,47,0.612,48,1.146,58,0.069,59,0.295,60,2.348,64,2.042,65,1.957,66,2.53,74,0.275,76,2.486,80,2.134,82,2.042,90,0.192,91,1.295,92,1.604,93,0.82,94,1.822,95,0.82,96,0.82,97,0.728,98,0.82,99,0.82,100,0.728,101,0.82,102,0.82,103,0.728,104,1.295,105,0.728,106,0.82,107,0.728,108,0.713,109,0.82,110,0.728,111,1.822,112,0.82,113,0.728,114,0.796,115,0.772,116,1.604,117,0.728,118,1.557,119,0.82,120,0.728,121,0.82,122,1.617,123,2.073,124,0.842,125,1.295,126,0.75,127,0.693,128,0.728,129,1.116,130,0.82,131,0.728,132,0.82,133,0.728,134,0.82,135,0.728,136,0.305,137,0.728,138,0.82,139,0.728,140,0.82,141,0.728,142,0.82,143,0.707,144,0.82,145,0.728,146,0.82,147,0.75,148,0.728,149,1.295,150,0.728,151,0.728,152,0.82,153,0.728,154,0.82,155,0.82,156,0.003,157,0.005,158,0.003,174,2.469,225,5.748,226,1.939,227,2.136,257,0.873,258,2.736,271,1.028,286,1.938,298,0.768,302,0.871,311,0.449,313,2.019,323,0.532,324,1.673,328,0.814,331,1.019,335,1.149,337,0.772,344,3.809,347,0.93,392,1.791,395,0.63,406,0.846,410,1.256,415,1.335,421,2.082,423,2.425,432,1.939,444,1.819,445,3.187,458,1.673,463,3.272,465,2.641,472,3.272,473,2.238,474,1.575,480,0.837,481,1.25,486,1.647,487,1.023,489,1.6,490,1.232,492,1.131,493,0.546,494,0.862,496,1.523,497,1.037,502,1.232,504,0.648,505,0.994,516,0.79,550,0.862,553,0.562,555,1.163,559,1.486,572,1.131,591,1.099,593,0.979,612,2.645,635,0.772,648,1.491,649,1.673,697,3.792,735,1.352,777,3.061,778,2.772,784,2.135,785,2.135,792,3.336,818,2.772,819,1.417,820,1.417,823,1.104,829,1.417,834,1.417,845,2.238,873,1.791,882,2.486,884,2.042,885,2.354,887,2.354,889,1.575,897,2.827,914,3.792,918,4.982,927,3.06,932,3.716,943,3.06,944,4.306,946,1.939,956,3.372,957,2.136,968,1.939,969,1.939,979,3.372,992,2.136,1006,2.136,1007,4.666,1021,1.939,1022,1.491,1026,1.939,1028,1.939,1029,1.791,1030,1.939,1032,1.939,1086,1.575,1173,1.791,1229,6.301,1230,5.821,1231,1.939,1232,3.846,1233,4.765,1234,3.846,1235,4.765,1236,6.261,1237,5.411,1238,5.411,1239,5.411,1240,3.846,1241,4.765,1242,3.792,1243,3.792,1244,2.136,1245,3.846,1246,2.436,1247,2.436,1248,2.436,1249,2.436,1250,2.436,1251,2.436,1252,2.436,1253,2.436,1254,2.436,1255,3.846,1256,3.846,1257,2.436,1258,2.436,1259,3.846,1260,2.436,1261,2.436,1262,4.765,1263,2.436,1264,2.436,1265,2.436,1266,3.846,1267,3.846,1268,2.436,1269,1.939,1270,2.136,1271,2.436,1272,3.846,1273,2.436,1274,2.436,1275,2.436,1276,2.436,1277,2.436,1278,2.436,1279,4.765,1280,3.846,1281,4.765,1282,6.794,1283,3.503,1284,2.436,1285,2.436,1286,2.436,1287,3.06,1288,3.846,1289,1.575,1290,3.846,1291,3.846,1292,2.436,1293,2.436,1294,2.436,1295,2.436,1296,2.436,1297,3.06,1298,1.791,1299,3.846,1300,2.436,1301,2.436,1302,2.436,1303,2.436,1304,2.436,1305,2.436,1306,2.436,1307,2.436,1308,2.136,1309,2.136,1310,2.436,1311,2.436,1312,2.436,1313,2.436,1314,2.436,1315,2.436,1316,2.436,1317,2.436,1318,2.436,1319,2.436,1320,3.503,1321,2.436,1322,2.436,1323,2.436,1324,3.846,1325,2.436,1326,3.846,1327,2.436,1328,2.436,1329,2.436,1330,2.436,1331,2.436,1332,2.436,1333,2.436,1334,2.436,1335,2.436,1336,2.436,1337,2.136,1338,4.765,1339,2.136,1340,4.745,1341,2.436,1342,2.436,1343,2.436,1344,6.261,1345,5.411,1346,2.436,1347,2.136,1348,2.436,1349,5.891,1350,6.132,1351,5.411,1352,4.178,1353,3.846,1354,2.436,1355,3.372,1356,2.136,1357,3.372,1358,2.136,1359,2.436,1360,2.136,1361,2.136,1362,3.06,1363,2.136,1364,2.136,1365,3.846,1366,2.436,1367,2.436,1368,2.436,1369,2.436,1370,2.436,1371,2.436,1372,2.136,1373,2.436,1374,3.846,1375,3.846,1376,3.846,1377,3.846,1378,2.436,1379,3.846,1380,3.846,1381,2.436,1382,2.136,1383,2.436,1384,2.436,1385,5.891,1386,2.436,1387,2.436,1388,2.436,1389,2.436,1390,2.436,1391,2.436,1392,2.436,1393,2.436,1394,2.436,1395,2.436,1396,3.846,1397,5.411,1398,3.846,1399,3.846,1400,2.436,1401,2.436,1402,2.436,1403,3.846,1404,2.136,1405,2.436,1406,2.436,1407,2.436,1408,2.436,1409,2.436,1410,2.436,1411,2.436,1412,2.436,1413,2.436,1414,2.436,1415,2.436,1416,2.436,1417,2.436,1418,2.436,1419,2.436,1420,2.436,1421,2.436,1422,2.136,1423,1.939,1424,2.136,1425,2.136,1426,1.939,1427,1.673,1428,3.372]],["title/interfaces/MinimalTrek.html",[476,0.44,497,0.915]],["body/interfaces/MinimalTrek.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.695,34,0.011,35,0.578,36,0.593,41,0.167,58,0.245,74,0.393,90,0.397,108,0.786,124,0.631,127,0.692,136,0.631,156,0.004,157,0.006,158,0.004,298,0.695,299,0.85,302,1.083,311,0.93,323,1.238,327,1.13,328,1.568,331,0.949,334,2.566,337,1.435,376,1.341,395,1.303,424,0.927,429,0.927,462,0.826,464,1.586,476,0.908,477,0.875,478,0.927,479,0.9,480,1.781,481,1.654,482,1.577,483,1.623,484,1.623,485,1.623,486,2.055,487,2.058,488,1.623,489,1.683,490,0.9,491,0.954,492,1.406,493,0.78,494,0.78,495,0.803,496,1.858,497,1.29,498,1.782,499,0.954,500,1.381,501,1.577,502,1.303,503,1.623,504,2.058,505,1.858,506,1.303,507,1.779,508,1.75,509,1.623,510,1.381,511,1.381,512,1.381,513,1.098,514,1.888,515,1.381,516,1.56,517,1.341,518,1.381,519,1.381,520,1.381,521,1.341,522,1.381,523,1.406,524,1.381,525,1.381,526,1.341,527,1.162,528,1.303,529,1.341,530,2.02,531,0.954,532,0.954,533,1.381,534,0.954,535,0.954,536,1.341,537,0.954,538,0.954,539,0.954,540,0.954,541,0.954,542,0.954,543,0.954,544,1.381,545,1.341,546,1.532,547,1.341,548,1.162,549,0.826,550,0.78,551,0.875,552,0.954,553,0.803,554,1.381,555,1.231,556,0.826,557,0.826,558,0.954,559,1.196,560,0.875,561,1.366,562,0.954,563,0.927,564,1.406,565,1.447,566,0.9,567,0.875,568,1.231,569,1.447,570,1.303,571,1.328,572,0.826,573,0.954,574,1.805,575,0.954,576,0.954,577,0.954,578,0.927,579,0.927,580,0.927,581,0.927,582,0.927,583,0.927,584,0.954,585,0.927,586,0.954,587,0.954,588,0.85,589,0.927,590,1.196,591,1.162,592,0.875,593,0.716,594,0.927,595,0.85]],["title/interfaces/MinimalTrekProperties.html",[476,0.44,498,1.086]],["body/interfaces/MinimalTrekProperties.html",[3,0.095,4,0.067,8,0.076,16,0.242,29,0.671,34,0.011,35,0.589,36,0.596,41,0.164,58,0.244,74,0.379,90,0.387,108,0.773,124,0.62,127,0.684,136,0.615,156,0.004,157,0.006,158,0.004,298,0.671,299,0.82,302,1.061,311,0.878,323,1.238,327,1.101,328,1.551,331,0.925,334,2.5,337,1.442,376,1.307,395,1.27,424,0.894,429,0.894,462,0.797,464,1.559,476,0.905,477,0.844,478,0.894,479,0.869,480,1.755,481,1.671,482,1.888,483,1.944,484,1.944,485,1.944,486,2.026,487,2.04,488,1.59,489,1.659,490,0.869,491,0.92,492,1.378,493,0.753,494,0.753,495,0.775,496,1.835,497,1.069,498,1.651,499,1.749,500,1.345,501,1.888,502,1.757,503,1.944,504,1.888,505,1.835,506,1.27,507,1.749,508,1.733,509,1.59,510,1.345,511,1.345,512,1.345,513,1.069,514,1.861,515,1.345,516,1.544,517,1.307,518,1.345,519,1.345,520,1.345,521,1.307,522,1.345,523,1.378,524,1.345,525,1.345,526,1.307,527,1.133,528,1.27,529,1.307,530,2.006,531,0.92,532,0.92,533,1.345,534,0.92,535,0.92,536,1.307,537,0.92,538,0.92,539,0.92,540,0.92,541,0.92,542,0.92,543,0.92,544,1.345,545,1.307,546,1.501,547,1.307,548,1.133,549,0.797,550,0.753,551,0.844,552,0.92,553,0.775,554,1.345,555,1.199,556,0.797,557,0.797,558,0.92,559,1.166,560,0.844,561,1.339,562,0.92,563,0.894,564,1.378,565,1.418,566,0.869,567,0.844,568,1.199,569,1.418,570,1.27,571,1.301,572,0.797,573,0.92,574,1.783,575,0.92,576,0.92,577,0.92,578,0.894,579,0.894,580,0.894,581,0.894,582,0.894,583,0.894,584,0.92,585,0.894,586,0.92,587,0.92,588,0.82,589,0.894,590,1.166,591,1.133,592,0.844,593,0.691,594,0.894,595,0.82]],["title/interfaces/MinimalTreks.html",[476,0.44,495,0.969]],["body/interfaces/MinimalTreks.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.695,34,0.011,35,0.592,36,0.592,41,0.167,58,0.245,74,0.393,90,0.397,108,0.786,124,0.631,127,0.692,136,0.631,156,0.004,157,0.006,158,0.004,298,0.695,299,0.85,302,1.083,311,0.887,323,1.239,327,1.13,328,1.568,331,0.949,337,1.435,376,1.341,395,1.303,424,0.927,429,0.927,462,0.826,464,1.586,476,0.908,477,0.875,478,0.927,479,0.9,480,1.767,481,1.654,482,1.577,483,1.623,484,1.623,485,1.623,486,2.039,487,2.058,488,1.623,489,1.683,490,0.9,491,0.954,492,1.406,493,0.78,494,0.78,495,1.162,496,2,497,1.414,498,1.532,499,0.954,500,1.381,501,1.577,502,1.303,503,1.623,504,1.912,505,1.858,506,1.303,507,1.779,508,1.75,509,1.623,510,1.381,511,1.381,512,1.381,513,1.098,514,1.888,515,1.381,516,1.56,517,1.341,518,1.381,519,1.381,520,1.381,521,1.341,522,1.381,523,1.406,524,1.381,525,1.381,526,1.341,527,1.162,528,1.303,529,1.341,530,2.02,531,0.954,532,0.954,533,1.381,534,0.954,535,0.954,536,1.341,537,0.954,538,0.954,539,0.954,540,0.954,541,0.954,542,0.954,543,0.954,544,1.381,545,1.341,546,1.532,547,1.341,548,1.162,549,0.826,550,0.78,551,0.875,552,0.954,553,0.803,554,1.381,555,1.231,556,0.826,557,0.826,558,0.954,559,1.196,560,0.875,561,1.366,562,0.954,563,0.927,564,1.406,565,1.447,566,0.9,567,0.875,568,1.231,569,1.447,570,1.303,571,1.328,572,0.826,573,0.954,574,1.805,575,0.954,576,0.954,577,0.954,578,0.927,579,0.927,580,0.927,581,0.927,582,0.927,583,0.927,584,0.954,585,0.927,586,0.954,587,0.954,588,0.85,589,0.927,590,1.196,591,1.162,592,0.875,593,0.716,594,0.927,595,0.85]],["title/injectables/MoreInformationsService.html",[307,1.459,1429,2.886]],["body/injectables/MoreInformationsService.html",[3,0.158,4,0.111,8,0.126,13,2.966,16,0.402,17,1.598,19,1.288,24,3.073,25,4.584,31,1.667,33,1.553,34,0.011,35,0.498,36,0.475,37,1.384,39,1.553,41,0.236,42,0.724,43,2.001,44,2.001,45,2.065,46,2.278,58,0.158,59,0.676,60,2.425,74,0.63,75,4.76,156,0.007,157,0.009,158,0.007,183,2.966,257,2.482,258,3.029,286,1.742,307,2.407,308,5.411,309,3.101,311,0.81,312,5.515,313,2.327,328,1.714,335,1.67,337,1.221,347,2.133,354,3.101,481,1.115,556,1.326,557,1.326,635,1.771,639,3.419,1106,4.481,1429,4.76,1430,7.103,1431,5.955,1432,4.899,1433,5.996,1434,6.931,1435,7.879,1436,5.587,1437,6.931,1438,6.931,1439,5.587,1440,5.587,1441,5.996,1442,4.899,1443,6.27,1444,5.515,1445,5.515,1446,5.515,1447,5.587,1448,5.587]],["title/components/MoreItemPage.html",[0,0.582,128,1.256]],["body/components/MoreItemPage.html",[0,0.937,1,1.335,2,1.959,3,0.126,4,0.089,5,1.504,6,1.504,7,1.504,8,0.101,10,1.459,11,2.963,12,2.708,14,2.02,16,0.321,17,1.383,19,1.383,31,1.73,33,1.001,34,0.011,35,0.487,36,0.496,37,0.892,39,1.622,40,2.163,41,0.204,42,0.579,58,0.126,59,0.541,60,1.846,74,0.504,90,0.352,91,2.02,92,2.02,93,1.504,94,2.437,95,1.504,96,1.504,97,1.335,98,1.504,99,1.504,100,1.335,101,1.504,102,1.504,103,1.335,104,2.02,105,1.335,106,1.504,107,1.335,108,0.541,109,1.504,110,1.335,111,1.504,112,1.504,113,1.335,114,1.459,115,1.416,116,2.28,117,1.335,118,1.459,119,1.504,120,1.335,121,1.504,122,1.335,123,1.596,124,0.703,125,2.02,126,1.375,127,0.676,128,2.163,129,2.343,130,1.504,131,1.335,132,1.504,133,1.335,134,1.504,135,1.335,136,0.559,137,1.335,138,1.504,139,1.335,140,1.504,141,1.335,142,1.504,143,1.296,144,1.504,145,1.335,146,1.504,147,1.375,148,1.335,149,2.02,150,1.335,151,1.335,152,1.504,153,1.335,154,1.504,155,1.504,156,0.006,157,0.008,158,0.006,191,1.6,271,1.885,286,1.122,298,1.197,311,0.701,335,1.335,337,0.972,406,1.551,410,1.959,411,3.311,415,2.082,421,3.471,444,2.585,480,1.306,513,1.306,557,1.718,635,1.416,777,3.801,778,3.94,784,3.329,785,3.329,792,3.447,818,3.94,819,2.599,820,2.599,823,2.024,829,2.599,830,2.734,834,2.599,835,3.067,845,2.599,1449,6.32,1450,5.839,1451,3.916,1452,6.621,1453,6.771,1454,5.998,1455,4.882,1456,6.771,1457,5.388,1458,5.76,1459,3.916,1460,5.321,1461,5.135,1462,5.998,1463,4.466,1464,4.466,1465,4.466,1466,4.466,1467,3.554,1468,4.466,1469,4.773,1470,4.466,1471,3.554,1472,5.998,1473,5.998]],["title/modules/MoreItemPageModule.html",[159,1.118,1474,3.089]],["body/modules/MoreItemPageModule.html",[0,0.825,3,0.168,4,0.118,8,0.135,34,0.011,41,0.242,42,0.772,43,2.135,44,2.135,47,1.498,58,0.168,59,0.721,90,0.47,128,2.535,129,1.73,156,0.008,157,0.009,158,0.008,159,1.586,161,2.275,162,2.431,163,3.389,164,2.605,165,2.431,166,2.431,174,2.844,175,2.515,176,2.515,179,3.043,184,3.043,191,2.135,192,4.953,193,5.227,194,5.227,198,3.526,203,2.515,206,2.914,284,3.165,285,4.117,286,1.498,287,3.648,907,3.526,908,3.469,910,3.034,1449,4.744,1450,4.382,1452,5.227,1474,6.292,1475,5.227,1476,5.227,1477,5.227,1478,4.268,1479,5.961,1480,3.648,1481,5.961,1482,4.382,1483,4.382,1484,3.165,1485,3.854]],["title/guards/MoreItemResolver.html",[192,2.886,1486,2.886]],["body/guards/MoreItemResolver.html",[3,0.159,4,0.112,8,0.127,16,0.404,17,1.605,19,1.605,21,3.663,31,1.472,33,1.56,34,0.011,35,0.5,36,0.477,37,1.39,39,1.261,41,0.244,42,0.729,45,2.079,46,2.294,47,1.413,48,2.646,58,0.159,59,0.681,60,2.326,64,2.987,65,2.863,129,2.02,156,0.007,157,0.009,158,0.007,183,2.987,191,2.015,192,4.781,237,5.756,238,3.637,239,3.864,257,2.707,286,1.413,307,2.417,346,3.637,347,2.657,348,3.637,352,3.864,353,3.122,401,3.637,402,3.637,410,1.838,513,1.225,557,1.335,635,1.784,1429,5.424,1431,4.136,1455,3.637,1457,4.477,1484,4.193,1487,3.864,1488,6.628,1489,4.933,1490,4.933,1491,5.626,1492,5.539,1493,5.806,1494,5.626,1495,5.539,1496,4.933,1497,4.933,1498,5.626,1499,5.626,1500,5.626,1501,4.136,1502,4.136,1503,4.136,1504,5.626,1505,4.477,1506,4.477]],["title/components/MorePage.html",[0,0.582,131,1.256]],["body/components/MorePage.html",[0,0.941,1,1.346,2,1.97,3,0.127,4,0.089,5,1.516,6,1.516,7,1.516,8,0.102,10,1.471,11,2.964,12,2.709,14,2.031,16,0.324,17,1.391,19,1.038,31,1.733,33,1.009,34,0.011,35,0.489,36,0.498,37,0.899,39,1.627,40,2.263,41,0.214,42,0.583,45,1.665,46,1.836,58,0.127,59,0.545,60,1.386,74,0.68,90,0.355,91,2.031,92,2.031,93,1.516,94,2.445,95,1.516,96,1.516,97,1.346,98,1.516,99,1.516,100,1.346,101,1.516,102,1.516,103,1.346,104,2.031,105,1.346,106,1.516,107,1.346,108,0.545,109,1.516,110,1.346,111,1.516,112,1.516,113,1.346,114,1.471,115,1.428,116,2.29,117,1.346,118,1.471,119,1.516,120,1.346,121,1.516,122,1.346,123,1.605,124,0.705,125,2.031,126,1.386,127,0.678,128,1.346,129,1.973,130,1.516,131,2.17,132,1.516,133,1.346,134,1.516,135,1.346,136,0.564,137,1.346,138,1.516,139,1.346,140,1.516,141,1.346,142,1.516,143,1.307,144,1.516,145,1.346,146,1.516,147,1.386,148,1.346,149,2.031,150,1.346,151,1.346,152,1.516,153,1.346,154,1.516,155,1.516,156,0.006,157,0.008,158,0.006,191,1.613,271,1.9,286,1.131,311,0.705,313,2.197,323,0.835,335,1.802,406,1.564,410,1.97,411,3.324,415,2.094,421,3.479,427,3.774,444,2.595,480,1.313,513,1.313,556,1.723,635,1.428,639,2.756,777,3.81,784,3.347,785,3.347,792,3.461,818,3.956,819,2.62,820,2.62,823,2.041,829,2.62,830,2.756,834,2.62,835,3.093,845,2.62,1455,4.895,1458,5.779,1459,3.949,1460,5.339,1461,5.146,1467,3.584,1469,4.799,1471,3.584,1507,3.949,1508,6.8,1509,6.031,1510,6.025,1511,6.8,1512,6.031,1513,4.503,1514,4.503,1515,5.288,1516,4.503,1517,4.503,1518,4.503,1519,4.503,1520,6.031]],["title/modules/MorePageModule.html",[159,1.118,1521,2.886]],["body/modules/MorePageModule.html",[0,0.829,3,0.169,4,0.119,8,0.135,34,0.011,41,0.242,42,0.776,43,2.145,44,2.145,47,1.505,58,0.169,59,0.725,90,0.472,131,2.538,156,0.008,157,0.009,158,0.008,159,1.594,161,2.286,162,2.443,163,3.396,164,2.618,165,2.443,166,2.443,174,2.853,175,2.528,176,2.528,179,3.052,184,3.052,191,2.145,195,4.968,196,5.253,198,3.536,203,2.528,206,2.929,284,3.18,285,4.125,286,1.505,287,3.666,427,3.325,907,3.536,908,3.485,910,3.049,1478,4.273,1480,3.666,1482,4.404,1483,4.404,1484,3.18,1485,3.873,1521,5.883,1522,5.253,1523,5.253,1524,5.99,1525,5.99,1526,5.99]],["title/guards/MoreResolver.html",[195,2.886,1486,2.886]],["body/guards/MoreResolver.html",[3,0.163,4,0.115,8,0.131,16,0.415,19,1.632,21,3.684,31,1.222,33,1.295,34,0.011,35,0.415,36,0.396,37,1.154,41,0.245,42,0.749,45,2.136,46,2.356,47,1.452,48,2.718,58,0.163,59,0.699,60,2.354,64,3.068,65,2.941,129,2.054,156,0.007,157,0.009,158,0.007,183,3.068,191,2.07,195,4.86,237,5.789,238,3.736,239,3.968,257,2.534,307,2.457,311,0.675,346,3.736,348,3.736,352,4.86,353,3.207,401,3.736,402,3.736,410,1.888,513,1.258,556,1.371,635,1.832,1429,5.475,1431,4.248,1455,3.736,1484,4.232,1487,3.968,1490,5.067,1493,5.202,1495,5.631,1496,5.067,1497,5.067,1501,4.248,1502,4.248,1503,4.248,1505,4.598,1506,4.598,1527,5.067,1528,5.778,1529,5.778,1530,5.778,1531,5.778]],["title/injectables/OnlineTreksService.html",[28,2.054,307,1.459]],["body/injectables/OnlineTreksService.html",[3,0.092,4,0.064,8,0.073,13,1.721,16,0.233,17,1.103,19,1.103,24,2.319,25,3.653,28,2.339,31,1.77,33,1.731,34,0.011,35,0.555,36,0.537,37,1.542,39,1.81,40,0.969,41,0.214,42,0.42,43,1.161,44,1.161,45,1.199,46,1.322,54,4.107,55,1.65,58,0.092,59,0.392,60,2.377,74,0.708,75,4.599,123,0.863,124,0.552,127,0.731,156,0.004,157,0.006,158,0.004,174,1.279,181,4.616,183,1.721,257,2.984,258,3.319,286,1.869,298,0.647,302,1.04,307,1.661,308,4.312,309,1.8,311,0.559,312,4.525,313,2.484,319,2.58,321,3.518,323,1.097,328,1.694,333,4.436,335,1.876,337,1.419,347,1.238,354,1.8,410,1.059,444,1.826,458,2.227,492,1.49,493,0.727,494,0.727,495,0.748,497,1.238,508,1.781,529,0.863,561,0.748,564,0.769,569,0.792,571,1.072,572,1.349,574,2.132,578,1.671,579,1.273,580,1.273,581,1.671,582,1.273,583,1.273,585,1.671,591,1.448,635,1.028,666,4.059,668,2.096,669,2.227,691,2.843,695,2.843,735,3.485,827,2.096,831,2.58,881,4.312,968,2.58,1055,4.996,1106,4.059,1283,2.384,1297,2.58,1298,2.384,1320,2.384,1422,2.843,1427,2.227,1433,4.525,1441,5.576,1442,2.843,1443,6.429,1444,5.328,1445,5.328,1446,5.328,1532,6.685,1533,5.687,1534,4.196,1535,4.785,1536,4.196,1537,4.196,1538,4.196,1539,4.196,1540,4.196,1541,4.196,1542,4.196,1543,6.278,1544,6.278,1545,4.986,1546,4.785,1547,3.242,1548,3.242,1549,4.785,1550,3.242,1551,5.92,1552,4.785,1553,3.242,1554,4.785,1555,3.242,1556,4.785,1557,3.242,1558,4.785,1559,3.242,1560,3.242,1561,3.242,1562,3.242,1563,3.242,1564,3.242,1565,3.242,1566,3.242,1567,3.242,1568,3.242,1569,2.227,1570,2.843,1571,3.242,1572,3.242,1573,3.242,1574,3.242,1575,3.242,1576,3.242,1577,3.242,1578,3.242,1579,3.242,1580,3.242,1581,3.242,1582,2.58,1583,4.785,1584,3.242,1585,3.242,1586,3.242,1587,3.242,1588,3.242,1589,3.242,1590,3.242,1591,3.242,1592,3.242,1593,3.242,1594,4.785,1595,3.242,1596,3.242,1597,3.242,1598,3.242,1599,3.242,1600,3.242,1601,3.242,1602,3.242,1603,3.242,1604,3.242,1605,2.58,1606,2.58,1607,3.242]],["title/interfaces/Picture.html",[476,0.44,508,0.969]],["body/interfaces/Picture.html",[3,0.098,4,0.069,8,0.078,16,0.249,29,0.692,34,0.011,35,0.578,36,0.59,41,0.167,58,0.245,74,0.391,90,0.542,108,0.784,124,0.629,127,0.691,136,0.629,156,0.004,157,0.006,158,0.004,298,0.692,299,0.846,302,1.08,311,0.886,323,1.24,327,1.541,328,1.565,331,0.946,337,1.435,376,1.337,395,1.299,424,0.922,429,0.922,462,0.822,464,1.807,476,0.907,477,0.871,478,0.922,479,0.896,480,1.765,481,1.653,482,1.572,483,1.618,484,1.618,485,1.618,486,2.037,487,2.055,488,1.618,489,1.68,490,0.896,491,0.949,492,1.402,493,0.776,494,0.776,495,0.799,496,1.855,497,1.094,498,1.528,499,0.949,500,1.884,501,1.572,502,1.299,503,1.618,504,1.909,505,1.855,506,1.299,507,1.775,508,1.781,509,1.618,510,1.376,511,1.376,512,1.376,513,1.094,514,1.884,515,1.376,516,1.558,517,1.337,518,1.376,519,1.376,520,1.376,521,1.337,522,1.376,523,1.402,524,1.376,525,1.376,526,1.337,527,1.158,528,1.299,529,1.337,530,2.018,531,0.949,532,0.949,533,1.376,534,0.949,535,0.949,536,1.337,537,0.949,538,0.949,539,0.949,540,0.949,541,0.949,542,0.949,543,0.949,544,1.376,545,1.337,546,1.528,547,1.337,548,1.158,549,0.822,550,0.776,551,0.871,552,0.949,553,0.799,554,1.376,555,1.226,556,0.822,557,0.822,558,0.949,559,1.192,560,0.871,561,1.362,562,0.949,563,0.922,564,1.402,565,1.443,566,0.896,567,0.871,568,1.226,569,1.443,570,1.299,571,1.324,572,0.822,573,0.949,574,1.802,575,0.949,576,0.949,577,0.949,578,0.922,579,0.922,580,0.922,581,0.922,582,0.922,583,0.922,584,0.949,585,0.922,586,0.949,587,0.949,588,0.846,589,0.922,590,1.192,591,1.158,592,0.871,593,0.712,594,0.922,595,0.846]],["title/interfaces/Poi.html",[136,0.526,476,0.44]],["body/interfaces/Poi.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.694,34,0.011,35,0.578,36,0.595,41,0.167,58,0.245,74,0.392,90,0.397,108,0.786,124,0.63,127,0.691,136,0.742,156,0.004,157,0.006,158,0.004,298,0.694,299,0.849,302,1.082,311,0.929,323,1.238,327,1.128,328,1.567,331,0.948,334,3.304,337,1.435,376,1.34,395,1.302,424,0.925,429,0.925,462,0.825,464,1.585,476,0.908,477,0.874,478,0.925,479,0.899,480,1.78,481,1.654,482,1.575,483,1.621,484,1.621,485,1.621,486,2.055,487,2.057,488,1.621,489,1.682,490,0.899,491,0.952,492,1.405,493,0.779,494,0.779,495,0.802,496,1.857,497,1.096,498,1.531,499,0.952,500,1.379,501,1.575,502,1.302,503,1.621,504,2.057,505,1.857,506,1.302,507,1.778,508,1.749,509,1.621,510,1.379,511,1.379,512,1.379,513,1.096,514,1.887,515,1.379,516,1.559,517,1.34,518,1.379,519,1.379,520,1.379,521,1.34,522,1.379,523,1.405,524,1.379,525,1.379,526,1.34,527,1.161,528,1.302,529,1.34,530,2.02,531,0.952,532,0.952,533,1.379,534,0.952,535,0.952,536,1.34,537,0.952,538,0.952,539,0.952,540,0.952,541,0.952,542,0.952,543,0.952,544,1.379,545,1.34,546,1.531,547,1.34,548,1.161,549,0.825,550,0.779,551,0.874,552,0.952,553,0.802,554,1.379,555,1.23,556,0.825,557,0.825,558,0.952,559,1.195,560,0.874,561,1.365,562,0.952,563,0.925,564,1.405,565,1.446,566,0.899,567,0.874,568,1.23,569,1.446,570,1.302,571,1.327,572,0.825,573,0.952,574,1.805,575,0.952,576,0.952,577,0.952,578,0.925,579,0.925,580,0.925,581,0.925,582,0.925,583,0.925,584,0.952,585,0.925,586,0.952,587,0.952,588,0.849,589,0.925,590,1.195,591,1.161,592,0.874,593,0.715,594,0.925,595,0.849]],["title/components/PoiComponent.html",[0,0.582,133,1.256]],["body/components/PoiComponent.html",[0,0.885,1,1.194,2,1.816,3,0.113,4,0.079,5,1.346,6,1.346,7,1.346,8,0.09,10,1.306,11,2.938,12,2.686,14,1.872,16,0.287,17,1.282,19,0.921,27,4.031,28,3.55,31,1.729,33,1.246,34,0.011,35,0.497,36,0.547,37,1.11,39,0.895,40,1.661,41,0.205,42,0.518,45,1.477,46,1.63,53,2.218,54,1.954,55,2.829,58,0.113,59,0.484,74,0.779,80,1.576,90,0.315,91,1.872,92,1.872,93,1.346,94,2.326,95,1.346,96,1.346,97,1.194,98,1.346,99,1.346,100,1.194,101,1.346,102,1.346,103,1.194,104,1.872,105,1.194,106,1.346,107,1.194,108,0.484,109,1.346,110,1.194,111,1.346,112,1.346,113,1.194,114,2.088,115,1.267,116,2.152,117,1.194,118,1.306,119,1.346,120,1.194,121,1.346,122,1.194,123,1.479,124,0.671,125,1.872,126,1.23,127,0.72,128,1.194,129,1.16,130,1.346,131,1.194,132,1.346,133,2.065,134,1.346,135,1.194,136,1,137,1.194,138,1.346,139,1.194,140,1.346,141,1.194,142,1.346,143,1.16,144,1.346,145,1.194,146,1.346,147,1.23,148,1.194,149,1.872,150,1.194,151,1.194,152,1.346,153,1.194,154,1.346,155,1.346,156,0.005,157,0.007,158,0.005,286,1.004,302,1.168,311,0.65,313,2.402,323,0.956,327,1.246,331,1.504,335,2.065,406,1.388,410,1.816,412,3.818,413,4.087,415,1.93,423,2.829,427,2.218,444,2.122,445,3.696,446,2.745,508,1.734,559,1.517,563,1.479,593,1.314,635,1.267,648,2.446,730,3.818,735,3.085,774,1.954,798,4.02,799,4.031,832,2.325,833,2.122,882,2.584,883,2.584,884,2.122,885,3.402,888,2.584,914,5.086,927,4.423,943,4.423,944,5.498,946,3.18,1022,3.402,1099,5.086,1106,3.594,1110,2.745,1289,2.584,1427,2.745,1608,3.504,1609,6.391,1610,5.559,1611,5.604,1612,5.604,1613,3.504,1614,5.559,1615,3.996,1616,3.996,1617,3.996,1618,3.996,1619,3.996,1620,3.996,1621,5.559,1622,3.996,1623,3.996,1624,3.996,1625,4.874,1626,4.874,1627,3.996,1628,3.504,1629,3.504,1630,3.504,1631,3.504,1632,6.058,1633,6.368,1634,3.18,1635,3.18,1636,5.559,1637,5.559,1638,4.874,1639,5.559,1640,4.874,1641,4.874,1642,3.18,1643,3.504,1644,3.504,1645,4.874,1646,3.18,1647,3.504]],["title/components/PoiDetailsComponent.html",[0,0.582,135,1.256]],["body/components/PoiDetailsComponent.html",[0,0.833,1,1.069,2,1.68,3,0.101,4,0.071,5,1.205,6,1.205,7,1.205,8,0.081,10,1.169,11,2.912,12,2.661,14,1.731,16,0.257,17,1.186,19,1.186,27,3.867,28,3.406,29,1.448,30,3.406,31,1.76,33,0.802,34,0.011,35,0.433,36,0.554,37,0.714,39,1.152,40,1.798,41,0.216,42,0.464,45,1.323,46,1.459,47,0.899,53,1.986,54,1.75,55,2.617,57,1.986,58,0.101,59,0.433,74,0.786,80,1.411,90,0.474,91,1.731,92,1.731,93,1.205,94,2.215,95,1.205,96,1.205,97,1.069,98,1.205,99,1.205,100,1.069,101,1.205,102,1.205,103,1.069,104,1.731,105,1.069,106,1.205,107,1.069,108,0.433,109,1.205,110,1.069,111,1.205,112,1.205,113,1.069,114,1.169,115,1.135,116,2.026,117,1.069,118,1.169,119,1.205,120,1.069,121,1.205,122,1.069,123,1.368,124,0.639,125,1.731,126,1.101,127,0.697,128,1.069,129,1.039,130,1.205,131,1.069,132,1.205,133,1.069,134,1.205,135,1.966,136,1.029,137,1.069,138,1.205,139,1.069,140,1.205,141,1.069,142,1.205,143,1.039,144,1.205,145,1.069,146,1.205,147,1.101,148,1.069,149,1.731,150,1.069,151,1.069,152,1.205,153,1.069,154,1.205,155,1.205,156,0.005,157,0.007,158,0.005,244,6.149,286,1.292,302,1.1,311,0.601,313,2.475,323,0.964,327,1.152,331,1.466,335,2.082,347,1.366,406,1.243,415,1.785,427,1.986,444,1.963,508,1.672,593,1.237,619,4.054,635,1.135,648,3.147,730,3.531,774,1.75,787,4.517,797,2.631,798,4.054,799,3.867,801,4.836,823,2.727,832,2.082,833,1.9,870,2.631,883,2.314,884,1.9,885,3.147,888,2.314,1095,2.848,1096,4.508,1097,5.276,1098,4.508,1099,4.788,1101,5.427,1102,4.253,1105,3.138,1106,3.324,1109,3.138,1289,3.324,1427,2.458,1611,5.276,1612,4.508,1625,4.508,1626,4.508,1628,3.138,1629,3.138,1630,3.138,1631,3.138,1632,5.768,1633,6.109,1634,2.848,1635,2.848,1638,4.508,1640,4.508,1641,4.508,1642,2.848,1643,3.138,1644,3.138,1645,4.508,1646,2.848,1647,3.138,1648,7.334,1649,6.017,1650,6.017,1651,5.141,1652,3.579,1653,3.579,1654,3.579,1655,3.579,1656,3.579,1657,3.579,1658,3.579,1659,3.579,1660,3.579,1661,3.579,1662,3.579,1663,3.579,1664,5.141,1665,3.579,1666,3.579,1667,3.579,1668,3.579,1669,3.579,1670,3.579,1671,3.579,1672,3.579,1673,3.579,1674,3.579,1675,3.579,1676,3.579,1677,3.579,1678,5.141,1679,5.141,1680,5.141,1681,5.141]],["title/interfaces/Pois.html",[476,0.44,561,0.969]],["body/interfaces/Pois.html",[3,0.099,4,0.069,8,0.079,16,0.252,29,0.7,34,0.011,35,0.579,36,0.59,41,0.168,58,0.245,74,0.395,90,0.399,108,0.788,124,0.633,127,0.693,136,0.816,156,0.004,157,0.006,158,0.004,298,0.7,299,0.856,302,1.087,311,0.889,323,1.238,327,1.135,328,1.571,331,0.954,337,1.436,376,1.348,395,1.309,424,0.933,429,0.933,462,0.832,464,1.591,476,0.908,477,0.881,478,0.933,479,0.906,480,1.783,481,1.656,482,1.582,483,1.629,484,1.629,485,1.629,486,2.041,487,2.093,488,1.629,489,1.687,490,0.906,491,0.96,492,1.411,493,0.785,494,0.785,495,0.808,496,2.003,497,1.103,498,1.538,499,0.96,500,1.387,501,1.582,502,1.309,503,1.629,504,1.916,505,1.862,506,1.309,507,1.784,508,1.753,509,1.629,510,1.387,511,1.387,512,1.387,513,1.103,514,1.892,515,1.387,516,1.562,517,1.348,518,1.387,519,1.387,520,1.387,521,1.348,522,1.387,523,1.411,524,1.387,525,1.387,526,1.348,527,1.168,528,1.309,529,1.348,530,2.023,531,0.96,532,0.96,533,1.387,534,0.96,535,0.96,536,1.348,537,0.96,538,0.96,539,0.96,540,0.96,541,0.96,542,0.96,543,0.96,544,1.387,545,1.348,546,1.538,547,1.348,548,1.168,549,0.832,550,0.785,551,0.881,552,0.96,553,0.808,554,1.387,555,1.237,556,0.832,557,0.832,558,0.96,559,1.202,560,0.881,561,1.502,562,0.96,563,0.933,564,1.411,565,1.452,566,0.906,567,0.881,568,1.237,569,1.452,570,1.309,571,1.332,572,0.832,573,0.96,574,1.809,575,0.96,576,0.96,577,0.96,578,0.933,579,0.933,580,0.933,581,0.933,582,0.933,583,0.933,584,0.96,585,0.933,586,0.96,587,0.96,588,0.856,589,0.933,590,1.202,591,1.168,592,0.881,593,0.72,594,0.933,595,0.856]],["title/components/ProgressComponent.html",[0,0.582,137,1.256]],["body/components/ProgressComponent.html",[0,0.97,1,1.43,2,2.051,3,0.135,4,0.095,5,1.611,6,1.611,7,1.611,8,0.108,10,1.563,11,2.977,12,2.721,14,2.114,16,0.344,17,1.448,19,1.103,24,3.034,31,1.677,33,1.072,34,0.011,35,0.504,36,0.51,37,0.955,39,1.407,40,2.223,41,0.198,42,0.62,55,2.435,58,0.135,59,0.579,60,2.289,90,0.377,91,2.114,92,2.114,93,1.611,94,2.505,95,1.611,96,1.611,97,1.43,98,1.611,99,1.611,100,1.43,101,1.611,102,1.611,103,1.43,104,2.114,105,1.43,106,1.611,107,1.43,108,0.579,109,1.611,110,1.43,111,1.611,112,1.611,113,1.43,114,1.563,115,1.517,116,2.359,117,1.43,118,1.563,119,1.611,120,1.43,121,1.611,122,1.43,123,1.671,124,0.722,125,2.114,126,1.473,127,0.694,128,1.43,129,1.389,130,1.611,131,1.43,132,1.611,133,1.43,134,1.611,135,1.43,136,0.599,137,2.223,138,1.611,139,1.43,140,1.611,141,1.43,142,1.611,143,1.389,144,1.611,145,1.43,146,1.611,147,1.473,148,1.43,149,2.114,150,1.43,151,1.43,152,1.611,153,1.43,154,1.611,155,1.611,156,0.006,157,0.008,158,0.006,311,0.734,313,2.178,337,1.017,347,1.826,406,1.661,412,4.312,415,2.18,446,3.286,798,4.328,799,4.288,823,3.175,832,2.784,833,2.54,896,4.616,1102,4.81,1110,3.286,1613,4.196,1682,4.196,1683,6.278,1684,7.007,1685,6.278,1686,7.928,1687,7.439,1688,6.144,1689,6.523,1690,6.278,1691,4.785,1692,4.785,1693,4.785,1694,4.785,1695,6.278,1696,4.785,1697,4.785,1698,4.196,1699,4.785,1700,6.278,1701,6.278]],["title/interfaces/Property.html",[476,0.44,530,1.056]],["body/interfaces/Property.html",[3,0.097,4,0.068,8,0.078,16,0.247,29,0.685,34,0.011,35,0.591,36,0.59,37,1.427,41,0.166,58,0.245,74,0.387,90,0.393,108,0.781,124,0.627,127,0.689,136,0.625,156,0.004,157,0.006,158,0.004,298,0.685,299,0.838,302,1.075,311,0.884,323,1.24,327,1.118,328,1.561,331,0.939,337,1.436,376,1.328,395,1.29,424,0.914,429,0.914,462,0.815,464,1.575,476,0.907,477,0.863,478,0.914,479,0.888,480,1.762,481,1.676,482,1.564,483,1.61,484,1.61,485,1.61,486,2.034,487,2.051,488,1.61,489,1.673,490,0.888,491,0.94,492,1.395,493,0.769,494,0.769,495,0.792,496,1.849,497,1.086,498,1.52,499,0.94,500,1.367,501,1.564,502,1.29,503,1.61,504,1.903,505,1.849,506,1.29,507,1.767,508,1.743,509,1.61,510,1.367,511,1.367,512,1.367,513,1.086,514,1.877,515,1.367,516,1.554,517,1.328,518,1.367,519,1.367,520,1.367,521,1.328,522,1.367,523,1.395,524,1.367,525,1.367,526,1.328,527,1.151,528,1.29,529,1.328,530,2.034,531,0.94,532,0.94,533,1.877,534,0.94,535,0.94,536,1.328,537,0.94,538,0.94,539,0.94,540,0.94,541,0.94,542,0.94,543,0.94,544,1.367,545,1.328,546,1.52,547,1.328,548,1.151,549,0.815,550,0.769,551,0.863,552,0.94,553,0.792,554,1.877,555,1.673,556,0.815,557,0.815,558,0.94,559,1.184,560,0.863,561,1.355,562,0.94,563,0.914,564,1.395,565,1.435,566,0.888,567,0.863,568,1.218,569,1.435,570,1.29,571,1.317,572,0.815,573,0.94,574,1.797,575,0.94,576,0.94,577,0.94,578,0.914,579,0.914,580,0.914,581,0.914,582,0.914,583,0.914,584,0.94,585,0.914,586,0.94,587,0.94,588,0.838,589,0.914,590,1.184,591,1.151,592,0.863,593,0.706,594,0.914,595,0.838]],["title/components/SearchComponent.html",[0,0.582,139,1.256]],["body/components/SearchComponent.html",[0,0.814,1,1.026,2,1.63,3,0.097,4,0.068,5,1.156,6,1.156,7,1.156,8,0.078,10,1.122,11,2.901,12,2.652,14,1.68,16,0.423,17,1.151,19,1.151,21,3.225,24,2.631,27,3.262,28,3.154,31,1.759,33,1.536,34,0.011,35,0.531,36,0.543,37,1.368,39,1.727,40,2.396,41,0.208,42,0.445,47,0.863,53,1.906,54,1.679,55,2.992,58,0.097,59,0.416,60,2.409,74,0.773,80,1.968,90,0.271,91,1.68,92,2.408,93,1.156,94,2.172,95,1.156,96,1.156,97,1.026,98,1.156,99,1.156,100,1.026,101,1.156,102,1.156,103,1.026,104,1.68,105,1.026,106,1.156,107,1.026,108,0.416,109,1.156,110,1.026,111,1.156,112,1.156,113,1.026,114,1.122,115,1.088,116,1.979,117,1.026,118,1.122,119,1.156,120,1.026,121,1.156,122,1.026,123,1.328,124,0.734,125,1.68,126,1.057,127,0.706,128,1.026,129,0.996,130,1.156,131,1.026,132,1.156,133,1.026,134,1.156,135,1.026,136,0.43,137,1.026,138,1.156,139,1.928,140,1.156,141,1.026,142,1.156,143,0.996,144,1.156,145,1.026,146,1.156,147,1.057,148,1.026,149,1.68,150,1.026,151,1.026,152,1.156,153,1.026,154,1.156,155,1.156,156,0.004,157,0.006,158,0.004,165,2.035,210,3.054,257,1.23,271,1.449,286,1.254,311,0.583,313,2.438,323,0.949,331,1.389,335,2.048,337,1.269,406,1.192,410,1.63,411,2.874,412,3.427,413,3.668,415,1.732,421,3.225,427,1.906,444,1.905,446,2.358,462,0.815,480,1.086,481,0.685,495,1.355,497,1.28,572,1.395,590,0.815,619,3.754,635,1.088,774,2.439,777,3.496,784,2.769,785,2.769,787,4.431,791,4.431,792,2.992,796,3.97,797,2.524,798,3.42,799,3.581,801,3.668,818,3.42,819,1.998,820,1.998,823,1.556,829,1.998,830,2.101,832,1.998,833,1.823,834,1.998,835,2.358,845,1.998,846,2.732,847,3.011,870,2.524,875,4.375,881,3.427,882,2.22,883,2.22,884,1.823,885,2.101,886,2.524,887,3.054,888,2.22,889,2.22,890,2.524,891,2.358,892,2.732,893,2.732,894,2.732,895,2.524,896,2.524,897,2.524,1101,5.068,1243,3.97,1283,4.321,1688,5.154,1689,5.657,1698,3.011,1702,3.011,1703,5.257,1704,5.657,1705,5.878,1706,4.99,1707,5.878,1708,5.878,1709,5.154,1710,5.878,1711,4.99,1712,4.99,1713,5.878,1714,4.99,1715,3.433,1716,4.99,1717,3.433,1718,3.011,1719,3.433,1720,4.375,1721,3.433,1722,3.433,1723,4.99,1724,3.433,1725,5.154,1726,4.99,1727,3.433,1728,5.657,1729,3.433,1730,3.433,1731,3.433,1732,3.433,1733,3.433,1734,3.433,1735,2.732,1736,3.433,1737,2.732,1738,2.524,1739,3.433,1740,5.878,1741,4.99,1742,3.433,1743,3.433,1744,3.433,1745,3.433,1746,5.878,1747,4.99,1748,3.433,1749,3.011,1750,4.99,1751,4.99,1752,4.375,1753,4.99]],["title/injectables/SearchTreksService.html",[307,1.459,1703,3.089]],["body/injectables/SearchTreksService.html",[3,0.172,4,0.121,8,0.138,13,3.24,16,0.439,17,1.687,31,1.291,33,1.367,34,0.011,35,0.439,36,0.418,37,1.218,39,1.367,41,0.221,42,0.791,58,0.172,59,0.739,124,0.761,156,0.008,157,0.009,158,0.008,257,3.019,307,2.539,309,3.387,313,2.208,323,1.084,354,3.387,497,1.835,635,1.935,669,4.191,713,6.413,1703,5.377,1704,6.413,1725,7.281,1735,5.82,1754,6.413,1755,7.314,1756,6.102,1757,6.102,1758,4.856,1759,6.102,1760,7.314,1761,6.102,1762,6.102,1763,6.102,1764,6.102]],["title/components/SelectFilterComponent.html",[0,0.582,141,1.256]],["body/components/SelectFilterComponent.html",[0,0.874,1,1.168,2,1.788,3,0.11,4,0.078,5,1.317,6,1.317,7,1.317,8,0.088,10,1.277,11,2.933,12,2.681,14,1.843,16,0.394,17,1.262,19,0.902,24,2.791,31,1.763,33,1.534,34,0.011,35,0.537,36,0.563,37,1.366,39,1.718,40,2.454,41,0.178,42,0.507,47,0.982,58,0.11,59,0.473,74,0.617,90,0.308,91,1.843,92,2.514,93,1.317,94,2.305,95,1.317,96,1.317,97,1.168,98,1.317,99,1.317,100,1.168,101,1.317,102,1.317,103,1.168,104,1.843,105,1.168,106,1.317,107,1.168,108,0.985,109,1.317,110,1.168,111,1.317,112,1.317,113,1.168,114,1.277,115,1.24,116,2.127,117,1.168,118,1.277,119,1.317,120,1.168,121,1.317,122,1.168,123,1.457,124,0.665,125,1.843,126,1.203,127,0.639,128,1.168,129,1.135,130,1.317,131,1.168,132,1.317,133,1.168,134,1.317,135,1.168,136,0.49,137,1.168,138,1.317,139,1.168,140,1.317,141,2.045,142,2.766,143,1.135,144,1.317,145,1.168,146,1.317,147,1.203,148,1.168,149,1.843,150,1.168,151,1.168,152,1.317,153,1.168,154,1.317,155,1.317,156,0.005,157,0.007,158,0.005,257,1.4,286,0.982,311,0.64,313,2.412,323,0.758,331,1.19,334,2.787,335,1.888,337,1.242,406,1.358,410,1.788,411,3.089,415,1.901,421,2.991,423,2.787,445,3.215,516,0.804,548,1.768,553,0.902,593,1.298,607,5.539,608,4.801,610,5.539,615,4.801,618,3.429,619,4.344,630,5.446,635,1.24,637,6.162,639,2.393,647,3.429,656,3.112,660,4.801,768,2.076,791,4.7,858,3.112,871,3.429,1029,5.031,1718,3.429,1749,3.429,1765,7.349,1766,3.429,1767,6.317,1768,6.317,1769,5.475,1770,5.475,1771,5.475,1772,3.91,1773,3.91,1774,3.91,1775,5.475,1776,3.91,1777,3.91,1778,3.91,1779,3.91,1780,5.475,1781,3.91,1782,5.475,1783,3.91,1784,6.001,1785,3.91,1786,3.91,1787,3.91,1788,5.475,1789,5.475,1790,6.317,1791,5.475,1792,3.91,1793,3.91,1794,3.91,1795,3.91,1796,5.475,1797,5.475,1798,5.475]],["title/interfaces/Settings.html",[29,0.839,476,0.44]],["body/interfaces/Settings.html",[3,0.099,4,0.069,8,0.079,16,0.252,29,1.01,34,0.011,35,0.579,36,0.587,41,0.168,58,0.245,74,0.395,90,0.399,108,0.871,124,0.632,127,0.693,136,0.634,156,0.004,157,0.006,158,0.004,298,1.3,299,0.854,302,1.086,311,0.888,323,1.238,327,1.134,328,1.57,331,0.953,337,1.436,376,1.346,395,1.308,424,0.931,429,0.931,462,0.83,464,1.589,476,0.908,477,0.879,478,0.931,479,0.905,480,1.768,481,1.656,482,1.581,483,1.627,484,1.627,485,1.627,486,2.041,487,2.06,488,1.627,489,1.686,490,0.905,491,0.958,492,1.41,493,0.784,494,0.784,495,0.807,496,1.861,497,1.102,498,1.536,499,0.958,500,1.386,501,1.581,502,1.308,503,1.627,504,1.915,505,1.861,506,1.308,507,1.783,508,1.752,509,1.627,510,1.386,511,1.386,512,1.386,513,1.102,514,1.891,515,1.386,516,1.562,517,1.346,518,1.386,519,1.386,520,1.386,521,1.346,522,1.386,523,1.41,524,1.386,525,1.386,526,1.346,527,1.167,528,1.308,529,1.346,530,2.022,531,0.958,532,0.958,533,1.386,534,0.958,535,0.958,536,1.346,537,0.958,538,0.958,539,0.958,540,0.958,541,0.958,542,0.958,543,0.958,544,1.386,545,1.346,546,1.536,547,1.346,548,1.167,549,0.83,550,0.784,551,0.879,552,0.958,553,0.807,554,1.386,555,1.235,556,0.83,557,0.83,558,0.958,559,1.545,560,1.636,561,1.37,562,0.958,563,0.931,564,1.41,565,1.451,566,0.905,567,0.879,568,1.235,569,1.451,570,1.308,571,1.331,572,0.83,573,0.958,574,1.808,575,0.958,576,0.958,577,0.958,578,0.931,579,0.931,580,0.931,581,0.931,582,0.931,583,0.931,584,0.958,585,0.931,586,0.958,587,0.958,588,0.854,589,0.931,590,1.2,591,1.167,592,0.879,593,0.719,594,0.931,595,0.854]],["title/injectables/SettingsService.html",[30,2.054,307,1.459]],["body/injectables/SettingsService.html",[3,0.094,4,0.066,8,0.075,13,1.765,16,0.239,17,1.124,19,0.766,24,2.353,25,3.697,29,1.458,30,2.382,31,1.76,33,1.637,34,0.012,35,0.559,36,0.546,37,1.458,39,1.741,40,2.183,41,0.212,42,0.431,43,1.19,44,1.19,45,1.229,46,1.355,58,0.094,59,0.402,60,2.476,66,1.765,74,0.824,75,2.283,76,2.149,80,1.922,82,2.587,108,0.884,124,0.323,127,0.631,156,0.004,157,0.006,158,0.004,181,4.973,183,1.765,231,2.645,235,3.582,257,2.616,258,3.341,286,1.979,298,1.152,307,1.692,309,1.845,311,0.57,313,2.46,319,2.645,321,4.671,323,1.037,328,1.22,333,2.034,335,2.284,337,1.184,347,1.269,354,1.845,444,1.86,481,1.458,482,0.884,496,0.859,521,1.297,523,1.369,527,1.63,530,2.039,547,0.884,549,1.814,550,0.745,553,0.766,559,1.508,560,1.921,564,1.677,565,0.812,566,1.26,567,1.596,568,1.551,592,1.224,612,3.202,635,1.054,642,2.444,697,4.591,702,2.283,706,2.915,735,2.705,739,2.915,827,3.73,855,2.915,858,2.645,869,2.915,969,3.878,1055,5.056,1106,3.15,1110,2.283,1433,4.591,1441,3.878,1443,3.878,1444,2.645,1445,2.645,1446,2.645,1569,2.283,1758,2.645,1799,2.915,1800,6.813,1801,4.873,1802,4.873,1803,6.354,1804,4.873,1805,5.769,1806,6.354,1807,6.354,1808,4.873,1809,4.873,1810,6.354,1811,4.873,1812,4.873,1813,3.324,1814,4.873,1815,3.324,1816,3.324,1817,4.873,1818,3.324,1819,3.324,1820,3.324,1821,5.769,1822,3.324,1823,3.324,1824,4.873,1825,3.324,1826,4.873,1827,4.671,1828,3.324,1829,3.324,1830,3.324,1831,3.324,1832,4.873,1833,3.324,1834,4.873,1835,3.324,1836,2.915,1837,3.324,1838,3.324,1839,3.324,1840,3.324,1841,3.324,1842,3.324,1843,3.324,1844,4.873,1845,3.324,1846,3.324,1847,3.324,1848,3.324,1849,3.324,1850,3.324,1851,3.324,1852,5.769,1853,3.324,1854,3.324,1855,3.324,1856,3.324,1857,3.324,1858,3.324,1859,3.324,1860,3.324,1861,3.324,1862,3.324,1863,3.324,1864,5.769,1865,3.324,1866,3.324,1867,4.873,1868,3.324,1869,6.354,1870,4.873,1871,3.324,1872,3.324,1873,4.873,1874,3.324,1875,3.324,1876,4.873,1877,3.324,1878,4.873,1879,3.324,1880,3.324,1881,3.324,1882,3.324,1883,4.873,1884,3.324,1885,3.324,1886,3.324,1887,3.324,1888,3.324,1889,3.324,1890,3.324,1891,3.324,1892,4.873,1893,3.324,1894,3.324,1895,3.324,1896,4.873,1897,3.324,1898,3.324,1899,3.324,1900,3.324,1901,3.324,1902,4.873,1903,3.324,1904,3.324,1905,3.324,1906,3.324,1907,5.769,1908,3.324,1909,3.324,1910,3.324]],["title/modules/SharedFiltersModule.html",[159,1.118,905,2.886]],["body/modules/SharedFiltersModule.html",[3,0.159,4,0.112,8,0.127,34,0.011,41,0.239,42,0.729,43,2.015,44,2.015,58,0.159,59,0.681,90,0.443,103,2.593,105,2.611,107,2.593,139,2.593,141,2.611,156,0.007,157,0.009,158,0.007,159,1.497,161,2.147,162,2.294,163,3.303,164,2.459,165,2.294,166,3.082,174,2.745,175,2.374,176,2.374,178,6.104,179,2.374,184,2.937,203,2.374,206,2.75,636,4.933,637,4.136,638,4.933,756,4.477,905,6.069,907,3.403,910,2.863,1911,4.933,1912,4.933,1913,4.933,1914,4.477,1915,5.626,1916,4.933,1917,5.626,1918,5.626,1919,5.626,1920,4.933]],["title/modules/SharedModule.html",[159,1.118,1921,2.716]],["body/modules/SharedModule.html",[3,0.166,4,0.116,8,0.133,34,0.011,41,0.239,42,0.761,43,2.104,44,2.104,47,1.476,58,0.166,59,0.711,90,0.463,110,2.607,122,2.607,124,0.694,126,2.685,127,0.667,156,0.007,157,0.009,158,0.007,159,1.563,161,2.243,162,2.396,163,3.368,164,2.568,165,2.396,166,3.142,174,2.819,175,2.479,176,2.479,179,2.479,184,3.016,198,3.495,203,2.479,206,2.872,907,3.495,910,2.99,912,4.319,1230,5.255,1921,5.66,1922,5.152,1923,5.152,1924,5.152,1925,5.875,1926,5.875,1927,5.875,1928,7.149,1929,7.149]],["title/modules/SharedTreksModule.html",[159,1.118,1930,2.716]],["body/modules/SharedTreksModule.html",[3,0.169,4,0.119,8,0.135,34,0.011,41,0.242,42,0.775,43,2.143,44,2.143,47,1.503,58,0.169,59,0.724,90,0.472,133,2.613,145,2.613,156,0.008,157,0.009,158,0.008,159,1.592,161,2.284,162,2.44,163,3.394,164,2.615,165,2.44,166,3.167,174,2.851,175,2.525,176,2.525,179,2.525,184,3.05,191,2.143,198,3.534,203,2.525,206,2.925,284,3.837,596,4.673,907,3.534,910,3.045,1914,4.761,1930,5.606,1931,5.246,1932,5.246,1933,5.246,1934,5.983,1935,5.983,1936,5.983,1937,4.761,1938,5.983,1939,4.761,1940,5.246]],["title/modules/SharedUiModule.html",[159,1.118,1478,2.139]],["body/modules/SharedUiModule.html",[3,0.167,4,0.117,8,0.134,34,0.011,41,0.239,42,0.767,47,1.487,58,0.167,59,0.716,90,0.467,97,2.609,100,2.609,120,2.609,156,0.008,157,0.009,158,0.008,159,1.575,161,2.259,162,2.413,163,3.378,164,2.586,165,2.413,166,3.152,174,2.832,175,2.497,176,2.497,179,2.497,184,3.03,191,2.12,198,3.51,203,2.497,284,3.812,408,4.709,456,4.709,907,3.51,1478,4.459,1914,4.709,1941,5.189,1942,5.189,1943,5.189,1944,5.918,1945,5.918,1946,5.918,1947,5.918,1948,5.918,1949,5.918]],["title/components/TabsPage.html",[0,0.582,143,1.219]],["body/components/TabsPage.html",[0,0.986,1,1.479,2,2.097,3,0.14,4,0.098,5,1.667,6,1.667,7,1.667,8,0.112,10,1.617,11,2.983,12,2.727,14,2.161,19,1.141,20,3.938,21,3.497,24,3.263,31,1.047,33,1.109,34,0.011,35,0.512,36,0.339,37,0.988,41,0.213,42,0.641,47,1.244,58,0.14,59,0.599,60,1.975,90,0.39,91,2.161,92,2.161,93,1.667,94,2.538,95,1.667,96,1.667,97,1.479,98,1.667,99,1.667,100,1.479,101,1.667,102,1.667,103,1.479,104,2.161,105,1.479,106,1.667,107,1.479,108,0.599,109,1.667,110,1.479,111,1.667,112,1.667,113,1.479,114,1.617,115,1.569,116,2.398,117,1.479,118,1.617,119,1.667,120,1.479,121,1.667,122,1.479,123,1.708,124,0.732,125,2.161,126,1.523,127,0.703,128,1.479,129,1.436,130,1.667,131,1.479,132,1.667,133,1.479,134,1.667,135,1.479,136,0.62,137,1.479,138,1.667,139,1.479,140,1.667,141,1.479,142,1.667,143,2.187,144,1.667,145,1.479,146,1.667,147,1.523,148,1.479,149,2.161,150,1.479,151,1.479,152,1.667,153,1.479,154,1.667,155,1.667,156,0.006,157,0.008,158,0.006,191,1.773,203,2.088,286,1.244,302,0.905,327,1.689,406,1.718,415,2.228,550,1.825,639,3.029,1461,5.266,1582,5.107,1950,4.34,1951,5.628,1952,7.123,1953,6.418,1954,4.949,1955,4.949,1956,4.949,1957,4.949,1958,4.34,1959,6.418,1960,6.418,1961,6.418]],["title/modules/TabsPageModule.html",[159,1.118,1962,3.089]],["body/modules/TabsPageModule.html",[3,0.167,4,0.117,8,0.134,34,0.011,41,0.243,42,0.767,43,2.12,44,2.12,47,1.487,58,0.167,59,0.716,90,0.467,143,2.429,156,0.008,157,0.009,158,0.008,159,1.575,161,2.259,162,2.413,163,3.378,164,2.586,165,2.413,166,2.413,174,2.832,175,2.497,176,2.497,179,3.03,184,3.03,198,3.51,203,2.497,206,2.893,907,3.51,908,3.443,910,3.012,1478,4.26,1480,3.622,1521,5.749,1962,6.459,1963,5.189,1964,5.189,1965,5.189,1966,5.749,1967,5.749,1968,5.918,1969,5.189,1970,5.918,1971,5.918,1972,5.918]],["title/modules/TabsPageRoutingModule.html",[159,1.118,1966,2.886]],["body/modules/TabsPageRoutingModule.html",[0,1.027,3,0.152,4,0.107,8,0.122,34,0.012,41,0.226,42,0.699,58,0.152,59,0.653,123,1.805,124,0.795,127,0.784,129,1.566,143,1.968,153,2.217,156,0.007,157,0.009,158,0.007,161,2.06,166,2.201,179,2.277,184,2.862,191,1.933,213,4.796,214,4.294,271,3.453,284,3.601,285,3.938,286,1.356,287,5.34,288,4.732,289,4.732,290,3.706,291,7.366,298,1.601,299,1.656,302,1.466,526,2.071,1450,3.967,1457,4.294,1484,3.601,1485,3.489,1582,4.294,1951,4.732,1966,4.658,1969,4.732,1973,5.396,1974,5.396,1975,4.385,1976,6.782,1977,6.192,1978,7.782,1979,6.782,1980,4.986,1981,6.782,1982,5.396,1983,5.396,1984,5.396]],["title/interfaces/TouristicCategorie.html",[476,0.44,567,1.056]],["body/interfaces/TouristicCategorie.html",[3,0.099,4,0.069,8,0.079,16,0.252,29,0.699,34,0.011,35,0.593,36,0.587,41,0.168,58,0.245,74,0.395,90,0.399,108,0.788,124,0.632,127,0.693,136,0.634,156,0.004,157,0.006,158,0.004,298,0.699,299,0.854,302,1.086,311,0.888,323,1.239,327,1.134,328,1.57,331,0.953,337,1.437,376,1.346,395,1.308,424,0.931,429,0.931,462,0.83,464,1.589,476,0.908,477,0.879,478,0.931,479,0.905,480,1.768,481,1.68,482,1.581,483,1.627,484,1.627,485,1.627,486,2.041,487,2.06,488,1.627,489,1.686,490,0.905,491,0.958,492,1.41,493,0.784,494,0.784,495,0.807,496,1.861,497,1.102,498,1.536,499,0.958,500,1.386,501,1.581,502,1.308,503,1.627,504,1.915,505,1.861,506,1.308,507,1.783,508,1.752,509,1.627,510,1.386,511,1.386,512,1.386,513,1.102,514,1.891,515,1.386,516,1.562,517,1.346,518,1.386,519,1.386,520,1.386,521,1.346,522,1.386,523,1.41,524,1.386,525,1.386,526,1.346,527,1.167,528,1.308,529,1.346,530,2.022,531,0.958,532,0.958,533,1.386,534,0.958,535,0.958,536,1.346,537,0.958,538,0.958,539,0.958,540,0.958,541,0.958,542,0.958,543,0.958,544,1.386,545,1.346,546,1.536,547,1.346,548,1.167,549,0.83,550,0.784,551,0.879,552,0.958,553,0.807,554,1.386,555,1.235,556,0.83,557,0.83,558,0.958,559,1.2,560,0.879,561,1.37,562,0.958,563,0.931,564,1.41,565,1.451,566,0.905,567,1.271,568,1.235,569,1.451,570,1.308,571,1.331,572,0.83,573,0.958,574,1.808,575,0.958,576,0.958,577,0.958,578,0.931,579,0.931,580,0.931,581,0.931,582,0.931,583,0.931,584,0.958,585,0.931,586,0.958,587,0.958,588,0.854,589,0.931,590,1.2,591,1.167,592,0.879,593,0.719,594,0.931,595,0.854]],["title/interfaces/TouristicCategoryWithFeatures.html",[476,0.44,568,1.026]],["body/interfaces/TouristicCategoryWithFeatures.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.695,34,0.011,35,0.592,36,0.589,41,0.167,58,0.245,74,0.393,90,0.397,108,0.786,124,0.631,127,0.692,136,0.631,156,0.004,157,0.006,158,0.004,298,0.695,299,0.85,302,1.083,311,0.887,323,1.239,327,1.13,328,1.568,331,0.949,337,1.437,376,1.341,395,1.303,424,0.927,429,0.927,462,0.826,464,1.586,476,0.908,477,0.875,478,0.927,479,0.9,480,1.767,481,1.679,482,1.577,483,1.623,484,1.623,485,1.623,486,2.039,487,2.058,488,1.623,489,1.683,490,0.9,491,0.954,492,1.406,493,0.78,494,0.78,495,0.803,496,2,497,1.098,498,1.532,499,0.954,500,1.381,501,1.577,502,1.303,503,1.623,504,1.912,505,1.858,506,1.303,507,1.779,508,1.75,509,1.623,510,1.381,511,1.381,512,1.381,513,1.098,514,1.888,515,1.381,516,1.56,517,1.341,518,1.381,519,1.381,520,1.381,521,1.341,522,1.381,523,1.406,524,1.381,525,1.381,526,1.341,527,1.162,528,1.303,529,1.341,530,2.02,531,0.954,532,0.954,533,1.381,534,0.954,535,0.954,536,1.341,537,0.954,538,0.954,539,0.954,540,0.954,541,0.954,542,0.954,543,0.954,544,1.381,545,1.341,546,1.532,547,1.341,548,1.162,549,0.826,550,0.78,551,0.875,552,0.954,553,0.803,554,1.381,555,1.231,556,0.826,557,0.826,558,0.954,559,1.196,560,0.875,561,1.366,562,0.954,563,0.927,564,1.406,565,1.683,566,0.9,567,0.875,568,1.447,569,1.447,570,1.303,571,1.328,572,0.826,573,0.954,574,1.805,575,0.954,576,0.954,577,0.954,578,0.927,579,0.927,580,0.927,581,0.927,582,0.927,583,0.927,584,0.954,585,0.927,586,0.954,587,0.954,588,0.85,589,0.927,590,1.196,591,1.162,592,0.875,593,0.716,594,0.927,595,0.85]],["title/interfaces/TouristicContent.html",[476,0.44,565,1.026]],["body/interfaces/TouristicContent.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.694,34,0.011,35,0.578,36,0.595,41,0.167,58,0.245,74,0.392,90,0.397,108,0.786,124,0.63,127,0.691,136,0.631,156,0.004,157,0.006,158,0.004,298,0.694,299,0.849,302,1.082,311,0.929,323,1.238,327,1.128,328,1.567,331,0.948,334,3.304,337,1.435,376,1.34,395,1.302,424,0.925,429,0.925,462,0.825,464,1.585,476,0.908,477,0.874,478,0.925,479,0.899,480,1.78,481,1.654,482,1.575,483,1.621,484,1.621,485,1.621,486,2.055,487,2.057,488,1.621,489,1.682,490,0.899,491,0.952,492,1.405,493,0.779,494,0.779,495,0.802,496,1.857,497,1.096,498,1.531,499,0.952,500,1.379,501,1.575,502,1.302,503,1.621,504,2.057,505,1.857,506,1.302,507,1.778,508,1.749,509,1.621,510,1.379,511,1.379,512,1.379,513,1.096,514,1.887,515,1.379,516,1.559,517,1.34,518,1.379,519,1.379,520,1.379,521,1.34,522,1.379,523,1.405,524,1.379,525,1.379,526,1.34,527,1.161,528,1.302,529,1.34,530,2.02,531,0.952,532,0.952,533,1.379,534,0.952,535,0.952,536,1.34,537,0.952,538,0.952,539,0.952,540,0.952,541,0.952,542,0.952,543,0.952,544,1.379,545,1.34,546,1.531,547,1.34,548,1.161,549,0.825,550,0.779,551,0.874,552,0.952,553,0.802,554,1.379,555,1.23,556,0.825,557,0.825,558,0.952,559,1.195,560,0.874,561,1.365,562,0.952,563,0.925,564,1.405,565,1.585,566,0.899,567,0.874,568,1.23,569,1.446,570,1.302,571,1.327,572,0.825,573,0.952,574,1.805,575,0.952,576,0.952,577,0.952,578,0.925,579,0.925,580,0.925,581,0.925,582,0.925,583,0.925,584,0.952,585,0.925,586,0.952,587,0.952,588,0.849,589,0.925,590,1.195,591,1.161,592,0.874,593,0.715,594,0.925,595,0.849]],["title/interfaces/TouristicContents.html",[476,0.44,564,0.997]],["body/interfaces/TouristicContents.html",[3,0.099,4,0.069,8,0.079,16,0.252,29,0.7,34,0.011,35,0.579,36,0.59,41,0.168,58,0.245,74,0.395,90,0.399,108,0.788,124,0.633,127,0.693,136,0.634,156,0.004,157,0.006,158,0.004,298,0.7,299,0.856,302,1.087,311,0.889,323,1.238,327,1.135,328,1.571,331,0.954,337,1.436,376,1.348,395,1.309,424,0.933,429,0.933,462,0.832,464,1.591,476,0.908,477,0.881,478,0.933,479,0.906,480,1.783,481,1.656,482,1.582,483,1.629,484,1.629,485,1.629,486,2.041,487,2.093,488,1.629,489,1.687,490,0.906,491,0.96,492,1.411,493,0.785,494,0.785,495,0.808,496,2.003,497,1.103,498,1.538,499,0.96,500,1.387,501,1.582,502,1.309,503,1.629,504,1.916,505,1.862,506,1.309,507,1.784,508,1.753,509,1.629,510,1.387,511,1.387,512,1.387,513,1.103,514,1.892,515,1.387,516,1.562,517,1.348,518,1.387,519,1.387,520,1.387,521,1.348,522,1.387,523,1.411,524,1.387,525,1.387,526,1.348,527,1.168,528,1.309,529,1.348,530,2.023,531,0.96,532,0.96,533,1.387,534,0.96,535,0.96,536,1.348,537,0.96,538,0.96,539,0.96,540,0.96,541,0.96,542,0.96,543,0.96,544,1.387,545,1.348,546,1.538,547,1.348,548,1.168,549,0.832,550,0.785,551,0.881,552,0.96,553,0.808,554,1.387,555,1.237,556,0.832,557,0.832,558,0.96,559,1.202,560,0.881,561,1.371,562,0.96,563,0.933,564,1.546,565,1.687,566,0.906,567,0.881,568,1.237,569,1.452,570,1.309,571,1.332,572,0.832,573,0.96,574,1.809,575,0.96,576,0.96,577,0.96,578,0.933,579,0.933,580,0.933,581,0.933,582,0.933,583,0.933,584,0.96,585,0.933,586,0.96,587,0.96,588,0.856,589,0.933,590,1.202,591,1.168,592,0.881,593,0.72,594,0.933,595,0.856]],["title/interfaces/TouristicEvent.html",[476,0.44,570,1.086]],["body/interfaces/TouristicEvent.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.694,34,0.011,35,0.578,36,0.595,41,0.167,58,0.245,74,0.392,90,0.397,108,0.786,124,0.63,127,0.691,136,0.631,156,0.004,157,0.006,158,0.004,298,0.694,299,0.849,302,1.082,311,0.929,323,1.238,327,1.128,328,1.567,331,0.948,334,3.304,337,1.435,376,1.34,395,1.302,424,0.925,429,0.925,462,0.825,464,1.585,476,0.908,477,0.874,478,0.925,479,0.899,480,1.78,481,1.654,482,1.575,483,1.621,484,1.621,485,1.621,486,2.055,487,2.057,488,1.621,489,1.682,490,0.899,491,0.952,492,1.405,493,0.779,494,0.779,495,0.802,496,1.857,497,1.096,498,1.531,499,0.952,500,1.379,501,1.575,502,1.302,503,1.621,504,2.057,505,1.857,506,1.302,507,1.778,508,1.749,509,1.621,510,1.379,511,1.379,512,1.379,513,1.096,514,1.887,515,1.379,516,1.559,517,1.34,518,1.379,519,1.379,520,1.379,521,1.34,522,1.379,523,1.405,524,1.379,525,1.379,526,1.34,527,1.161,528,1.302,529,1.34,530,2.02,531,0.952,532,0.952,533,1.379,534,0.952,535,0.952,536,1.34,537,0.952,538,0.952,539,0.952,540,0.952,541,0.952,542,0.952,543,0.952,544,1.379,545,1.34,546,1.531,547,1.34,548,1.161,549,0.825,550,0.779,551,0.874,552,0.952,553,0.802,554,1.379,555,1.23,556,0.825,557,0.825,558,0.952,559,1.195,560,0.874,561,1.365,562,0.952,563,0.925,564,1.405,565,1.446,566,0.899,567,0.874,568,1.23,569,1.446,570,1.531,571,1.327,572,0.825,573,0.952,574,1.805,575,0.952,576,0.952,577,0.952,578,0.925,579,0.925,580,0.925,581,0.925,582,0.925,583,0.925,584,0.952,585,0.925,586,0.952,587,0.952,588,0.849,589,0.925,590,1.195,591,1.161,592,0.874,593,0.715,594,0.925,595,0.849]],["title/interfaces/TouristicEvents.html",[476,0.44,569,1.026]],["body/interfaces/TouristicEvents.html",[3,0.099,4,0.069,8,0.079,16,0.252,29,0.7,34,0.011,35,0.579,36,0.59,41,0.168,58,0.245,74,0.395,90,0.399,108,0.788,124,0.633,127,0.693,136,0.634,156,0.004,157,0.006,158,0.004,298,0.7,299,0.856,302,1.087,311,0.889,323,1.238,327,1.135,328,1.571,331,0.954,337,1.436,376,1.348,395,1.309,424,0.933,429,0.933,462,0.832,464,1.591,476,0.908,477,0.881,478,0.933,479,0.906,480,1.783,481,1.656,482,1.582,483,1.629,484,1.629,485,1.629,486,2.041,487,2.093,488,1.629,489,1.687,490,0.906,491,0.96,492,1.411,493,0.785,494,0.785,495,0.808,496,2.003,497,1.103,498,1.538,499,0.96,500,1.387,501,1.582,502,1.309,503,1.629,504,1.916,505,1.862,506,1.309,507,1.784,508,1.753,509,1.629,510,1.387,511,1.387,512,1.387,513,1.103,514,1.892,515,1.387,516,1.562,517,1.348,518,1.387,519,1.387,520,1.387,521,1.348,522,1.387,523,1.411,524,1.387,525,1.387,526,1.348,527,1.168,528,1.309,529,1.348,530,2.023,531,0.96,532,0.96,533,1.387,534,0.96,535,0.96,536,1.348,537,0.96,538,0.96,539,0.96,540,0.96,541,0.96,542,0.96,543,0.96,544,1.387,545,1.348,546,1.538,547,1.348,548,1.168,549,0.832,550,0.785,551,0.881,552,0.96,553,0.808,554,1.387,555,1.237,556,0.832,557,0.832,558,0.96,559,1.202,560,0.881,561,1.371,562,0.96,563,0.933,564,1.411,565,1.452,566,0.906,567,0.881,568,1.237,569,1.591,570,1.684,571,1.332,572,0.832,573,0.96,574,1.809,575,0.96,576,0.96,577,0.96,578,0.933,579,0.933,580,0.933,581,0.933,582,0.933,583,0.933,584,0.96,585,0.933,586,0.96,587,0.96,588,0.856,589,0.933,590,1.202,591,1.168,592,0.881,593,0.72,594,0.933,595,0.856]],["title/interfaces/Trek.html",[127,0.392,476,0.44]],["body/interfaces/Trek.html",[3,0.098,4,0.069,8,0.079,16,0.25,29,0.695,34,0.011,35,0.578,36,0.593,41,0.167,58,0.245,74,0.393,90,0.397,108,0.786,124,0.631,127,0.708,136,0.631,156,0.004,157,0.006,158,0.004,298,0.695,299,0.85,302,1.083,311,0.93,323,1.238,327,1.13,328,1.568,331,0.949,334,2.566,337,1.435,376,1.341,395,1.303,424,0.927,429,0.927,462,0.826,464,1.586,476,0.908,477,0.875,478,0.927,479,0.9,480,1.781,481,1.654,482,1.577,483,1.623,484,1.623,485,1.623,486,2.055,487,2.058,488,1.623,489,1.683,490,0.9,491,0.954,492,1.406,493,0.78,494,0.78,495,0.803,496,1.858,497,1.098,498,1.532,499,0.954,500,1.381,501,1.577,502,1.303,503,1.623,504,2.058,505,1.858,506,1.679,507,1.779,508,1.75,509,1.623,510,1.381,511,1.381,512,1.381,513,1.098,514,1.888,515,1.381,516,1.56,517,1.341,518,1.381,519,1.381,520,1.381,521,1.341,522,1.381,523,1.406,524,1.381,525,1.381,526,1.341,527,1.162,528,1.303,529,1.341,530,2.02,531,0.954,532,0.954,533,1.381,534,0.954,535,0.954,536,1.341,537,0.954,538,0.954,539,0.954,540,0.954,541,0.954,542,0.954,543,0.954,544,1.381,545,1.341,546,1.532,547,1.341,548,1.162,549,0.826,550,0.78,551,0.875,552,0.954,553,0.803,554,1.381,555,1.231,556,0.826,557,0.826,558,0.954,559,1.196,560,0.875,561,1.366,562,0.954,563,0.927,564,1.406,565,1.447,566,0.9,567,0.875,568,1.231,569,1.447,570,1.303,571,1.328,572,0.826,573,0.954,574,1.805,575,0.954,576,0.954,577,0.954,578,0.927,579,0.927,580,0.927,581,0.927,582,0.927,583,0.927,584,0.954,585,0.927,586,0.954,587,0.954,588,0.85,589,0.927,590,1.196,591,1.162,592,0.875,593,0.716,594,0.927,595,0.85]],["title/components/TrekCardComponent.html",[0,0.582,145,1.256]],["body/components/TrekCardComponent.html",[0,0.737,1,0.868,2,1.439,3,0.082,4,0.058,5,0.978,6,0.978,7,0.978,8,0.066,10,0.949,11,2.855,12,2.609,14,1.484,16,0.317,17,1.016,19,1.016,24,2.849,25,3.458,27,3.546,28,3.123,29,1.275,30,3.123,31,1.725,33,1.193,34,0.012,35,0.459,36,0.537,37,1.063,39,1.332,40,1.317,41,0.197,42,0.376,43,1.04,44,1.04,47,0.73,53,1.612,54,1.42,55,2.243,57,1.612,58,0.082,59,0.351,60,2.269,66,3.57,74,0.67,80,2.964,82,2.339,90,0.229,91,1.484,92,1.484,93,0.978,94,2.001,95,0.978,96,0.978,97,0.868,98,0.978,99,0.978,100,0.868,101,0.978,102,0.978,103,0.868,104,1.484,105,0.868,106,0.978,107,0.868,108,0.351,109,0.978,110,0.868,111,0.978,112,0.978,113,0.868,114,0.949,115,0.921,116,1.793,117,0.868,118,0.949,119,0.978,120,0.868,121,0.978,122,0.868,123,1.172,124,0.577,125,1.484,126,0.894,127,0.773,128,0.868,129,0.843,130,0.978,131,0.868,132,0.978,133,0.868,134,0.978,135,0.868,136,0.364,137,0.868,138,0.978,139,0.868,140,0.978,141,0.868,142,0.978,143,0.843,144,0.978,145,1.776,146,0.978,147,0.894,148,0.868,149,1.484,150,0.868,151,0.868,152,0.978,153,0.868,154,0.978,155,0.978,156,0.004,157,0.006,158,0.004,210,1.777,271,1.225,286,1.493,299,1.56,302,1.168,311,0.515,313,2.401,323,1.02,327,0.987,333,2.697,335,1.776,337,1.218,341,3.864,342,3.506,406,1.008,410,1.439,411,2.603,412,3.026,413,3.239,415,1.53,421,2.597,423,2.243,427,1.612,444,2.268,445,3.557,446,1.995,462,1.263,464,0.709,473,1.69,474,1.878,502,0.751,508,1.228,516,1.313,527,1.551,574,1.338,612,3.733,635,0.921,649,1.995,730,3.026,733,3.506,735,3.299,768,3.155,774,1.42,775,1.995,798,3.717,799,3.546,832,1.69,833,1.542,883,2.849,884,2.339,885,3.91,886,3.239,887,1.777,888,1.878,889,1.878,918,5.351,1007,3.657,1021,2.311,1022,1.777,1024,3.864,1026,2.311,1028,2.311,1029,2.135,1030,2.311,1032,2.311,1070,2.311,1086,1.878,1163,2.546,1223,3.864,1244,2.546,1289,1.878,1297,4.237,1423,2.311,1424,2.546,1425,2.546,1426,2.311,1427,1.995,1428,3.864,1605,4.729,1606,3.506,1634,2.311,1635,2.311,1642,4.729,1738,2.135,1937,6.526,1985,7.192,1986,2.546,1987,5.324,1988,4.406,1989,5.324,1990,5.324,1991,5.324,1992,4.406,1993,5.943,1994,4.406,1995,6.389,1996,6.389,1997,6.988,1998,4.406,1999,2.904,2000,2.904,2001,2.904,2002,2.904,2003,2.904,2004,2.904,2005,4.406,2006,2.904,2007,2.904,2008,2.904,2009,4.406,2010,5.943,2011,2.904,2012,5.324,2013,2.904,2014,2.904,2015,2.904,2016,2.904,2017,2.904,2018,2.904,2019,2.904,2020,2.904,2021,4.406,2022,2.904,2023,4.406,2024,4.406,2025,4.406,2026,2.904,2027,2.904,2028,4.406,2029,4.406,2030,2.904,2031,4.406,2032,2.904,2033,2.904,2034,2.904,2035,4.406,2036,4.406,2037,2.904,2038,2.904,2039,2.904,2040,2.904,2041,4.406,2042,2.904,2043,4.406,2044,4.406,2045,2.904,2046,2.904,2047,2.904,2048,2.904,2049,2.904,2050,2.904,2051,2.904,2052,2.904,2053,2.904,2054,2.904,2055,4.406,2056,4.406,2057,4.406,2058,4.406,2059,4.406,2060,4.406,2061,6.725,2062,6.725,2063,4.406,2064,5.943,2065,4.406,2066,4.406,2067,4.406,2068,2.904,2069,4.406,2070,2.904,2071,3.864,2072,2.904,2073,2.546,2074,4.406,2075,2.904,2076,2.904,2077,2.904,2078,2.904,2079,4.406,2080,4.406,2081,4.406,2082,2.904,2083,2.904,2084,2.904,2085,4.406,2086,2.904,2087,2.904,2088,2.904]],["title/interfaces/TrekContext.html",[476,0.44,588,1.026]],["body/interfaces/TrekContext.html",[3,0.094,4,0.066,8,0.075,16,0.239,29,0.664,34,0.011,35,0.573,36,0.595,41,0.163,58,0.244,74,0.375,90,0.384,108,0.769,124,0.617,127,0.757,136,0.61,156,0.004,157,0.006,158,0.004,298,0.664,299,1.551,302,1.292,311,0.876,323,1.237,327,1.092,328,1.545,331,1.196,337,1.432,376,1.297,395,1.26,424,0.884,429,0.884,462,0.789,464,1.551,476,0.904,477,0.835,478,0.884,479,0.859,480,1.752,481,1.643,482,1.535,483,1.58,484,1.58,485,1.58,486,2.022,487,2.034,488,1.58,489,1.652,490,0.859,491,0.91,492,1.605,493,0.745,494,0.745,495,0.766,496,1.828,497,1.061,498,1.492,499,0.91,500,1.335,501,1.535,502,1.26,503,1.58,504,1.881,505,1.828,506,1.26,507,1.74,508,1.727,509,1.58,510,1.335,511,1.335,512,1.335,513,1.061,514,1.853,515,1.335,516,1.637,517,1.297,518,1.335,519,1.335,520,1.335,521,1.297,522,1.335,523,1.369,524,1.335,525,1.335,526,1.297,527,1.465,528,1.26,529,1.297,530,2.002,531,0.91,532,0.91,533,1.335,534,0.91,535,0.91,536,1.297,537,0.91,538,0.91,539,0.91,540,0.91,541,0.91,542,0.91,543,0.91,544,1.335,545,1.297,546,1.492,547,1.297,548,1.124,549,0.789,550,0.745,551,0.835,552,0.91,553,0.766,554,1.335,555,1.19,556,0.789,557,0.789,558,0.91,559,1.156,560,0.835,561,1.727,562,0.91,563,0.884,564,1.778,565,1.409,566,0.859,567,0.835,568,1.551,569,1.829,570,1.26,571,1.516,572,0.789,573,0.91,574,1.776,575,0.91,576,0.91,577,0.91,578,0.884,579,0.884,580,0.884,581,0.884,582,0.884,583,0.884,584,0.91,585,0.884,586,0.91,587,0.91,588,1.19,589,1.691,590,1.605,591,1.56,592,1.596,593,1.306,594,1.691,595,0.812]],["title/guards/TrekContextResolver.html",[211,2.716,1486,2.886]],["body/guards/TrekContextResolver.html",[3,0.128,4,0.09,8,0.103,16,0.327,17,1.4,19,1.4,21,3.487,27,3.793,28,3.565,30,3.901,31,1.284,33,1.361,34,0.011,35,0.491,36,0.416,37,1.212,39,1.019,41,0.24,42,0.589,45,1.682,46,1.855,47,1.143,48,2.14,53,2.525,54,2.224,55,3.091,57,2.525,58,0.128,59,0.551,60,2.456,64,2.415,65,2.316,123,1.616,127,0.791,156,0.006,157,0.008,158,0.006,183,2.415,191,1.629,197,3.124,211,3.926,237,5.48,238,2.941,239,3.124,257,2.721,286,2.101,299,1.855,302,1.389,307,2.108,331,1.431,337,0.737,346,2.941,347,1.736,348,2.941,353,2.525,401,2.941,402,2.941,410,1.486,492,1.441,493,1.019,494,1.019,513,0.991,527,1.681,561,1.681,564,1.803,569,1.781,571,1.634,574,1.964,588,1.483,589,1.211,590,1.079,591,1.4,592,1.526,593,1.248,594,1.616,635,1.442,735,3.37,798,3.977,799,4.048,832,2.647,833,2.415,884,2.415,1145,4.419,1148,3.124,1149,4.243,1173,3.345,1209,2.784,1214,3.989,1455,2.941,1461,5.159,1484,3.872,1487,3.124,1492,4.832,1493,5.361,1495,4.832,1501,3.345,1502,3.345,1503,3.345,1505,3.62,1506,3.62,1551,5.438,1737,3.62,1738,3.345,1752,3.989,2089,3.989,2090,4.549,2091,4.549,2092,6.072,2093,3.989,2094,4.549,2095,4.549,2096,6.072,2097,4.549,2098,6.072,2099,4.549,2100,4.549,2101,4.549,2102,4.549,2103,4.549,2104,4.549,2105,4.549,2106,4.549,2107,4.549,2108,4.549,2109,4.549,2110,4.549,2111,4.549,2112,3.989,2113,3.989,2114,4.549,2115,3.62,2116,4.549,2117,4.549,2118,4.549,2119,4.549]],["title/modules/TrekDetailsPageModule.html",[159,1.118,2120,3.089]],["body/modules/TrekDetailsPageModule.html",[0,0.804,3,0.164,4,0.115,8,0.131,34,0.011,41,0.244,42,0.752,43,2.079,44,2.079,47,1.459,58,0.164,59,0.703,90,0.458,127,0.542,147,2.597,156,0.007,157,0.009,158,0.007,159,1.545,161,2.216,162,2.367,163,3.35,164,2.537,165,2.367,166,2.367,174,2.799,175,2.45,176,2.45,179,2.995,184,2.995,191,2.079,198,3.47,203,2.45,206,2.838,211,4.588,212,4.62,284,3.082,285,4.07,286,1.459,287,3.553,596,4.588,907,3.47,908,4.129,910,2.955,1478,4.241,1480,3.553,1482,4.268,1483,4.268,1484,3.082,1485,3.753,1930,5.387,1940,5.091,1975,3.753,1977,4.62,2120,6.347,2121,5.091,2122,5.091,2123,5.806,2124,4.268,2125,5.806,2126,5.091,2127,5.806,2128,5.806]],["title/components/TrekMapPage.html",[0,0.582,148,1.256]],["body/components/TrekMapPage.html",[0,0.898,1,0.9,2,1.479,3,0.085,4,0.06,5,1.014,6,1.014,7,1.014,8,0.068,10,0.984,11,2.865,12,2.619,14,1.525,16,0.326,17,1.044,19,1.044,21,3.092,29,1.296,30,3.173,31,1.774,33,1.454,34,0.011,35,0.509,36,0.551,37,1.296,39,1.668,40,2.267,41,0.218,42,0.39,47,0.757,57,1.671,58,0.085,59,0.364,60,2.335,65,1.533,66,3.756,74,0.732,80,1.188,90,0.237,91,1.525,92,1.525,93,1.014,94,2.038,95,1.014,96,1.014,97,0.9,98,1.014,99,1.014,100,0.9,101,1.014,102,1.014,103,0.9,104,1.525,105,0.9,106,1.014,107,0.9,108,0.364,109,1.014,110,0.9,111,1.014,112,1.014,113,1.626,114,0.984,115,1.725,116,1.833,117,0.9,118,0.984,119,1.014,120,0.9,121,1.014,122,0.9,123,1.937,124,0.588,125,1.525,126,0.927,127,0.719,128,0.9,129,0.874,130,1.014,131,0.9,132,1.014,133,0.9,134,1.014,135,1.626,136,0.886,137,0.9,138,1.014,139,0.9,140,1.014,141,0.9,142,1.014,143,0.874,144,1.014,145,0.9,146,1.014,147,0.927,148,1.809,149,1.525,150,0.9,151,0.9,152,1.014,153,0.9,154,1.014,155,1.014,156,0.004,157,0.006,158,0.004,191,1.079,197,2.068,203,1.271,210,3.331,243,2.64,244,2.214,245,3.971,246,2.64,247,2.214,257,2.168,263,3.914,271,2.297,286,1.521,295,6.118,298,0.904,302,1.107,311,0.529,313,2.468,323,0.753,331,1.332,335,1.94,337,0.882,406,1.046,410,1.479,415,1.572,421,2.379,444,2.477,458,3.11,464,0.735,473,1.752,474,2.928,480,0.986,481,0.601,492,1.291,493,0.675,494,0.675,513,1.185,523,1.618,527,1.255,550,1.585,561,1.255,568,1.329,571,1.219,588,1.106,590,1.291,591,1.255,592,1.367,593,1.244,612,3.927,619,4.116,635,0.955,644,4.331,645,3.603,646,3.603,648,2.771,650,2.396,664,2.64,768,3.214,774,1.472,775,2.068,777,3.334,778,3.167,784,2.513,785,2.513,787,2.068,791,4.157,792,3.601,818,3.167,819,1.752,820,1.752,823,1.364,829,1.752,830,1.843,834,1.752,845,2.635,846,2.396,873,2.214,881,2.068,882,1.947,889,1.947,929,4.772,931,3.971,975,2.64,1022,1.843,1086,1.947,1145,2.928,1148,2.068,1149,3.522,1242,3.603,1287,2.396,1289,2.928,1298,2.214,1426,2.396,1455,4.196,1458,4.817,1460,4.45,1461,4.574,1467,2.396,1469,3.603,1471,2.396,1605,3.603,1606,3.603,1939,2.396,1958,2.64,1975,2.928,2073,3.971,2115,2.396,2124,6.118,2129,2.396,2130,4.772,2131,3.971,2132,5.442,2133,5.442,2134,5.442,2135,4.528,2136,4.528,2137,5.442,2138,6.053,2139,4.528,2140,2.64,2141,4.528,2142,3.011,2143,4.528,2144,3.011,2145,3.011,2146,4.528,2147,3.011,2148,4.528,2149,3.011,2150,3.011,2151,2.64,2152,2.64,2153,2.64,2154,2.64,2155,2.64,2156,2.64,2157,4.528,2158,2.64,2159,2.64,2160,3.011,2161,2.64,2162,2.64,2163,3.011,2164,2.64,2165,4.528,2166,2.64,2167,3.011,2168,2.64,2169,2.64,2170,4.528,2171,3.011,2172,3.011,2173,3.011,2174,3.011,2175,3.011,2176,2.64,2177,2.64,2178,3.011,2179,3.011,2180,3.011,2181,3.011,2182,5.442,2183,3.011,2184,3.011,2185,3.011,2186,3.011,2187,3.011,2188,3.011,2189,5.442,2190,3.011,2191,3.011,2192,3.011,2193,2.64,2194,3.011,2195,4.528,2196,2.64,2197,4.528,2198,3.011,2199,3.011,2200,3.011,2201,3.011,2202,2.64,2203,3.011]],["title/modules/TrekMapPageModule.html",[159,1.118,2204,3.089]],["body/modules/TrekMapPageModule.html",[0,0.811,3,0.165,4,0.116,8,0.132,34,0.011,41,0.243,42,0.759,43,2.099,44,2.099,47,1.473,58,0.165,59,0.709,90,0.462,127,0.547,148,2.526,156,0.007,157,0.009,158,0.007,159,1.56,161,2.237,162,2.39,163,3.364,164,2.562,165,2.39,166,2.39,174,2.815,175,2.473,176,2.473,179,3.012,184,3.012,191,2.099,198,3.49,203,2.473,206,2.866,211,4.615,212,4.664,284,3.112,285,4.087,286,1.473,287,3.587,295,4.309,907,3.49,908,3.41,910,2.983,1478,4.251,1480,3.587,1482,4.309,1483,4.309,1484,3.112,1485,3.789,1921,5.399,1975,3.789,2124,4.309,2204,6.355,2205,5.139,2206,5.139,2207,5.861,2208,5.139,2209,5.139,2210,5.139]],["title/interfaces/TrekProperties.html",[476,0.44,506,1.086]],["body/interfaces/TrekProperties.html",[3,0.091,4,0.064,8,0.073,16,0.232,29,0.644,34,0.011,35,0.569,36,0.599,37,1.251,41,0.16,58,0.243,74,0.364,90,0.376,108,0.758,124,0.679,127,0.675,136,0.597,156,0.004,157,0.006,158,0.004,298,0.644,299,0.788,302,1.037,311,0.868,323,1.241,327,1.068,328,1.531,331,0.898,337,1.436,376,1.269,395,1.233,424,0.859,429,0.859,462,0.766,464,1.53,476,0.902,477,0.811,478,0.859,479,0.835,480,1.758,481,1.635,482,1.509,483,1.553,484,1.553,485,1.553,486,2.01,487,2.019,488,1.553,489,1.632,490,0.835,491,0.884,492,1.346,493,0.723,494,0.723,495,0.744,496,1.809,497,1.038,498,1.62,499,0.884,500,1.306,501,1.861,502,1.233,503,1.553,504,1.861,505,1.809,506,1.466,507,1.982,508,1.779,509,1.916,510,1.83,511,1.83,512,1.83,513,1.455,514,2.035,515,1.83,516,1.586,517,1.778,518,1.83,519,1.83,520,1.83,521,1.778,522,1.83,523,1.586,524,1.83,525,1.83,526,1.778,527,1.1,528,1.233,529,1.269,530,1.99,531,0.884,532,0.884,533,1.306,534,0.884,535,0.884,536,1.269,537,0.884,538,0.884,539,0.884,540,0.884,541,0.884,542,0.884,543,0.884,544,1.306,545,1.269,546,1.466,547,1.269,548,1.1,549,0.766,550,0.723,551,0.811,552,0.884,553,0.744,554,1.306,555,1.164,556,0.766,557,0.766,558,0.884,559,1.131,560,0.811,561,1.308,562,0.884,563,0.859,564,1.346,565,1.385,566,0.835,567,0.811,568,1.164,569,1.385,570,1.233,571,1.271,572,0.766,573,0.884,574,1.758,575,0.884,576,0.884,577,0.884,578,0.859,579,0.859,580,0.859,581,0.859,582,0.859,583,0.859,584,0.884,585,0.859,586,0.884,587,0.884,588,0.788,589,0.859,590,1.131,591,1.1,592,0.811,593,0.663,594,0.859,595,0.788]],["title/interfaces/Treks.html",[124,0.408,476,0.44]],["body/interfaces/Treks.html",[3,0.099,4,0.069,8,0.079,16,0.252,29,0.7,34,0.011,35,0.579,36,0.59,41,0.168,58,0.245,74,0.395,90,0.399,108,0.788,124,0.671,127,0.723,136,0.634,156,0.004,157,0.006,158,0.004,298,0.7,299,0.856,302,1.087,311,0.889,323,1.238,327,1.135,328,1.571,331,0.954,337,1.436,376,1.348,395,1.309,424,0.933,429,0.933,462,0.832,464,1.591,476,0.908,477,0.881,478,0.933,479,0.906,480,1.783,481,1.656,482,1.582,483,1.629,484,1.629,485,1.629,486,2.041,487,2.093,488,1.629,489,1.687,490,0.906,491,0.96,492,1.411,493,0.785,494,0.785,495,0.808,496,2.003,497,1.103,498,1.538,499,0.96,500,1.387,501,1.582,502,1.309,503,1.629,504,1.916,505,1.862,506,1.309,507,1.784,508,1.753,509,1.629,510,1.387,511,1.387,512,1.387,513,1.103,514,1.892,515,1.387,516,1.562,517,1.348,518,1.387,519,1.387,520,1.387,521,1.348,522,1.387,523,1.411,524,1.387,525,1.387,526,1.348,527,1.168,528,1.309,529,1.348,530,2.023,531,0.96,532,0.96,533,1.387,534,0.96,535,0.96,536,1.348,537,0.96,538,0.96,539,0.96,540,0.96,541,0.96,542,0.96,543,0.96,544,1.387,545,1.348,546,1.538,547,1.348,548,1.168,549,0.832,550,0.785,551,0.881,552,0.96,553,0.808,554,1.387,555,1.237,556,0.832,557,0.832,558,0.96,559,1.202,560,0.881,561,1.371,562,0.96,563,0.933,564,1.411,565,1.452,566,0.906,567,0.881,568,1.237,569,1.452,570,1.309,571,1.332,572,0.832,573,0.96,574,1.809,575,0.96,576,0.96,577,0.96,578,0.933,579,0.933,580,0.933,581,0.933,582,0.933,583,0.933,584,0.96,585,0.933,586,0.96,587,0.96,588,0.856,589,0.933,590,1.202,591,1.168,592,0.881,593,0.72,594,0.933,595,0.856]],["title/interfaces/TreksContext.html",[476,0.44,595,1.026]],["body/interfaces/TreksContext.html",[3,0.098,4,0.069,8,0.079,16,0.251,29,0.696,34,0.011,35,0.578,36,0.589,41,0.167,58,0.245,74,0.393,90,0.398,108,0.787,124,0.631,127,0.692,136,0.632,156,0.004,157,0.006,158,0.004,298,0.696,299,0.851,302,1.314,311,0.887,323,1.238,327,1.131,328,1.568,331,0.95,337,1.435,376,1.343,395,1.305,424,0.928,429,0.928,462,0.827,464,1.587,476,0.908,477,0.876,478,0.928,479,0.902,480,1.767,481,1.655,482,1.578,483,1.624,484,1.624,485,1.624,486,2.039,487,2.059,488,1.624,489,1.684,490,0.902,491,0.955,492,1.407,493,0.781,494,0.781,495,0.804,496,1.859,497,1.099,498,1.533,499,0.955,500,1.382,501,1.578,502,1.305,503,1.624,504,1.913,505,1.859,506,1.305,507,1.78,508,1.751,509,1.624,510,1.382,511,1.382,512,1.382,513,1.099,514,1.889,515,1.382,516,1.615,517,1.343,518,1.382,519,1.382,520,1.382,521,1.343,522,1.382,523,1.407,524,1.382,525,1.382,526,1.343,527,1.164,528,1.305,529,1.343,530,2.021,531,0.955,532,0.955,533,1.382,534,0.955,535,0.955,536,1.343,537,0.955,538,0.955,539,0.955,540,0.955,541,0.955,542,0.955,543,0.955,544,1.382,545,1.343,546,1.533,547,1.343,548,1.164,549,0.827,550,0.781,551,0.876,552,0.955,553,0.804,554,1.382,555,1.232,556,0.827,557,0.827,558,0.955,559,1.197,560,0.876,561,1.367,562,0.955,563,0.928,564,1.407,565,1.448,566,0.902,567,0.876,568,1.232,569,1.448,570,1.305,571,1.545,572,0.827,573,0.955,574,1.806,575,0.955,576,0.955,577,0.955,578,0.928,579,0.928,580,0.928,581,0.928,582,0.928,583,0.928,584,0.955,585,0.928,586,0.955,587,0.955,588,0.851,589,0.928,590,1.636,591,1.59,592,0.876,593,0.717,594,0.928,595,1.232]],["title/guards/TreksContextResolver.html",[213,2.716,1486,2.886]],["body/guards/TreksContextResolver.html",[3,0.158,4,0.111,8,0.127,16,0.403,17,1.6,19,1.6,21,3.659,27,3.853,28,3.855,31,1.468,33,1.555,34,0.011,35,0.499,36,0.475,37,1.386,39,1.255,41,0.241,42,0.726,45,2.07,46,2.284,47,1.407,48,2.634,53,3.108,54,2.738,55,3.533,58,0.158,59,0.678,60,2.427,64,3.685,65,3.533,156,0.007,157,0.009,158,0.007,191,2.006,213,4.488,237,5.751,238,3.62,239,3.846,257,2.006,286,1.895,302,1.482,307,2.41,328,1.596,347,2.137,410,1.829,513,1.219,571,1.767,590,1.329,591,1.6,595,1.367,635,1.775,798,4.389,799,4.377,832,3.258,833,2.973,1484,4.186,1487,3.846,1492,5.523,1493,5.797,1501,4.117,1502,4.117,1503,4.117,1737,4.456,1738,4.117,2093,4.91,2211,4.91,2212,5.6,2213,5.6,2214,5.6,2215,5.6,2216,5.6]],["title/components/TreksMapPage.html",[0,0.582,150,1.256]],["body/components/TreksMapPage.html",[0,0.878,1,0.853,2,1.421,3,0.081,4,0.057,5,0.961,6,0.961,7,0.961,8,0.065,10,0.933,11,2.85,12,2.604,14,1.465,16,0.205,17,1.003,19,1.003,21,3.036,24,2.402,27,3.519,28,3.1,29,1.266,30,3.1,31,1.795,33,1.181,34,0.011,35,0.456,36,0.557,37,1.052,39,1.705,40,2.333,41,0.23,42,0.37,45,1.055,46,1.164,47,0.717,48,1.343,53,1.585,54,1.396,55,2.214,57,1.585,58,0.081,59,0.346,60,2.374,64,1.516,65,1.453,66,3.366,74,0.594,80,2.078,90,0.225,91,1.465,92,1.465,93,0.961,94,1.984,95,0.961,96,0.961,97,0.853,98,0.961,99,0.961,100,0.853,101,0.961,102,0.961,103,0.853,104,1.465,105,1.574,106,0.961,107,0.853,108,0.346,109,0.961,110,0.853,111,0.961,112,0.961,113,0.853,114,0.933,115,0.905,116,1.774,117,0.853,118,0.933,119,0.961,120,0.853,121,0.961,122,0.853,123,1.905,124,0.739,125,1.465,126,0.879,127,0.55,128,0.853,129,0.829,130,0.961,131,0.853,132,0.961,133,0.853,134,0.961,135,0.853,136,0.358,137,0.853,138,0.961,139,1.574,140,0.961,141,0.853,142,0.961,143,0.829,144,0.961,145,0.853,146,0.961,147,0.879,148,0.853,149,1.465,150,1.761,151,0.853,152,0.961,153,0.853,154,0.961,155,0.961,156,0.004,157,0.006,158,0.004,165,1.774,191,1.023,197,1.961,235,5.107,236,2.503,263,3.809,271,1.205,286,1.48,290,2.987,298,0.868,302,0.963,311,0.508,313,2.467,323,0.991,335,1.574,337,0.854,347,1.09,353,1.585,392,2.099,406,0.991,410,1.421,411,2.576,415,1.51,421,3.036,444,2.42,458,2.987,473,2.531,480,0.947,481,0.57,492,1.25,493,0.64,494,0.64,497,1.147,513,1.147,516,1.428,571,1.181,572,1.398,590,1.25,591,1.215,593,1.083,595,1.286,612,3.708,619,4.042,635,0.905,644,3.461,645,3.461,646,3.461,648,1.747,649,2.987,650,3.461,651,2.503,666,4.319,668,1.846,700,3.461,726,6.279,774,1.396,777,3.396,778,3.066,784,2.414,785,2.414,791,4.046,792,3.536,796,3.461,818,3.066,819,1.661,820,1.661,823,3.027,829,1.661,830,1.747,831,2.272,834,1.661,835,1.961,845,1.661,873,2.099,921,4.193,1007,1.961,1060,1.961,1102,3.809,1144,4.62,1145,3.809,1148,1.961,1149,3.689,1160,2.503,1161,2.503,1224,2.503,1242,3.461,1243,3.461,1283,2.099,1287,2.272,1289,3.406,1298,3.198,1423,3.461,1460,4.331,1461,4.491,1510,5.046,1515,3.814,1545,4.62,1569,1.961,1646,3.461,1720,3.814,1758,2.272,1916,2.503,1920,2.503,1939,2.272,1975,1.846,1980,6.205,2071,2.503,2115,3.461,2129,2.272,2130,4.62,2131,3.814,2140,2.503,2151,2.503,2152,2.503,2153,2.503,2154,2.503,2155,2.503,2156,2.503,2158,2.503,2159,3.814,2161,2.503,2162,2.503,2164,3.814,2166,2.503,2168,4.62,2169,2.503,2176,2.503,2177,2.503,2193,2.503,2217,6.716,2218,5.269,2219,5.269,2220,5.269,2221,5.269,2222,5.891,2223,5.891,2224,5.891,2225,2.855,2226,2.855,2227,2.855,2228,4.349,2229,2.855,2230,2.855,2231,2.855,2232,2.855,2233,2.855,2234,2.855,2235,2.855,2236,2.855,2237,2.855,2238,2.855,2239,2.855,2240,2.503,2241,2.855,2242,3.814,2243,2.855,2244,2.855,2245,2.855,2246,2.855,2247,2.855,2248,2.855,2249,2.855,2250,2.855,2251,2.855,2252,2.855,2253,2.855,2254,2.855,2255,2.855,2256,2.855,2257,2.855,2258,2.855,2259,2.855,2260,2.855,2261,2.855,2262,4.349,2263,2.855,2264,2.855,2265,2.855,2266,2.855,2267,4.349,2268,4.349,2269,2.855,2270,2.855]],["title/modules/TreksMapPageModule.html",[159,1.118,2271,3.089]],["body/modules/TreksMapPageModule.html",[0,0.814,3,0.166,4,0.117,8,0.133,34,0.011,41,0.243,42,0.762,43,2.107,44,2.107,47,1.478,58,0.166,59,0.712,90,0.464,124,0.571,150,2.528,156,0.007,157,0.009,158,0.007,159,1.565,161,2.245,162,2.399,163,3.369,164,2.571,165,2.399,166,2.399,174,2.821,175,2.482,176,2.482,179,3.019,184,3.019,191,2.107,198,3.497,203,2.482,206,2.876,213,4.625,214,4.681,284,3.123,285,4.093,286,1.478,287,3.6,907,3.497,908,3.423,910,2.994,1478,4.254,1480,3.6,1484,3.123,1485,3.803,1921,5.404,1975,3.803,1980,4.324,2208,5.158,2209,5.158,2210,5.158,2217,4.681,2271,6.359,2272,5.158,2273,5.158,2274,5.882]],["title/components/TreksOrderComponent.html",[0,0.582,151,1.256]],["body/components/TreksOrderComponent.html",[0,0.908,1,1.255,2,1.879,3,0.119,4,0.083,5,1.414,6,1.414,7,1.414,8,0.095,10,1.372,11,2.949,12,2.696,14,1.937,16,0.302,17,1.326,19,1.326,21,3.416,24,2.345,29,1.31,30,3.45,31,1.708,33,1.289,34,0.011,35,0.507,36,0.506,37,1.148,39,1.581,40,1.96,41,0.216,42,0.544,47,1.055,48,1.975,57,2.33,58,0.119,59,0.508,60,2.172,64,2.229,65,2.137,66,2.229,74,0.649,90,0.331,91,1.937,92,1.937,93,1.414,94,2.376,95,1.414,96,1.414,97,1.255,98,1.414,99,1.414,100,1.255,101,1.414,102,1.414,103,1.255,104,1.937,105,1.255,106,1.414,107,1.255,108,0.508,109,1.414,110,1.255,111,1.414,112,1.414,113,1.255,114,1.372,115,1.331,116,2.209,117,1.255,118,1.372,119,1.414,120,1.255,121,1.414,122,1.255,123,1.53,124,0.801,125,1.937,126,1.292,127,0.659,128,1.255,129,1.218,130,1.414,131,1.255,132,1.414,133,1.255,134,1.414,135,1.255,136,0.526,137,1.255,138,1.414,139,1.255,140,1.414,141,1.255,142,1.414,143,1.218,144,1.414,145,1.255,146,1.414,147,1.292,148,1.255,149,1.937,150,1.255,151,2.109,152,1.414,153,1.255,154,1.414,155,1.414,156,0.005,157,0.007,158,0.005,175,1.772,215,5.746,216,3.087,217,3.341,253,6.22,271,2.427,286,1.055,311,0.672,313,1.849,335,1.255,406,1.458,415,1.997,421,2.867,444,1.603,480,1.252,549,1.811,550,1.289,612,3.641,635,1.331,753,3.681,768,2.229,771,3.341,772,3.341,773,3.341,774,2.053,775,2.883,777,3.732,784,3.192,785,3.192,792,3.339,818,3.817,819,2.443,820,2.443,823,1.902,829,2.443,830,2.57,834,2.443,845,2.443,1077,5.043,1078,3.681,1080,3.681,1101,5.242,1102,4.562,1128,3.681,1139,3.681,1827,3.087,2275,6.853,2276,3.681,2277,6.56,2278,5.751,2279,6.56,2280,6.56,2281,6.56,2282,5.751,2283,5.751,2284,4.198,2285,5.751,2286,4.198,2287,4.198,2288,4.198,2289,4.198,2290,4.198,2291,4.198,2292,4.198,2293,5.751,2294,6.56,2295,4.198,2296,3.341,2297,4.198,2298,4.198,2299,4.198,2300,4.198,2301,4.198,2302,5.751,2303,5.751]],["title/modules/TreksPageModule.html",[159,1.118,1967,2.886]],["body/modules/TreksPageModule.html",[3,0.17,4,0.119,8,0.136,34,0.011,41,0.244,42,0.779,43,2.153,44,2.153,47,1.511,58,0.17,59,0.728,90,0.474,153,2.511,156,0.008,157,0.009,158,0.008,159,1.6,161,2.295,162,2.452,163,3.401,164,2.628,165,2.452,166,2.452,174,2.859,175,2.537,176,2.537,179,3.059,184,3.059,191,2.153,198,3.544,203,2.537,206,2.939,284,3.192,902,4.979,907,3.544,908,4.218,910,3.06,1478,4.276,1480,3.68,1930,5.432,1967,5.959,2126,5.272,2304,5.272,2305,5.272,2306,6.012,2307,6.012,2308,6.012,2309,6.012,2310,6.012]],["title/interfaces/TreksService.html",[476,0.44,571,0.941]],["body/interfaces/TreksService.html",[3,0.086,4,0.061,8,0.069,16,0.22,17,1.057,29,0.611,31,1.636,33,1.639,34,0.011,35,0.597,36,0.591,37,1.46,39,1.733,41,0.155,58,0.242,74,0.345,90,0.362,108,0.739,124,0.691,127,0.739,136,0.574,156,0.004,157,0.006,158,0.004,298,0.611,299,0.748,302,1.254,311,0.855,323,1.235,327,1.027,328,1.705,331,0.863,333,4.354,337,1.442,376,1.22,395,1.186,424,0.815,429,0.815,462,0.727,464,1.49,476,0.897,477,0.769,478,0.815,479,0.792,480,1.724,481,1.658,482,1.463,483,1.506,484,1.506,485,1.506,486,1.99,487,1.991,488,1.506,489,1.596,490,0.792,491,0.839,492,1.448,493,0.686,494,0.686,495,0.706,496,1.774,497,0.998,498,1.421,499,0.839,500,1.256,501,1.463,502,1.186,503,1.506,504,1.826,505,1.774,506,1.186,507,1.672,508,1.806,509,1.506,510,1.256,511,1.256,512,1.256,513,0.998,514,1.79,515,1.256,516,1.61,517,1.22,518,1.256,519,1.256,520,1.256,521,1.22,522,1.256,523,1.304,524,1.256,525,1.256,526,1.22,527,1.057,528,1.186,529,1.22,530,1.968,531,0.839,532,0.839,533,1.256,534,0.839,535,0.839,536,1.22,537,0.839,538,0.839,539,0.839,540,0.839,541,0.839,542,0.839,543,0.839,544,1.256,545,1.22,546,1.421,547,1.22,548,1.057,549,0.727,550,0.686,551,0.769,552,0.839,553,0.706,554,1.256,555,1.12,556,0.727,557,0.727,558,0.839,559,1.088,560,0.769,561,1.268,562,0.839,563,0.815,564,1.304,565,1.342,566,0.792,567,0.769,568,1.12,569,1.342,570,1.186,571,1.368,572,1.448,573,1.256,574,2.066,575,1.256,576,1.256,577,1.256,578,1.624,579,1.22,580,1.22,581,1.624,582,1.22,583,1.22,584,1.506,585,1.624,586,0.839,587,0.839,588,0.748,589,0.815,590,1.088,591,1.057,592,0.769,593,0.629,594,0.815,595,0.748,1534,4.021,1536,4.021,1537,4.021,1538,4.021,1539,4.021,1540,4.021,1541,4.021,1542,4.021,1551,3.649,2311,3.062,2312,3.062,2313,3.062,2314,3.062,2315,3.062,2316,3.062,2317,3.062,2318,3.062,2319,3.062,2320,3.062,2321,3.062]],["title/classes/UnSubscribe.html",[59,0.509,777,2.054]],["body/classes/UnSubscribe.html",[3,0.172,4,0.121,8,0.137,16,0.437,17,1.683,19,1.803,31,1.716,34,0.011,36,0.416,39,1.635,40,2.181,41,0.206,42,0.788,58,0.206,59,0.736,156,0.008,157,0.009,158,0.008,255,4.838,311,0.853,410,2.384,411,3.823,421,3.545,777,3.568,778,4.55,784,4.341,785,4.341,792,4.128,823,3.817,2240,5.331,2322,6.079,2323,4.838,2324,7.298,2325,6.079,2326,6.079,2327,8.11,2328,6.079,2329,6.399,2330,7.298]],["title/coverage.html",[2331,5.046]],["body/coverage.html",[0,1.199,1,1.141,8,0.086,9,3.348,28,1.867,29,0.762,30,1.867,34,0.011,36,0.262,45,1.99,54,2.632,59,0.462,80,3.539,97,1.141,100,1.141,103,1.141,105,1.141,107,1.141,108,0.462,110,1.141,113,1.141,115,1.707,117,1.141,120,1.141,122,1.141,124,0.693,126,1.175,127,0.667,128,1.141,131,1.141,133,1.141,135,1.141,136,0.478,137,1.141,139,1.141,141,1.141,143,1.108,145,1.141,147,1.175,148,1.141,150,1.141,151,1.141,153,1.141,156,0.005,157,0.007,158,0.005,173,2.469,177,4.285,192,2.623,195,2.623,211,2.469,213,2.469,244,2.807,247,2.807,250,3.039,253,3.039,255,4.963,258,1.669,273,3.039,277,3.039,295,2.807,307,2.745,308,2.623,310,3.348,340,3.039,407,3.348,408,3.039,409,3.348,455,3.348,456,3.039,457,3.348,476,0.914,477,0.959,479,2.255,495,0.881,497,0.831,498,0.987,506,0.987,508,0.881,523,0.906,527,0.881,528,0.987,530,0.959,548,0.881,551,0.959,556,0.906,557,0.906,559,0.906,561,0.881,564,0.906,565,0.932,567,0.959,568,0.932,569,0.932,570,0.987,571,0.856,588,0.932,595,0.932,600,2.623,605,3.348,637,2.807,666,2.469,667,4.285,668,3.481,669,5.23,702,3.698,755,3.348,756,3.039,757,3.348,776,3.348,777,2.632,799,2.12,833,2.859,911,4.285,912,3.959,913,4.285,932,2.623,1037,3.348,1094,3.348,1095,4.285,1121,3.348,1122,3.348,1141,3.348,1149,2.222,1166,3.348,1168,4.285,1209,2.337,1221,3.348,1222,3.348,1229,5.39,1230,4.979,1231,5.39,1269,4.285,1429,2.623,1430,3.348,1431,2.807,1432,3.348,1449,3.039,1450,2.807,1451,3.348,1486,4.652,1488,3.348,1489,3.348,1507,3.348,1527,3.348,1532,4.285,1569,3.698,1608,3.348,1648,3.348,1682,3.348,1702,3.348,1703,2.807,1735,3.039,1754,3.348,1765,3.348,1766,3.348,1799,3.348,1937,3.039,1950,3.348,1977,3.039,1980,2.807,1985,3.348,1986,3.348,2089,3.348,2124,3.959,2129,4.285,2211,3.348,2217,3.039,2275,3.348,2276,3.348,2323,4.285,2331,3.348,2332,3.039,2333,3.819,2334,3.819,2335,8.353,2336,8.245,2337,6.773,2338,6.237,2339,7.41,2340,3.819,2341,3.819,2342,6.932,2343,5.384,2344,5.384,2345,3.819,2346,3.348,2347,3.819,2348,3.819,2349,3.819,2350,5.384,2351,3.819,2352,6.237,2353,6.237,2354,6.237,2355,8.013,2356,6.237,2357,5.384,2358,5.384,2359,3.819,2360,3.819,2361,3.819,2362,3.819,2363,3.819,2364,4.721,2365,3.819,2366,3.348,2367,3.348,2368,3.348,2369,3.348,2370,3.819,2371,3.819]],["title/dependencies.html",[162,2.063,2372,3.068]],["body/dependencies.html",[8,0.113,22,3.679,23,3.983,26,3.983,34,0.011,42,0.648,43,2.315,44,1.793,47,1.258,48,4.069,49,3.983,51,3.983,114,1.635,156,0.006,157,0.008,158,0.006,162,2.041,186,5.669,187,4.44,191,1.793,203,2.112,209,4.389,210,3.063,216,3.679,219,5.669,220,4.389,223,3.983,226,3.983,228,4.389,231,3.983,232,4.389,233,4.389,235,3.679,238,3.236,263,3.236,347,1.91,493,1.121,494,1.449,701,3.983,891,4.44,899,5.669,915,4.389,1800,4.389,1827,5.264,2373,5.005,2374,8.166,2375,5.005,2376,5.005,2377,5.005,2378,5.005,2379,8.583,2380,5.005,2381,5.005,2382,5.669,2383,5.005,2384,5.005,2385,6.465,2386,5.005,2387,5.005,2388,5.005,2389,5.005,2390,5.005,2391,5.005,2392,7.686,2393,5.005,2394,5.005,2395,5.005,2396,5.005,2397,6.465,2398,5.005,2399,5.005,2400,5.005,2401,5.005,2402,5.005,2403,5.005,2404,5.005,2405,7.714,2406,6.279,2407,5.005,2408,4.389,2409,5.144,2410,4.389,2411,4.389,2412,6.465,2413,4.389,2414,5.005,2415,5.005,2416,5.005,2417,4.389,2418,5.005,2419,4.389,2420,5.005,2421,5.005,2422,5.005,2423,5.005,2424,5.005,2425,5.669,2426,5.005,2427,5.005,2428,5.005,2429,5.005,2430,6.465,2431,5.005,2432,5.005,2433,5.005,2434,5.005,2435,5.005,2436,5.005,2437,5.005,2438,5.005,2439,5.005,2440,5.144,2441,5.005,2442,4.389,2443,5.005,2444,5.005,2445,5.005,2446,5.005,2447,5.005,2448,5.005,2449,5.005,2450,5.005,2451,5.005,2452,5.005,2453,5.005,2454,5.005,2455,5.005,2456,5.005]],["title/miscellaneous/functions.html",[2457,2.262,2458,4.436]],["body/miscellaneous/functions.html",[16,0.477,33,1.817,34,0.011,35,0.583,37,1.619,39,1.486,156,0.008,157,0.01,158,0.008,177,5.276,256,5.814,262,5.814,263,4.287,265,5.814,273,6.112,277,6.112,321,4.875,777,3.755,823,3.005,2323,5.276,2329,5.814,2457,4.287,2458,5.814,2459,7.681,2460,6.631]],["title/index.html",[16,0.252,2461,3.068,2462,3.068]],["body/index.html",[4,0.122,12,2.564,21,3.025,22,3.431,34,0.011,35,0.336,45,2.723,48,4.018,74,0.526,76,3.017,77,5.508,84,3.431,123,1.643,127,0.436,129,1.354,156,0.006,157,0.008,158,0.008,187,3.205,268,4.092,271,1.969,302,0.853,324,5.059,327,1.551,359,4.092,371,3.713,382,5.415,388,4.092,403,4.092,414,3.017,444,1.781,463,3.205,481,0.932,489,1.139,501,1.242,517,1.242,549,1.465,555,1.139,884,3.279,887,2.856,1022,2.856,1156,6.069,1308,5.415,1309,4.092,1320,5.088,1382,4.092,2242,4.092,2296,3.713,2332,3.713,2342,5.415,2372,4.092,2382,6.718,2392,6.903,2405,7.577,2406,6.903,2408,4.092,2409,4.914,2410,4.092,2411,6.069,2413,6.718,2417,6.069,2419,6.903,2425,4.092,2440,4.914,2442,5.415,2463,6.459,2464,6.921,2465,6.921,2466,4.092,2467,4.666,2468,4.666,2469,4.666,2470,6.175,2471,4.666,2472,4.092,2473,4.666,2474,7.366,2475,4.666,2476,7.366,2477,6.175,2478,4.666,2479,4.666,2480,4.666,2481,4.666,2482,4.666,2483,4.666,2484,4.666,2485,4.666,2486,6.175,2487,6.175,2488,5.415,2489,5.415,2490,4.666,2491,6.175,2492,6.459,2493,4.666,2494,7.662,2495,6.175,2496,8.03,2497,6.175,2498,6.175,2499,6.175,2500,4.666,2501,4.666,2502,4.666,2503,4.666,2504,4.666,2505,4.666,2506,6.175,2507,4.666,2508,4.666,2509,6.175,2510,4.666,2511,4.666,2512,6.175,2513,6.175,2514,6.175,2515,4.666,2516,6.175,2517,4.666,2518,4.666,2519,4.092,2520,5.508,2521,4.666,2522,4.666,2523,4.666,2524,4.666,2525,6.175,2526,4.092,2527,4.666,2528,6.921,2529,4.666,2530,4.092,2531,4.666,2532,4.666,2533,4.666,2534,4.666,2535,4.666,2536,4.666,2537,4.666,2538,4.666,2539,4.666,2540,4.666,2541,4.666,2542,5.415,2543,4.666,2544,6.175,2545,4.666,2546,6.175,2547,4.666,2548,4.666,2549,4.666,2550,4.666,2551,4.666,2552,4.666,2553,4.666,2554,4.666,2555,4.092,2556,4.666,2557,4.666,2558,4.666,2559,6.175,2560,4.666,2561,4.666,2562,4.666,2563,4.666,2564,4.666,2565,4.666,2566,4.666,2567,4.666,2568,4.666,2569,5.415,2570,6.175,2571,4.666,2572,4.666,2573,4.666,2574,4.666,2575,7.872,2576,4.666,2577,4.666,2578,4.666,2579,4.666,2580,4.092,2581,4.092,2582,4.092,2583,4.092,2584,4.092,2585,4.666,2586,4.666,2587,4.666,2588,4.666]],["title/license.html",[2461,3.068,2462,3.068,2589,3.068]],["body/license.html",[4,0.143,34,0.009,68,4.773,156,0.008,157,0.009,158,0.008,176,2.531,298,1.197,371,4.773,414,4.68,768,3.184,2296,6.187,2332,4.773,2409,4.773,2520,6.187,2580,5.259,2581,7.247,2582,5.259,2583,5.259,2584,5.259,2589,5.259,2590,5.998,2591,5.998,2592,5.998,2593,5.998,2594,5.998,2595,7.238,2596,5.998,2597,5.998,2598,5.998,2599,7.774,2600,7.774,2601,5.998,2602,7.238,2603,5.998,2604,5.998,2605,7.238,2606,7.238,2607,7.238,2608,5.998,2609,5.998,2610,5.998,2611,5.998,2612,5.998,2613,7.238,2614,5.998,2615,6.347,2616,5.998,2617,7.238,2618,7.238,2619,7.774,2620,7.238,2621,5.998,2622,5.998,2623,5.998,2624,5.998,2625,5.998,2626,5.998,2627,5.998,2628,5.998,2629,5.998,2630,5.998,2631,5.998,2632,5.998,2633,5.998,2634,5.998,2635,5.998,2636,5.998,2637,5.998,2638,5.998,2639,5.998,2640,5.998,2641,5.998,2642,5.998,2643,5.998,2644,5.998,2645,7.238,2646,5.998,2647,5.998,2648,5.998,2649,5.998,2650,5.998,2651,5.998,2652,5.998,2653,5.998,2654,5.998,2655,5.998,2656,5.998,2657,5.998,2658,5.998]],["title/modules.html",[161,2.196]],["body/modules.html",[34,0.009,77,5.908,156,0.008,157,0.009,158,0.008,160,4.601,161,2.389,172,4.298,187,6.069,596,4.046,902,4.298,905,4.298,1474,4.601,1478,3.185,1521,4.298,1921,4.046,1930,4.046,1962,4.601,1966,4.298,1967,4.298,2120,4.601,2204,4.601,2271,4.601,2440,7.032,2659,8.837,2660,8.872,2661,7.425]],["title/overview.html",[2662,5.046]],["body/overview.html",[1,2.359,2,1.424,34,0.011,59,0.528,82,3.132,90,0.344,97,2.359,100,2.359,103,2.359,105,2.359,107,2.359,110,2.359,113,1.999,117,1.999,120,2.359,122,2.359,126,2.429,128,1.999,131,1.999,133,2.359,135,1.999,137,1.999,139,2.359,141,2.359,143,1.941,145,2.359,147,2.058,148,1.999,150,1.999,151,1.999,153,1.999,156,0.006,157,0.008,158,0.006,159,1.16,160,6.344,161,1.664,162,1.778,163,1.905,164,1.905,165,1.778,166,1.778,167,3.822,168,3.822,169,3.822,170,3.822,171,3.822,172,4.593,173,4.324,174,2.327,175,1.839,176,1.839,285,2.314,309,2.419,340,3.469,478,1.16,596,4.842,597,3.822,598,3.822,599,3.822,600,5.421,890,3.205,902,4.922,903,3.822,904,3.822,905,5.909,1209,2.668,1362,3.469,1474,5.675,1475,3.822,1476,3.822,1477,3.822,1478,4.379,1487,2.994,1521,5.421,1522,3.822,1523,3.822,1728,3.822,1911,3.822,1912,3.822,1913,3.822,1921,5.443,1922,3.822,1923,3.822,1924,3.822,1930,5.319,1931,3.822,1932,3.822,1933,3.822,1941,3.822,1942,3.822,1943,3.822,1962,6.149,1963,3.822,1964,3.822,1965,3.822,1966,4.593,1967,5.589,2120,5.903,2121,3.822,2122,3.822,2204,5.903,2205,3.822,2206,3.822,2271,5.903,2272,3.822,2273,3.822,2304,3.822,2305,3.822,2662,3.822,2663,4.359,2664,4.359]],["title/routes.html",[285,3.055]],["body/routes.html",[34,0.01,156,0.009,157,0.01,158,0.009,285,3.69]],["title/miscellaneous/typealiases.html",[2457,2.262,2665,5.059]],["body/miscellaneous/typealiases.html",[16,0.491,34,0.011,36,0.468,74,0.771,156,0.009,157,0.01,158,0.009,331,1.287,479,1.767,549,1.855,550,1.531,2457,4.419,2666,6.834,2667,6.834]],["title/miscellaneous/variables.html",[2457,2.262,2668,4.436]],["body/miscellaneous/variables.html",[4,0.116,12,2.048,16,0.376,34,0.011,35,0.31,36,0.553,45,2.166,54,1.381,72,3.784,73,3.784,74,0.91,75,2.963,76,2.79,80,2.943,82,4.253,84,4.308,85,3.784,86,3.784,118,1.914,123,2.131,124,0.71,127,0.589,136,0.54,156,0.004,157,0.005,158,0.004,174,2.815,215,3.172,271,3.086,302,0.789,323,0.391,324,2.963,327,0.967,331,0.812,335,2.186,337,0.699,414,2.79,432,5.294,444,2.642,463,5.407,473,4.153,474,2.79,481,1.17,490,1.116,493,1.313,494,0.967,546,1.116,555,2.039,565,1.054,566,1.116,609,3.784,667,2.248,668,1.827,669,4.57,702,4.024,703,3.434,774,3.648,833,1.5,884,3.111,887,3.586,891,5.407,895,3.172,911,2.248,912,2.077,913,3.434,1007,5.501,1022,2.641,1070,3.434,1086,2.79,1089,5.138,1229,3.434,1230,3.172,1231,4.663,1269,4.663,1270,3.784,1320,3.172,1337,6.543,1339,3.784,1340,3.784,1347,3.784,1350,7.51,1352,6.748,1355,5.138,1356,6.258,1357,5.834,1358,3.784,1360,3.784,1361,3.784,1362,5.679,1363,3.784,1364,3.784,1372,6.258,1404,3.784,1510,3.434,1532,2.248,1569,4.024,1570,3.784,1709,3.784,1784,3.784,1827,3.172,1836,3.784,2112,3.784,2113,3.784,2196,6.543,2202,3.784,2346,3.784,2364,2.477,2366,2.477,2367,2.477,2368,2.477,2369,6.543,2457,1.827,2463,3.784,2466,3.784,2472,5.138,2488,6.258,2489,3.784,2492,3.784,2519,3.784,2520,4.663,2526,3.784,2530,3.784,2542,3.784,2555,3.784,2569,3.784,2615,3.784,2668,2.477,2669,2.825,2670,2.825,2671,2.825,2672,2.825,2673,2.825,2674,2.825,2675,4.315,2676,2.825,2677,5.86,2678,4.315,2679,4.315,2680,4.315,2681,8.211,2682,4.315,2683,4.315,2684,4.315,2685,4.315,2686,6.653,2687,7.462,2688,4.315,2689,4.315,2690,5.86,2691,7.137,2692,5.86,2693,5.86,2694,5.86,2695,4.315,2696,4.315,2697,4.315,2698,5.86,2699,5.86,2700,7.462,2701,4.315,2702,5.86,2703,4.315,2704,4.315,2705,6.653,2706,4.315,2707,4.315,2708,4.315,2709,4.315,2710,4.315,2711,4.315,2712,4.315,2713,4.315,2714,4.315,2715,4.315,2716,4.315,2717,4.315,2718,4.315,2719,4.315,2720,4.315,2721,4.315,2722,4.315,2723,7.696,2724,4.315,2725,4.315,2726,4.315,2727,4.315,2728,4.315,2729,4.315,2730,5.86,2731,4.315,2732,4.315,2733,8.01,2734,4.315,2735,4.315,2736,4.315,2737,6.653,2738,4.315,2739,4.315,2740,5.86,2741,5.86,2742,5.86,2743,5.86,2744,4.315,2745,4.315,2746,4.315,2747,4.315,2748,5.86,2749,4.315,2750,4.315,2751,4.315,2752,4.315,2753,4.315,2754,4.315,2755,4.315,2756,4.315,2757,4.315,2758,4.315,2759,2.825]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.01",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0125em",{"_index":2203,"title":{},"body":{"components/TrekMapPage.html":{}}}],["0.1",{"_index":1364,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":895,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["0.54.3",{"_index":2404,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.705824",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.8",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":775,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["1",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1':'fr",{"_index":2068,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0",{"_index":2062,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.0.1",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":2067,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["1.11.0",{"_index":2421,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2435,"title":{},"body":{"dependencies.html":{}}}],["1/21",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1070,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TrekCardComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":881,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["1000",{"_index":342,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["100px",{"_index":2269,"title":{},"body":{"components/TreksMapPage.html":{}}}],["1024×1024px",{"_index":2543,"title":{},"body":{"index.html":{}}}],["10px",{"_index":901,"title":{},"body":{"components/FiltersComponent.html":{}}}],["11.0.1",{"_index":2394,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200×1200px",{"_index":2557,"title":{},"body":{"index.html":{}}}],["12px",{"_index":2071,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["13",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":2086,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["16",{"_index":1362,"title":{},"body":{"components/MapTreksVizComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["16px",{"_index":1647,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["17",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1339,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["195",{"_index":893,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["199",{"_index":894,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["1\\':\\'fr",{"_index":2088,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["2",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"license.html":{}}}],["2.0.1",{"_index":2431,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":2418,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":2420,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":2423,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2390,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":2433,"title":{},"body":{"dependencies.html":{}}}],["2/30",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1784,"title":{},"body":{"components/SelectFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{}}}],["2019",{"_index":2591,"title":{},"body":{"license.html":{}}}],["20px",{"_index":2073,"title":{},"body":{"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["24",{"_index":2064,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["24px",{"_index":1428,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["250",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["256",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":2663,"title":{},"body":{"overview.html":{}}}],["2732×2732px",{"_index":2548,"title":{},"body":{"index.html":{}}}],["3",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":2412,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":2430,"title":{},"body":{"dependencies.html":{}}}],["3.0.5",{"_index":2393,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1728,"title":{},"body":{"components/SearchComponent.html":{},"overview.html":{}}}],["3000",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1645,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["3880ff",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":340,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{},"overview.html":{}}}],["4.0.0",{"_index":2395,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2424,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2402,"title":{},"body":{"dependencies.html":{}}}],["4.2.2",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["4.5.6",{"_index":2400,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":2389,"title":{},"body":{"dependencies.html":{}}}],["43",{"_index":2664,"title":{},"body":{"overview.html":{}}}],["44.410157",{"_index":1089,"title":{},"body":{"injectables/GeolocateService.html":{},"miscellaneous/variables.html":{}}}],["48px*48px",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4em",{"_index":475,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["5",{"_index":432,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":2414,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":2432,"title":{},"body":{"dependencies.html":{}}}],["5.12.0",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["5.4.4",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":897,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{}}}],["500",{"_index":2200,"title":{},"body":{"components/TrekMapPage.html":{}}}],["540px",{"_index":900,"title":{},"body":{"components/FiltersComponent.html":{}}}],["57px",{"_index":1164,"title":{},"body":{"components/LoaderComponent.html":{}}}],["5px",{"_index":2198,"title":{},"body":{"components/TrekMapPage.html":{}}}],["6",{"_index":2346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["6.0.1",{"_index":2397,"title":{},"body":{"dependencies.html":{}}}],["6.1.4",{"_index":2398,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":341,"title":{},"body":{"injectables/CacheService.html":{},"components/TrekCardComponent.html":{}}}],["61b22f",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["625b5d",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.2",{"_index":2377,"title":{},"body":{"dependencies.html":{}}}],["7px",{"_index":2197,"title":{},"body":{"components/TrekMapPage.html":{}}}],["8",{"_index":2196,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":2407,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2374,"title":{},"body":{"dependencies.html":{}}}],["8px",{"_index":2087,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["9",{"_index":890,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"overview.html":{}}}],["a.geometry",{"_index":714,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["a.indexof(v",{"_index":1904,"title":{},"body":{"injectables/SettingsService.html":{}}}],["a.properties.name",{"_index":722,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["a.properties.name.localecompare(b.properties.name",{"_index":1760,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["above",{"_index":2605,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1426,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["abstract/unsubscribe",{"_index":1268,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["accept",{"_index":1445,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["access",{"_index":517,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["accessibilities",{"_index":485,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["accesstoken",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":1460,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["activatedroutesnapshot",{"_index":1493,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["activefiltersnumber",{"_index":670,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["actual_component",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["actually",{"_index":385,"title":{},"body":{"injectables/CacheService.html":{}}}],["add",{"_index":1156,"title":{},"body":{"components/LoaderComponent.html":{},"index.html":{}}}],["addsourceslayersevents",{"_index":1237,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["addsoustractmaxbounds",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["advice",{"_index":519,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["advised",{"_index":2655,"title":{},"body":{"license.html":{}}}],["advised_parking",{"_index":518,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["alert",{"_index":1412,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alert.present",{"_index":1418,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["alertcontroller",{"_index":918,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["alertmsg",{"_index":2010,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["alertoption",{"_index":1406,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["aliases",{"_index":2666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":888,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["allow",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alphabetically",{"_index":721,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["always",{"_index":1483,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["alwaysdisplayeditems",{"_index":418,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["ambiance",{"_index":535,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["analytics",{"_index":2382,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["analytics/ngx",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["and/or",{"_index":2610,"title":{},"body":{"license.html":{}}}],["android",{"_index":2406,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["androidbuild",{"_index":2503,"title":{},"body":{"index.html":{}}}],["androiddocumentation",{"_index":2576,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2373,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{}}}],["angular/common/locales/fr",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"modules/CustomPipesModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2375,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":2376,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1421,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["animated",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["animation",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["animationc",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["any).bounds",{"_index":1602,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).fitboundsoptions",{"_index":1604,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["any).indexof(filtervalue",{"_index":734,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["any).name",{"_index":1503,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["any).properties.id",{"_index":2181,"title":{},"body":{"components/TrekMapPage.html":{}}}],["any).sources['tiles",{"_index":1290,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["api",{"_index":2492,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1433,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["apk",{"_index":2497,"title":{},"body":{"index.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.component",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/abstract/unsubscribe",{"_index":830,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/components/collapsible",{"_index":1945,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/connect",{"_index":1947,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/filter",{"_index":1918,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["app/components/filter/filter.component",{"_index":1917,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["app/components/filters/filters.component",{"_index":1916,"title":{},"body":{"modules/SharedFiltersModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/filters/filters.module",{"_index":2308,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["app/components/geolocate",{"_index":1926,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/information",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/layers",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loader/loader.component",{"_index":1949,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["app/components/map",{"_index":1928,"title":{},"body":{"modules/SharedModule.html":{}}}],["app/components/poi",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["app/components/poi/poi.component",{"_index":1935,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/components/progress/progress.component",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/search/search.component",{"_index":1920,"title":{},"body":{"modules/SharedFiltersModule.html":{},"components/TreksMapPage.html":{}}}],["app/components/select",{"_index":636,"title":{},"body":{"components/FilterComponent.html":{},"modules/SharedFiltersModule.html":{}}}],["app/components/trek",{"_index":1936,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["app/interfaces/interfaces",{"_index":635,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/map",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/${parentid}/${trekid",{"_index":1587,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/${trekid",{"_index":1586,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/map/:trekid",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/map/:trekid/:stageid",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/pipes/lower",{"_index":603,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["app/resolvers/more",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["app/resolvers/more.resolver",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{}}}],["app/resolvers/trek.resolver",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["app/resolvers/treks.resolver",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/services/cache/cache.service",{"_index":1442,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["app/services/filter",{"_index":831,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["app/services/geolocate/geolocate.service",{"_index":957,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["app/services/loading/loading.service",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["app/services/more",{"_index":1496,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["app/services/offline",{"_index":832,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["app/services/online",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["app/services/search",{"_index":1734,"title":{},"body":{"components/SearchComponent.html":{}}}],["app/services/settings/settings.service",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["app/shared/custom",{"_index":2128,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["app/shared/shared",{"_index":908,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["app/shared/shared.module",{"_index":2209,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["app/tabs/more",{"_index":1957,"title":{},"body":{"components/TabsPage.html":{}}}],["app/tabs/treks",{"_index":1582,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["app/tabs/treks${this.offline",{"_index":2029,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["app/tabs/treks/trek",{"_index":1583,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["app/tabs/treks/treks",{"_index":1588,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":2465,"title":{},"body":{"index.html":{}}}],["applyfilters",{"_index":786,"title":{},"body":{"components/FiltersComponent.html":{}}}],["appmodule",{"_index":160,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1510,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":172,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":2536,"title":{},"body":{"index.html":{}}}],["argument",{"_index":2495,"title":{},"body":{"index.html":{}}}],["arising",{"_index":2652,"title":{},"body":{"license.html":{}}}],["array",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(this.currentpois.features",{"_index":976,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["array.isarray(touristiccontents.features",{"_index":1898,"title":{},"body":{"injectables/SettingsService.html":{}}}],["arrival",{"_index":511,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["arrival_city",{"_index":525,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["artwork",{"_index":2552,"title":{},"body":{"index.html":{}}}],["ascent",{"_index":512,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["assets/i18n",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/map/zone/zone.geojson",{"_index":1343,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["assets/map/{fontstack}/{range}.pbf",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assume",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":612,"title":{},"body":{"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["attributioncontrol",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attributiontext",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":500,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["available",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["availablelanguage",{"_index":2519,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["availablelanguage[0",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["b",{"_index":713,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SearchTreksService.html":{}}}],["b.geometry",{"_index":715,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["b.properties.name",{"_index":723,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["background",{"_index":891,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["background'].tiles[0",{"_index":1291,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["backgroundgeolocation",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundgeolocationconfig",{"_index":1057,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationevents",{"_index":1058,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider",{"_index":1059,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["backgroundgeolocationlocationprovider.distance_filter_provider",{"_index":1068,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["badge",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["bar",{"_index":2387,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["baseurl",{"_index":1099,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["before",{"_index":1309,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["begin",{"_index":1213,"title":{},"body":{"injectables/LoadingService.html":{}}}],["begin(id",{"_index":1193,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject",{"_index":827,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["behaviorsubject([0",{"_index":1834,"title":{},"body":{"injectables/SettingsService.html":{}}}],["behaviorsubject(false",{"_index":1180,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["behaviorsubject(null",{"_index":1055,"title":{},"body":{"injectables/GeolocateService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["below",{"_index":2510,"title":{},"body":{"index.html":{}}}],["best",{"_index":2550,"title":{},"body":{"index.html":{}}}],["between",{"_index":2075,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["binary",{"_index":2595,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":516,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["bootstrap",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["border",{"_index":773,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["bottom",{"_index":1606,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["broadcast",{"_index":394,"title":{},"body":{"injectables/CacheService.html":{}}}],["broadcasts",{"_index":363,"title":{},"body":{"injectables/CacheService.html":{}}}],["browse",{"_index":2660,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["bsd",{"_index":2580,"title":{},"body":{"index.html":{},"license.html":{}}}],["build",{"_index":2496,"title":{},"body":{"index.html":{}}}],["business",{"_index":2641,"title":{},"body":{"license.html":{}}}],["button",{"_index":1423,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["buttons",{"_index":1026,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["buttontext",{"_index":461,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["c",{"_index":2582,"title":{},"body":{"index.html":{},"license.html":{}}}],["cache",{"_index":312,"title":{},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{}}}],["cacheservice",{"_index":308,"title":{"injectables/CacheService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"coverage.html":{}}}],["calc(100",{"_index":1163,"title":{},"body":{"components/LoaderComponent.html":{},"components/TrekCardComponent.html":{}}}],["can't",{"_index":1405,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cancel",{"_index":1029,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{}}}],["capitalize",{"_index":2270,"title":{},"body":{"components/TreksMapPage.html":{}}}],["card",{"_index":1642,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["card'},{'name",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["card.component",{"_index":1938,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["card.component.html",{"_index":1988,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.scss",{"_index":1987,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts",{"_index":1986,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:16",{"_index":2004,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:17",{"_index":2001,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:18",{"_index":2003,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:19",{"_index":1999,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:20",{"_index":2000,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:21",{"_index":2002,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:23",{"_index":2013,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:24",{"_index":2014,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:25",{"_index":2017,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:26",{"_index":1998,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:31",{"_index":2015,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:32",{"_index":2016,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:33",{"_index":2018,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:37",{"_index":2008,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:70",{"_index":2006,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:75",{"_index":2007,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card.component.ts:98",{"_index":2011,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["card/trek",{"_index":1937,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":2188,"title":{},"body":{"components/TrekMapPage.html":{}}}],["catcherror",{"_index":348,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["catcherror((error",{"_index":401,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["categories",{"_index":1899,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categories.foreach(categoryid",{"_index":1905,"title":{},"body":{"injectables/SettingsService.html":{}}}],["category",{"_index":566,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["category.name",{"_index":1909,"title":{},"body":{"injectables/SettingsService.html":{}}}],["categoryid",{"_index":1907,"title":{},"body":{"injectables/SettingsService.html":{}}}],["caused",{"_index":2643,"title":{},"body":{"license.html":{}}}],["cd",{"_index":2484,"title":{},"body":{"index.html":{}}}],["center",{"_index":887,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["change",{"_index":552,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["changed",{"_index":1159,"title":{},"body":{"components/LoaderComponent.html":{}}}],["changedetection",{"_index":412,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectionstrategy",{"_index":446,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectionstrategy.default",{"_index":1683,"title":{},"body":{"components/ProgressComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":413,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["changedetectorref",{"_index":1689,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["changelayervisibility",{"_index":1126,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["changenotificationsmode",{"_index":923,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes",{"_index":946,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["changes.currentpois",{"_index":972,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changes.filteredtreks",{"_index":1275,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changes.poi",{"_index":1623,"title":{},"body":{"components/PoiComponent.html":{}}}],["changescurrentpois",{"_index":971,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.currentvalue",{"_index":973,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrentpois.previousvalue",{"_index":974,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["changescurrenttreks",{"_index":1274,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.currentvalue",{"_index":1276,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["changescurrenttreks.previousvalue",{"_index":1277,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["channel",{"_index":1009,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["channel${this.currentpoistonotify[notifiedindex].id",{"_index":1010,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["check",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkauthorization",{"_index":1038,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checked",{"_index":553,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["checkedvalue.id",{"_index":738,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkedvalue.interval",{"_index":743,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["checkiftrackerisrunning",{"_index":1039,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["checkstate",{"_index":807,"title":{},"body":{"components/FiltersComponent.html":{}}}],["checktonotify",{"_index":924,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["checktonotify(fromcoordinates",{"_index":938,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["children",{"_index":526,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["circle",{"_index":1350,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["circlecolorexpression",{"_index":1365,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push('match",{"_index":1366,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(['get",{"_index":1367,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(environment.map.clusterpaint['circle",{"_index":1371,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.color",{"_index":1370,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["circlecolorexpression.push(practice.id",{"_index":1369,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["cities",{"_index":521,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["city",{"_index":1883,"title":{},"body":{"injectables/SettingsService.html":{}}}],["class",{"_index":59,"title":{"classes/UnSubscribe.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"modules/CustomPipesModule.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2322,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["clause",{"_index":2590,"title":{},"body":{"license.html":{}}}],["clickdeleteconfirm",{"_index":1992,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clickdeleteconfirm($event",{"_index":2005,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["clicklocalnotifications",{"_index":919,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["clone",{"_index":2481,"title":{},"body":{"index.html":{}}}],["clonedeep",{"_index":1569,"title":{},"body":{"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedeep(context.mapconfig",{"_index":2247,"title":{},"body":{"components/TreksMapPage.html":{}}}],["clonedeep(environment.onlinemapconfig",{"_index":1601,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["clonedeep(this.filters$.getvalue",{"_index":1860,"title":{},"body":{"injectables/SettingsService.html":{}}}],["clonedeep(trek",{"_index":1866,"title":{},"body":{"injectables/SettingsService.html":{}}}],["close",{"_index":787,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["cluster",{"_index":1340,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule",{"_index":597,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule_declarations",{"_index":598,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_custompipesmodule_exports",{"_index":599,"title":{},"body":{"modules/CustomPipesModule.html":{},"overview.html":{}}}],["cluster_filterscomponentmodule",{"_index":903,"title":{},"body":{"modules/FiltersComponentModule.html":{},"overview.html":{}}}],["cluster_filterscomponentmodule_imports",{"_index":904,"title":{},"body":{"modules/FiltersComponentModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule",{"_index":1475,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_declarations",{"_index":1476,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_moreitempagemodule_imports",{"_index":1477,"title":{},"body":{"modules/MoreItemPageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule",{"_index":1522,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_declarations",{"_index":1523,"title":{},"body":{"modules/MorePageModule.html":{},"overview.html":{}}}],["cluster_morepagemodule_imports",{"_index":1524,"title":{},"body":{"modules/MorePageModule.html":{}}}],["cluster_sharedfiltersmodule",{"_index":1911,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedfiltersmodule_declarations",{"_index":1912,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedfiltersmodule_exports",{"_index":1913,"title":{},"body":{"modules/SharedFiltersModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1922,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1923,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1924,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule",{"_index":1931,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_declarations",{"_index":1932,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_sharedtreksmodule_exports",{"_index":1933,"title":{},"body":{"modules/SharedTreksModule.html":{},"overview.html":{}}}],["cluster_shareduimodule",{"_index":1941,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_declarations",{"_index":1942,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_shareduimodule_exports",{"_index":1943,"title":{},"body":{"modules/SharedUiModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":1963,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":1964,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_imports",{"_index":1965,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule",{"_index":2121,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_declarations",{"_index":2122,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"overview.html":{}}}],["cluster_trekdetailspagemodule_imports",{"_index":2123,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["cluster_trekmappagemodule",{"_index":2205,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_declarations",{"_index":2206,"title":{},"body":{"modules/TrekMapPageModule.html":{},"overview.html":{}}}],["cluster_trekmappagemodule_imports",{"_index":2207,"title":{},"body":{"modules/TrekMapPageModule.html":{}}}],["cluster_treksmappagemodule",{"_index":2272,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_declarations",{"_index":2273,"title":{},"body":{"modules/TreksMapPageModule.html":{},"overview.html":{}}}],["cluster_treksmappagemodule_imports",{"_index":2274,"title":{},"body":{"modules/TreksMapPageModule.html":{}}}],["cluster_trekspagemodule",{"_index":2304,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_declarations",{"_index":2305,"title":{},"body":{"modules/TreksPageModule.html":{},"overview.html":{}}}],["cluster_trekspagemodule_imports",{"_index":2306,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["clusterid",{"_index":1379,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusterpaint",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clusterradius",{"_index":1341,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["clusters",{"_index":1349,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["code",{"_index":2603,"title":{},"body":{"license.html":{}}}],["collapsed",{"_index":434,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["collapsible",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["collapsiblelistcomponent",{"_index":97,"title":{"components/CollapsibleListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["color",{"_index":555,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":2538,"title":{},"body":{"index.html":{}}}],["column",{"_index":1425,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["combinelatest",{"_index":700,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TreksMapPage.html":{}}}],["combinelatest(treks",{"_index":748,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{}}}],["command",{"_index":2572,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":907,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["commonsrc",{"_index":593,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["compact",{"_index":1304,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["complete",{"_index":395,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["componentprops",{"_index":646,"title":{},"body":{"components/FilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"overview.html":{}}}],["components/treks",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["concat",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":1146,"title":{},"body":{"components/LoaderComponent.html":{}}}],["conditions",{"_index":2600,"title":{},"body":{"license.html":{}}}],["config",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.xml",{"_index":2514,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":2564,"title":{},"body":{"index.html":{}}}],["connect",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["connecterrorcomponent",{"_index":100,"title":{"components/ConnectErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":2166,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["connectionerror",{"_index":1455,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{}}}],["consequential",{"_index":2634,"title":{},"body":{"license.html":{}}}],["console.error('no",{"_index":2106,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["console.log('poi",{"_index":1013,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["const",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["constructor(alertcontroller",{"_index":1244,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["constructor(backgroundgeolocation",{"_index":1044,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["constructor(cache",{"_index":1436,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["constructor(http",{"_index":319,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["constructor(loading",{"_index":1148,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["constructor(modalcontroller",{"_index":618,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["constructor(modalctrl",{"_index":797,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["constructor(more",{"_index":1490,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["constructor(navparams",{"_index":1128,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["constructor(offlinetreks",{"_index":1613,"title":{},"body":{"components/PoiComponent.html":{},"components/ProgressComponent.html":{}}}],["constructor(onlinetreks",{"_index":2212,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/TabsPage.html":{}}}],["constructor(private",{"_index":639,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/LayersVisibilityComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{}}}],["constructor(protected",{"_index":1204,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["constructor(public",{"_index":1110,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{}}}],["constructor(route",{"_index":1459,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{}}}],["constructor(settings",{"_index":678,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["contact",{"_index":563,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["container",{"_index":882,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["contains",{"_index":545,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["containsfilter",{"_index":477,"title":{"interfaces/ContainsFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["containsfilter(filter",{"_index":680,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["containsfiltershoulduseselectabove",{"_index":609,"title":{},"body":{"components/FilterComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":462,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["context",{"_index":1975,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{}}}],["context.mapconfig",{"_index":2175,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.offline",{"_index":2169,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.pois",{"_index":2172,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.touristiccategorieswithfeatures",{"_index":2174,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trek",{"_index":2171,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool",{"_index":2177,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["context.trekstool.filteredtreks",{"_index":2258,"title":{},"body":{"components/TreksMapPage.html":{}}}],["context.trekstool.getcommonimgsrc",{"_index":2178,"title":{},"body":{"components/TrekMapPage.html":{}}}],["context.trekstool.gettrekdetailsurl((this.currenttrek",{"_index":2180,"title":{},"body":{"components/TrekMapPage.html":{}}}],["contexts",{"_index":587,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["contract",{"_index":2647,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":2615,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["coordinates",{"_index":505,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["coordinates[0",{"_index":1394,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coordinates[1",{"_index":1395,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["copyright",{"_index":2581,"title":{},"body":{"index.html":{},"license.html":{}}}],["cordova",{"_index":2405,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cordova@9.0.0",{"_index":2479,"title":{},"body":{"index.html":{}}}],["core",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["corpus",{"_index":2584,"title":{},"body":{"index.html":{},"license.html":{}}}],["count",{"_index":1354,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["coverage",{"_index":2331,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":388,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["createmap",{"_index":1238,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["createtranslateloader",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["crins",{"_index":2588,"title":{},"body":{"index.html":{}}}],["criterionvalue",{"_index":731,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["cssclass",{"_index":649,"title":{},"body":{"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{}}}],["currentdatasetting",{"_index":1852,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentdatasetting.values.map(value",{"_index":1854,"title":{},"body":{"injectables/SettingsService.html":{}}}],["currentmaxfiltervalues",{"_index":1767,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["currentmaxtreks",{"_index":1707,"title":{},"body":{"components/SearchComponent.html":{}}}],["currentorder",{"_index":2279,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["currentpois",{"_index":929,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["currentpoistonotify",{"_index":920,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["currentposition",{"_index":921,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/TreksMapPage.html":{}}}],["currentprogress",{"_index":1686,"title":{},"body":{"components/ProgressComponent.html":{}}}],["currentsearchvalue",{"_index":1708,"title":{},"body":{"components/SearchComponent.html":{}}}],["currenttrek",{"_index":2132,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrek!.properties.name",{"_index":2195,"title":{},"body":{"components/TrekMapPage.html":{}}}],["currenttrekid",{"_index":2098,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["currenttypepoi",{"_index":1626,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["currenttypepoi.pictogram",{"_index":1630,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["custom",{"_index":1939,"title":{},"body":{"modules/SharedTreksModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["customattribution",{"_index":1305,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["customevent",{"_index":766,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["customize",{"_index":2513,"title":{},"body":{"index.html":{}}}],["custompipesmodule",{"_index":596,"title":{"modules/CustomPipesModule.html":{}},"body":{"modules/CustomPipesModule.html":{},"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["damage",{"_index":2658,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2635,"title":{},"body":{"license.html":{}}}],["data",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"license.html":{}}}],["data.context",{"_index":2164,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["data.id",{"_index":969,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["data.items",{"_index":1518,"title":{},"body":{"components/MorePage.html":{}}}],["data.temporaryfilter",{"_index":652,"title":{},"body":{"components/FilterComponent.html":{}}}],["data['item",{"_index":1468,"title":{},"body":{"components/MoreItemPage.html":{}}}],["datasetting",{"_index":559,"title":{"interfaces/DataSetting.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["datasetting.find(data",{"_index":1863,"title":{},"body":{"injectables/SettingsService.html":{}}}],["datasettings",{"_index":1241,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["debug",{"_index":1073,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["deburr",{"_index":1757,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["deburr(trek.properties.name.tolowercase()).includes(searchvalue",{"_index":1763,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["declarations",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["default",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["defaultsettings",{"_index":1844,"title":{},"body":{"injectables/SettingsService.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["delay",{"_index":392,"title":{},"body":{"injectables/CacheService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TreksMapPage.html":{}}}],["delete",{"_index":359,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["deleteconfirm",{"_index":2047,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deleteconfirm.present",{"_index":2054,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["deletetrek",{"_index":1993,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["departure",{"_index":501,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["departure_city",{"_index":524,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["departurearrivaliconsize",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":162,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["des",{"_index":2587,"title":{},"body":{"index.html":{}}}],["description",{"_index":514,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["description_teaser",{"_index":509,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["desiredaccuracy",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desk",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["details",{"_index":1096,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["details.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/TrekMapPage.html":{}}}],["details.component.html",{"_index":1098,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.scss",{"_index":1097,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts",{"_index":1095,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:13",{"_index":1107,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:14",{"_index":1108,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":1103,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":1109,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":1654,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":1105,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":1660,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1663,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1662,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":1659,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":1651,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":1104,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":1655,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1656,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:29",{"_index":1661,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":1657,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:31",{"_index":1658,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":1653,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":1652,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["details.module#trekdetailspagemodule",{"_index":1978,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details.module.ts",{"_index":2125,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page",{"_index":2127,"title":{},"body":{"modules/TrekDetailsPageModule.html":{}}}],["details.page.ts",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["details/${parentid}/${trekid",{"_index":1585,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/${this.parentid",{"_index":2030,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${this.trek.properties.id",{"_index":2032,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["details/${trekid",{"_index":1584,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["details/:trekid",{"_index":1976,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/:trekid/:stageid",{"_index":1979,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["details/information",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/InformationDeskDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/poi",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"coverage.html":{}}}],["details/trek",{"_index":1977,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"coverage.html":{}}}],["dev",{"_index":1087,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["developmentenvironment.prod.ts",{"_index":2521,"title":{},"body":{"index.html":{}}}],["device",{"_index":2417,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["difficulty",{"_index":482,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["direct",{"_index":2629,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1424,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["directive",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["directives",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["disablegeolocationnotification",{"_index":925,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["disclaimed",{"_index":2625,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2607,"title":{},"body":{"license.html":{}}}],["display",{"_index":884,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distance",{"_index":702,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/SettingsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["distance(from",{"_index":1002,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["distance(point(a.geometry.coordinates",{"_index":717,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distance(point(b.geometry.coordinates",{"_index":720,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefilter",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distancefromtreka",{"_index":716,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distancefromtrekb",{"_index":719,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["distribution",{"_index":2612,"title":{},"body":{"license.html":{}}}],["docheck",{"_index":606,"title":{},"body":{"components/FilterComponent.html":{}}}],["document.createelement('div",{"_index":1327,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["documentation",{"_index":2332,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["domain.fr/mobile",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":2505,"title":{},"body":{"index.html":{}}}],["download",{"_index":2561,"title":{},"body":{"index.html":{}}}],["downloads",{"_index":2563,"title":{},"body":{"index.html":{}}}],["duration",{"_index":510,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["during",{"_index":368,"title":{},"body":{"injectables/CacheService.html":{}}}],["dynamic",{"_index":2378,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1375,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["each",{"_index":383,"title":{},"body":{"injectables/CacheService.html":{}}}],["easily",{"_index":2511,"title":{},"body":{"index.html":{}}}],["el",{"_index":1326,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["el.classname",{"_index":1328,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["element",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["element.id",{"_index":871,"title":{},"body":{"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["element.properties.id",{"_index":1745,"title":{},"body":{"components/SearchComponent.html":{}}}],["ellipsis",{"_index":2080,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["email",{"_index":536,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["emit",{"_index":390,"title":{},"body":{"injectables/CacheService.html":{}}}],["emits",{"_index":365,"title":{},"body":{"injectables/CacheService.html":{}}}],["emitted",{"_index":397,"title":{},"body":{"injectables/CacheService.html":{}}}],["empty",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":2526,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["enablegeolocationnotification",{"_index":926,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["end",{"_index":1643,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["entrycomponents",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedFiltersModule.html":{}}}],["env/environment",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["environment",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1515,"title":{},"body":{"components/MorePage.html":{},"components/TreksMapPage.html":{}}}],["environment.availablelanguage",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.indexof(defaultlanguage",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage.length",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.availablelanguage[0",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["environment.backgroundgeolocation",{"_index":1074,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["environment.containsfiltershoulduseselectabove",{"_index":633,"title":{},"body":{"components/FilterComponent.html":{}}}],["environment.map.attributiontext",{"_index":1306,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.clusterpaint",{"_index":1353,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.globalmapiconsize",{"_index":1373,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zonelayerproperties",{"_index":1346,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.map.zoneoutlinelayerproperties",{"_index":1348,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox",{"_index":1271,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.mapbox.accesstoken",{"_index":1272,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.meterstonotify",{"_index":996,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["environment.offlinemapconfig",{"_index":2215,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.offlinemapconfig.style",{"_index":1292,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["environment.onlinebaseurl",{"_index":1106,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{}}}],["environment.onlinemapconfig",{"_index":2216,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["environment.prod.ts",{"_index":2516,"title":{},"body":{"index.html":{}}}],["environment.trekzoom.zoom",{"_index":1422,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["environment.usefirebase",{"_index":1501,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["erasefilters",{"_index":788,"title":{},"body":{"components/FiltersComponent.html":{}}}],["err",{"_index":1385,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["error",{"_index":458,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["error'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["error.component",{"_index":1948,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["error.component.html",{"_index":460,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.scss",{"_index":459,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts",{"_index":457,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:10",{"_index":469,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:11",{"_index":470,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:12",{"_index":468,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:13",{"_index":467,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.component.ts:9",{"_index":471,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["error.status",{"_index":1505,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["error/connect",{"_index":456,"title":{},"body":{"components/ConnectErrorComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["es6",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["even",{"_index":2654,"title":{},"body":{"license.html":{}}}],["event",{"_index":768,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksOrderComponent.html":{},"license.html":{}}}],["event.checked",{"_index":1795,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["event.detail.checked",{"_index":769,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["event.detail.value",{"_index":1139,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["event.filter",{"_index":864,"title":{},"body":{"components/FiltersComponent.html":{}}}],["event.filter.id",{"_index":862,"title":{},"body":{"components/FiltersComponent.html":{}}}],["event.stoppropagation",{"_index":2033,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["event.value.id",{"_index":1794,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["eventemitter",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["everything",{"_index":377,"title":{},"body":{"injectables/CacheService.html":{}}}],["exemplary",{"_index":2633,"title":{},"body":{"license.html":{}}}],["expandableitems",{"_index":419,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expanded",{"_index":420,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["expandfiltervalues",{"_index":1769,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["expandfiltervalues(infinitescroll",{"_index":1775,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["expandtreks",{"_index":1711,"title":{},"body":{"components/SearchComponent.html":{}}}],["expandtreks(infinitescroll",{"_index":1716,"title":{},"body":{"components/SearchComponent.html":{}}}],["expansion",{"_index":1389,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["exports",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["express",{"_index":2616,"title":{},"body":{"license.html":{}}}],["expression",{"_index":1158,"title":{},"body":{"components/LoaderComponent.html":{}}}],["extand",{"_index":2072,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["extends",{"_index":480,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{}}}],["extensive",{"_index":2577,"title":{},"body":{"index.html":{}}}],["external_url",{"_index":558,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["extra",{"_index":2077,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["f04141",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fails",{"_index":2119,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fake",{"_index":1085,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["false",{"_index":444,"title":{},"body":{"components/CollapsibleListComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":486,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["feature.geometry.coordinates",{"_index":980,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["feature.properties",{"_index":1400,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["feature.properties.id",{"_index":968,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{}}}],["feature.properties.name",{"_index":979,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["feature.properties[filter.id",{"_index":732,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["featurecollection",{"_index":487,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["featureid",{"_index":1416,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties",{"_index":1377,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featureproperties.cluster_id",{"_index":1380,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features",{"_index":496,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["features.foreach((feature",{"_index":1407,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].geometry",{"_index":1391,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["features[0].properties",{"_index":1378,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresincluster",{"_index":1386,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio",{"_index":1403,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["featuresradio.push",{"_index":1408,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fff",{"_index":1356,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1358,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2570,"title":{},"body":{"index.html":{}}}],["files:appname",{"_index":2518,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2488,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["filter",{"_index":108,"title":{"interfaces/Filter.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filter'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filter((loadingid",{"_index":1199,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["filter((v",{"_index":1903,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filter(trek",{"_index":1762,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["filter(treks",{"_index":682,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter(value",{"_index":740,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.component",{"_index":638,"title":{},"body":{"components/FilterComponent.html":{},"modules/SharedFiltersModule.html":{}}}],["filter.component.html",{"_index":608,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.component.scss",{"_index":607,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.component.ts",{"_index":1766,"title":{},"body":{"components/SelectFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:11",{"_index":1773,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:12",{"_index":1772,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:13",{"_index":1787,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:14",{"_index":1785,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:15",{"_index":1786,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:16",{"_index":1771,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:20",{"_index":1778,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:22",{"_index":1777,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:26",{"_index":1774,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":1779,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":1776,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":1781,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.component.ts:49",{"_index":1783,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter.id",{"_index":855,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.name",{"_index":660,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filter.name.tolowercase",{"_index":662,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.type",{"_index":709,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values",{"_index":739,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filter.values.filter(value",{"_index":724,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filter.values.foreach(value",{"_index":869,"title":{},"body":{"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["filter.values.length",{"_index":1796,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filter/select",{"_index":637,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"coverage.html":{}}}],["filtercomponent",{"_index":103,"title":{"components/FilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filteredfeatures",{"_index":704,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredfeatures.filter(feature",{"_index":707,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filteredtreks",{"_index":572,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["filteredtreks.sort((a",{"_index":712,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filters",{"_index":560,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["filters'},{'name",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["filters.cancelbutton",{"_index":1797,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filters.component.html",{"_index":780,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":779,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.confirmbutton",{"_index":1798,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["filters.erase",{"_index":876,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.foreach(filter",{"_index":706,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/SettingsService.html":{}}}],["filters.module",{"_index":909,"title":{},"body":{"modules/FiltersComponentModule.html":{}}}],["filters.module.ts",{"_index":1915,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["filters.oneresult",{"_index":878,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.push(filter",{"_index":1855,"title":{},"body":{"injectables/SettingsService.html":{}}}],["filters.results",{"_index":879,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.selectplaceholder",{"_index":661,"title":{},"body":{"components/FilterComponent.html":{}}}],["filters.title",{"_index":874,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.zeroresult",{"_index":877,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filterscomponent",{"_index":105,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterscomponentmodule",{"_index":902,"title":{"modules/FiltersComponentModule.html":{}},"body":{"modules/FiltersComponentModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["filterssubscription",{"_index":781,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtertreks",{"_index":1545,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{}}}],["filtertreksservice",{"_index":666,"title":{"injectables/FilterTreksService.html":{}},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["filtertreksservice.containsfilter(filter",{"_index":710,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.filter(treks",{"_index":850,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).indexof(feature.properties[filter.id",{"_index":736,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedidforfilter(filter).length",{"_index":727,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getcheckedinterval(filter).foreach(([min",{"_index":729,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.getnumberofactivefilters(filters",{"_index":747,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.intervalfilter(filter",{"_index":711,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.isfilteractive(filter",{"_index":708,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtertreksservice.sort(filtertreksservice.filter(treks",{"_index":752,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["filtervalue",{"_index":548,"title":{"interfaces/FilterValue.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["filtervalue.checked",{"_index":656,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["filtervaluecomponent",{"_index":107,"title":{"components/FilterValueComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filtervaluesbystep",{"_index":1768,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["find",{"_index":2509,"title":{},"body":{"index.html":{}}}],["finish",{"_index":1214,"title":{},"body":{"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{}}}],["finish(id",{"_index":1197,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["firebase",{"_index":2419,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["firebaseanalytics",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["first",{"_index":2242,"title":{},"body":{"components/TreksMapPage.html":{},"index.html":{}}}],["first_picture",{"_index":499,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["fit",{"_index":2554,"title":{},"body":{"index.html":{}}}],["fitbounds",{"_index":1256,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["fitness",{"_index":2622,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1165,"title":{},"body":{"components/LoaderComponent.html":{}}}],["flex",{"_index":885,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["fly",{"_index":1255,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["flytouserlocation",{"_index":1239,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["following",{"_index":2599,"title":{},"body":{"license.html":{}}}],["font",{"_index":474,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["foreground",{"_index":961,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["forkjoin",{"_index":2092,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["form",{"_index":2608,"title":{},"body":{"license.html":{}}}],["forms",{"_index":2596,"title":{},"body":{"license.html":{}}}],["found",{"_index":2107,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["fr",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fromcoordinates",{"_index":940,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["full",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"modules/TabsPageRoutingModule.html":{},"components/TreksMapPage.html":{}}}],["function",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"classes/UnSubscribe.html":{},"coverage.html":{}}}],["functions",{"_index":2458,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2477,"title":{},"body":{"index.html":{}}}],["geographical",{"_index":2535,"title":{},"body":{"index.html":{}}}],["geojson",{"_index":490,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["geojsonproperties",{"_index":1265,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource",{"_index":1266,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterexpansionzoom",{"_index":1390,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsource).getclusterleaves",{"_index":1383,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geojsonsourceraw",{"_index":1267,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["geolocate",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["geolocate.cancel",{"_index":1017,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocate.open",{"_index":1018,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["geolocatenotificationscomponent",{"_index":110,"title":{"components/GeolocateNotificationsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geolocateservice",{"_index":932,"title":{"injectables/GeolocateService.html":{}},"body":{"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"coverage.html":{}}}],["geolocation",{"_index":1827,"title":{},"body":{"injectables/SettingsService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["geolocation/ngx",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["geolocationconfig",{"_index":1066,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["geometry",{"_index":504,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["geosjon",{"_index":2531,"title":{},"body":{"index.html":{}}}],["geotrek",{"_index":2463,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["get(['geolocate.asklocatepermission",{"_index":1016,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["get(url",{"_index":322,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcheckedidforfilter",{"_index":672,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedidforfilter(filter",{"_index":684,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval",{"_index":673,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcheckedinterval(filter",{"_index":686,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getcommonimgsrc",{"_index":585,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getfilteredtreks",{"_index":674,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilteredtreks(treks",{"_index":688,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getfilters",{"_index":1801,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getfilters(settings",{"_index":1812,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek",{"_index":1802,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gethydratedtrek(trek",{"_index":1814,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getmapconfigfortrekbyid",{"_index":1534,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getmapconfigfortrekbyid(trek",{"_index":583,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getminimaltrekbyid",{"_index":1535,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getminimaltrekbyid(trekid",{"_index":1549,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["getmoreitembyid",{"_index":1434,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitembyid(id",{"_index":1438,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getmoreitems",{"_index":1435,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["getnumberofactivefilters",{"_index":675,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getnumberofactivefilters(filters",{"_index":690,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["getpoisfortrekbyid",{"_index":1536,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(id",{"_index":575,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getpoisfortrekbyid(trekid",{"_index":1552,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gets",{"_index":362,"title":{},"body":{"injectables/CacheService.html":{}}}],["getsettings",{"_index":1803,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getting",{"_index":2461,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettouristiccategorieswithfeatures",{"_index":1804,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccategorieswithfeatures(touristiccontents",{"_index":1817,"title":{},"body":{"injectables/SettingsService.html":{}}}],["gettouristiccontentsfortrekbyid",{"_index":1537,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(id",{"_index":576,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiccontentsfortrekbyid(trekid",{"_index":1554,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettouristiceventsfortrekbyid",{"_index":1538,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(id",{"_index":577,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettouristiceventsfortrekbyid(trekid",{"_index":1556,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekbyid",{"_index":1539,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(id",{"_index":573,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekbyid(trekid",{"_index":1558,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettrekdetailsurl",{"_index":1540,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekdetailsurl(trekid",{"_index":579,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc",{"_index":1541,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekimagesrc(trek",{"_index":580,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl",{"_index":1542,"title":{},"body":{"injectables/OnlineTreksService.html":{},"interfaces/TreksService.html":{}}}],["gettrekmapurl(trekid",{"_index":582,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreks",{"_index":1543,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gettreksmapurl",{"_index":581,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["gettreksurl",{"_index":578,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["getvalueforpropertybyid",{"_index":1805,"title":{},"body":{"injectables/SettingsService.html":{}}}],["getvalueforpropertybyid(propertyname",{"_index":1819,"title":{},"body":{"injectables/SettingsService.html":{}}}],["git",{"_index":2480,"title":{},"body":{"index.html":{}}}],["git+https://github.com/steffaan/cordova",{"_index":2427,"title":{},"body":{"dependencies.html":{}}}],["git@github.com:geotrekce/geotrek",{"_index":2482,"title":{},"body":{"index.html":{}}}],["given",{"_index":1577,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["gl",{"_index":494,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":2562,"title":{},"body":{"index.html":{}}}],["globalization",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["globalmapiconsize",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyphs",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["goods",{"_index":2638,"title":{},"body":{"license.html":{}}}],["google",{"_index":2442,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["googleservice",{"_index":2567,"title":{},"body":{"index.html":{}}}],["gradle",{"_index":2410,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["graph",{"_index":2661,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":1486,"title":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":1487,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"overview.html":{}}}],["h",{"_index":2063,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["handle(req",{"_index":1208,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["handlefiltersstate",{"_index":789,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handlefiltersstate(checkstate",{"_index":805,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handler",{"_index":1032,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["handleselect",{"_index":790,"title":{},"body":{"components/FiltersComponent.html":{}}}],["handleselect(event",{"_index":808,"title":{},"body":{"components/FiltersComponent.html":{}}}],["header",{"_index":1022,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":1444,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["height",{"_index":883,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["here",{"_index":2525,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":2084,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hidealllabel",{"_index":424,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["hits",{"_index":314,"title":{},"body":{"injectables/CacheService.html":{}}}],["holder",{"_index":2627,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2614,"title":{},"body":{"license.html":{}}}],["html",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["htmlionmodalelement",{"_index":2157,"title":{},"body":{"components/TrekMapPage.html":{}}}],["http",{"_index":321,"title":{},"body":{"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/functions.html":{}}}],["http://geotrek.fr",{"_index":2467,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpclientmodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1495,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["httpevent",{"_index":1177,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httphandler",{"_index":1174,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpheaders",{"_index":1441,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httpinterceptor",{"_index":1178,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpoptions",{"_index":1443,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["httprequest",{"_index":1172,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["httpresponse",{"_index":1179,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["https://a.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://b.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://c.tile.opentopomap.org/{z}/{x}/{y}.png",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://my",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hydratedtrek",{"_index":527,"title":{"interfaces/HydratedTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["hydratedtrek.properties.arrival_city",{"_index":1879,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.cities",{"_index":1881,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure",{"_index":2059,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.departure_city",{"_index":1877,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.departure_city?.name",{"_index":2058,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.difficulty",{"_index":1868,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.difficulty?.name",{"_index":2060,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.duration",{"_index":2061,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.information_desks.foreach(information_desk",{"_index":1895,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.length",{"_index":2066,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrek.properties.networks",{"_index":1886,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.practice",{"_index":1871,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.route",{"_index":1874,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties.themes",{"_index":1890,"title":{},"body":{"injectables/SettingsService.html":{}}}],["hydratedtrek.properties?.name",{"_index":2056,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["hydratedtrekproperties",{"_index":528,"title":{"interfaces/HydratedTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["icon",{"_index":463,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":2528,"title":{},"body":{"index.html":{}}}],["id",{"_index":481,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ideally",{"_index":2542,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1183,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.length",{"_index":1187,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ids.push(id",{"_index":1195,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["ignore",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image",{"_index":1320,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":1644,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["imgpracticesrc",{"_index":1989,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["imgsrc",{"_index":1990,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["implements",{"_index":410,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["implied",{"_index":2617,"title":{},"body":{"license.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["important",{"_index":2540,"title":{},"body":{"index.html":{}}}],["imports",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["incidental",{"_index":2631,"title":{},"body":{"license.html":{}}}],["including",{"_index":2619,"title":{},"body":{"license.html":{}}}],["increment",{"_index":399,"title":{},"body":{"injectables/CacheService.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":2630,"title":{},"body":{"license.html":{}}}],["infinitescroll",{"_index":1718,"title":{},"body":{"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{}}}],["infinitescroll.target.complete",{"_index":1749,"title":{},"body":{"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{}}}],["infinity",{"_index":1384,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["info.plist",{"_index":2568,"title":{},"body":{"index.html":{}}}],["information",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["information_desk.type",{"_index":1896,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desk_types",{"_index":1897,"title":{},"body":{"injectables/SettingsService.html":{}}}],["information_desks",{"_index":522,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["informationdesk",{"_index":523,"title":{"interfaces/InformationDesk.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationdesk.municipality",{"_index":1118,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.name",{"_index":1116,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.phone",{"_index":1120,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdesk.postal_code",{"_index":1117,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationdeskdetailscomponent",{"_index":113,"title":{"components/InformationDeskDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["informationdeskpicture",{"_index":1100,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["informationiconsize",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["informationintro",{"_index":556,"title":{"interfaces/InformationIntro.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informationitem",{"_index":557,"title":{"interfaces/InformationItem.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["informations.service",{"_index":1497,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["informations.service.ts",{"_index":1432,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["informations.service.ts:14",{"_index":1437,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:18",{"_index":1440,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations.service.ts:27",{"_index":1439,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["informations/more",{"_index":1431,"title":{},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["inherited",{"_index":818,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["initializeapp",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["initialsize",{"_index":425,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["initialstate",{"_index":426,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["injectable",{"_index":307,"title":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["injectables",{"_index":309,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["inner",{"_index":772,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["input",{"_index":445,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{}}}],["inputs",{"_index":423,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{}}}],["inside",{"_index":1382,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["install",{"_index":2476,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2468,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2475,"title":{},"body":{"index.html":{}}}],["installrun",{"_index":2485,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":1211,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["intercept",{"_index":1169,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["intercept(req",{"_index":1171,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["interceptor",{"_index":1166,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1167,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["interface",{"_index":476,"title":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["interfaces",{"_index":478,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["internationalization",{"_index":2523,"title":{},"body":{"index.html":{}}}],["interruption",{"_index":2642,"title":{},"body":{"license.html":{}}}],["interval",{"_index":546,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["intervalfilter",{"_index":551,"title":{"interfaces/IntervalFilter.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["intervalfilter(filter",{"_index":692,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["ion",{"_index":664,"title":{},"body":{"components/FilterComponent.html":{},"components/TrekMapPage.html":{}}}],["ionic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["ionic/storage",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"dependencies.html":{}}}],["ionic@5.1.0",{"_index":2478,"title":{},"body":{"index.html":{}}}],["ionicmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ionicmodule.forroot",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["ionviewdidenter",{"_index":791,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["ionviewdidleave",{"_index":2222,"title":{},"body":{"components/TreksMapPage.html":{}}}],["ionviewwillenter",{"_index":1102,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["ionviewwillleave",{"_index":1687,"title":{},"body":{"components/ProgressComponent.html":{}}}],["ios",{"_index":2413,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["iosandroid",{"_index":2500,"title":{},"body":{"index.html":{}}}],["is_park_centered",{"_index":515,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isalert",{"_index":2012,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["isfilteractive",{"_index":676,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfilteractive(filter",{"_index":694,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isfirstcheck",{"_index":2280,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["isininterval",{"_index":728,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["isinview",{"_index":2218,"title":{},"body":{"components/TreksMapPage.html":{}}}],["isloading",{"_index":1189,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isloading(id",{"_index":1201,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["isoffline",{"_index":584,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["isonline",{"_index":796,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["isstage",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["item",{"_index":1452,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{}}}],["item'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["item.module#moreitempagemodule",{"_index":1984,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["item.module.ts",{"_index":1479,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page",{"_index":1481,"title":{},"body":{"modules/MoreItemPageModule.html":{}}}],["item.page.html",{"_index":1454,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.scss",{"_index":1453,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts",{"_index":1451,"title":{},"body":{"components/MoreItemPage.html":{},"coverage.html":{}}}],["item.page.ts:14",{"_index":1465,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:15",{"_index":1466,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:16",{"_index":1462,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:23",{"_index":1463,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.page.ts:38",{"_index":1464,"title":{},"body":{"components/MoreItemPage.html":{}}}],["item.resolver",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{}}}],["item.resolver.ts",{"_index":1489,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:15",{"_index":1491,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.resolver.ts:22",{"_index":1494,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item.title",{"_index":1504,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["item/more",{"_index":1450,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["items",{"_index":427,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["itemtemplate",{"_index":428,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["j",{"_index":2065,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["js",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(await",{"_index":1845,"title":{},"body":{"injectables/SettingsService.html":{}}}],["json.stringify(settings",{"_index":1841,"title":{},"body":{"injectables/SettingsService.html":{}}}],["justify",{"_index":886,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{}}}],["key",{"_index":355,"title":{},"body":{"injectables/CacheService.html":{}}}],["keyboard",{"_index":2422,"title":{},"body":{"dependencies.html":{}}}],["kilometers",{"_index":998,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["km",{"_index":2069,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["kmtonotify",{"_index":995,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["label",{"_index":1410,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["language",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":391,"title":{},"body":{"injectables/CacheService.html":{}}}],["latest",{"_index":2471,"title":{},"body":{"index.html":{}}}],["latitude",{"_index":537,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["layer",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layer.name",{"_index":1140,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layers",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["layersvisibilitycomponent",{"_index":117,"title":{"components/LayersVisibilityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layervisibilitychange",{"_index":1127,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layervisibilitychange(event",{"_index":1131,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["layout",{"_index":1357,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1298,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["legend",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"overview.html":{}}}],["length",{"_index":503,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["letter",{"_index":2201,"title":{},"body":{"components/TrekMapPage.html":{}}}],["liability",{"_index":2645,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2628,"title":{},"body":{"license.html":{}}}],["licence",{"_index":2578,"title":{},"body":{"index.html":{}}}],["license",{"_index":2589,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":2620,"title":{},"body":{"license.html":{}}}],["limits",{"_index":2534,"title":{},"body":{"index.html":{}}}],["line",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lines",{"_index":771,"title":{},"body":{"components/FilterValueComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/TreksOrderComponent.html":{}}}],["linux",{"_index":2502,"title":{},"body":{"index.html":{}}}],["list",{"_index":414,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["list'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["list.component",{"_index":1946,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["list.component.html",{"_index":417,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.scss",{"_index":416,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts",{"_index":409,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":436,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:11",{"_index":439,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:12",{"_index":431,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:13",{"_index":433,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:14",{"_index":435,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:15",{"_index":438,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:17",{"_index":442,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:18",{"_index":443,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:19",{"_index":430,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:23",{"_index":440,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list.component.ts:29",{"_index":441,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["list/collapsible",{"_index":408,"title":{},"body":{"components/CollapsibleListComponent.html":{},"modules/SharedUiModule.html":{},"coverage.html":{}}}],["literal",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/Poi.html":{},"components/SelectFilterComponent.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicEvent.html":{},"interfaces/Trek.html":{}}}],["loadchildren",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loaded",{"_index":2168,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loader",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["loader.component.html",{"_index":1143,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1142,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.dismiss",{"_index":2043,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loader.present",{"_index":2039,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadercomponent",{"_index":120,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderstatus",{"_index":1144,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["loadimages",{"_index":1314,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loadimages.subscribe",{"_index":1333,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["loading",{"_index":1145,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["loadingcontroller",{"_index":1997,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["loadingid",{"_index":1200,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids",{"_index":1182,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadingids.indexof(id",{"_index":1203,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["loadinginterceptor",{"_index":173,"title":{"interceptors/LoadingInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{},"overview.html":{}}}],["loadingservice",{"_index":1149,"title":{"injectables/LoadingService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["loadsettings",{"_index":1806,"title":{},"body":{"injectables/SettingsService.html":{}}}],["loadtreks",{"_index":1544,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["local",{"_index":2425,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["localefr",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["localnotifications",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["located",{"_index":2544,"title":{},"body":{"index.html":{}}}],["location",{"_index":550,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{}}}],["location.latitude",{"_index":1083,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["locationprovider",{"_index":1067,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["lodash",{"_index":1758,"title":{},"body":{"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{}}}],["lodash.clonedeep",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["lodash.deburr",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["longitude",{"_index":538,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["loss",{"_index":2639,"title":{},"body":{"license.html":{}}}],["lot",{"_index":2517,"title":{},"body":{"index.html":{}}}],["lowerround",{"_index":1223,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"components/TrekCardComponent.html":{}}}],["lowerroundpipe",{"_index":600,"title":{"pipes/LowerRoundPipe.html":{}},"body":{"modules/CustomPipesModule.html":{},"pipes/LowerRoundPipe.html":{},"coverage.html":{},"overview.html":{}}}],["macos",{"_index":2499,"title":{},"body":{"index.html":{}}}],["make",{"_index":403,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["makina",{"_index":2583,"title":{},"body":{"index.html":{},"license.html":{}}}],["map",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["map'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["map(([treks",{"_index":751,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map((ids",{"_index":1186,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["map(checkedvalue",{"_index":742,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(data",{"_index":2256,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map(filters",{"_index":746,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["map(touristiccontent",{"_index":1901,"title":{},"body":{"injectables/SettingsService.html":{}}}],["map.module#trekmappagemodule",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map.module#treksmappagemodule",{"_index":1981,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["map.module.ts",{"_index":2208,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page",{"_index":2210,"title":{},"body":{"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["map.page.html",{"_index":2131,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.scss",{"_index":2130,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts",{"_index":2129,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["map.page.ts:101",{"_index":2145,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:104",{"_index":2226,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:106",{"_index":2149,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:109",{"_index":2232,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:118",{"_index":2233,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:123",{"_index":2147,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:131",{"_index":2142,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:134",{"_index":2230,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:135",{"_index":2150,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:138",{"_index":2229,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:139",{"_index":2144,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:27",{"_index":2236,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:28",{"_index":2234,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:29",{"_index":2237,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:30",{"_index":2154,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:31",{"_index":2153,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:32",{"_index":2161,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:33",{"_index":2155,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:34",{"_index":2162,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:35",{"_index":2152,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:36",{"_index":2158,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:37",{"_index":2156,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:38",{"_index":2151,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:39",{"_index":2159,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:40",{"_index":2139,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:42",{"_index":2235,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:45",{"_index":2238,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:47",{"_index":2160,"title":{},"body":{"components/TrekMapPage.html":{}}}],["map.page.ts:48",{"_index":2239,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:55",{"_index":2140,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["map.page.ts:76",{"_index":2231,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:81",{"_index":2227,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map.page.ts:87",{"_index":2225,"title":{},"body":{"components/TreksMapPage.html":{}}}],["map/trek",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["map/treks",{"_index":1980,"title":{},"body":{"modules/TabsPageRoutingModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["mapbox",{"_index":493,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl",{"_index":1269,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapboxgl.accesstoken",{"_index":1273,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.attributioncontrol",{"_index":1303,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.map",{"_index":1293,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.marker",{"_index":1330,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.navigationcontrol",{"_index":1295,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxgl.scalecontrol",{"_index":1300,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["mapboxoptions",{"_index":492,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig",{"_index":591,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["mapconfig.center",{"_index":1607,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["mapgenerally",{"_index":2532,"title":{},"body":{"index.html":{}}}],["mapisloaded",{"_index":1242,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["mapisloaded(event",{"_index":2141,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mapisloaded(loaded",{"_index":2228,"title":{},"body":{"components/TreksMapPage.html":{}}}],["maptrek.disablenotification",{"_index":1036,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptrek.enablenotification",{"_index":1035,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["maptreksvizcomponent",{"_index":122,"title":{"components/MapTreksVizComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maptrekvizcomponent",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":1646,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TreksMapPage.html":{}}}],["marker",{"_index":1262,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["markerposition",{"_index":1235,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["matching",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materials",{"_index":2611,"title":{},"body":{"license.html":{}}}],["math.floor(value",{"_index":1228,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["mauron85",{"_index":2429,"title":{},"body":{"dependencies.html":{}}}],["mauron85/cordova",{"_index":2391,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":730,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["maxlocations",{"_index":1069,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["maxsize",{"_index":315,"title":{},"body":{"injectables/CacheService.html":{}}}],["maxzoom",{"_index":1337,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":898,"title":{},"body":{"components/FiltersComponent.html":{}}}],["medium",{"_index":665,"title":{},"body":{"components/FilterComponent.html":{}}}],["merchantability",{"_index":2621,"title":{},"body":{"license.html":{}}}],["mergefilterstreks",{"_index":2219,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap",{"_index":2241,"title":{},"body":{"components/TreksMapPage.html":{}}}],["mergemap((context",{"_index":2257,"title":{},"body":{"components/TreksMapPage.html":{}}}],["message",{"_index":1024,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekCardComponent.html":{}}}],["met",{"_index":2601,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["meterstonotify",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["metric",{"_index":1302,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["min",{"_index":733,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/TrekCardComponent.html":{}}}],["minimaltrek",{"_index":497,"title":{"interfaces/MinimalTrek.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltrekproperties",{"_index":498,"title":{"interfaces/MinimalTrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimaltreks",{"_index":495,"title":{"interfaces/MinimalTreks.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["minimize",{"_index":2085,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["minimum",{"_index":2486,"title":{},"body":{"index.html":{}}}],["minzoom",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":2457,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":2464,"title":{},"body":{"index.html":{}}}],["mobile.git",{"_index":2483,"title":{},"body":{"index.html":{}}}],["modal",{"_index":644,"title":{},"body":{"components/FilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modal.dismiss",{"_index":2187,"title":{},"body":{"components/TrekMapPage.html":{}}}],["modal.ondiddismiss",{"_index":651,"title":{},"body":{"components/FilterComponent.html":{},"components/TreksMapPage.html":{}}}],["modal.present",{"_index":650,"title":{},"body":{"components/FilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalcontroller",{"_index":619,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["modalctrl",{"_index":801,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["modalpoidetails",{"_index":2133,"title":{},"body":{"components/TrekMapPage.html":{}}}],["mode",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["modification",{"_index":2597,"title":{},"body":{"license.html":{}}}],["module",{"_index":159,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["modules",{"_index":161,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["more'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["more.page",{"_index":1526,"title":{},"body":{"modules/MorePageModule.html":{}}}],["more.page.html",{"_index":1509,"title":{},"body":{"components/MorePage.html":{}}}],["more.page.scss",{"_index":1508,"title":{},"body":{"components/MorePage.html":{}}}],["more/more",{"_index":1983,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["more/more.module",{"_index":1972,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["more/more.module#morepagemodule",{"_index":1982,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["moreinformationintro.title",{"_index":1520,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsintro",{"_index":1511,"title":{},"body":{"components/MorePage.html":{}}}],["moreinformationsservice",{"_index":1429,"title":{"injectables/MoreInformationsService.html":{}},"body":{"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["moreitem",{"_index":1456,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.external_url",{"_index":1473,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitem.title",{"_index":1472,"title":{},"body":{"components/MoreItemPage.html":{}}}],["moreitemid",{"_index":1457,"title":{},"body":{"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"modules/TabsPageRoutingModule.html":{}}}],["moreitempage",{"_index":128,"title":{"components/MoreItemPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["moreitempagemodule",{"_index":1474,"title":{"modules/MoreItemPageModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreitemresolver",{"_index":192,"title":{"guards/MoreItemResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["morepage",{"_index":131,"title":{"components/MorePage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["morepagemodule",{"_index":1521,"title":{"modules/MorePageModule.html":{}},"body":{"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moreresolver",{"_index":195,"title":{"guards/MoreResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"coverage.html":{}}}],["ms",{"_index":370,"title":{},"body":{"injectables/CacheService.html":{}}}],["multi",{"_index":281,"title":{},"body":{"modules/AppModule.html":{}}}],["multipoint",{"_index":488,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["municipality",{"_index":539,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["national",{"_index":2586,"title":{},"body":{"index.html":{}}}],["native",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["native/background",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{},"dependencies.html":{}}}],["native/core",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":2381,"title":{},"body":{"dependencies.html":{}}}],["native/file/ngx",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["native/firebase",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"dependencies.html":{}}}],["native/globalization",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["native/globalization/ngx",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["native/ionic",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/local",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["native/network",{"_index":2384,"title":{},"body":{"dependencies.html":{}}}],["native/network/ngx",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/TreksMapPage.html":{}}}],["native/screen",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{},"dependencies.html":{}}}],["native/social",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/splash",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/zip",{"_index":2388,"title":{},"body":{"dependencies.html":{}}}],["native/zip/ngx",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["navanimation",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["navigatetochildren",{"_index":2135,"title":{},"body":{"components/TrekMapPage.html":{}}}],["navigatetochildren(id",{"_index":2143,"title":{},"body":{"components/TrekMapPage.html":{}}}],["navigatetotrek",{"_index":1243,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigatetotrek(id",{"_index":1720,"title":{},"body":{"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["navigation",{"_index":586,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["navigator",{"_index":2298,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.geolocation.getcurrentposition(position",{"_index":2299,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["navigator.language.slice(0",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["navparams",{"_index":1101,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TreksOrderComponent.html":{}}}],["nb",{"_index":880,"title":{},"body":{"components/FiltersComponent.html":{}}}],["nbtemporaryfilterstreks",{"_index":782,"title":{},"body":{"components/FiltersComponent.html":{}}}],["need",{"_index":1308,"title":{},"body":{"components/MapTreksVizComponent.html":{},"index.html":{}}}],["negligence",{"_index":2650,"title":{},"body":{"license.html":{}}}],["network",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsService.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["networks",{"_index":520,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["new",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"coverage.html":{}}}],["next",{"_index":1173,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"guards/TrekContextResolver.html":{}}}],["ngdocheck",{"_index":611,"title":{},"body":{"components/FilterComponent.html":{}}}],["ngmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ngonchanges",{"_index":927,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngonchanges(changes",{"_index":943,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ngondestroy",{"_index":792,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngoninit",{"_index":421,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["noanimation",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["noanimation(animationc",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["node.js",{"_index":2473,"title":{},"body":{"index.html":{}}}],["none",{"_index":2252,"title":{},"body":{"components/TreksMapPage.html":{}}}],["nonetwork",{"_index":2220,"title":{},"body":{"components/TreksMapPage.html":{}}}],["notice",{"_index":2606,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2426,"title":{},"body":{"dependencies.html":{}}}],["notifications",{"_index":915,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["notifications'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["notifications.component",{"_index":1927,"title":{},"body":{"modules/SharedModule.html":{}}}],["notifications.component.html",{"_index":917,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":916,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":913,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications.component.ts:113",{"_index":942,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:117",{"_index":941,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:121",{"_index":939,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:152",{"_index":949,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:31",{"_index":952,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:32",{"_index":951,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:33",{"_index":954,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:34",{"_index":934,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:35",{"_index":935,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:36",{"_index":936,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:37",{"_index":933,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:40",{"_index":955,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:41",{"_index":953,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:42",{"_index":950,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:47",{"_index":948,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:63",{"_index":945,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:76",{"_index":947,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.component.ts:86",{"_index":937,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notifications.git",{"_index":2428,"title":{},"body":{"dependencies.html":{}}}],["notifications/geolocate",{"_index":912,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notifications/ngx",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/GeolocateNotificationsComponent.html":{}}}],["notificationsmodeisactive",{"_index":922,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notificationtext",{"_index":1052,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notificationtitle",{"_index":1064,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["notifiedindex",{"_index":1000,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["notify",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nowrap",{"_index":2083,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["npm",{"_index":2474,"title":{},"body":{"index.html":{}}}],["null",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":337,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["numberofactivefilters",{"_index":726,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksMapPage.html":{}}}],["numstage",{"_index":1995,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["object",{"_index":1404,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.cache).length",{"_index":374,"title":{},"body":{"injectables/CacheService.html":{}}}],["observable",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"interfaces/TreksService.html":{}}}],["observable.create((observer",{"_index":1315,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["observable.pipe(tap",{"_index":404,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer",{"_index":396,"title":{},"body":{"injectables/CacheService.html":{}}}],["observer.complete",{"_index":1323,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["of('connectionerror",{"_index":1506,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["of(null",{"_index":2104,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["offline",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["offline/:trekid",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offline/:trekid/:stageid",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["offlinemapconfig",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offlinetreks",{"_index":798,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["offlinetreksservice",{"_index":799,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["offset",{"_index":1363,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["onchanges",{"_index":914,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["ondestroy",{"_index":778,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["one",{"_index":2118,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["oninit",{"_index":411,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["online",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinebaseurl",{"_index":2489,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["onlinemapconfig",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onlinetreks",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["onlinetrekserror",{"_index":1533,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["onlinetreksservice",{"_index":28,"title":{"injectables/OnlineTreksService.html":{}},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{}}}],["onsameurlnavigation",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["opacity",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openselect",{"_index":613,"title":{},"body":{"components/FilterComponent.html":{}}}],["opensource",{"_index":2579,"title":{},"body":{"index.html":{}}}],["openstreetmap",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opentopomap",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrekProperties.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["optionnal",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options).pipe",{"_index":381,"title":{},"body":{"injectables/CacheService.html":{}}}],["order",{"_index":549,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["order'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["order.component",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["order.component.html",{"_index":2278,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.scss",{"_index":2277,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts",{"_index":2276,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:15",{"_index":2288,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:16",{"_index":2287,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:17",{"_index":2283,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:28",{"_index":2284,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.component.ts:38",{"_index":2286,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.name",{"_index":2303,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["order.type",{"_index":753,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/TreksOrderComponent.html":{}}}],["order.value",{"_index":754,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["order/treks",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["ordering",{"_index":1837,"title":{},"body":{"injectables/SettingsService.html":{}}}],["orders",{"_index":2281,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["orientation",{"_index":2385,"title":{},"body":{"dependencies.html":{}}}],["orientation/ngx",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["originaltrek",{"_index":589,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["others",{"_index":2560,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":2651,"title":{},"body":{"license.html":{}}}],["out",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1347,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":472,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["outputs",{"_index":465,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["overflow",{"_index":2081,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["overlap",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":2662,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":2512,"title":{},"body":{"index.html":{}}}],["package",{"_index":2372,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":1605,"title":{},"body":{"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["pages/tabs/tabs.module#tabspagemodule",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/trek",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paint",{"_index":1352,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"miscellaneous/functions.html":{}}}],["parc",{"_index":2585,"title":{},"body":{"index.html":{}}}],["parent",{"_index":2112,"title":{},"body":{"guards/TrekContextResolver.html":{},"miscellaneous/variables.html":{}}}],["parentid",{"_index":574,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parenttrek",{"_index":594,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parking",{"_index":2529,"title":{},"body":{"index.html":{}}}],["parking_location",{"_index":531,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["parkingiconsize",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":2623,"title":{},"body":{"license.html":{}}}],["path",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["pathmatch",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["permissions",{"_index":1023,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["permitted",{"_index":2598,"title":{},"body":{"license.html":{}}}],["persmissionsconfirm",{"_index":1020,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["persmissionsconfirm.present",{"_index":1034,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["personal",{"_index":2491,"title":{},"body":{"index.html":{}}}],["phone",{"_index":540,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["photo_url",{"_index":541,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picto",{"_index":2076,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["pictogram",{"_index":554,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["picture",{"_index":508,"title":{"interfaces/Picture.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["picture!.author",{"_index":1637,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture!.legend",{"_index":1636,"title":{},"body":{"components/PoiComponent.html":{}}}],["picture.url",{"_index":1580,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["pictures",{"_index":507,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pipe",{"_index":1209,"title":{"pipes/LowerRoundPipe.html":{}},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"guards/TrekContextResolver.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1220,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["pipes.module",{"_index":1940,"title":{},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{}}}],["pipes.module.ts",{"_index":602,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["pipetransform",{"_index":1227,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["placeholder",{"_index":663,"title":{},"body":{"components/FilterComponent.html":{}}}],["placement",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"components/SearchComponent.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{}}}],["platforms",{"_index":2573,"title":{},"body":{"index.html":{}}}],["play",{"_index":2408,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["plugin",{"_index":2392,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["poi",{"_index":136,"title":{"interfaces/Poi.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["poi'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["poi.component.html",{"_index":1610,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.component.scss",{"_index":1609,"title":{},"body":{"components/PoiComponent.html":{}}}],["poi.properties.email",{"_index":1640,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.name",{"_index":1638,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0].author",{"_index":1679,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.pictures[0]?.legend",{"_index":1678,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poi.properties.website",{"_index":1641,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["poi_types",{"_index":1675,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["poicollapseinitialsize",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poicomponent",{"_index":133,"title":{"components/PoiComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poidetailscomponent",{"_index":135,"title":{"components/PoiDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poiiconsize",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["poiimg",{"_index":1649,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["point",{"_index":489,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{}}}],["point(feature.coordinates",{"_index":1003,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(fromcoordinates",{"_index":999,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["point(userlocation",{"_index":718,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["point).coordinates",{"_index":1392,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count",{"_index":1351,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["point_count_abbreviated",{"_index":1359,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointer",{"_index":1398,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pointreferencelayersproperties",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["points",{"_index":1282,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["points_reference",{"_index":534,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["pois",{"_index":561,"title":{"interfaces/Pois.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["popover",{"_index":2182,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popover.dismiss",{"_index":2185,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popovercontroller",{"_index":2138,"title":{},"body":{"components/TrekMapPage.html":{}}}],["popoverctrl",{"_index":2137,"title":{},"body":{"components/TrekMapPage.html":{}}}],["position",{"_index":1086,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["position.coords.latitude",{"_index":2301,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["position.coords.longitude",{"_index":2300,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["possibility",{"_index":2656,"title":{},"body":{"license.html":{}}}],["postal_code",{"_index":542,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practical_info",{"_index":562,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practice",{"_index":502,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["practices",{"_index":1236,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.foreach((practice",{"_index":1318,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["practices.values.length",{"_index":1322,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["pratiques",{"_index":1639,"title":{},"body":{"components/PoiComponent.html":{}}}],["presentconfirmfeatures",{"_index":1240,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentconfirmfeatures(features",{"_index":1259,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["presentdeleteconfirm",{"_index":1994,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentdeleteconfirm(isalert",{"_index":2009,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["presentfilters",{"_index":2223,"title":{},"body":{"components/TreksMapPage.html":{}}}],["presentinformationdeskdetails",{"_index":2136,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentinformationdeskdetails(informationdesk",{"_index":2146,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentpersmissionsconfirm",{"_index":928,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["presentpoidetails",{"_index":931,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["presentpoidetails(poi",{"_index":2148,"title":{},"body":{"components/TrekMapPage.html":{}}}],["presentsearch",{"_index":2224,"title":{},"body":{"components/TreksMapPage.html":{}}}],["prevent",{"_index":1157,"title":{},"body":{"components/LoaderComponent.html":{}}}],["previous",{"_index":2114,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["previously",{"_index":2574,"title":{},"body":{"index.html":{}}}],["primary",{"_index":2541,"title":{},"body":{"index.html":{}}}],["primarycolor",{"_index":2369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["priority",{"_index":1011,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["private",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["proceeding",{"_index":2469,"title":{},"body":{"index.html":{}}}],["procurement",{"_index":2636,"title":{},"body":{"license.html":{}}}],["prod",{"_index":2506,"title":{},"body":{"index.html":{}}}],["production",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":532,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["profits",{"_index":2640,"title":{},"body":{"license.html":{}}}],["progress",{"_index":896,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["progress'},{'name",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["progress.component.html",{"_index":1685,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progress.component.scss",{"_index":1684,"title":{},"body":{"components/ProgressComponent.html":{}}}],["progressbarwidth",{"_index":1147,"title":{},"body":{"components/LoaderComponent.html":{}}}],["progresscomponent",{"_index":137,"title":{"components/ProgressComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/FilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["promise.resolve(new",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["properties",{"_index":311,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{}}}],["property",{"_index":530,"title":{"interfaces/Property.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["property.values.find(value",{"_index":1865,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyname",{"_index":1821,"title":{},"body":{"injectables/SettingsService.html":{}}}],["propertyvalue",{"_index":1864,"title":{},"body":{"injectables/SettingsService.html":{}}}],["protected",{"_index":784,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["provide",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":2296,"title":{},"body":{"components/TreksOrderComponent.html":{},"index.html":{},"license.html":{}}}],["providedin",{"_index":354,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["providers",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"components/SearchComponent.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["public",{"_index":313,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["publishreplay",{"_index":349,"title":{},"body":{"injectables/CacheService.html":{}}}],["publishreplay(1",{"_index":393,"title":{},"body":{"injectables/CacheService.html":{}}}],["pulse",{"_index":1329,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["purpose",{"_index":2624,"title":{},"body":{"license.html":{}}}],["radio",{"_index":1409,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["radius",{"_index":1372,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["rando",{"_index":2466,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["raster",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirectto",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["redistribution",{"_index":2594,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":2602,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1688,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["refcount",{"_index":350,"title":{},"body":{"injectables/CacheService.html":{}}}],["refresh",{"_index":1458,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["refreshdelay",{"_index":316,"title":{},"body":{"injectables/CacheService.html":{}}}],["registerlocaledata",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localefr",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["regular",{"_index":1361,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["release",{"_index":2411,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["releaseandroid",{"_index":2507,"title":{},"body":{"index.html":{}}}],["releasecustomization",{"_index":2508,"title":{},"body":{"index.html":{}}}],["reload",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remove",{"_index":2571,"title":{},"body":{"index.html":{}}}],["removetrek(this.isstage",{"_index":2040,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["replaysubject",{"_index":364,"title":{},"body":{"injectables/CacheService.html":{}}}],["represents",{"_index":2533,"title":{},"body":{"index.html":{}}}],["reproduce",{"_index":2609,"title":{},"body":{"license.html":{}}}],["req",{"_index":1176,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["req.method",{"_index":1205,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["req.urlwithparams",{"_index":1206,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["request",{"_index":367,"title":{},"body":{"injectables/CacheService.html":{}}}],["requests",{"_index":2117,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["require('@turf/distance').default",{"_index":703,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["require('lodash.clonedeep",{"_index":1570,"title":{},"body":{"injectables/OnlineTreksService.html":{},"miscellaneous/variables.html":{}}}],["require('mapbox",{"_index":1270,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["requirements",{"_index":2487,"title":{},"body":{"index.html":{}}}],["res://ic_stat_panorama",{"_index":964,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["res://icon",{"_index":962,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["reserved",{"_index":2593,"title":{},"body":{"license.html":{}}}],["reset",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"overview.html":{}}}],["resetfilters",{"_index":1807,"title":{},"body":{"injectables/SettingsService.html":{}}}],["resize",{"_index":1310,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["resolve",{"_index":1484,"title":{},"body":{"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{}}}],["resolve(route",{"_index":1492,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["resources",{"_index":2559,"title":{},"body":{"index.html":{}}}],["resources/icon.png",{"_index":2545,"title":{},"body":{"index.html":{}}}],["resources/splash.png",{"_index":2549,"title":{},"body":{"index.html":{}}}],["resourcesother",{"_index":2558,"title":{},"body":{"index.html":{}}}],["response",{"_index":366,"title":{},"body":{"injectables/CacheService.html":{}}}],["ressources",{"_index":2524,"title":{},"body":{"index.html":{}}}],["result",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":2604,"title":{},"body":{"license.html":{}}}],["retry",{"_index":466,"title":{},"body":{"components/ConnectErrorComponent.html":{}}}],["return",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"injectables/CacheService.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{}}}],["returns",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["returs",{"_index":1578,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["revoke",{"_index":317,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoked",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking",{"_index":318,"title":{},"body":{"injectables/CacheService.html":{}}}],["revoking(observable",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{}}}],["rgba(189",{"_index":892,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/SearchComponent.html":{}}}],["right",{"_index":1427,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["rights",{"_index":2592,"title":{},"body":{"license.html":{}}}],["rm",{"_index":2575,"title":{},"body":{"index.html":{}}}],["roboto",{"_index":1360,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":1028,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/GeolocateService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"injectables/SettingsService.html":{}}}],["root'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["roughly",{"_index":2553,"title":{},"body":{"index.html":{}}}],["round.pipe",{"_index":604,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["round.pipe.ts",{"_index":1222,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"coverage.html":{}}}],["round.pipe.ts:5",{"_index":1226,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["route",{"_index":513,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["route.data['isstage",{"_index":2094,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["route.data['offline",{"_index":2093,"title":{},"body":{"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["route.parammap.get('moreitemid",{"_index":1498,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["route.parammap.get('stageid",{"_index":2097,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["route.parammap.get('trekid",{"_index":2095,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["router",{"_index":1461,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TabsPage.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["routereusestrategy",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["routerlink",{"_index":1991,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["routermodule",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["routermodule.forchild",{"_index":2310,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":1485,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":285,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":2494,"title":{},"body":{"index.html":{}}}],["runguardsandresolvers",{"_index":1482,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{}}}],["rxjs",{"_index":347,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"guards/MoreItemResolver.html":{},"injectables/OnlineTreksService.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"injectables/SettingsService.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":491,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["rxjs/internal/observable/of",{"_index":1529,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/observable/throwerror",{"_index":1530,"title":{},"body":{"guards/MoreResolver.html":{}}}],["rxjs/internal/subscription",{"_index":2240,"title":{},"body":{"components/TreksMapPage.html":{},"classes/UnSubscribe.html":{}}}],["rxjs/operators",{"_index":353,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TreksMapPage.html":{}}}],["savefiltersstate",{"_index":1808,"title":{},"body":{"injectables/SettingsService.html":{}}}],["savefiltersstate(filters",{"_index":1824,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate",{"_index":1809,"title":{},"body":{"injectables/SettingsService.html":{}}}],["saveorderstate(order",{"_index":1826,"title":{},"body":{"injectables/SettingsService.html":{}}}],["screen",{"_index":899,"title":{},"body":{"components/FiltersComponent.html":{},"dependencies.html":{}}}],["screen's",{"_index":2551,"title":{},"body":{"index.html":{}}}],["screen/ngx",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["screenorientation",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"components/MapTreksVizComponent.html":{}}}],["screens",{"_index":2547,"title":{},"body":{"index.html":{}}}],["search",{"_index":1704,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["search'},{'name",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["search(searchvalue",{"_index":1723,"title":{},"body":{"components/SearchComponent.html":{}}}],["search(treks",{"_index":1755,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["search.component.html",{"_index":1706,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1705,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.noresult",{"_index":1753,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.title",{"_index":1750,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchcomponent",{"_index":139,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchtreks",{"_index":1713,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchtreksservice",{"_index":1703,"title":{"injectables/SearchTreksService.html":{}},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["searchvalue",{"_index":1725,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{}}}],["searchvalue.tolowercase",{"_index":1761,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["secondary",{"_index":1030,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["select",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["selectchange",{"_index":616,"title":{},"body":{"components/FilterComponent.html":{}}}],["selecteditems",{"_index":610,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["selecteditems.join",{"_index":659,"title":{},"body":{"components/FilterComponent.html":{}}}],["selecteditems.push(filtervalue.name",{"_index":657,"title":{},"body":{"components/FilterComponent.html":{}}}],["selectfiltercomponent",{"_index":141,"title":{"components/SelectFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedFiltersModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["sending",{"_index":372,"title":{},"body":{"injectables/CacheService.html":{}}}],["sent",{"_index":386,"title":{},"body":{"injectables/CacheService.html":{}}}],["serverun",{"_index":2493,"title":{},"body":{"index.html":{}}}],["service",{"_index":1184,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.getvalue",{"_index":1190,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["service.status.next(isloading",{"_index":1191,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["services",{"_index":2409,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["services.json",{"_index":2566,"title":{},"body":{"index.html":{}}}],["set",{"_index":382,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["setlnglat(coordinates",{"_index":1331,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["setofflinesettings",{"_index":1810,"title":{},"body":{"injectables/SettingsService.html":{}}}],["setting.id",{"_index":1674,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings",{"_index":29,"title":{"interfaces/Settings.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FiltersComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["settings.data",{"_index":1850,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.data.find((data",{"_index":1853,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters",{"_index":1849,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.filters$.pipe",{"_index":745,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["settings.filters.foreach(filter",{"_index":1851,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settings.find(setting",{"_index":1673,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["settings.json",{"_index":1857,"title":{},"body":{"injectables/SettingsService.html":{}}}],["settingsservice",{"_index":30,"title":{"injectables/SettingsService.html":{}},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"components/PoiDetailsComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["settingssub",{"_index":1650,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["setup",{"_index":2498,"title":{},"body":{"index.html":{}}}],["shall",{"_index":2626,"title":{},"body":{"license.html":{}}}],["sharedfiltersmodule",{"_index":905,"title":{"modules/SharedFiltersModule.html":{}},"body":{"modules/FiltersComponentModule.html":{},"modules/SharedFiltersModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule",{"_index":1921,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedtreksmodule",{"_index":1930,"title":{"modules/SharedTreksModule.html":{}},"body":{"modules/SharedTreksModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shareduimodule",{"_index":1478,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["sharing",{"_index":2386,"title":{},"body":{"dependencies.html":{}}}],["sharing/ngx",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["showalldata",{"_index":1996,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["showalllabel",{"_index":429,"title":{},"body":{"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["showappsettings",{"_index":1040,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["showcompass",{"_index":1296,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["showlocationsettings",{"_index":1041,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["simplechange",{"_index":956,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["simplechanges",{"_index":944,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{}}}],["size",{"_index":473,"title":{},"body":{"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["slug",{"_index":533,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["smallicon",{"_index":963,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["socialsharing",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["software",{"_index":2613,"title":{},"body":{"license.html":{}}}],["sort",{"_index":677,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(filteredtreks",{"_index":696,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["sort(function(a",{"_index":1764,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["sound",{"_index":960,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"modules/CustomPipesModule.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"modules/MorePageModule.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sources",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":2074,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["spacing",{"_index":2202,"title":{},"body":{"components/TrekMapPage.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":2632,"title":{},"body":{"license.html":{}}}],["splash",{"_index":2546,"title":{},"body":{"index.html":{}}}],["splashscreen",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["sqlite",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["square",{"_index":2556,"title":{},"body":{"index.html":{}}}],["src",{"_index":1576,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["src/.../app.module.ts",{"_index":2459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../geolocate",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interfaces.ts",{"_index":2667,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../map",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../offline",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../online",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unsubscribe.ts",{"_index":2460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../variables.ts",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts",{"_index":2323,"title":{},"body":{"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/abstract/unsubscribe.ts:11",{"_index":2326,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:17",{"_index":2325,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/abstract/unsubscribe.ts:5",{"_index":2324,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["src/app/components/collapsible",{"_index":407,"title":{},"body":{"components/CollapsibleListComponent.html":{},"coverage.html":{}}}],["src/app/components/connect",{"_index":455,"title":{},"body":{"components/ConnectErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/filter",{"_index":755,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts",{"_index":605,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/components/filter/filter.component.ts:13",{"_index":622,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:14",{"_index":621,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:15",{"_index":624,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:16",{"_index":623,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:17",{"_index":634,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:18",{"_index":620,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:22",{"_index":626,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:26",{"_index":625,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:36",{"_index":632,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:40",{"_index":627,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filter/filter.component.ts:57",{"_index":629,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/components/filters/filters.component.ts",{"_index":776,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["src/app/components/filters/filters.component.ts:100",{"_index":817,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:106",{"_index":811,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:111",{"_index":814,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:18",{"_index":828,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:19",{"_index":825,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:20",{"_index":821,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:21",{"_index":822,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:22",{"_index":824,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:23",{"_index":800,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:27",{"_index":826,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:35",{"_index":812,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:39",{"_index":810,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:61",{"_index":806,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:69",{"_index":809,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:78",{"_index":802,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:84",{"_index":804,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:92",{"_index":803,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.component.ts:96",{"_index":816,"title":{},"body":{"components/FiltersComponent.html":{}}}],["src/app/components/filters/filters.module.ts",{"_index":906,"title":{},"body":{"modules/FiltersComponentModule.html":{}}}],["src/app/components/geolocate",{"_index":911,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/information",{"_index":1094,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/layers",{"_index":1121,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":1141,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:12",{"_index":1152,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":1151,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:14",{"_index":1154,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":1150,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:17",{"_index":1155,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:22",{"_index":1153,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/map",{"_index":1229,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/poi",{"_index":1648,"title":{},"body":{"components/PoiDetailsComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts",{"_index":1608,"title":{},"body":{"components/PoiComponent.html":{},"coverage.html":{}}}],["src/app/components/poi/poi.component.ts:14",{"_index":1617,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:15",{"_index":1616,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:16",{"_index":1615,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:17",{"_index":1618,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:19",{"_index":1620,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:20",{"_index":1622,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:21",{"_index":1614,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:23",{"_index":1621,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/poi/poi.component.ts:25",{"_index":1619,"title":{},"body":{"components/PoiComponent.html":{}}}],["src/app/components/progress/progress.component.ts",{"_index":1682,"title":{},"body":{"components/ProgressComponent.html":{},"coverage.html":{}}}],["src/app/components/progress/progress.component.ts:12",{"_index":1693,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:13",{"_index":1690,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:15",{"_index":1694,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:17",{"_index":1691,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/progress/progress.component.ts:24",{"_index":1692,"title":{},"body":{"components/ProgressComponent.html":{}}}],["src/app/components/search/search.component.ts",{"_index":1702,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/components/search/search.component.ts:19",{"_index":1730,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:20",{"_index":1729,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:21",{"_index":1733,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:22",{"_index":1731,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:23",{"_index":1732,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:24",{"_index":1714,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:38",{"_index":1722,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:42",{"_index":1719,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:60",{"_index":1715,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:64",{"_index":1724,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:73",{"_index":1721,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:77",{"_index":1727,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/search/search.component.ts:81",{"_index":1717,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/components/select",{"_index":1765,"title":{},"body":{"components/SelectFilterComponent.html":{},"coverage.html":{}}}],["src/app/components/trek",{"_index":1985,"title":{},"body":{"components/TrekCardComponent.html":{},"coverage.html":{}}}],["src/app/components/treks",{"_index":2275,"title":{},"body":{"components/TreksOrderComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/interfaces.ts",{"_index":479,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/interfaces/interfaces.ts:256",{"_index":2316,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:257",{"_index":2313,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:258",{"_index":2314,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:259",{"_index":2315,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:260",{"_index":2321,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:261",{"_index":2317,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:262",{"_index":2318,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:263",{"_index":2320,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:264",{"_index":2319,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:265",{"_index":2312,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/interfaces/interfaces.ts:266",{"_index":2311,"title":{},"body":{"interfaces/TreksService.html":{}}}],["src/app/pages/more/more",{"_index":1449,"title":{},"body":{"components/MoreItemPage.html":{},"modules/MoreItemPageModule.html":{},"coverage.html":{}}}],["src/app/pages/more/more.module.ts",{"_index":1525,"title":{},"body":{"modules/MorePageModule.html":{}}}],["src/app/pages/more/more.page.ts",{"_index":1507,"title":{},"body":{"components/MorePage.html":{},"coverage.html":{}}}],["src/app/pages/more/more.page.ts:14",{"_index":1517,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:15",{"_index":1516,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:16",{"_index":1512,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:22",{"_index":1513,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/more/more.page.ts:37",{"_index":1514,"title":{},"body":{"components/MorePage.html":{}}}],["src/app/pages/tabs/tabs.module.ts",{"_index":1968,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/pages/tabs/tabs.page.ts",{"_index":1950,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/pages/tabs/tabs.page.ts:10",{"_index":1954,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/pages/tabs/tabs.routing.module.ts",{"_index":1973,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["src/app/pages/trek",{"_index":2124,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks",{"_index":2217,"title":{},"body":{"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["src/app/pages/treks/treks.module.ts",{"_index":2307,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["src/app/pages/treks/treks.page.ts",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["src/app/pipes/lower",{"_index":1221,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"coverage.html":{}}}],["src/app/resolvers/more",{"_index":1488,"title":{},"body":{"guards/MoreItemResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts",{"_index":1527,"title":{},"body":{"guards/MoreResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/more.resolver.ts:15",{"_index":1528,"title":{},"body":{"guards/MoreResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts",{"_index":2089,"title":{},"body":{"guards/TrekContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/trek.resolver.ts:26",{"_index":2090,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/trek.resolver.ts:37",{"_index":2091,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts",{"_index":2211,"title":{},"body":{"guards/TreksContextResolver.html":{},"coverage.html":{}}}],["src/app/resolvers/treks.resolver.ts:13",{"_index":2213,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/resolvers/treks.resolver.ts:21",{"_index":2214,"title":{},"body":{"guards/TreksContextResolver.html":{}}}],["src/app/services/cache/cache.service.ts",{"_index":310,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/app/services/cache/cache.service.ts:12",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:13",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:14",{"_index":339,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:15",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:16",{"_index":320,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:38",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/cache/cache.service.ts:72",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/app/services/filter",{"_index":667,"title":{},"body":{"injectables/FilterTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/geolocate/geolocate.service.ts",{"_index":1037,"title":{},"body":{"injectables/GeolocateService.html":{},"coverage.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:18",{"_index":1045,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:21",{"_index":1054,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:22",{"_index":1056,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:26",{"_index":1046,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:31",{"_index":1047,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:36",{"_index":1051,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:68",{"_index":1053,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:76",{"_index":1048,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/geolocate/geolocate.service.ts:80",{"_index":1049,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["src/app/services/loading/loading.service.ts",{"_index":1168,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"coverage.html":{}}}],["src/app/services/loading/loading.service.ts:12",{"_index":1219,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:14",{"_index":1215,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:28",{"_index":1216,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:34",{"_index":1217,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:44",{"_index":1218,"title":{},"body":{"injectables/LoadingService.html":{}}}],["src/app/services/loading/loading.service.ts:53",{"_index":1170,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/loading/loading.service.ts:57",{"_index":1175,"title":{},"body":{"interceptors/LoadingInterceptor.html":{}}}],["src/app/services/more",{"_index":1430,"title":{},"body":{"injectables/MoreInformationsService.html":{},"coverage.html":{}}}],["src/app/services/offline",{"_index":2364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/online",{"_index":1532,"title":{},"body":{"injectables/OnlineTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/search",{"_index":1754,"title":{},"body":{"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts",{"_index":1799,"title":{},"body":{"injectables/SettingsService.html":{},"coverage.html":{}}}],["src/app/services/settings/settings.service.ts:107",{"_index":1820,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:128",{"_index":1815,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:190",{"_index":1818,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:28",{"_index":1830,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:30",{"_index":1831,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:31",{"_index":1833,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:36",{"_index":1835,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:37",{"_index":1811,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:39",{"_index":1832,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:41",{"_index":1822,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:51",{"_index":1829,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:59",{"_index":1813,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:78",{"_index":1816,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:87",{"_index":1825,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:91",{"_index":1828,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings/settings.service.ts:95",{"_index":1823,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/shared/custom",{"_index":601,"title":{},"body":{"modules/CustomPipesModule.html":{}}}],["src/app/shared/shared",{"_index":1914,"title":{},"body":{"modules/SharedFiltersModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1925,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/assets/i18n",{"_index":2522,"title":{},"body":{"index.html":{}}}],["src/assets/map/icons",{"_index":2527,"title":{},"body":{"index.html":{}}}],["src/assets/map/zone/zone.geojson",{"_index":2530,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environments.prod.ts",{"_index":2504,"title":{},"body":{"index.html":{}}}],["src/environments/environments.ts",{"_index":2490,"title":{},"body":{"index.html":{}}}],["src/environments/variables.ts",{"_index":2368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/theme/variables.scss",{"_index":2537,"title":{},"body":{"index.html":{}}}],["stage",{"_index":2113,"title":{},"body":{"guards/TrekContextResolver.html":{},"miscellaneous/variables.html":{}}}],["stageid",{"_index":2096,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["stagepaint",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":2078,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["started",{"_index":2462,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["startersrc/environments/environment.ts",{"_index":2515,"title":{},"body":{"index.html":{}}}],["startforeground",{"_index":1071,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["startlocation",{"_index":1077,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.latitude",{"_index":1080,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["startlocation.longitude",{"_index":2295,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["starttracking",{"_index":1042,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["starttracking(notificationtext",{"_index":1050,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["state",{"_index":1181,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["statements",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":671,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["stationaryradius",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["status",{"_index":1060,"title":{},"body":{"injectables/GeolocateService.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/TreksMapPage.html":{}}}],["status.authorization",{"_index":1062,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["status.isrunning",{"_index":1063,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["statusbar",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["stoponterminate",{"_index":1072,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["stoptracking",{"_index":1043,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["storage",{"_index":1800,"title":{},"body":{"injectables/SettingsService.html":{},"dependencies.html":{}}}],["store",{"_index":2565,"title":{},"body":{"index.html":{}}}],["stores",{"_index":389,"title":{},"body":{"injectables/CacheService.html":{}}}],["street",{"_index":543,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["strict",{"_index":2648,"title":{},"body":{"license.html":{}}}],["string",{"_index":323,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":406,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["styleurls",{"_index":415,"title":{},"body":{"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["subscribe",{"_index":2042,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["subscribe(([filteredtreks",{"_index":2260,"title":{},"body":{"components/TreksMapPage.html":{}}}],["subscribe((isloading",{"_index":1188,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["subscribe(async",{"_index":1019,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["subscribed",{"_index":400,"title":{},"body":{"injectables/CacheService.html":{}}}],["subscription",{"_index":823,"title":{},"body":{"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["subscription.unsubscribe",{"_index":2330,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["subscriptions",{"_index":785,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["substitute",{"_index":2637,"title":{},"body":{"license.html":{}}}],["such",{"_index":2657,"title":{},"body":{"license.html":{}}}],["super",{"_index":834,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["super.ngondestroy",{"_index":873,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["super.ngoninit",{"_index":835,"title":{},"body":{"components/FiltersComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["support",{"_index":2440,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":2470,"title":{},"body":{"index.html":{}}}],["svg",{"_index":2659,"title":{},"body":{"modules.html":{}}}],["symbol",{"_index":1355,"title":{},"body":{"components/MapTreksVizComponent.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{}}}],["tabbar.more",{"_index":1961,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.offline",{"_index":1960,"title":{},"body":{"components/TabsPage.html":{}}}],["tabbar.treks",{"_index":1959,"title":{},"body":{"components/TabsPage.html":{}}}],["table",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1951,"title":{},"body":{"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs'},{'name",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["tabs.page",{"_index":1969,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":1953,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":1952,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.routing.module",{"_index":1970,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabspage",{"_index":143,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":1962,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tabspageroutingmodule",{"_index":1966,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":351,"title":{},"body":{"injectables/CacheService.html":{}}}],["take(1",{"_index":398,"title":{},"body":{"injectables/CacheService.html":{}}}],["tap",{"_index":352,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{}}}],["tap((event",{"_index":1210,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["tap(item",{"_index":1500,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["tempfilter.id",{"_index":854,"title":{},"body":{"components/FiltersComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["templateref",{"_index":437,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["temporaryfilter",{"_index":630,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{}}}],["temporaryfilter.values",{"_index":655,"title":{},"body":{"components/FilterComponent.html":{}}}],["temporaryfilter.values.find(tempvalue",{"_index":856,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilterindex",{"_index":860,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters",{"_index":783,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters).length",{"_index":851,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.find(tempfilter",{"_index":853,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.findindex(tempfilter",{"_index":861,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters.foreach(filter",{"_index":868,"title":{},"body":{"components/FiltersComponent.html":{}}}],["temporaryfilters[temporaryfilterindex",{"_index":863,"title":{},"body":{"components/FiltersComponent.html":{}}}],["tempvalue.id",{"_index":857,"title":{},"body":{"components/FiltersComponent.html":{}}}],["text",{"_index":1007,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"miscellaneous/variables.html":{}}}],["theme",{"_index":1892,"title":{},"body":{"injectables/SettingsService.html":{}}}],["themes",{"_index":483,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["theory",{"_index":2644,"title":{},"body":{"license.html":{}}}],["this.activefiltersnumber",{"_index":744,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.addsourceslayersevents",{"_index":1334,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.alertcontroller.create",{"_index":1021,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.alwaysdisplayeditems",{"_index":449,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.apiurl}/${parentid}/touristic_contents/${trekid}.geojson",{"_index":1595,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.apiurl}/${parentid}/touristic_events/${trekid}.geojson",{"_index":1597,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.backgroundgeolocation.checkstatus",{"_index":1061,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.configure(geolocationconfig",{"_index":1075,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.getcurrentlocation",{"_index":1078,"title":{},"body":{"injectables/GeolocateService.html":{},"components/TreksOrderComponent.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.location).subscribe(location",{"_index":1081,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.on(backgroundgeolocationevents.start).subscribe(async",{"_index":1076,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showappsettings",{"_index":1092,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.showlocationsettings",{"_index":1093,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.start",{"_index":1084,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.backgroundgeolocation.stop",{"_index":1090,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.baseurl}${this.informationdesk.picture",{"_index":1115,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.cache",{"_index":357,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache.get",{"_index":1594,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${parentid}/pois/${trekid}.geojson",{"_index":1592,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${parentid}/treks/${trekid}.geojson",{"_index":1590,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/pois.geojson",{"_index":1593,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_contents.geojson",{"_index":1596,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/touristic_events.geojson",{"_index":1598,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/${trekid}/trek.geojson",{"_index":1591,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages.json",{"_index":1447,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.get(`${this.apiurl}/flatpages/${id}.json",{"_index":1448,"title":{},"body":{"injectables/MoreInformationsService.html":{}}}],["this.cache.hasownproperty(url",{"_index":373,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[revoked",{"_index":360,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cache[url",{"_index":379,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.changelayervisibility",{"_index":1134,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.changelayervisibility(event.detail.checked",{"_index":1138,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.checktonotify(coordinates",{"_index":993,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications",{"_index":965,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.clicklocalnotifications$.unsubscribe",{"_index":981,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.close",{"_index":847,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["this.commonsrc",{"_index":648,"title":{},"body":{"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.connectionerror",{"_index":1469,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.createmap",{"_index":1278,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.currentmaxfiltervalues",{"_index":1790,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.currentmaxtreks",{"_index":1746,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currentorder",{"_index":2292,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.currentpois",{"_index":975,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/TrekMapPage.html":{}}}],["this.currentpois.features.find(feature",{"_index":967,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpois.features.map(feature",{"_index":978,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify",{"_index":977,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.findindex",{"_index":1001,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify.splice(notifiedindex",{"_index":1012,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex",{"_index":1014,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].id",{"_index":1005,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentpoistonotify[notifiedindex].name",{"_index":1008,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition",{"_index":982,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentposition$.next([0",{"_index":1091,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([0.705824",{"_index":1088,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([location.longitude",{"_index":1082,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.next([startlocation.longitude",{"_index":1079,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.currentposition$.unsubscribe",{"_index":994,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.currentprogress",{"_index":1695,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentprogress$.unsubscribe",{"_index":1699,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.currentsearchvalue",{"_index":1743,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.currenttrek",{"_index":2170,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.currenttrek.properties.id",{"_index":2194,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.data$.getvalue",{"_index":1862,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(defaultsettings.data",{"_index":1848,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.data$.next(settings.data",{"_index":1843,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.datasettings.find(data",{"_index":1316,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.deletetrek",{"_index":2053,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.disablegeolocationnotification",{"_index":983,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.enablegeolocationnotification",{"_index":990,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.expandableitems",{"_index":452,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.expanded",{"_index":447,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.filter",{"_index":647,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["this.filter.values.find(value",{"_index":641,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.filter.values.length",{"_index":1791,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.filteredtreks",{"_index":1283,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/SearchComponent.html":{},"components/TreksMapPage.html":{}}}],["this.filteredtreks.length",{"_index":1747,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.filters",{"_index":843,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filters$.next(filters",{"_index":1858,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(defaultsettings",{"_index":1847,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filters$.next(this.getfilters(settings",{"_index":1842,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.filterssubscription",{"_index":841,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filterssubscription.unsubscribe",{"_index":872,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.filtertreks.activefiltersnumber",{"_index":2259,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.filtertreks.getfilteredtreks(this.treks",{"_index":1571,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.filtervaluesbystep",{"_index":1792,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.firebaseanalytics.setcurrentscreen(`${(route.component",{"_index":1502,"title":{},"body":{"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.geolocate.checkauthorization",{"_index":985,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.checkiftrackerisrunning",{"_index":987,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.currentposition$.getvalue",{"_index":1419,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.currentposition$.subscribe(coordinates",{"_index":992,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["this.geolocate.showappsettings",{"_index":1033,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.starttracking",{"_index":1335,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.geolocate.starttracking(this.trekname",{"_index":988,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.geolocate.stoptracking",{"_index":1286,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.getsettings().subscribe(async",{"_index":1839,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.gettreks().subscribe",{"_index":1573,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.getvalueforpropertybyid",{"_index":1869,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('cities",{"_index":1884,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('networks",{"_index":1888,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('practice",{"_index":1872,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('route",{"_index":1875,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('themes",{"_index":1893,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.getvalueforpropertybyid('touristiccontent_categories",{"_index":1906,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.globalization.getpreferredlanguage()).value.slice(0",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hits",{"_index":358,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[revoked",{"_index":361,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hits[url",{"_index":387,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.http.get(`${this.apiurl}/treks.geojson",{"_index":1589,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.http.get(this.apiurl",{"_index":1856,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.http.get(url",{"_index":380,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.hydratedtrek",{"_index":2019,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice",{"_index":2023,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.hydratedtrek.properties.practice.pictogram",{"_index":2025,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgpracticesrc",{"_index":2024,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.imgsrc",{"_index":2021,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.informationdesk",{"_index":1111,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdesk.picture",{"_index":1113,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.informationdeskpicture",{"_index":1114,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.initializeapp",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initialsize",{"_index":451,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.initialstate",{"_index":448,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.isfirstcheck",{"_index":2293,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.isinview",{"_index":2262,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.isonline",{"_index":836,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.isstage",{"_index":2027,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.items.length",{"_index":454,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(0",{"_index":450,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.items.slice(this.initialsize",{"_index":453,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["this.layers",{"_index":1136,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.loaderstatus",{"_index":1160,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loaderstatus$.unsubscribe",{"_index":1162,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loading.begin('trek",{"_index":2163,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.begin('treks",{"_index":2243,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.begin(loadingid",{"_index":1207,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.finish",{"_index":2115,"title":{},"body":{"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.loading.finish('trek",{"_index":2165,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.loading.finish('treks",{"_index":2266,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.loading.finish(loadingid",{"_index":1212,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loading.status.pipe(delay(0)).subscribe(status",{"_index":1161,"title":{},"body":{"components/LoaderComponent.html":{},"components/TreksMapPage.html":{}}}],["this.loadingcontroller.create",{"_index":2037,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.loadingids.getvalue",{"_index":1194,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next",{"_index":1198,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.next(ids",{"_index":1196,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe",{"_index":1185,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.loadingids.pipe(map((loadingids",{"_index":1202,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.localnotifications.haspermission",{"_index":989,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.on('click').subscribe",{"_index":966,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.requestpermission",{"_index":991,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.schedule",{"_index":1004,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.localnotifications.setdefaults",{"_index":958,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.location.back",{"_index":1958,"title":{},"body":{"components/TabsPage.html":{},"components/TrekMapPage.html":{}}}],["this.map",{"_index":1279,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addcontrol",{"_index":1299,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addcontrol(new",{"_index":1294,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addimage(practice.id.tostring",{"_index":1321,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addlayer",{"_index":1344,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('treks",{"_index":1336,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.addsource('zone",{"_index":1342,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.easeto",{"_index":1393,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.flyto",{"_index":1420,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getcanvas().style.cursor",{"_index":1397,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getsource('treks",{"_index":1281,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.getzoom",{"_index":1381,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.loadimage(`${this.commonsrc}${practice.pictogram",{"_index":1319,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('click",{"_index":1374,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('load",{"_index":1313,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseenter",{"_index":1396,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.on('mouseleave",{"_index":1399,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.queryrenderedfeatures(e.point",{"_index":1376,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.remove",{"_index":1285,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.map.resize",{"_index":1312,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig",{"_index":1287,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.mapconfig.maxzoom",{"_index":1338,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapconfig.style",{"_index":1288,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.mapisloaded(false",{"_index":2253,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.mapisloaded.emit(true",{"_index":1402,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition",{"_index":1324,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.addto(this.map",{"_index":1332,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.markerposition.setlnglat(coordinates",{"_index":1325,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.maxsize",{"_index":375,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.mergefilterstreks",{"_index":2254,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.modalcontroller.create",{"_index":645,"title":{},"body":{"components/FilterComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.modalcontroller.dismiss",{"_index":1789,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.modalcontroller.gettop",{"_index":2186,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalctrl.dismiss",{"_index":870,"title":{},"body":{"components/FiltersComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(id",{"_index":1744,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.modalctrl.dismiss(true",{"_index":867,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.modalpoidetails",{"_index":2189,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.dismiss",{"_index":2190,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.ondiddismiss().then",{"_index":2191,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.modalpoidetails.present",{"_index":2192,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.more.getmoreitembyid(moreitemid).pipe",{"_index":1499,"title":{},"body":{"guards/MoreItemResolver.html":{}}}],["this.more.getmoreitems().pipe",{"_index":1531,"title":{},"body":{"guards/MoreResolver.html":{}}}],["this.moreinformationsintro",{"_index":1519,"title":{},"body":{"components/MorePage.html":{}}}],["this.moreitem",{"_index":1470,"title":{},"body":{"components/MoreItemPage.html":{}}}],["this.navigatetotrek(data",{"_index":2265,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.navigatetotrek.emit(feature.properties.id",{"_index":1401,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navigatetotrek.emit(featureid",{"_index":1417,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.navparams.get('changelayervisibility",{"_index":1135,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('commonsrc",{"_index":1667,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('informationdesk",{"_index":1112,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["this.navparams.get('isonline",{"_index":1736,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.navparams.get('layers",{"_index":1137,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["this.navparams.get('offline",{"_index":1666,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.navparams.get('orders",{"_index":2290,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.navparams.get('poi",{"_index":1665,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.nbtemporaryfilterstreks",{"_index":849,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.network.type",{"_index":2251,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.nonetwork",{"_index":2250,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.notificationsmodeisactive",{"_index":984,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.numberofactivefilters",{"_index":2261,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.offline",{"_index":1289,"title":{},"body":{"components/MapTreksVizComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.offlinetreks",{"_index":1738,"title":{},"body":{"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.offlinetreks.currentprogressdownload$.subscribe(val",{"_index":1696,"title":{},"body":{"components/ProgressComponent.html":{}}}],["this.offlinetreks.getcommonimgsrc",{"_index":840,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc",{"_index":1634,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.offlinetreks.gettrekimagesrc(this.trek",{"_index":2022,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.offlinetreks.treks",{"_index":838,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks",{"_index":1737,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{}}}],["this.onlinetreks.getcommonimgsrc",{"_index":839,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc",{"_index":1635,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/TrekCardComponent.html":{}}}],["this.onlinetreks.gettrekimagesrc(this.trek",{"_index":2026,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.onlinetreks.loadtreks",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onlinetreks.onlinetrekserror$.subscribe(error",{"_index":2249,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.onlinetreks.treks",{"_index":837,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.onlinetrekserror$.next(error",{"_index":1575,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.onlinetrekserror$.next(null",{"_index":1572,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.order$.next",{"_index":1859,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.orders",{"_index":2289,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.parentid",{"_index":2041,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.picture",{"_index":1632,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.platform.backbutton.subscribewithpriority(9999",{"_index":1955,"title":{},"body":{"components/TabsPage.html":{}}}],["this.platform.backbutton.subscribewithpriority(99999",{"_index":846,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{}}}],["this.platform.is('android",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.is('ios",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.platform.ready().then(async",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["this.poi",{"_index":1664,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties",{"_index":1668,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures",{"_index":1669,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures.length",{"_index":1631,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0",{"_index":1633,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.pictures[0].url",{"_index":1670,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.poi.properties.type",{"_index":1625,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.popoverctrl.gettop",{"_index":2184,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.practices",{"_index":1317,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.practices.values.foreach(practice",{"_index":1368,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentconfirmfeatures(featuresincluster",{"_index":1388,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.presentdeleteconfirm",{"_index":2034,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentdeleteconfirm(true",{"_index":2044,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.presentpersmissionsconfirm",{"_index":986,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.presentpoidetails.emit(poi",{"_index":970,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.ref.detectchanges",{"_index":1698,"title":{},"body":{"components/ProgressComponent.html":{},"components/SearchComponent.html":{}}}],["this.refreshdelay",{"_index":369,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit",{"_index":378,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.emit(revoked",{"_index":405,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.revoke.subscribe((revoked",{"_index":356,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.route.data.pipe",{"_index":2255,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.route.data.subscribe((data",{"_index":1467,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.route.data.subscribe(data",{"_index":2244,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.router.navigate",{"_index":2105,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.router.navigate([this.router.url",{"_index":1471,"title":{},"body":{"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/TrekMapPage.html":{}}}],["this.router.navigate([this.trekstool.gettrekdetailsurl(id",{"_index":2193,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.router.url",{"_index":1956,"title":{},"body":{"components/TabsPage.html":{}}}],["this.routerlink",{"_index":2028,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.savefiltersstate(filters",{"_index":1861,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.screenorientation.onchange().subscribe",{"_index":1307,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.searchtreks.search(this.treks.features",{"_index":1741,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selectchange.emit",{"_index":654,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.selecteditems",{"_index":658,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.setofflinesettings",{"_index":1838,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.settings.data$.subscribe(settings",{"_index":1672,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settings.filters",{"_index":749,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.filters$.subscribe(filters",{"_index":842,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.gethydratedtrek(this.trek",{"_index":2020,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.settings.loadsettings",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["this.settings.order$).pipe",{"_index":750,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["this.settings.order$.subscribe(order",{"_index":2291,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.savefiltersstate(this.temporaryfilters$.getvalue",{"_index":866,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.settings.saveorderstate('default",{"_index":2297,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settings.saveorderstate(event.detail.value",{"_index":2294,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["this.settingsservice.gethydratedtrek(trek",{"_index":2109,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingsservice.gettouristiccategorieswithfeatures",{"_index":2111,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["this.settingssub",{"_index":1671,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.settingssub.unsubscribe",{"_index":1677,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["this.splashscreen.hide",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status.subscribe",{"_index":1192,"title":{},"body":{"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{}}}],["this.statusbar.stylelightcontent",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get(`settings",{"_index":1846,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.storage.set('settings",{"_index":1840,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.subscriptions",{"_index":2327,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.foreach((subscription",{"_index":2328,"title":{},"body":{"classes/UnSubscribe.html":{}}}],["this.subscriptions$$.push",{"_index":845,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["this.subscriptions$$.push(this.mergefilterstreks",{"_index":2263,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.temporaryfilter",{"_index":1788,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.temporaryfilter.values.find(value",{"_index":1793,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["this.temporaryfilters$).subscribe",{"_index":848,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.getvalue",{"_index":852,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(filters",{"_index":844,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.temporaryfilters$.next(temporaryfilters",{"_index":859,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.touristiccategorieswithfeatures",{"_index":2173,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.translate",{"_index":1015,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["this.translate.get('geolocate.notificationtitle').topromise",{"_index":1065,"title":{},"body":{"injectables/GeolocateService.html":{}}}],["this.translate.get('maptreks.treksalert').subscribe(async",{"_index":1411,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["this.translate.get('trekcard').topromise",{"_index":2036,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.translate.getdefaultlang",{"_index":1446,"title":{},"body":{"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{}}}],["this.translate.setdefaultlang(defaultlanguage",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["this.trek.properties.id",{"_index":2031,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["this.treks",{"_index":1740,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.treks$.getvalue",{"_index":1599,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treks$.next(data",{"_index":1574,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["this.treksbystep",{"_index":1748,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.trekstool",{"_index":2176,"title":{},"body":{"components/TrekMapPage.html":{},"components/TreksMapPage.html":{}}}],["this.trekstool.getcommonimgsrc",{"_index":2248,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekstool.gettreksurl",{"_index":2246,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.treksurl",{"_index":2245,"title":{},"body":{"components/TreksMapPage.html":{}}}],["this.trekurl",{"_index":2179,"title":{},"body":{"components/TrekMapPage.html":{}}}],["this.typeimgsrc",{"_index":1629,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["this.typepois",{"_index":1624,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.typepois.values.find(typepoi",{"_index":1627,"title":{},"body":{"components/PoiComponent.html":{}}}],["this.unsubscribefilters",{"_index":865,"title":{},"body":{"components/FiltersComponent.html":{}}}],["this.updateselecteditems(data.temporaryfilter",{"_index":653,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.updateselecteditems(this.filter",{"_index":640,"title":{},"body":{"components/FilterComponent.html":{}}}],["this.valuechange.emit",{"_index":643,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["this.viewisload",{"_index":1742,"title":{},"body":{"components/SearchComponent.html":{}}}],["throw",{"_index":1387,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["throwerror",{"_index":346,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["throwerror(error",{"_index":402,"title":{},"body":{"injectables/CacheService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"guards/MoreItemResolver.html":{},"guards/MoreResolver.html":{},"guards/TrekContextResolver.html":{}}}],["thumbnail",{"_index":529,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["tiles",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tiles/{z}/{x}/{y}.png",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tilesize",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":384,"title":{},"body":{"injectables/CacheService.html":{}}}],["title",{"_index":464,"title":{},"body":{"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["todo",{"_index":376,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["toggleexpandables",{"_index":422,"title":{},"body":{"components/CollapsibleListComponent.html":{}}}],["toolbar.filters",{"_index":2267,"title":{},"body":{"components/TreksMapPage.html":{}}}],["toolbar.ordertitle",{"_index":2302,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["toolbar.search",{"_index":2268,"title":{},"body":{"components/TreksMapPage.html":{}}}],["top",{"_index":1297,"title":{},"body":{"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TrekCardComponent.html":{}}}],["topo",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2649,"title":{},"body":{"license.html":{}}}],["touristiccategorie",{"_index":567,"title":{"interfaces/TouristicCategorie.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccategorieswithfeatures",{"_index":592,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["touristiccategorieswithfeatures.push",{"_index":1908,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccategorywithfeatures",{"_index":568,"title":{"interfaces/TouristicCategoryWithFeatures.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontent",{"_index":565,"title":{"interfaces/TouristicContent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["touristiccontent.properties.category",{"_index":1902,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontentcollapseinitialsize",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontentlayersproperties",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touristiccontents",{"_index":564,"title":{"interfaces/TouristicContents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristiccontents.features",{"_index":1900,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristiccontents.features.filter",{"_index":1910,"title":{},"body":{"injectables/SettingsService.html":{}}}],["touristicevent",{"_index":570,"title":{"interfaces/TouristicEvent.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["touristicevents",{"_index":569,"title":{"interfaces/TouristicEvents.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trackbyfilterid",{"_index":793,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackbyfilterid(index",{"_index":813,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters",{"_index":794,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfilters(index",{"_index":815,"title":{},"body":{"components/FiltersComponent.html":{}}}],["trackfiltervalues",{"_index":1770,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["trackfiltervalues(index",{"_index":1780,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["tracktrek",{"_index":1712,"title":{},"body":{"components/SearchComponent.html":{}}}],["tracktrek(index",{"_index":1726,"title":{},"body":{"components/SearchComponent.html":{}}}],["trad",{"_index":1006,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{},"components/MapTreksVizComponent.html":{}}}],["trad.cancelbutton",{"_index":1414,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad.confirmbutton",{"_index":1415,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad.title",{"_index":1413,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trad['geolocate.asklocatepermission",{"_index":1025,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.cancel",{"_index":1027,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trad['geolocate.open",{"_index":1031,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["transform",{"_index":1224,"title":{},"body":{"pipes/LowerRoundPipe.html":{},"components/TreksMapPage.html":{}}}],["transform(value",{"_index":1225,"title":{},"body":{"pipes/LowerRoundPipe.html":{}}}],["translate",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["translate/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forchild",{"_index":910,"title":{},"body":{"modules/FiltersComponentModule.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["translatemodule.forroot",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{}}}],["translationtrekcard",{"_index":2035,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.askdelete",{"_index":2049,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.cancelbutton",{"_index":2051,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.confirmbutton",{"_index":2050,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletelabel",{"_index":2052,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletetitle",{"_index":2048,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.deletioninprogress",{"_index":2038,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.errorwhiledeleting",{"_index":2045,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["translationtrekcard.trekisdelete",{"_index":2046,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trash",{"_index":2070,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["trek",{"_index":127,"title":{"interfaces/Trek.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trek.bbox",{"_index":1603,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.details.contact",{"_index":1681,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.details.informationdesk.website",{"_index":1119,"title":{},"body":{"components/InformationDeskDetailsComponent.html":{}}}],["trek.details.stage",{"_index":2055,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["trek.details.usefulinformation",{"_index":1680,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["trek.downloadalert.loading",{"_index":1700,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.downloadalert.storage",{"_index":1701,"title":{},"body":{"components/ProgressComponent.html":{}}}],["trek.features.find(feature",{"_index":1600,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.arrival_city",{"_index":1878,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities",{"_index":1880,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.cities.map",{"_index":1882,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.departure_city",{"_index":1876,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.difficulty",{"_index":1867,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.first_picture",{"_index":1579,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.first_picture.url",{"_index":1581,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["trek.properties.information_desks",{"_index":1894,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.name",{"_index":1752,"title":{},"body":{"components/SearchComponent.html":{},"guards/TrekContextResolver.html":{}}}],["trek.properties.networks",{"_index":1885,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.networks.map",{"_index":1887,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.practice",{"_index":1870,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.route",{"_index":1873,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes",{"_index":1889,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trek.properties.themes.map",{"_index":1891,"title":{},"body":{"injectables/SettingsService.html":{}}}],["trekarrowlayerproperties",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekcardcomponent",{"_index":145,"title":{"components/TrekCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"modules/SharedTreksModule.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekcontext",{"_index":588,"title":{"interfaces/TrekContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekcontextresolver",{"_index":211,"title":{"guards/TrekContextResolver.html":{}},"body":{"modules/AppModule.html":{},"guards/TrekContextResolver.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"coverage.html":{}}}],["trekdetailspage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"modules/TrekDetailsPageModule.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekdetailspagemodule",{"_index":2120,"title":{"modules/TrekDetailsPageModule.html":{}},"body":{"modules/TrekDetailsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekid",{"_index":1551,"title":{},"body":{"injectables/OnlineTreksService.html":{},"guards/TrekContextResolver.html":{},"interfaces/TreksService.html":{}}}],["treklinelayerproperties",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trekmappage",{"_index":148,"title":{"components/TrekMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"modules/TrekMapPageModule.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekmappagemodule",{"_index":2204,"title":{"modules/TrekMapPageModule.html":{}},"body":{"modules/TrekMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["trekname",{"_index":930,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["trekproperties",{"_index":506,"title":{"interfaces/TrekProperties.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treks",{"_index":124,"title":{"interfaces/Treks.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"modules/SharedModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.departure",{"_index":2057,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["treks.features",{"_index":705,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.module",{"_index":2126,"title":{},"body":{"modules/TrekDetailsPageModule.html":{},"modules/TreksPageModule.html":{}}}],["treks.module.ts",{"_index":1934,"title":{},"body":{"modules/SharedTreksModule.html":{}}}],["treks.page",{"_index":2309,"title":{},"body":{"modules/TreksPageModule.html":{}}}],["treks.service",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{}}}],["treks.service.ts",{"_index":669,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks.service.ts:101",{"_index":681,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:106",{"_index":1553,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:113",{"_index":685,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:117",{"_index":687,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:120",{"_index":1555,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:121",{"_index":679,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:129",{"_index":689,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:136",{"_index":1557,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:15",{"_index":699,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:152",{"_index":1550,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:161",{"_index":1548,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:17",{"_index":683,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:27",{"_index":1567,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:28",{"_index":1565,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:30",{"_index":1568,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:31",{"_index":1566,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:32",{"_index":1546,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:43",{"_index":1564,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:45",{"_index":698,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:56",{"_index":1561,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:63",{"_index":1547,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:67",{"_index":1563,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:71",{"_index":1560,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:75",{"_index":695,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:79",{"_index":691,"title":{},"body":{"injectables/FilterTreksService.html":{},"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:83",{"_index":1562,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.service.ts:89",{"_index":693,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["treks.service.ts:9",{"_index":1756,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks.service.ts:93",{"_index":1559,"title":{},"body":{"injectables/OnlineTreksService.html":{}}}],["treks.sort(function(a",{"_index":1759,"title":{},"body":{"injectables/SearchTreksService.html":{}}}],["treks/filter",{"_index":668,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/offline",{"_index":833,"title":{},"body":{"components/FiltersComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/online",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/FiltersComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treks/search",{"_index":1735,"title":{},"body":{"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"coverage.html":{}}}],["treks/treks.module",{"_index":1971,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["treks/treks.page",{"_index":1974,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["treksbystep",{"_index":1709,"title":{},"body":{"components/SearchComponent.html":{},"miscellaneous/variables.html":{}}}],["trekscontext",{"_index":595,"title":{"interfaces/TreksContext.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["trekscontextresolver",{"_index":213,"title":{"guards/TreksContextResolver.html":{}},"body":{"modules/AppModule.html":{},"modules/TabsPageRoutingModule.html":{},"guards/TreksContextResolver.html":{},"modules/TreksMapPageModule.html":{},"coverage.html":{}}}],["treksmappage",{"_index":150,"title":{"components/TreksMapPage.html":{}},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"modules/TreksMapPageModule.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["treksmappagemodule",{"_index":2271,"title":{"modules/TreksMapPageModule.html":{}},"body":{"modules/TreksMapPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksorderchange",{"_index":2282,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksorderchange(event",{"_index":2285,"title":{},"body":{"components/TreksOrderComponent.html":{}}}],["treksordercomponent",{"_index":151,"title":{"components/TreksOrderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trekspage",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"modules/TreksPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["trekspagemodule",{"_index":1967,"title":{"modules/TreksPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TreksPageModule.html":{},"modules.html":{},"overview.html":{}}}],["treksservice",{"_index":571,"title":{"interfaces/TreksService.html":{}},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{},"coverage.html":{}}}],["treksservice.getcommonimgsrc",{"_index":2110,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getmapconfigfortrekbyid(trek",{"_index":2108,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.getpoisfortrekbyid(currenttrekid",{"_index":2100,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiccontentsfortrekbyid(currenttrekid",{"_index":2101,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettouristiceventsfortrekbyid(currenttrekid",{"_index":2102,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(currenttrekid",{"_index":2099,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["treksservice.gettrekbyid(parentid",{"_index":2103,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["trekssource",{"_index":1280,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekssource.setdata",{"_index":1284,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["trekstool",{"_index":590,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"interfaces/TreksService.html":{}}}],["trekstool.treks$.subscribe(treks",{"_index":1739,"title":{},"body":{"components/SearchComponent.html":{}}}],["treksurl",{"_index":2221,"title":{},"body":{"components/TreksMapPage.html":{}}}],["trekurl",{"_index":2134,"title":{},"body":{"components/TrekMapPage.html":{}}}],["trekzoom",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"modules/TabsPageRoutingModule.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2183,"title":{},"body":{"components/TrekMapPage.html":{}}}],["turf/distance",{"_index":2396,"title":{},"body":{"dependencies.html":{}}}],["turf/helpers",{"_index":701,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/GeolocateNotificationsComponent.html":{},"dependencies.html":{}}}],["two",{"_index":2116,"title":{},"body":{"guards/TrekContextResolver.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"interfaces/FilterValue.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"components/InformationDeskDetailsComponent.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"guards/MoreItemResolver.html":{},"components/MorePage.html":{},"guards/MoreResolver.html":{},"injectables/OnlineTreksService.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"components/ProgressComponent.html":{},"interfaces/Property.html":{},"components/SearchComponent.html":{},"injectables/SearchTreksService.html":{},"components/SelectFilterComponent.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"guards/TrekContextResolver.html":{},"components/TrekMapPage.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"guards/TreksContextResolver.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"interfaces/TreksService.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2665,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeimgsrc",{"_index":1611,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepoi.id",{"_index":1628,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois",{"_index":1612,"title":{},"body":{"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{}}}],["typepois.values.find(typepoi",{"_index":1676,"title":{},"body":{"components/PoiDetailsComponent.html":{}}}],["types/lodash.clonedeep",{"_index":2399,"title":{},"body":{"dependencies.html":{}}}],["types/lodash.deburr",{"_index":2401,"title":{},"body":{"dependencies.html":{}}}],["types/mapbox",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["ui.module",{"_index":1480,"title":{},"body":{"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{}}}],["ui.module.ts",{"_index":1944,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":735,"title":{},"body":{"injectables/FilterTreksService.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"guards/TrekContextResolver.html":{}}}],["unit",{"_index":1301,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["units",{"_index":997,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["unsubscribe",{"_index":777,"title":{"classes/UnSubscribe.html":{}},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(subscription",{"_index":2329,"title":{},"body":{"classes/UnSubscribe.html":{},"miscellaneous/functions.html":{}}}],["unsubscribe(this.mergefilterstreks",{"_index":2264,"title":{},"body":{"components/TreksMapPage.html":{}}}],["unsubscribe:11",{"_index":820,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:17",{"_index":819,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribe:5",{"_index":829,"title":{},"body":{"components/FiltersComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/SearchComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["unsubscribefilters",{"_index":795,"title":{},"body":{"components/FiltersComponent.html":{}}}],["updateselecteditems",{"_index":614,"title":{},"body":{"components/FilterComponent.html":{}}}],["updateselecteditems(temporaryfilter",{"_index":628,"title":{},"body":{"components/FilterComponent.html":{}}}],["uppercase",{"_index":875,"title":{},"body":{"components/FiltersComponent.html":{},"components/SearchComponent.html":{}}}],["url",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"components/TabsPage.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"components/TrekCardComponent.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usages",{"_index":484,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["use",{"_index":2520,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":1836,"title":{},"body":{"injectables/SettingsService.html":{},"miscellaneous/variables.html":{}}}],["usedthe",{"_index":2539,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["usefirebase",{"_index":2569,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userlocation",{"_index":697,"title":{},"body":{"injectables/FilterTreksService.html":{},"components/MapTreksVizComponent.html":{},"injectables/SettingsService.html":{}}}],["usermsg",{"_index":1751,"title":{},"body":{"components/SearchComponent.html":{}}}],["val",{"_index":1697,"title":{},"body":{"components/ProgressComponent.html":{}}}],["value",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoadingService.html":{},"pipes/LowerRoundPipe.html":{},"components/MapTreksVizComponent.html":{},"injectables/MoreInformationsService.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["value'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["value.checked",{"_index":642,"title":{},"body":{"components/FilterComponent.html":{},"injectables/FilterTreksService.html":{},"components/FiltersComponent.html":{},"injectables/SettingsService.html":{}}}],["value.checked).length",{"_index":725,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.checked).map(checkedvalue",{"_index":737,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.component",{"_index":1919,"title":{},"body":{"modules/SharedFiltersModule.html":{}}}],["value.component.html",{"_index":759,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.scss",{"_index":758,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts",{"_index":757,"title":{},"body":{"components/FilterValueComponent.html":{},"coverage.html":{}}}],["value.component.ts:10",{"_index":763,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:11",{"_index":762,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:12",{"_index":761,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:16",{"_index":764,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.component.ts:18",{"_index":767,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value.id",{"_index":858,"title":{},"body":{"components/FiltersComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{}}}],["value.interval",{"_index":741,"title":{},"body":{"injectables/FilterTreksService.html":{}}}],["value.name",{"_index":770,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["value/filter",{"_index":756,"title":{},"body":{"components/FilterValueComponent.html":{},"modules/SharedFiltersModule.html":{},"coverage.html":{}}}],["valuechange",{"_index":617,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterValueComponent.html":{}}}],["valuechanged",{"_index":615,"title":{},"body":{"components/FilterComponent.html":{},"components/SelectFilterComponent.html":{}}}],["valuechanged(event",{"_index":1782,"title":{},"body":{"components/SelectFilterComponent.html":{}}}],["valuechanged(undefined",{"_index":631,"title":{},"body":{"components/FilterComponent.html":{}}}],["valuecheckchanged",{"_index":760,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["valuecheckchanged($event",{"_index":765,"title":{},"body":{"components/FilterValueComponent.html":{}}}],["values",{"_index":547,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"injectables/SettingsService.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["var",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["variable",{"_index":2342,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2668,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2472,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["vibrate",{"_index":959,"title":{},"body":{"components/GeolocateNotificationsComponent.html":{}}}],["viewisload",{"_index":1710,"title":{},"body":{"components/SearchComponent.html":{}}}],["visibility",{"_index":1123,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["visibility.component",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["visibility.component.html",{"_index":1125,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.scss",{"_index":1124,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts",{"_index":1122,"title":{},"body":{"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["visibility.component.ts:10",{"_index":1133,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:11",{"_index":1129,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:15",{"_index":1130,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility.component.ts:20",{"_index":1132,"title":{},"body":{"components/LayersVisibilityComponent.html":{}}}],["visibility/layers",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/LayersVisibilityComponent.html":{},"coverage.html":{}}}],["viz",{"_index":1232,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/ConnectErrorComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"components/TabsPage.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{}}}],["viz.component",{"_index":1929,"title":{},"body":{"modules/SharedModule.html":{}}}],["viz.component.html",{"_index":1234,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.scss",{"_index":1233,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts",{"_index":1231,"title":{},"body":{"components/MapTreksVizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["viz.component.ts:162",{"_index":1252,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:31",{"_index":1261,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:313",{"_index":1260,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:32",{"_index":1263,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:33",{"_index":1264,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:35",{"_index":1248,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:352",{"_index":1254,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:36",{"_index":1249,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:37",{"_index":1247,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:38",{"_index":1246,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:39",{"_index":1250,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:41",{"_index":1251,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:42",{"_index":1245,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:57",{"_index":1257,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:74",{"_index":1258,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz.component.ts:84",{"_index":1253,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["viz/map",{"_index":1230,"title":{},"body":{"components/MapTreksVizComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CollapsibleListComponent.html":{},"components/FilterComponent.html":{},"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/GeolocateNotificationsComponent.html":{},"injectables/GeolocateService.html":{},"components/InformationDeskDetailsComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoadingInterceptor.html":{},"injectables/LoadingService.html":{},"components/MapTreksVizComponent.html":{},"components/MoreItemPage.html":{},"components/MorePage.html":{},"injectables/OnlineTreksService.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/ProgressComponent.html":{},"components/SearchComponent.html":{},"components/SelectFilterComponent.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"classes/UnSubscribe.html":{}}}],["warranties",{"_index":2618,"title":{},"body":{"license.html":{}}}],["way",{"_index":2653,"title":{},"body":{"license.html":{}}}],["website",{"_index":544,"title":{},"body":{"interfaces/ContainsFilter.html":{},"interfaces/DataSetting.html":{},"interfaces/Filter.html":{},"interfaces/FilterValue.html":{},"interfaces/HydratedTrek.html":{},"interfaces/HydratedTrekProperties.html":{},"interfaces/InformationDesk.html":{},"interfaces/InformationIntro.html":{},"interfaces/InformationItem.html":{},"interfaces/IntervalFilter.html":{},"interfaces/MinimalTrek.html":{},"interfaces/MinimalTrekProperties.html":{},"interfaces/MinimalTreks.html":{},"interfaces/Picture.html":{},"interfaces/Poi.html":{},"interfaces/Pois.html":{},"interfaces/Property.html":{},"interfaces/Settings.html":{},"interfaces/TouristicCategorie.html":{},"interfaces/TouristicCategoryWithFeatures.html":{},"interfaces/TouristicContent.html":{},"interfaces/TouristicContents.html":{},"interfaces/TouristicEvent.html":{},"interfaces/TouristicEvents.html":{},"interfaces/Trek.html":{},"interfaces/TrekContext.html":{},"interfaces/TrekProperties.html":{},"interfaces/Treks.html":{},"interfaces/TreksContext.html":{},"interfaces/TreksService.html":{}}}],["webview",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["webview/ngx",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["weight",{"_index":2199,"title":{},"body":{"components/TrekMapPage.html":{}}}],["whether",{"_index":2646,"title":{},"body":{"license.html":{}}}],["white",{"_index":2082,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["whitelist",{"_index":2434,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":774,"title":{},"body":{"components/FilterValueComponent.html":{},"components/FiltersComponent.html":{},"components/LayersVisibilityComponent.html":{},"components/LoaderComponent.html":{},"components/PoiComponent.html":{},"components/PoiDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{},"components/TreksMapPage.html":{},"components/TreksOrderComponent.html":{},"miscellaneous/variables.html":{}}}],["window.settimeout",{"_index":1311,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["windows",{"_index":2501,"title":{},"body":{"index.html":{}}}],["within",{"_index":2555,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":371,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":2167,"title":{},"body":{"components/TrekMapPage.html":{}}}],["wrap",{"_index":2079,"title":{},"body":{"components/TrekCardComponent.html":{}}}],["x",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["yes",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{},"injectables/FilterTreksService.html":{},"injectables/LoadingService.html":{},"injectables/OnlineTreksService.html":{},"injectables/SettingsService.html":{},"components/TrekCardComponent.html":{},"interfaces/TreksService.html":{}}}],["z",{"_index":889,"title":{},"body":{"components/FiltersComponent.html":{},"components/LoaderComponent.html":{},"components/MapTreksVizComponent.html":{},"components/SearchComponent.html":{},"components/TrekCardComponent.html":{},"components/TrekMapPage.html":{}}}],["zip",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["zone",{"_index":1345,"title":{},"body":{"components/MapTreksVizComponent.html":{}}}],["zone.js",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["zonelayerproperties",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoneoutlinelayerproperties",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomPipesModule.html":{},"modules/FiltersComponentModule.html":{},"components/MapTreksVizComponent.html":{},"modules/MoreItemPageModule.html":{},"modules/MorePageModule.html":{},"injectables/OnlineTreksService.html":{},"modules/SharedFiltersModule.html":{},"modules/SharedModule.html":{},"modules/SharedTreksModule.html":{},"modules/SharedUiModule.html":{},"modules/TabsPageModule.html":{},"modules/TrekDetailsPageModule.html":{},"modules/TrekMapPageModule.html":{},"modules/TreksMapPageModule.html":{},"modules/TreksPageModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar, translate: TranslateService, globalization: Globalization, onlineTreks: OnlineTreksService, settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalization\n                                                  \n                                                        \n                                                                    Globalization\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '@env/environment';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private translate: TranslateService,\n    private globalization: Globalization,\n    private onlineTreks: OnlineTreksService,\n    private settings: SettingsService,\n    ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      let defaultLanguage;\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        defaultLanguage = (await this.globalization.getPreferredLanguage()).value.slice(0, 2);\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n      } else {\n        defaultLanguage = navigator.language.slice(0, 2);\n      }\n\n      // we assume that availableLanguage[0] is default language if user language is not available\n      if (environment.availableLanguage && environment.availableLanguage.length > 0) {\n        if (environment.availableLanguage.indexOf(defaultLanguage) === -1) {\n          defaultLanguage = environment.availableLanguage[0];\n        }\n      } else {\n        // or 'fr' if array is empty\n        defaultLanguage = 'fr';\n      }\n\n      this.translate.setDefaultLang(defaultLanguage);\n\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InformationDeskDetailsComponent\n                        \n                        \n                            LayersVisibilityComponent\n                        \n                        \n                            PoiDetailsComponent\n                        \n                        \n                            ProgressComponent\n                        \n                        \n                            TreksOrderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoadingInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { LoadingInterceptor } from '@app/services/loading/loading.service';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { Animation } from '@ionic/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\n\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport { ProgressComponent } from '@app/components/progress/progress.component';\nimport { LayersVisibilityComponent } from '@app/components/layers-visibility/layers-visibility.component';\n\nimport { TreksOrderComponent } from './components/treks-order/treks-order.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function noAnimation(AnimationC: Animation): Promise {\n  return Promise.resolve(new AnimationC());\n}\n\nregisterLocaleData(localeFr, 'fr');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent,\n  ],\n  entryComponents: [\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    IonicModule.forRoot({\n      mode: 'md',\n      animated: true,\n      navAnimation: noAnimation,\n    }),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n    IonicStorageModule.forRoot(),\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    File,\n    Zip,\n    WebView,\n    BackgroundGeolocation,\n    LocalNotifications,\n    ScreenOrientation,\n    Globalization,\n    SocialSharing,\n    Network,\n    FirebaseAnalytics,\n    MoreResolver,\n    MoreItemResolver,\n    TrekContextResolver,\n    TreksContextResolver,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'app', pathMatch: 'full' },\n  {\n    path: 'app',\n    loadChildren: './pages/tabs/tabs.module#TabsPageModule',\n  },\n  {\n    path: 'app/map/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n  },\n  {\n    path: 'app/map/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { isStage: true },\n  },\n  {\n    path: 'app/map-offline/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true },\n  },\n  {\n    path: 'app/map-offline/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true, isStage: true },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache/cache.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cache\n                            \n                            \n                                    Public\n                                hits\n                            \n                            \n                                    Private\n                                maxSize\n                            \n                            \n                                    Private\n                                refreshDelay\n                            \n                            \n                                    Public\n                                revoke\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                revoking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url: string, options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            revoking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    revoking(observable: Observable, revoked?: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cache/cache.service.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    revoked\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 4 * 60 * 60 * 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            revoke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/cache/cache.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, publishReplay, refCount, take, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CacheService {\n\n  private cache: { [key: string]: Observable } = {};\n  private refreshDelay = 4 * 60 * 60 * 1000;\n  private maxSize = 200;\n  public revoke: EventEmitter = new EventEmitter();\n  public hits: { [key: string]: number } = {};\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this.revoke.subscribe((revoked: string | null) => {\n      if (!revoked) {\n        this.cache = {};\n        this.hits = {};\n      } else {\n        delete this.cache[revoked];\n        delete this.hits[revoked];\n      }\n    });\n  }\n\n  /*\n   * gets an observable\n   * that broadcasts a ReplaySubject\n   * which emits the response of a get request\n   * during this.refreshDelay ms without sending a new http request\n   */\n  public get(url: string, options: any): Observable {\n    if (!this.cache.hasOwnProperty(url)) {\n      if (Object.keys(this.cache).length >= this.maxSize) {\n        // TODO: do not revoke everything\n        this.revoke.emit();\n      }\n      this.cache[url] = this.http.get(url, options).pipe(\n        // set hits to 0 each time request is actually sent\n        tap(() => {\n          this.hits[url] = 0;\n        }),\n        // create a ReplaySubject that stores and emit last response during delay\n        publishReplay(1, this.refreshDelay),\n        // broadcast ReplaySubject\n        refCount(),\n        // complete each observer after response has been emitted\n        take(1),\n        // increment hits each time request is subscribed\n        tap(() => {\n          const hits = this.hits[url];\n          this.hits[url] = hits ? hits + 1 : 1;\n        }),\n        catchError((error) => {\n          delete this.cache[url];\n          return throwError(error)\n        })\n      );\n    }\n    return this.cache[url];\n  }\n\n  /*\n   Make the observable revoke the cache when it emits\n   */\n  public revoking(observable: Observable, revoked?: string | null): Observable {\n    return observable.pipe(tap(() => {\n      this.revoke.emit(revoked);\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsibleListComponent.html":{"url":"components/CollapsibleListComponent.html","title":"component - CollapsibleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsibleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/collapsible-list/collapsible-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapsible-list\n            \n\n            \n                styleUrls\n                ./collapsible-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collapsible-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alwaysDisplayedItems\n                            \n                            \n                                    Public\n                                expandableItems\n                            \n                            \n                                    Public\n                                expanded\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggleExpandables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hideAllLabel\n                            \n                            \n                                initialSize\n                            \n                            \n                                initialState\n                            \n                            \n                                items\n                            \n                            \n                                itemTemplate\n                            \n                            \n                                showAllLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/collapsible-list/collapsible-list.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hideAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialSize\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        initialState\n                    \n                \n                \n                    \n                        Type :     \"expanded\" | \"collapsed\"\n\n                    \n                \n                \n                    \n                        Default value : 'collapsed'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemTemplate\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleExpandables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleExpandables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alwaysDisplayedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandableItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/collapsible-list/collapsible-list.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, TemplateRef, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-collapsible-list',\n  templateUrl: './collapsible-list.component.html',\n  styleUrls: ['./collapsible-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollapsibleListComponent implements OnInit {\n  @Input() items: T[];\n  @Input() showAllLabel: string;\n  @Input() hideAllLabel: string;\n  @Input() initialSize = 5;\n  @Input() initialState: 'expanded' | 'collapsed' = 'collapsed';\n  @Input() itemTemplate: TemplateRef;\n\n  public alwaysDisplayedItems: T[] = [];\n  public expandableItems: T[] = [];\n  public expanded = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.expanded = this.initialState === 'expanded';\n    this.alwaysDisplayedItems = this.items.slice(0, this.initialSize);\n    this.expandableItems = this.items.slice(this.initialSize, this.items.length);\n  }\n\n  public toggleExpandables() {\n    this.expanded = !this.expanded;\n  }\n}\n\n    \n\n    \n        \n   \n\n\n  \n     \n  \n\n 0\">\n  \n    \n      {{ showAllLabel }}\n    \n    \n      {{ hideAllLabel }}\n    \n  \n\n\n    \n\n    \n                \n                    ./collapsible-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             0\">            {{ showAllLabel }}              {{ hideAllLabel }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollapsibleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectErrorComponent.html":{"url":"components/ConnectErrorComponent.html","title":"component - ConnectErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConnectErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connect-error/connect-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-error\n            \n\n            \n                styleUrls\n                ./connect-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./connect-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        retry\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/connect-error/connect-error.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-connect-error',\n  templateUrl: './connect-error.component.html',\n  styleUrls: ['./connect-error.component.scss'],\n})\nexport class ConnectErrorComponent  {\n  @Input() public title = '';\n  @Input() public content = '';\n  @Input() public icon = '';\n  @Input() public buttonText = '';\n  @Output() public retry = new EventEmitter();\n\n  constructor() {}\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      {{title}}\n    \n  \n  \n    \n      {{content}}\n    \n  \n  \n    \n      \n        {{buttonText}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./connect-error.component.scss\n                \n                .icon-size {\n  font-size: 4em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{title}}                  {{content}}                          {{buttonText}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnectErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainsFilter.html":{"url":"interfaces/ContainsFilter.html","title":"interface - ContainsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContainsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomPipesModule.html":{"url":"modules/CustomPipesModule.html","title":"module - CustomPipesModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomPipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomPipesModule\n\n\n\ncluster_CustomPipesModule_declarations\n\n\n\ncluster_CustomPipesModule_exports\n\n\n\n\nLowerRoundPipe\n\nLowerRoundPipe\n\n\n\nCustomPipesModule\n\nCustomPipesModule\n\nCustomPipesModule -->\n\nLowerRoundPipe->CustomPipesModule\n\n\n\n\n\nLowerRoundPipe \n\nLowerRoundPipe \n\nLowerRoundPipe  -->\n\nCustomPipesModule->LowerRoundPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/custom-pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LowerRoundPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LowerRoundPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { LowerRoundPipe } from '@app/pipes/lower-round.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [LowerRoundPipe],\n  exports: [LowerRoundPipe],\n})\nexport class CustomPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSetting.html":{"url":"interfaces/DataSetting.html","title":"interface - DataSetting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataSetting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hideAllLabel\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        showAllLabel\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideAllLabel\n                                    \n                                \n                                \n                                    \n                                        hideAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showAllLabel\n                                    \n                                \n                                \n                                    \n                                        showAllLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\" | \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\" | \"interval\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     FilterValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter/filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                containsFilterShouldUseSelectAbove\n                            \n                            \n                                    Public\n                                selectedItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngDoCheck\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                openSelect\n                            \n                            \n                                    Public\n                                updateSelectedItems\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectChange\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            openSelect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSelect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateSelectedItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems(temporaryFilter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    temporaryFilter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter/filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            containsFilterShouldUseSelectAbove\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.containsFilterShouldUseSelectAbove\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filter/filter.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output, DoCheck } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent implements OnInit, DoCheck {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n  @Output() public selectChange = new EventEmitter();\n  public selectedItems = '';\n  public containsFilterShouldUseSelectAbove = environment.containsFilterShouldUseSelectAbove;\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {\n    this.updateSelectedItems(this.filter);\n  }\n\n  ngDoCheck() {\n    if (\n      !this.filter.values.find(value => {\n        return value.checked;\n      })\n    ) {\n      this.updateSelectedItems(this.filter);\n    }\n  }\n\n  public valueChanged({ checked, value }: { checked: boolean; value: FilterValue }): void {\n    this.valueChange.emit({ checked: checked, value: value });\n  }\n\n  public async openSelect(): Promise {\n    const modal = await this.modalController.create({\n      component: SelectFilterComponent,\n      componentProps: { filter: this.filter, commonSrc: this.commonSrc },\n      cssClass: 'full-size',\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.temporaryFilter) {\n      this.updateSelectedItems(data.temporaryFilter);\n      this.selectChange.emit({ filter: data.temporaryFilter });\n    }\n  }\n\n  public updateSelectedItems(temporaryFilter: Filter) {\n    const selectedItems: string[] = [];\n\n    for (const filterValue of temporaryFilter.values) {\n      if (filterValue.checked) {\n        selectedItems.push(filterValue.name);\n      }\n    }\n    this.selectedItems = selectedItems.join(', ');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ filter.name }}\n  \n\n\n  \n  \n\n\n\n  \n    \n      {{\n        selectedItems === ''\n          ? ('filters.selectPlaceholder' | translate) + ' ' + filter.name.toLowerCase()\n          : selectedItems\n      }}\n    \n  \n\n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .select-placeholder {\n  color: var(--ion-color-medium);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.name }}                  {{        selectedItems === \\'\\'          ? (\\'filters.selectPlaceholder\\' | translate) + \\' \\' + filter.name.toLowerCase()          : selectedItems      }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterTreksService.html":{"url":"injectables/FilterTreksService.html","title":"injectable - FilterTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter-treks/filter-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeFiltersNumber$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                containsFilter\n                            \n                            \n                                    Static\n                                filter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedIdForFilter\n                            \n                            \n                                    Private\n                                    Static\n                                getCheckedInterval\n                            \n                            \n                                    Public\n                                getFilteredTreks\n                            \n                            \n                                    Private\n                                    Static\n                                getNumberOfActiveFilters\n                            \n                            \n                                    Private\n                                    Static\n                                intervalFilter\n                            \n                            \n                                    Private\n                                    Static\n                                isFilterActive\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(settings: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter-treks/filter-treks.service.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            containsFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    containsFilter(filter: ContainsFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                ContainsFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(treks: MinimalTreks | null, filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTreks | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedIdForFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedIdForFilter(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getCheckedInterval\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCheckedInterval(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFilteredTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredTreks(treks$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks$\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getNumberOfActiveFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumberOfActiveFilters(filters: Filter[] | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[] | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            intervalFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    intervalFilter(filter: IntervalFilter, feature: MinimalTrek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IntervalFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    feature\n                                    \n                                                MinimalTrek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isFilterActive\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isFilterActive(filter: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(filteredTreks: MinimalTrek[], order: Order, userLocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter-treks/filter-treks.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filteredTreks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userLocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeFiltersNumber$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter-treks/filter-treks.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { point } from '@turf/helpers';\n\nimport { ContainsFilter, Filter, IntervalFilter, MinimalTrek, MinimalTreks, Order } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\nconst distance = require('@turf/distance').default;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterTreksService {\n  public activeFiltersNumber$: Observable;\n\n  public static filter(treks: MinimalTreks | null, filters: Filter[] | null): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n\n    let filteredFeatures = treks.features;\n\n    if (filters) {\n      filters.forEach(filter => {\n        filteredFeatures = filteredFeatures.filter(feature => {\n          if (!FilterTreksService.isFilterActive(filter)) {\n            return true;\n          }\n\n          if (filter.type === 'contains') {\n            return FilterTreksService.containsFilter(filter as ContainsFilter, feature);\n          } else if (filter.type === 'interval') {\n            return FilterTreksService.intervalFilter(filter as IntervalFilter, feature);\n          }\n\n          return false;\n        });\n      });\n    }\n\n    return filteredFeatures;\n  }\n\n  public static sort(filteredTreks: MinimalTrek[], order: Order, userLocation?: number[]): MinimalTrek[] {\n    return filteredTreks.sort((a: MinimalTrek, b: MinimalTrek) => {\n      // Sort by user location\n      if (order === 'location' && userLocation && userLocation !== null) {\n        if (!a.geometry || !b.geometry) {\n          return !a.geometry ? 1 : -1;\n        }\n\n        const distanceFromTrekA = distance(point(a.geometry.coordinates), point(userLocation));\n        const distanceFromTrekB = distance(point(b.geometry.coordinates), point(userLocation));\n\n        if (distanceFromTrekA  distanceFromTrekB) {\n          return 1;\n        }\n        return 0;\n      }\n      // Default order (alphabetically)\n      if (a.properties.name  b.properties.name) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n\n  private static isFilterActive(filter: Filter): boolean {\n    return filter.values.filter(value => value.checked).length > 0;\n  }\n\n  private static getNumberOfActiveFilters(filters: Filter[] | null): number {\n    let numberOfActiveFilters = 0;\n    if (!!filters) {\n      filters.forEach(filter => {\n        numberOfActiveFilters += FilterTreksService.getCheckedIdForFilter(filter).length;\n      });\n    }\n    return numberOfActiveFilters;\n  }\n\n  private static intervalFilter(filter: IntervalFilter, feature: MinimalTrek) {\n    let isInInterval = false;\n    FilterTreksService.getCheckedInterval(filter).forEach(([min, max]: [number, number]) => {\n      const criterionValue: number = feature.properties[filter.id];\n      if (criterionValue >= min && criterionValue  (feature.properties[filter.id] as any).indexOf(filterValue) !== -1,\n        ) !== undefined\n      );\n    } else {\n      return FilterTreksService.getCheckedIdForFilter(filter).indexOf(feature.properties[filter.id] as any) !== -1;\n    }\n  }\n\n  private static getCheckedIdForFilter(filter: Filter): number[] {\n    return filter.values.filter(value => value.checked).map(checkedValue => checkedValue.id);\n  }\n\n  private static getCheckedInterval(filter: Filter): [number, number][] {\n    return filter.values\n      .filter(value => !!value.interval && value.checked)\n      .map(checkedValue => checkedValue.interval) as [number, number][];\n  }\n\n  constructor(private settings: SettingsService) {\n    this.activeFiltersNumber$ = settings.filters$.pipe(\n      map(filters => FilterTreksService.getNumberOfActiveFilters(filters)),\n    );\n  }\n\n  public getFilteredTreks(treks$: Observable): Observable {\n    return combineLatest(treks$, this.settings.filters$, this.settings.order$).pipe(\n      map(([treks, filters, order]) => {\n        if (treks && filters && order) {\n          return FilterTreksService.sort(FilterTreksService.filter(treks, filters), order.type, order.value);\n        } else {\n          return [];\n        }\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterValue.html":{"url":"interfaces/FilterValue.html","title":"interface - FilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FilterValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        checked\n                                \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        interval\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterValueComponent.html":{"url":"components/FilterValueComponent.html","title":"component - FilterValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FilterValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filter-value/filter-value.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-value\n            \n\n            \n                styleUrls\n                ./filter-value.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-value.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                valueCheckChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         FilterValue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filter-value/filter-value.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueCheckChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueCheckChanged($event: CustomEvent, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filter-value/filter-value.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            CustomEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter-value',\n  templateUrl: './filter-value.component.html',\n  styleUrls: ['./filter-value.component.scss'],\n})\nexport class FilterValueComponent implements OnInit {\n  @Input() value: FilterValue;\n  @Input() commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public valueCheckChanged($event: CustomEvent, value: FilterValue) {\n    this.valueChange.emit({ checked: $event.detail.checked, value: value });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ value.name }}\n  \n\n\n    \n\n    \n                \n                    ./filter-value.component.scss\n                \n                .no-lines {\n    --inner-border-width: 0px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ value.name }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/filters/filters.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                ./filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                filters\n                            \n                            \n                                    Private\n                                filtersSubscription\n                            \n                            \n                                    Public\n                                nbTemporaryFiltersTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                temporaryFilters$\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilters\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                eraseFilters\n                            \n                            \n                                    Public\n                                handleFiltersState\n                            \n                            \n                                    Public\n                                handleSelect\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                trackByFilterId\n                            \n                            \n                                    Public\n                                trackFilters\n                            \n                            \n                                    Public\n                                unsubscribeFilters\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOnline\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, settings: SettingsService, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOnline\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            eraseFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    eraseFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkState\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleSelect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSelect(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackByFilterId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackByFilterId(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilters(index: number, element: Filter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Filter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            unsubscribeFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/filters/filters.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Filter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filtersSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nbTemporaryFiltersTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temporaryFilters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/filters/filters.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { Filter, FilterValue, MinimalTreks } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss'],\n})\nexport class FiltersComponent extends UnSubscribe implements OnInit, OnDestroy {\n  public temporaryFilters$ = new BehaviorSubject([]);\n  public nbTemporaryFiltersTreks = 0;\n  public commonSrc: string;\n  public filters: Filter[];\n  private filtersSubscription: Subscription;\n  @Input() public isOnline: boolean;\n\n  constructor(\n    private modalCtrl: ModalController,\n    public settings: SettingsService,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const treks$ = this.isOnline ? this.onlineTreks.treks$ : this.offlineTreks.treks$;\n    this.commonSrc = this.isOnline ? this.onlineTreks.getCommonImgSrc() : this.offlineTreks.getCommonImgSrc();\n\n    this.filtersSubscription = this.settings.filters$.subscribe(filters => {\n      this.filters = filters || [];\n      this.temporaryFilters$.next(filters || []);\n    });\n\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n\n      combineLatest(treks$, this.temporaryFilters$).subscribe(\n        ([treks, temporaryFilters]: [MinimalTreks | null, Filter[]]) => {\n          this.nbTemporaryFiltersTreks = !!treks ? FilterTreksService.filter(treks, temporaryFilters).length : 0;\n        },\n      ),\n    );\n  }\n\n  public handleFiltersState(checkState: boolean, filter: Filter, value: FilterValue): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    const temporaryFilter = temporaryFilters.find(tempFilter => tempFilter.id === filter.id) as Filter;\n    const filterValue = temporaryFilter.values.find(tempValue => tempValue.id === value.id) as FilterValue;\n    filterValue.checked = checkState;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public handleSelect(event: { filter: Filter }): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    let temporaryFilterIndex = temporaryFilters.findIndex(tempFilter => tempFilter.id === event.filter.id);\n    if (temporaryFilterIndex) {\n      temporaryFilters[temporaryFilterIndex] = event.filter;\n      this.temporaryFilters$.next(temporaryFilters);\n    }\n  }\n\n  public applyFilters(): void {\n    this.unsubscribeFilters();\n    this.settings.saveFiltersState(this.temporaryFilters$.getValue());\n    this.modalCtrl.dismiss(true);\n  }\n\n  public eraseFilters(): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    temporaryFilters.forEach(filter => {\n      filter.values.forEach(value => (value.checked = false));\n    });\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public trackFilters(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n\n  public unsubscribeFilters(): void {\n    if (this.filtersSubscription) {\n      this.filtersSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.unsubscribeFilters();\n  }\n\n  public trackByFilterId(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'filters.title' | translate | uppercase }}\n    \n      \n        {{ 'filters.erase' | translate }}\n      \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n    \n      \n        \n        \n      \n    \n  \n\n\n\n  \n    \n    filters.zeroresult\n    filters.oneresult\n     1\">\n      {{ 'filters.results' | translate: { nb: nbTemporaryFiltersTreks } }}\n    \n  \n\n\n    \n\n    \n                \n                    ./filters.component.scss\n                \n                .full-width {\n  width: 100%;\n}\n\n.loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n@media screen and (max-width: 540px) {\n  .min-font {\n    font-size: 10px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'filters.title\\' | translate | uppercase }}                  {{ \\'filters.erase\\' | translate }}                                                                                filters.zeroresult    filters.oneresult     1\">      {{ \\'filters.results\\' | translate: { nb: nbTemporaryFiltersTreks } }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersComponentModule.html":{"url":"modules/FiltersComponentModule.html","title":"module - FiltersComponentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersComponentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiltersComponentModule\n\n\n\ncluster_FiltersComponentModule_imports\n\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\n\n\nFiltersComponentModule\n\nFiltersComponentModule\n\nFiltersComponentModule -->\n\nSharedFiltersModule->FiltersComponentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/filters/filters.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedFiltersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedFiltersModule } from '@app/shared/shared-filters.module';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, SharedFiltersModule, TranslateModule.forChild()],\n})\nexport class FiltersComponentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeolocateNotificationsComponent.html":{"url":"components/GeolocateNotificationsComponent.html","title":"component - GeolocateNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeolocateNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geolocate-notifications\n            \n\n            \n                styleUrls\n                ./geolocate-notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geolocate-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                clicklocalNotifications$\n                            \n                            \n                                currentPoisToNotify\n                            \n                            \n                                    Private\n                                currentPosition$\n                            \n                            \n                                    Public\n                                localNotifications\n                            \n                            \n                                notificationsModeIsActive\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeNotificationsMode\n                            \n                            \n                                checkToNotify\n                            \n                            \n                                disableGeolocationNotification\n                            \n                            \n                                enableGeolocationNotification\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentPersmissionsConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPois\n                            \n                            \n                                trekName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                presentPoiDetails\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, localNotifications: LocalNotifications, alertController: AlertController, geolocate: GeolocateService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localNotifications\n                                                  \n                                                        \n                                                                    LocalNotifications\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPois\n                    \n                \n                \n                    \n                        Type :         Pois\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trekName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:35\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        presentPoiDetails\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            changeNotificationsMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeNotificationsMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkToNotify\n                        \n                        \n                    \n                \n            \n            \n                \ncheckToNotify(fromCoordinates: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fromCoordinates\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \ndisableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enableGeolocationNotification\n                        \n                        \n                    \n                \n            \n            \n                \nenableGeolocationNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPersmissionsConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPersmissionsConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clicklocalNotifications$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPoisToNotify\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocalNotifications\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationsModeIsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/geolocate-notifications/geolocate-notifications.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Subscription } from 'rxjs';\nimport { point } from '@turf/helpers';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst distance = require('@turf/distance').default;\n\nimport { Pois } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-geolocate-notifications',\n  templateUrl: './geolocate-notifications.component.html',\n  styleUrls: ['./geolocate-notifications.component.scss'],\n})\nexport class GeolocateNotificationsComponent implements OnInit, OnChanges, OnDestroy {\n  currentPoisToNotify: any[];\n  clicklocalNotifications$: Subscription;\n  notificationsModeIsActive = false;\n  @Input() currentPois: Pois;\n  @Input() trekName: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  private currentPosition$: Subscription;\n\n  constructor(\n    public platform: Platform,\n    public localNotifications: LocalNotifications,\n    public alertController: AlertController,\n    private geolocate: GeolocateService,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.localNotifications.setDefaults({\n        vibrate: true,\n        sound: true,\n        foreground: true,\n        icon: 'res://icon',\n        smallIcon: 'res://ic_stat_panorama',\n      });\n      this.clicklocalNotifications$ = this.localNotifications.on('click').subscribe(({ data }) => {\n        const poi = this.currentPois.features.find(feature => feature.properties.id === data.id);\n        this.presentPoiDetails.emit(poi);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    if (changesCurrentPois.currentValue && !changesCurrentPois.previousValue) {\n      if (this.currentPois && Array.isArray(this.currentPois.features)) {\n        this.currentPoisToNotify = this.currentPois.features.map(feature => ({\n          id: feature.properties.id,\n          name: feature.properties.name,\n          coordinates: feature.geometry.coordinates,\n        }));\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.clicklocalNotifications$) {\n      this.clicklocalNotifications$.unsubscribe();\n    }\n\n    if (this.currentPosition$) {\n      this.disableGeolocationNotification();\n    }\n  }\n\n  async changeNotificationsMode() {\n    if (!this.notificationsModeIsActive) {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        if (!(await this.geolocate.checkAuthorization())) {\n          this.presentPersmissionsConfirm();\n        } else {\n          if (!(await this.geolocate.checkIfTrackerIsRunning())) {\n            this.geolocate.startTracking(this.trekName);\n          }\n          if (await this.localNotifications.hasPermission()) {\n            this.notificationsModeIsActive = true;\n            this.enableGeolocationNotification();\n          } else {\n            await this.localNotifications.requestPermission();\n          }\n        }\n      } else {\n        this.geolocate.startTracking(this.trekName);\n        this.notificationsModeIsActive = true;\n        this.enableGeolocationNotification();\n      }\n    } else {\n      this.notificationsModeIsActive = false;\n      this.disableGeolocationNotification();\n    }\n  }\n\n  enableGeolocationNotification(): void {\n    this.currentPosition$ = this.geolocate.currentPosition$.subscribe(coordinates => this.checkToNotify(coordinates));\n  }\n\n  disableGeolocationNotification(): void {\n    this.currentPosition$.unsubscribe();\n  }\n\n  checkToNotify(fromCoordinates: number[]) {\n    const kmToNotify = environment.metersToNotify / 1000;\n    const options = {\n      units: 'kilometers',\n    };\n    const from = point(fromCoordinates);\n    const notifiedIndex = this.currentPoisToNotify.findIndex(\n      feature => distance(from, point(feature.coordinates), options)  {\n          this.localNotifications.schedule({\n            id: this.currentPoisToNotify[notifiedIndex].id,\n            title: trad,\n            text: this.currentPoisToNotify[notifiedIndex].name,\n            data: {\n              id: this.currentPoisToNotify[notifiedIndex].id,\n            },\n            channel: `channel${this.currentPoisToNotify[notifiedIndex].id}`,\n            priority: 2,\n          });\n\n          this.currentPoisToNotify.splice(notifiedIndex, 1);\n        });\n      } else {\n        console.log('Poi', this.currentPoisToNotify[notifiedIndex]);\n      }\n    }\n  }\n\n  async presentPersmissionsConfirm() {\n    await this.translate\n      .get(['geolocate.askLocatePermission', 'geolocate.cancel', 'geolocate.open'])\n      .subscribe(async trad => {\n        const persmissionsConfirm = await this.alertController.create({\n          header: 'Permissions',\n          message: trad['geolocate.askLocatePermission'],\n          buttons: [\n            {\n              text: trad['geolocate.cancel'],\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: trad['geolocate.open'],\n              handler: () => {\n                this.geolocate.showAppSettings();\n              },\n            },\n          ],\n        });\n\n        await persmissionsConfirm.present();\n      });\n  }\n}\n\n    \n\n    \n        \n  \n  {{ 'mapTrek.enableNotification' | translate }}\n\n\n\n  \n  {{ 'mapTrek.disableNotification' | translate }}\n\n\n    \n\n    \n                \n                    ./geolocate-notifications.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'mapTrek.enableNotification\\' | translate }}    {{ \\'mapTrek.disableNotification\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GeolocateNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocateService.html":{"url":"injectables/GeolocateService.html","title":"injectable - GeolocateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeolocateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocate/geolocate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundGeolocation\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                platform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkAuthorization\n                            \n                            \n                                    Async\n                                checkIfTrackerIsRunning\n                            \n                            \n                                showAppSettings\n                            \n                            \n                                showLocationSettings\n                            \n                            \n                                    Async\n                                startTracking\n                            \n                            \n                                stopTracking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backgroundGeolocation: BackgroundGeolocation, platform: Platform, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAuthorization\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAuthorization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkIfTrackerIsRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfTrackerIsRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAppSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowAppSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLocationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nshowLocationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            startTracking\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startTracking(notificationText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopTracking\n                        \n                        \n                    \n                \n            \n            \n                \nstopTracking()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/geolocate/geolocate.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backgroundGeolocation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BackgroundGeolocation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geolocate/geolocate.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  BackgroundGeolocation,\n  BackgroundGeolocationConfig,\n  BackgroundGeolocationEvents,\n  BackgroundGeolocationLocationProvider,\n} from '@ionic-native/background-geolocation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GeolocateService {\n  public currentPosition$: BehaviorSubject = new BehaviorSubject(null);\n\n  constructor(\n    public backgroundGeolocation: BackgroundGeolocation,\n    public platform: Platform,\n    private translate: TranslateService,\n  ) {}\n\n  async checkAuthorization() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.authorization !== 0;\n  }\n\n  async checkIfTrackerIsRunning() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.isRunning;\n  }\n\n  async startTracking(notificationText: string) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const notificationTitle: string = await this.translate.get('geolocate.notificationTitle').toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider: BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        maxLocations: 10,\n        startForeground: true,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText,\n        ...environment.backgroundGeolocation,\n      };\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.start).subscribe(async () => {\n        const startLocation = await this.backgroundGeolocation.getCurrentLocation();\n        this.currentPosition$.next([startLocation.longitude, startLocation.latitude]);\n      });\n\n      this.backgroundGeolocation.on(BackgroundGeolocationEvents.location).subscribe(location => {\n        this.currentPosition$.next([location.longitude, location.latitude]);\n      });\n\n      this.backgroundGeolocation.start();\n    } else {\n      // fake position for browser dev\n      this.currentPosition$.next([0.705824, 44.410157]);\n    }\n  }\n\n  stopTracking() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.backgroundGeolocation.stop();\n    }\n\n    this.currentPosition$.next([0, 0]);\n  }\n\n  showAppSettings() {\n    this.backgroundGeolocation.showAppSettings();\n  }\n\n  showLocationSettings() {\n    this.backgroundGeolocation.showLocationSettings();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrek.html":{"url":"interfaces/HydratedTrek.html","title":"interface - HydratedTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         HydratedTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrekProperties.html":{"url":"interfaces/HydratedTrekProperties.html","title":"interface - HydratedTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        accessibilities\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        ambiance\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        children\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        duration\n                                \n                                \n                                        id\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        networks\n                                \n                                \n                                        parking_location\n                                \n                                \n                                        pictures\n                                \n                                \n                                            Optional\n                                        points_reference\n                                \n                                \n                                        practice\n                                \n                                \n                                        profile\n                                \n                                \n                                        route\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                                \n                                        themes\n                                \n                                \n                                        thumbnail\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ambiance\n                                    \n                                \n                                \n                                    \n                                        ambiance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Treks\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parking_location\n                                    \n                                \n                                \n                                    \n                                        parking_location:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points_reference\n                                    \n                                \n                                \n                                    \n                                        points_reference:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:         Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Property[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationDesk.html":{"url":"interfaces/InformationDesk.html","title":"interface - InformationDesk","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationDesk\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                                \n                                        municipality\n                                \n                                \n                                        name\n                                \n                                \n                                        phone\n                                \n                                \n                                        photo_url\n                                \n                                \n                                        picture\n                                \n                                \n                                        postal_code\n                                \n                                \n                                        street\n                                \n                                \n                                        type\n                                \n                                \n                                        website\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        municipality\n                                    \n                                \n                                \n                                    \n                                        municipality:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url\n                                    \n                                \n                                \n                                    \n                                        photo_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postal_code\n                                    \n                                \n                                \n                                    \n                                        postal_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         number | Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number | Property\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationDeskDetailsComponent.html":{"url":"components/InformationDeskDetailsComponent.html","title":"component - InformationDeskDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InformationDeskDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-desk-details/information-desk-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-desk-details\n            \n\n            \n                styleUrls\n                ./information-desk-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-desk-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                informationDesk\n                            \n                            \n                                informationDeskPicture\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDesk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationDesk\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            informationDeskPicture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/information-desk-details/information-desk-details.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { InformationDesk } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-information-desk-details',\n  templateUrl: './information-desk-details.component.html',\n  styleUrls: ['./information-desk-details.component.scss'],\n})\nexport class InformationDeskDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  informationDesk: InformationDesk;\n  informationDeskPicture = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.informationDesk = this.navParams.get('informationDesk');\n    if (this.informationDesk && this.informationDesk.picture) {\n      this.informationDeskPicture = `${this.baseUrl}${this.informationDesk.picture}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ informationDesk.name }}\n  \n\n\n\n  \n    \n    \n      \n      \n      {{ informationDesk.postal_code }} {{ informationDesk.municipality }}\n      \n         {{ 'trek.details.informationDesk.website' | translate }}  -\n         Email  -\n        {{ informationDesk.phone }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./information-desk-details.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ informationDesk.name }}                              {{ informationDesk.postal_code }} {{ informationDesk.municipality }}               {{ \\'trek.details.informationDesk.website\\' | translate }}  -         Email  -        {{ informationDesk.phone }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationDeskDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationIntro.html":{"url":"interfaces/InformationIntro.html","title":"interface - InformationIntro","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationIntro\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationItem.html":{"url":"interfaces/InformationItem.html","title":"interface - InformationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InformationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        external_url\n                                \n                                \n                                        id\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        external_url\n                                    \n                                \n                                \n                                    \n                                        external_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntervalFilter.html":{"url":"interfaces/IntervalFilter.html","title":"interface - IntervalFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IntervalFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Filter\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayersVisibilityComponent.html":{"url":"components/LayersVisibilityComponent.html","title":"component - LayersVisibilityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayersVisibilityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/layers-visibility/layers-visibility.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layers-visibility\n            \n\n            \n                styleUrls\n                ./layers-visibility.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layers-visibility.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLayerVisibility\n                            \n                            \n                                layers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                layerVisibilityChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            layerVisibilityChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    layerVisibilityChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeLayerVisibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            layers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/layers-visibility/layers-visibility.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-layers-visibility',\n  templateUrl: './layers-visibility.component.html',\n  styleUrls: ['./layers-visibility.component.scss'],\n})\nexport class LayersVisibilityComponent {\n  changeLayerVisibility: any;\n  layers: any;\n\n  constructor(private navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.changeLayerVisibility = this.navParams.get('changeLayerVisibility');\n    this.layers = this.navParams.get('layers');\n  }\n\n  public layerVisibilityChange(event: any) {\n    this.changeLayerVisibility(event.detail.checked, event.detail.value);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ layer.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./layers-visibility.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ layer.name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayersVisibilityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Private\n                                loaderStatus$\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                progressBarWidth\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        condition\n                    \n                \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        progressBarWidth\n                    \n                \n                \n                    \n                        Default value : '50%'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderStatus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { delay } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnDestroy {\n  @Input() public progressBarWidth = '50%';\n  @Input() public condition: boolean | null = null;\n  public loaderStatus: Boolean;\n  private loaderStatus$: Subscription;\n\n  constructor(public loading: LoadingService) {\n    // add delay to prevent expression has changed after it was checked\n    this.loaderStatus$ = this.loading.status.pipe(delay(0)).subscribe(status => (this.loaderStatus = status));\n  }\n\n  ngOnDestroy(): void {\n    this.loaderStatus$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader-container {\n  height: calc(100% - 57px);\n  width: 100%;\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingInterceptor.html":{"url":"interceptors/LoadingInterceptor.html","title":"interceptor - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadingIds\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                begin\n                            \n                            \n                                finish\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            begin\n                        \n                        \n                    \n                \n            \n            \n                \nbegin(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            finish\n                        \n                        \n                    \n                \n            \n            \n                \nfinish(id?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoading\n                        \n                        \n                    \n                \n            \n            \n                \nisLoading(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/loading/loading.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/loading/loading.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n\n  public status = new BehaviorSubject(false);  // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds.pipe(\n      map((ids: string[]) => ids.length > 0)\n    ).subscribe((isLoading: boolean) => {\n      if (isLoading !== service.status.getValue()) {\n        service.status.next(isLoading);\n      }\n    });\n    this.status.subscribe()\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds.getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(map((loadingIds: string[]) => {\n      return loadingIds.indexOf(id) >= 0;\n    }));\n  }\n\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            this.loading.finish(loadingId);\n          }\n        }),\n        catchError((error: any) => {\n          this.loading.finish(loadingId);\n          return throwError(error);\n        }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/LowerRoundPipe.html":{"url":"pipes/LowerRoundPipe.html","title":"pipe - LowerRoundPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  LowerRoundPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/lower-round.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        lowerRound\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/lower-round.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'lowerRound' })\nexport class LowerRoundPipe implements PipeTransform {\n  transform(value: number): number {\n    return Math.floor(value);\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTreksVizComponent.html":{"url":"components/MapTreksVizComponent.html","title":"component - MapTreksVizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapTreksVizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-treks-viz\n            \n\n            \n                styleUrls\n                ./map-treks-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./map-treks-viz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                markerPosition\n                            \n                            \n                                    Private\n                                practices\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSourcesLayersEvents\n                            \n                            \n                                createMap\n                            \n                            \n                                    Public\n                                flyToUserLocation\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                presentConfirmFeatures\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                dataSettings\n                            \n                            \n                                filteredTreks\n                            \n                            \n                                mapConfig\n                            \n                            \n                                offline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, screenOrientation: ScreenOrientation, platform: Platform, translate: TranslateService, geolocate: GeolocateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        screenOrientation\n                                                  \n                                                        \n                                                                    ScreenOrientation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geolocate\n                                                  \n                                                        \n                                                                        GeolocateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataSettings\n                    \n                \n                \n                    \n                        Type :         DataSetting[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredTreks\n                    \n                \n                \n                    \n                        Type :     MinimalTrek[] | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapConfig\n                    \n                \n                \n                    \n                        Type :     MapboxOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        mapIsLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        navigateToTrek\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSourcesLayersEvents\n                        \n                        \n                    \n                \n            \n            \n                \naddSourcesLayersEvents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMap\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            flyToUserLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flyToUserLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:352\n                \n            \n\n\n            \n                \n                    Fly to user location else fitbounds to trek\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentConfirmFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentConfirmFeatures(features: Feature[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:313\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                            Feature[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markerPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Marker\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            practices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataSetting\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map-treks-viz/map-treks-viz.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport { GeoJSONSource, GeoJSONSourceRaw, Map, MapboxOptions, Marker } from 'mapbox-gl';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { MinimalTrek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '../abstract/unsubscribe';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-treks-viz',\n  templateUrl: './map-treks-viz.component.html',\n  styleUrls: ['./map-treks-viz.component.scss'],\n})\nexport class MapTreksVizComponent extends UnSubscribe implements OnChanges, OnDestroy {\n  private map: Map;\n  private markerPosition: Marker;\n  private practices: DataSetting;\n\n  @Input() public filteredTreks: MinimalTrek[] | null = null;\n  @Input() public mapConfig: MapboxOptions;\n  @Input() public dataSettings: DataSetting[];\n  @Input() public commonSrc: string;\n  @Input() public offline: Boolean;\n\n  @Output() public navigateToTrek = new EventEmitter();\n  @Output() public mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private alertController: AlertController,\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private translate: TranslateService,\n    private geolocate: GeolocateService,\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTreks: SimpleChange = changes.filteredTreks;\n    if (changesCurrentTreks.currentValue && !changesCurrentTreks.previousValue) {\n      this.createMap();\n    } else {\n      if (this.map) {\n        const treksSource = this.map.getSource('treks-points') as GeoJSONSource;\n        if (treksSource && this.filteredTreks) {\n          treksSource.setData({\n            type: 'FeatureCollection',\n            features: this.filteredTreks,\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap() {\n    if (this.mapConfig && this.mapConfig.style) {\n      if (this.offline && (this.platform.is('ios') || this.platform.is('android'))) {\n        (this.mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.commonSrc + (environment.offlineMapConfig.style as any).sources['tiles-background'].tiles[0];\n      }\n\n      this.map = new mapboxgl.Map({\n        ...this.mapConfig,\n        container: 'map-treks',\n      });\n\n      this.map.addControl(new mapboxgl.NavigationControl({ showCompass: false }), 'top-left');\n\n      this.map.addControl(\n        new mapboxgl.ScaleControl({\n          unit: 'metric',\n        }),\n      );\n\n      this.map.addControl(\n        new mapboxgl.AttributionControl({\n          compact: false,\n          customAttribution: environment.map.attributionText,\n        }),\n      );\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize ...\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          }),\n        );\n      }\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create((observer: any) => {\n          const practices: DataSetting | undefined = this.dataSettings.find(data => data.id === 'practice');\n          if (practices) {\n            this.practices = practices;\n            practices.values.forEach((practice, index: number) => {\n              this.map.loadImage(`${this.commonSrc}${practice.pictogram}`, (error: any, image: any) => {\n                this.map.addImage(practice.id.toString(), image);\n                if (index + 1 === practices.values.length) {\n                  observer.complete();\n                }\n              });\n            });\n          }\n        });\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$.subscribe(coordinates => {\n            if (coordinates) {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates as any);\n              } else {\n                const el = document.createElement('div');\n                el.className = 'pulse';\n                this.markerPosition = new mapboxgl.Marker({ element: el }).setLngLat(coordinates);\n                this.markerPosition.addTo(this.map);\n              }\n            }\n          }),\n          loadImages.subscribe({\n            complete: () => {\n              this.addSourcesLayersEvents();\n              this.geolocate.startTracking('');\n            },\n          }),\n        );\n      });\n    }\n  }\n\n  addSourcesLayersEvents() {\n    this.map.addSource('treks-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: this.filteredTreks,\n      },\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50,\n    } as GeoJSONSourceRaw);\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: 'assets/map/zone/zone.geojson',\n    });\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any),\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint,\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: {\n        'text-color': '#fff',\n      },\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 16,\n        'text-offset': [0, 0.1],\n      },\n    });\n\n    const circleColorExpression: any[] = [];\n    circleColorExpression.push('match');\n    circleColorExpression.push(['get', 'practice']);\n    this.practices.values.forEach(practice => {\n      circleColorExpression.push(practice.id);\n      circleColorExpression.push(practice.color);\n    });\n    circleColorExpression.push(environment.map.clusterPaint['circle-color']);\n\n    this.map.addLayer({\n      id: 'trek-point',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        ...environment.map.clusterPaint,\n        'circle-color': circleColorExpression as any,\n        'circle-radius': 16,\n      },\n    });\n\n    this.map.addLayer({\n      id: 'trek-point-icon',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['get', 'practice'],\n        'icon-size': environment.map.globalMapIconSize,\n      },\n    });\n\n    this.map.on('click', 'clusters-circle', e => {\n      const features = this.map.queryRenderedFeatures(e.point, {\n        layers: ['clusters-circle'],\n      });\n\n      const featureProperties = features[0].properties;\n      if (!!featureProperties) {\n        const clusterId = featureProperties.cluster_id;\n\n        if (this.map.getZoom() === this.mapConfig.maxZoom) {\n          // no more zoom, display features inside cluster\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterLeaves(\n            featureProperties.cluster_id,\n            Infinity,\n            0,\n            (err: any, featuresInCluster: Feature[]) => {\n              if (err) {\n                throw err;\n              }\n              this.presentConfirmFeatures(featuresInCluster as Feature[]);\n            },\n          );\n        } else {\n          // zoom to next cluster expansion\n          (this.map.getSource('treks-points') as GeoJSONSource).getClusterExpansionZoom(\n            clusterId,\n            (err: any, zoom: number) => {\n              if (err) {\n                return;\n              }\n              const coordinates = (features[0].geometry as Point).coordinates;\n              this.map.easeTo({\n                center: [coordinates[0], coordinates[1]],\n                zoom: zoom,\n              });\n            },\n          );\n        }\n      }\n    });\n\n    this.map.on('mouseenter', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'clusters-circle', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.map.on('click', 'trek-point', e => {\n      const feature = this.map.queryRenderedFeatures(e.point, {\n        layers: ['trek-point'],\n      })[0];\n      if (!!feature.properties) {\n        this.navigateToTrek.emit(feature.properties.id);\n      }\n    });\n\n    this.map.on('mouseenter', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', 'trek-point', () => {\n      this.map.getCanvas().style.cursor = '';\n    });\n\n    this.mapIsLoaded.emit(true);\n  }\n  async presentConfirmFeatures(features: Feature[]) {\n    const featuresRadio: Object[] = []; // can't import AlertOption\n\n    features.forEach((feature, index: number) => {\n      featuresRadio.push({\n        name: feature.properties.name,\n        type: 'radio',\n        label: feature.properties.name,\n        value: feature.properties.id,\n        checked: index === 0,\n      });\n    });\n\n    await this.translate.get('mapTreks.treksAlert').subscribe(async trad => {\n      const alert = await this.alertController.create({\n        header: trad.title,\n        inputs: featuresRadio,\n        buttons: [\n          {\n            text: trad.cancelButton,\n            role: 'cancel',\n            cssClass: 'secondary',\n          },\n          {\n            text: trad.confirmButton,\n            handler: featureId => {\n              this.navigateToTrek.emit(featureId);\n            },\n          },\n        ],\n      });\n\n      await alert.present();\n    });\n  }\n\n  /**\n   * Fly to user location else fitbounds to trek\n   */\n  public flyToUserLocation(): void {\n    const userLocation = this.geolocate.currentPosition$.getValue();\n    if (userLocation) {\n      this.map.flyTo({\n        center: userLocation,\n        animate: false,\n        zoom: environment.trekZoom.zoom,\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./map-treks-viz.component.scss\n                \n                .options-button-container {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 24px;\n  top: 24px;\n  z-index: 5;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapTreksVizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrek.html":{"url":"interfaces/MinimalTrek.html","title":"interface - MinimalTrek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         MinimalTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MinimalTrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrekProperties.html":{"url":"interfaces/MinimalTrekProperties.html","title":"interface - MinimalTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accessibilities\n                                \n                                \n                                        departure\n                                \n                                \n                                        difficulty\n                                \n                                \n                                        first_picture\n                                \n                                \n                                        id\n                                \n                                \n                                        length\n                                \n                                \n                                        name\n                                \n                                \n                                        practice\n                                \n                                \n                                        themes\n                                \n                                \n                                        usages\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_picture\n                                    \n                                \n                                \n                                    \n                                        first_picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTreks.html":{"url":"interfaces/MinimalTreks.html","title":"interface - MinimalTreks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTreks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     MinimalTrek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreInformationsService.html":{"url":"injectables/MoreInformationsService.html","title":"injectable - MoreInformationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MoreInformationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/more-informations/more-informations.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMoreItemById\n                            \n                            \n                                    Public\n                                getMoreItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: CacheService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItemById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItemById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMoreItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMoreItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/more-informations/more-informations.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/more-informations/more-informations.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InformationIntro, InformationItem } from '@app/interfaces/interfaces';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MoreInformationsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  constructor(private cache: CacheService, private translate: TranslateService) {}\n\n  public getMoreItems(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages.json`, httpOptions);\n  }\n\n  public getMoreItemById(id: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language':  this.translate.getDefaultLang(),\n      })\n    };\n    return this.cache.get(`${this.apiUrl}/flatpages/${id}.json`, httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoreItemPage.html":{"url":"components/MoreItemPage.html","title":"component - MoreItemPage","body":"\n                   \n\n\n\n\n\n  Components\n  MoreItemPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more-item/more-item.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more-item\n            \n\n            \n                styleUrls\n                ./more-item.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more-item.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                connectionError\n                            \n                            \n                                moreItem\n                            \n                            \n                                moreItemId\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more-item/more-item.page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreItemId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more-item/more-item.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationItem } from '@app/interfaces/interfaces';\n\n\n@Component({\n  selector: 'app-more-item',\n  templateUrl: './more-item.page.html',\n  styleUrls: ['./more-item.page.scss'],\n})\nexport class MoreItemPage extends UnSubscribe implements OnInit, OnDestroy {\n  moreItem: InformationItem;\n  moreItemId: number;\n  connectionError = false;\n\n  constructor(\n    private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data) => {\n        const item = data['item'] as (InformationItem | 'connectionError');\n        if (item === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreItem = item;\n        }\n      })\n    );\n  }\n\n  refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ moreItem.title }}\n  \n\n\n  \n  \n  \n  \n    \n      \n        \n          \n          \n             {{ moreItem.external_url }} \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more-item.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ moreItem.title }}                                                             {{ moreItem.external_url }}                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MoreItemPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoreItemPageModule.html":{"url":"modules/MoreItemPageModule.html","title":"module - MoreItemPageModule","body":"\n                   \n\n\n\n\n    Modules\n    MoreItemPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more-item/more-item.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MoreItemPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { MoreItemPage } from './more-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoreItemPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      item: MoreItemResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule, TranslateModule.forChild()],\n  declarations: [MoreItemPage],\n})\nexport class MoreItemPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreItemResolver.html":{"url":"guards/MoreItemResolver.html","title":"guard - MoreItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more-item.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more-item.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/more-item.resolver.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { InformationItem } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreItemResolver implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const moreItemId = +(route.paramMap.get('moreItemId'));\n    return this.more.getMoreItemById(moreItemId).pipe(\n      tap(item => {\n        if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n          this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name} ${item.title}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorePage.html":{"url":"components/MorePage.html","title":"component - MorePage","body":"\n                   \n\n\n\n\n\n  Components\n  MorePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/more/more.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more\n            \n\n            \n                styleUrls\n                ./more.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./more.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                connectionError\n                            \n                            \n                                moreInformationsIntro\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/more/more.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moreInformationsIntro\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InformationIntro[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/more/more.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '@env/environment';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationIntro } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.page.html',\n  styleUrls: ['./more.page.scss'],\n})\nexport class MorePage extends UnSubscribe implements OnInit {\n  moreInformationsIntro: InformationIntro[];\n  connectionError = false;\n  public appName: string = environment.appName;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const items: InformationIntro[] | 'connectionError' = data.items;\n        if (items === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreInformationsIntro = items;\n        }\n      })\n    );\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n\n\n\n  \n  \n  \n\n  \n    \n      \n        \n          {{ moreInformationIntro.title }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./more.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}                                       {{ moreInformationIntro.title }}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MorePageModule.html":{"url":"modules/MorePageModule.html","title":"module - MorePageModule","body":"\n                   \n\n\n\n\n    Modules\n    MorePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_MorePageModule_imports\n\n\n\n\nMorePage\n\nMorePage\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/more/more.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MorePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MorePage } from './more.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    component: MorePage,\n    resolve: {\n      items: MoreResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedUiModule, TranslateModule.forChild()],\n  declarations: [MorePage],\n})\nexport class MorePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MoreResolver.html":{"url":"guards/MoreResolver.html","title":"guard - MoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    MoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/more.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(more: MoreInformationsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/more.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        more\n                                                  \n                                                        \n                                                                        MoreInformationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { InformationIntro } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreResolver implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve = (route: ActivatedRouteSnapshot) =>\n    this.more.getMoreItems().pipe(\n      tap(() => {\n        if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n          this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineTreksService.html":{"url":"injectables/OnlineTreksService.html","title":"injectable - OnlineTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OnlineTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online-treks/online-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                filteredTreks$\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreksError$\n                            \n                            \n                                    Public\n                                treks$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCommonImgSrc\n                            \n                            \n                                    Public\n                                getMapConfigForTrekById\n                            \n                            \n                                    Public\n                                getMinimalTrekById\n                            \n                            \n                                    Public\n                                getPoisForTrekById\n                            \n                            \n                                    Public\n                                getTouristicContentsForTrekById\n                            \n                            \n                                    Public\n                                getTouristicEventsForTrekById\n                            \n                            \n                                    Public\n                                getTrekById\n                            \n                            \n                                    Public\n                                getTrekDetailsUrl\n                            \n                            \n                                    Public\n                                getTrekImageSrc\n                            \n                            \n                                    Public\n                                getTrekMapUrl\n                            \n                            \n                                    Private\n                                getTreks\n                            \n                            \n                                    Public\n                                getTreksMapUrl\n                            \n                            \n                                    Public\n                                getTreksUrl\n                            \n                            \n                                    Public\n                                loadTreks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cache: CacheService, filterTreks: FilterTreksService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMapConfigForTrekById(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMinimalTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMinimalTrekById(trekId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoisForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicContentsForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicEventsForTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekById(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekDetailsUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTrekMapUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTreks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/online-treks/online-treks.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreksError$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/online-treks/online-treks.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { environment } from '@env/environment';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnlineTreksService implements TreksService {\n  public offline = false;\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public onlineTreksError$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private cache: CacheService,\n    private filterTreks: FilterTreksService,\n    private translate: TranslateService,\n  ) {\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n  }\n\n  public loadTreks() {\n    this.onlineTreksError$.next(null);\n    this.getTreks().subscribe(\n      data => {\n        this.treks$.next(data);\n      },\n      error => {\n        this.onlineTreksError$.next(error);\n      },\n    );\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      return environment.onlineBaseUrl + (!!picture ? picture.url : trek.properties.first_picture.url);\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    return `${environment.onlineBaseUrl}`;\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks';\n  }\n\n  public getTrekDetailsUrl(trekId: number, parentId?: number): string {\n    return !parentId ? `/app/tabs/treks/trek-details/${trekId}` : `/app/tabs/treks/trek-details/${parentId}/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number, parentId?: number): string {\n    return !parentId ? `/app/map/${trekId}` : `/app/map/${parentId}/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n\n    return this.http.get(`${this.apiUrl}/treks.geojson`, httpOptions);\n  }\n\n  public getTrekById(trekId: number, parentId?: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    if (parentId) {\n      return this.cache.get(`${this.apiUrl}/${parentId}/treks/${trekId}.geojson`, httpOptions);\n    } else {\n      return this.cache.get(`${this.apiUrl}/${trekId}/trek.geojson`, httpOptions);\n    }\n  }\n\n  public getPoisForTrekById(trekId: number, parentId?: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n\n    if (parentId) {\n      return this.cache.get(`${this.apiUrl}/${parentId}/pois/${trekId}.geojson`, httpOptions);\n    } else {\n      return this.cache.get(`${this.apiUrl}/${trekId}/pois.geojson`, httpOptions);\n    }\n  }\n\n  public getTouristicContentsForTrekById(trekId: number, parentId?: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_contents/${trekId}.geojson`,\n        httpOptions,\n      );\n    } else {\n      return this.cache.get(`${this.apiUrl}/${trekId}/touristic_contents.geojson`, httpOptions);\n    }\n  }\n\n  public getTouristicEventsForTrekById(trekId: number, parentId?: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_events/${trekId}.geojson`,\n        httpOptions,\n      );\n    } else {\n      return this.cache.get(`${this.apiUrl}/${trekId}/touristic_events.geojson`, httpOptions);\n    }\n  }\n\n  public getMinimalTrekById(trekId: number): MinimalTrek | undefined {\n    const trek = this.treks$.getValue();\n    if (!!trek) {\n      return trek.features.find(feature => feature.properties.id === trekId);\n    } else {\n      return undefined;\n    }\n  }\n\n  public getMapConfigForTrekById(trek: Trek): MapboxOptions {\n    const mapConfig: MapboxOptions = { ...cloneDeep(environment.onlineMapConfig), zoom: environment.trekZoom.zoom };\n    (mapConfig as any).bounds = trek.bbox as [number, number, number, number];\n    (mapConfig as any).fitBoundsOptions = { padding: { top: 100, bottom: 100, left: 100, right: 100 } };\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Picture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        author\n                                \n                                \n                                        legend\n                                \n                                \n                                        title\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiComponent.html":{"url":"components/PoiComponent.html","title":"component - PoiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi/poi.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi\n            \n\n            \n                styleUrls\n                ./poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                offline\n                            \n                            \n                                poi\n                            \n                            \n                                typePois\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi/poi.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        poi\n                    \n                \n                \n                    \n                        Type :         Poi\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        typePois\n                    \n                \n                \n                    \n                        Type :         DataSetting | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi/poi.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi/poi.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Picture, Poi, Trek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-poi',\n  templateUrl: './poi.component.html',\n  styleUrls: ['./poi.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PoiComponent implements OnChanges {\n  @Input() public poi: Poi;\n  @Input() public offline = false;\n  @Input() public commonSrc: string;\n  @Input() public typePois: DataSetting | undefined;\n\n  public baseUrl = environment.onlineBaseUrl;\n  public picture: Picture | null = null;\n  public typeImgSrc: string | null = null;\n\n  constructor(public offlineTreks: OfflineTreksService, public onlineTreks: OnlineTreksService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.poi) {\n      if (this.typePois && this.poi.properties.type) {\n        const currentTypePoi = this.typePois.values.find(typePoi => typePoi.id === this.poi.properties.type);\n        if (currentTypePoi) {\n          this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n        }\n      }\n\n      if (this.poi.properties.pictures.length > 0) {\n        this.picture = this.poi.properties.pictures[0];\n        if (this.offline) {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.offlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        } else {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.onlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n          };\n        }\n      } else {\n        this.picture = null;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ picture!.legend }}\n      ({{ picture!.author }})\n    \n  \n  \n    \n      \n      \n        {{ poi.properties.name }}\n      \n    \n  \n  \n    \n      \n        \n      \n    \n\n    \n      \n        Information pratiques\n        \n      \n    \n\n    \n      \n        Contact\n        \n        \n           {{ poi.properties.email }} \n        \n        \n           {{ poi.properties.website }} \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi.component.scss\n                \n                .card-header-container {\n  align-items: flex-end;\n  display: flex;\n  .img-header {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ picture!.legend }}      ({{ picture!.author }})                                {{ poi.properties.name }}                                                            Information pratiques                                    Contact                           {{ poi.properties.email }}                            {{ poi.properties.website }}                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiDetailsComponent.html":{"url":"components/PoiDetailsComponent.html","title":"component - PoiDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PoiDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/poi-details/poi-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi-details\n            \n\n            \n                styleUrls\n                ./poi-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./poi-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                baseUrl\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                picture\n                            \n                            \n                                    Public\n                                poi\n                            \n                            \n                                    Public\n                                poiImg\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                settingsSub\n                            \n                            \n                                    Public\n                                typeImgSrc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ionViewWillEnter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, navParams: NavParams, settings: SettingsService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/poi-details/poi-details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.onlineBaseUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            picture\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Picture | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            poiImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeImgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/poi-details/poi-details.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { Poi, Picture, Trek } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-poi-details',\n  templateUrl: './poi-details.component.html',\n  styleUrls: ['./poi-details.component.scss'],\n})\nexport class PoiDetailsComponent {\n  public offline = false;\n  public baseUrl = environment.onlineBaseUrl;\n  public poi: Poi;\n  public poiImg = '';\n  public typeImgSrc: string | null = null;\n  public settingsSub: Subscription;\n  public picture: Picture | null = null;\n  public commonSrc: string;\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navParams: NavParams,\n    public settings: SettingsService,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n  ) {}\n\n  ionViewWillEnter() {\n    this.poi = this.navParams.get('poi');\n    this.offline = this.navParams.get('offline');\n    this.commonSrc = this.navParams.get('commonSrc');\n\n    if (\n      this.poi &&\n      this.poi.properties &&\n      this.poi.properties.pictures &&\n      this.poi.properties.pictures.length > 0 &&\n      this.poi.properties.pictures[0].url\n    ) {\n      this.picture = this.poi.properties.pictures[0];\n      if (this.offline) {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.offlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n        };\n      } else {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.onlineTreks.getTrekImageSrc({} as Trek, this.poi.properties.pictures[0]),\n        };\n      }\n    } else {\n      this.picture = null;\n    }\n\n    this.settingsSub = this.settings.data$.subscribe(settings => {\n      if (settings) {\n        const typePois = settings.find(setting => setting.id === 'poi_types');\n\n        if (typePois && this.poi.properties.type) {\n          const currentTypePoi = typePois.values.find(typePoi => typePoi.id === this.poi.properties.type);\n          if (currentTypePoi) {\n            this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n          }\n        }\n      }\n    });\n  }\n\n  close(): void {\n    this.settingsSub.unsubscribe();\n    this.modalCtrl.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ poi.properties.name }}\n  \n\n\n\n  \n    \n      \n      \n        \n        {{ poi.properties.pictures[0]?.legend }}\n        ({{ poi.properties.pictures[0].author }})\n      \n    \n\n    \n      \n        \n          \n        \n      \n\n      \n        \n          trek.details.usefulInformation\n          \n        \n      \n\n      \n        \n          trek.details.contact\n          \n          \n             {{ poi.properties.email }} \n          \n          \n             {{ poi.properties.website }} \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poi-details.component.scss\n                \n                .card-legend {\n  align-items: flex-end;\n  display: flex;\n  .img-legend {\n    max-width: 32px;\n    max-height: 32px;\n    margin-right: 16px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ poi.properties.name }}                                    {{ poi.properties.pictures[0]?.legend }}        ({{ poi.properties.pictures[0].author }})                                                                            trek.details.usefulInformation                                                trek.details.contact                                 {{ poi.properties.email }}                                  {{ poi.properties.website }}                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PoiDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pois.html":{"url":"interfaces/Pois.html","title":"interface - Pois","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Pois\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressComponent.html":{"url":"components/ProgressComponent.html","title":"component - ProgressComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/progress/progress.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress\n            \n\n            \n                styleUrls\n                ./progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentProgress\n                            \n                            \n                                    Private\n                                currentProgress$\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                ionViewWillLeave\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(offlineTreks: OfflineTreksService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/progress/progress.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentProgress$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/progress/progress.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  changeDetection: ChangeDetectionStrategy.Default,\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss'],\n})\nexport class ProgressComponent {\n  public currentProgress: number;\n  private currentProgress$: Subscription;\n\n  constructor(public offlineTreks: OfflineTreksService, private ref: ChangeDetectorRef) {}\n\n  ionViewWillEnter(): void {\n    this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(val => {\n      this.currentProgress = val;\n      this.ref.detectChanges();\n    });\n  }\n\n  ionViewWillLeave(): void {\n    this.currentProgress$.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ 'trek.downloadAlert.loading' | translate }}\n        \n        \n          \n          \n        \n      \n      \n        \n          \n          \n            {{ 'trek.downloadAlert.storage' | translate }}\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./progress.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ \\'trek.downloadAlert.loading\\' | translate }}                                                                                                {{ \\'trek.downloadAlert.storage\\' | translate }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Property.html":{"url":"interfaces/Property.html","title":"interface - Property","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Property\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        pictogram\n                                \n                                \n                                            Optional\n                                        slug\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                SearchTreksService\n                \n            \n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentMaxTreks\n                            \n                            \n                                    Public\n                                currentSearchValue\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Private\n                                treks\n                            \n                            \n                                    Public\n                                treksByStep\n                            \n                            \n                                    Public\n                                viewIsLoad\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                expandTreks\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                navigateToTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Public\n                                trackTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, searchTreks: SearchTreksService, navParams: NavParams, platform: Platform, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/search/search.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchTreks\n                                                  \n                                                        \n                                                                        SearchTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            expandTreks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    expandTreks(infiniteScroll: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infiniteScroll\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackTrek(index: number, element: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/search/search.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentMaxTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentSearchValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTreks | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksByStep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewIsLoad\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\n\nimport { MinimalTrek, MinimalTreks, Trek } from '@app/interfaces/interfaces';\nimport { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\n\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchTreksService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchComponent extends UnSubscribe implements OnInit {\n  public filteredTreks: MinimalTrek[] = [];\n  public currentSearchValue: string;\n  public viewIsLoad = false;\n  private treks: MinimalTreks | null = null;\n  public treksByStep = 30;\n  public currentMaxTreks = 30;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private searchTreks: SearchTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n    private ref: ChangeDetectorRef,\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const isOnline = this.navParams.get('isOnline');\n    const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      treksTool.treks$.subscribe(treks => {\n        this.treks = treks;\n        if (this.treks) {\n          this.filteredTreks = this.searchTreks.search(this.treks.features, '');\n        }\n        this.viewIsLoad = true;\n        this.ref.detectChanges();\n      }),\n    );\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public search(searchValue: string): void {\n    this.currentSearchValue = searchValue;\n    if (this.treks) {\n      this.filteredTreks = this.searchTreks.search(this.treks.features, searchValue);\n    } else {\n      this.filteredTreks = [];\n    }\n  }\n\n  public navigateToTrek(id: number) {\n    this.modalCtrl.dismiss(id);\n  }\n\n  public trackTrek(index: number, element: Trek): number | null {\n    return element ? element.properties.id : null;\n  }\n\n  public expandTreks(infiniteScroll: any) {\n    if (this.currentMaxTreks  this.filteredTreks.length) {\n        this.currentMaxTreks = this.filteredTreks.length;\n      } else {\n        this.currentMaxTreks += this.treksByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ 'search.title' | translate | uppercase }}\n  \n  \n    \n    \n  \n\n\n\n  \n    \n      \n    \n  \n  \n     0; else userMsg\">\n      \n        {{ trek.properties.name }}\n        \n      \n    \n    \n      \n        \n          \n            {{ 'search.noResult' | translate }}\n          \n        \n      \n    \n    \n       \n    \n  \n\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                .loader-container {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9;\n  background: rgba(189, 195, 199, 0.5);\n}\n\n.progress-loader {\n  width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ \\'search.title\\' | translate | uppercase }}                                       0; else userMsg\">              {{ trek.properties.name }}                                                          {{ \\'search.noResult\\' | translate }}                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchTreksService.html":{"url":"injectables/SearchTreksService.html","title":"injectable - SearchTreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchTreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-treks/search-treks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(treks: MinimalTrek[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search-treks/search-treks.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treks\n                                    \n                                            MinimalTrek[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinimalTrek[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MinimalTrek } from '@app/interfaces/interfaces';\nimport { deburr } from 'lodash';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchTreksService {\n  public search(treks: MinimalTrek[], searchValue: string): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n    if (!!!searchValue) {\n      return treks.sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n    }\n    searchValue = searchValue.toLowerCase();\n    return treks\n      .filter(trek => {\n        return deburr(trek.properties.name.toLowerCase()).includes(searchValue);\n      })\n      .sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectFilterComponent.html":{"url":"components/SelectFilterComponent.html","title":"component - SelectFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/select-filter/select-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-filter\n            \n\n            \n                styleUrls\n                ./select-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./select-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentMaxFilterValues\n                            \n                            \n                                filterValuesByStep\n                            \n                            \n                                selectedItems\n                            \n                            \n                                temporaryFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                expandFilterValues\n                            \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                            \n                                    Public\n                                trackFilterValues\n                            \n                            \n                                    Public\n                                valueChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commonSrc\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalController: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/select-filter/select-filter.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commonSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :         Filter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            expandFilterValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    expandFilterValues(infiniteScroll: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infiniteScroll\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            trackFilterValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trackFilterValues(index: number, element: FilterValue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                FilterValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            valueChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueChanged(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/select-filter/select-filter.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentMaxFilterValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterValuesByStep\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 20\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            temporaryFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Filter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/select-filter/select-filter.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-select-filter',\n  templateUrl: './select-filter.component.html',\n  styleUrls: ['./select-filter.component.scss'],\n})\nexport class SelectFilterComponent implements OnInit {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  selectedItems: any[];\n  currentMaxFilterValues = 20;\n  filterValuesByStep = 20;\n  temporaryFilter: Filter;\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {}\n\n  ionViewDidEnter(): void {\n    this.temporaryFilter = this.filter;\n  }\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ temporaryFilter: this.temporaryFilter });\n  }\n\n  public expandFilterValues(infiniteScroll: any): void {\n    if (this.currentMaxFilterValues  this.filter.values.length) {\n        this.currentMaxFilterValues = this.filter.values.length;\n      } else {\n        this.currentMaxFilterValues += this.filterValuesByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n\n  public trackFilterValues(index: number, element: FilterValue): number | null {\n    return element ? element.id : null;\n  }\n\n  public valueChanged(event: { checked: boolean; value: FilterValue }): void {\n    const filterValue = this.temporaryFilter.values.find(value => value.id === event.value.id);\n    if (filterValue) {\n      filterValue.checked = event.checked;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ filter.values.length + ' ' + filter.name }}\n  \n\n\n\n  \n  \n\n  \n     \n  \n\n\n\n  \n    \n      \n        {{ 'filters.cancelButton' | translate }}\n      \n      \n        {{ 'filters.confirmButton' | translate }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./select-filter.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ filter.values.length + \\' \\' + filter.name }}                                   {{ \\'filters.cancelButton\\' | translate }}                    {{ \\'filters.confirmButton\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        filters\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         DataSetting[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataSetting[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Filter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                data$\n                            \n                            \n                                    Public\n                                filters$\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                order$\n                            \n                            \n                                    Public\n                                storage\n                            \n                            \n                                    Public\n                                userLocation$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFilters\n                            \n                            \n                                    Public\n                                getHydratedTrek\n                            \n                            \n                                    Public\n                                getSettings\n                            \n                            \n                                    Public\n                                getTouristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                getValueForPropertyById\n                            \n                            \n                                    Public\n                                loadSettings\n                            \n                            \n                                    Public\n                                resetFilters\n                            \n                            \n                                    Public\n                                saveFiltersState\n                            \n                            \n                                    Public\n                                saveOrderState\n                            \n                            \n                                    Private\n                                    Async\n                                setOfflineSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, storage: Storage, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings/settings.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilters(settings: Settings)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                Settings\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHydratedTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHydratedTrek(trek: Trek)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HydratedTrek\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTouristicCategoriesWithFeatures\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTouristicCategoriesWithFeatures(touristicContents: TouristicContents)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    touristicContents\n                                    \n                                                TouristicContents\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TouristicCategoryWithFeatures[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueForPropertyById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueForPropertyById(propertyName: string, id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    propertyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Property | InformationDesk | TouristicCategorie | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveFiltersState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveFiltersState(filters: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveOrderState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveOrderState(order: Order, geolocation?: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    geolocation\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            setOfflineSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setOfflineSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings/settings.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.onlineBaseUrl}`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filters$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            order$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject({\n    type: 'default',\n    value: undefined,\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Storage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userLocation$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([0, 0])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings/settings.service.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  Trek,\n  Filter,\n  Settings,\n  DataSetting,\n  HydratedTrek,\n  Property,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  TouristicCategorie,\n  Order,\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public filters$ = new BehaviorSubject(null);\n  public order$ = new BehaviorSubject({\n    type: 'default',\n    value: undefined,\n  });\n  // User location, used for ordering treks by distance\n  public userLocation$ = new BehaviorSubject([0, 0]);\n  public data$ = new BehaviorSubject(null);\n\n  constructor(public http: HttpClient, public storage: Storage, private translate: TranslateService) {}\n\n  public loadSettings() {\n    this.setOfflineSettings();\n\n    this.getSettings().subscribe(async settings => {\n      await this.storage.set('settings', JSON.stringify(settings));\n      this.filters$.next(this.getFilters(settings));\n      this.data$.next(settings.data);\n    });\n  }\n\n  private async setOfflineSettings() {\n    const defaultSettings = JSON.parse(await this.storage.get(`settings`));\n    if (defaultSettings) {\n      this.filters$.next(this.getFilters(defaultSettings));\n      this.data$.next(defaultSettings.data);\n    }\n  }\n\n  private getFilters(settings: Settings) {\n    const filters: Filter[] = [];\n    if (settings && settings.filters && settings.data) {\n      settings.filters.forEach(filter => {\n        const currentDataSetting = settings.data.find((data: DataSetting) => data.id === filter.id);\n        if (currentDataSetting) {\n          filter = { ...filter, ...currentDataSetting, values: [] };\n          filter.values = currentDataSetting.values.map(value => ({\n            ...value,\n            checked: false,\n          }));\n          filters.push(filter);\n        }\n      });\n    }\n\n    return filters;\n  }\n\n  public getSettings(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang(),\n      }),\n    };\n    return this.http.get(this.apiUrl + '/settings.json', httpOptions);\n  }\n\n  public saveFiltersState(filters: Filter[]): void {\n    this.filters$.next(filters);\n  }\n\n  public saveOrderState(order: Order, geolocation?: number[]): void {\n    this.order$.next({ type: order, value: geolocation });\n  }\n\n  public resetFilters(): void {\n    let filters = cloneDeep(this.filters$.getValue());\n    if (!!filters) {\n      filters.forEach(filter => {\n        filter.values.forEach(value => (value.checked = false));\n      });\n    } else {\n      filters = [];\n    }\n    this.saveFiltersState(filters);\n  }\n\n  private getValueForPropertyById(\n    propertyName: string,\n    id: number | string,\n  ): Property | InformationDesk | TouristicCategorie | string {\n    const dataSetting = this.data$.getValue();\n\n    if (dataSetting) {\n      const property = dataSetting.find(data => data.id === propertyName);\n      if (property) {\n        const propertyValue = property.values.find(value => value.id === id);\n        if (propertyValue) {\n          return propertyValue;\n        } else {\n          return { id: -1, name: '' };\n        }\n      }\n    }\n\n    return { id: -1, name: '' };\n  }\n\n  public getHydratedTrek(trek: Trek): HydratedTrek {\n    const hydratedTrek: HydratedTrek = cloneDeep(trek) as any;\n\n    if (trek.properties.difficulty) {\n      hydratedTrek.properties.difficulty = this.getValueForPropertyById(\n        'difficulty',\n        trek.properties.difficulty,\n      ) as Property;\n    }\n\n    if (trek.properties.practice) {\n      hydratedTrek.properties.practice = this.getValueForPropertyById('practice', trek.properties.practice) as Property;\n    }\n\n    if (trek.properties.route) {\n      hydratedTrek.properties.route = this.getValueForPropertyById('route', trek.properties.route) as Property;\n    }\n\n    if (trek.properties.departure_city) {\n      hydratedTrek.properties.departure_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.departure_city,\n      ) as Property;\n    }\n\n    if (trek.properties.arrival_city) {\n      hydratedTrek.properties.arrival_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.arrival_city,\n      ) as Property;\n    }\n\n    if (trek.properties.cities) {\n      hydratedTrek.properties.cities = trek.properties.cities.map(\n        city => this.getValueForPropertyById('cities', city) as Property,\n      );\n    }\n\n    if (trek.properties.networks) {\n      hydratedTrek.properties.networks = trek.properties.networks.map(\n        network => this.getValueForPropertyById('networks', network) as Property,\n      );\n    }\n\n    if (trek.properties.themes) {\n      hydratedTrek.properties.themes = trek.properties.themes.map(\n        theme => this.getValueForPropertyById('themes', theme) as Property,\n      );\n    }\n\n    if (trek.properties.information_desks) {\n      hydratedTrek.properties.information_desks.forEach(information_desk => {\n        information_desk.type = this.getValueForPropertyById(\n          'information_desk_types',\n          information_desk.type as number,\n        ) as Property;\n      });\n    }\n\n    return hydratedTrek;\n  }\n\n  public getTouristicCategoriesWithFeatures(touristicContents: TouristicContents): TouristicCategoryWithFeatures[] {\n    const touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[] = [];\n    if (touristicContents && Array.isArray(touristicContents.features)) {\n      const categories = touristicContents.features\n        .map(touristicContent => touristicContent.properties.category)\n        .filter((v, i, a) => a.indexOf(v) === i);\n      categories.forEach(categoryId => {\n        const category = this.getValueForPropertyById('touristiccontent_categories', categoryId) as TouristicCategorie;\n        touristicCategoriesWithFeatures.push({\n          id: categoryId,\n          name: category ? category.name : '',\n          features: touristicContents.features.filter(\n            touristicContent => touristicContent.properties.category === categoryId,\n          ),\n        });\n      });\n    }\n\n    return touristicCategoriesWithFeatures;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedFiltersModule.html":{"url":"modules/SharedFiltersModule.html","title":"module - SharedFiltersModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedFiltersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedFiltersModule\n\n\n\ncluster_SharedFiltersModule_declarations\n\n\n\ncluster_SharedFiltersModule_exports\n\n\n\n\nFilterComponent\n\nFilterComponent\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\nSharedFiltersModule -->\n\nFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nSharedFiltersModule -->\n\nFilterValueComponent->SharedFiltersModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nSharedFiltersModule -->\n\nFiltersComponent->SharedFiltersModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSharedFiltersModule -->\n\nSearchComponent->SharedFiltersModule\n\n\n\n\n\nSelectFilterComponent\n\nSelectFilterComponent\n\nSharedFiltersModule -->\n\nSelectFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterComponent \n\nFilterComponent \n\nFilterComponent  -->\n\nSharedFiltersModule->FilterComponent \n\n\n\n\n\nFilterValueComponent \n\nFilterValueComponent \n\nFilterValueComponent  -->\n\nSharedFiltersModule->FilterValueComponent \n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nSharedFiltersModule->FiltersComponent \n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSharedFiltersModule->SearchComponent \n\n\n\n\n\nSelectFilterComponent \n\nSelectFilterComponent \n\nSelectFilterComponent  -->\n\nSharedFiltersModule->SelectFilterComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-filters.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            FiltersComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilterComponent\n                        \n                        \n                            FilterValueComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SelectFilterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { FilterComponent } from '@app/components/filter/filter.component';\nimport { FilterValueComponent } from '@app/components/filter-value/filter-value.component';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SearchComponent } from '@app/components/search/search.component';\n\n@NgModule({\n  declarations: [FiltersComponent, FilterComponent, FilterValueComponent, SelectFilterComponent, SearchComponent],\n  imports: [CommonModule, TranslateModule.forChild()],\n  entryComponents: [FiltersComponent, SelectFilterComponent],\n  exports: [FiltersComponent, FilterComponent, FilterValueComponent, SelectFilterComponent, SearchComponent],\n})\nexport class SharedFiltersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GeolocateNotificationsComponent\n                        \n                        \n                            MapTrekVizComponent\n                        \n                        \n                            MapTreksVizComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { GeolocateNotificationsComponent } from '@app/components/geolocate-notifications/geolocate-notifications.component';\nimport { MapTrekVizComponent } from '@app/components/map-trek-viz/map-trek-viz.component';\nimport { MapTreksVizComponent } from '@app/components/map-treks-viz/map-treks-viz.component';\n\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n  imports: [CommonModule, IonicModule, TranslateModule.forChild()],\n  exports: [MapTreksVizComponent, MapTrekVizComponent, GeolocateNotificationsComponent],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedTreksModule.html":{"url":"modules/SharedTreksModule.html","title":"module - SharedTreksModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedTreksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiComponent\n                        \n                        \n                            TrekCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PoiComponent } from '@app/components/poi/poi.component';\nimport { TrekCardComponent } from '@app/components/trek-card/trek-card.component';\nimport { CustomPipesModule } from './custom-pipes.module';\n\n@NgModule({\n  declarations: [PoiComponent, TrekCardComponent],\n  imports: [CommonModule, IonicModule, RouterModule, TranslateModule.forChild(), CustomPipesModule],\n  exports: [PoiComponent, TrekCardComponent],\n})\nexport class SharedTreksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CollapsibleListComponent\n                        \n                        \n                            ConnectErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapsibleListComponent } from '@app/components/collapsible-list/collapsible-list.component';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectErrorComponent } from '@app/components/connect-error/connect-error.component';\nimport { LoaderComponent } from '@app/components/loader/loader.component';\n\n@NgModule({\n  declarations: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n  imports: [CommonModule, IonicModule, RouterModule],\n  exports: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tabs/tabs.page.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss'],\n})\nexport class TabsPage {\n  constructor(private platform: Platform, private router: Router, private location: Location) {\n    this.platform.backButton.subscribeWithPriority(9999, () => {\n      const url = this.router.url;\n      if (url !== '/app/tabs/treks' && url !== '/app/tabs/treks-offline' && url !== '/app/tabs/more') {\n        this.location.back();\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ 'tabbar.treks' | translate }}\n    \n    \n      \n      {{ 'tabbar.offline' | translate }}\n    \n    \n      \n      {{ 'tabbar.more' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ \\'tabbar.treks\\' | translate }}                    {{ \\'tabbar.offline\\' | translate }}                    {{ \\'tabbar.more\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MorePageModule\n                        \n                        \n                            SharedUiModule\n                        \n                        \n                            TabsPageRoutingModule\n                        \n                        \n                            TreksPageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\nimport { TabsPageRoutingModule } from './tabs.routing.module';\nimport { TreksPageModule } from '../treks/treks.module';\nimport { MorePageModule } from '../more/more.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n    TreksPageModule,\n    MorePageModule,\n    TranslateModule.forChild(),\n    SharedUiModule,\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { TreksPage } from '../treks/treks.page';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'treks',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            resolve: {\n              context: TreksContextResolver,\n            },\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { isStage: true },\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n          },\n        ],\n      },\n      {\n        path: 'treks-offline',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            data: { offline: true },\n            resolve: {\n              context: TreksContextResolver,\n            },\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true },\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren: '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true, isStage: true },\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n            data: { offline: true },\n          },\n        ],\n      },\n      {\n        path: 'more',\n        children: [\n          {\n            path: '',\n            loadChildren: '../more/more.module#MorePageModule',\n          },\n          {\n            path: ':moreItemId',\n            loadChildren: '../more/more-item/more-item.module#MoreItemPageModule',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    path: '',\n    redirectTo: '/app/tabs/treks',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TabsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategorie.html":{"url":"interfaces/TouristicCategorie.html","title":"interface - TouristicCategorie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategorie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategoryWithFeatures.html":{"url":"interfaces/TouristicCategoryWithFeatures.html","title":"interface - TouristicCategoryWithFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategoryWithFeatures\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContent.html":{"url":"interfaces/TouristicContent.html","title":"interface - TouristicContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContents.html":{"url":"interfaces/TouristicContents.html","title":"interface - TouristicContents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvent.html":{"url":"interfaces/TouristicEvent.html","title":"interface - TouristicEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvents.html":{"url":"interfaces/TouristicEvents.html","title":"interface - TouristicEvents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         TouristicEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trek.html":{"url":"interfaces/Trek.html","title":"interface - Trek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Trek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Feature\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        geometry\n                                \n                                \n                                        properties\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:         TrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TrekProperties\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekCardComponent.html":{"url":"components/TrekCardComponent.html","title":"component - TrekCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrekCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trek-card/trek-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-card\n            \n\n            \n                styleUrls\n                ./trek-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hydratedTrek\n                            \n                            \n                                    Public\n                                imgPracticeSrc\n                            \n                            \n                                    Public\n                                imgSrc\n                            \n                            \n                                    Public\n                                offlineTreks\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                routerLink\n                            \n                            \n                                    Public\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickDeleteConfirm\n                            \n                            \n                                    Private\n                                    Async\n                                deleteTrek\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                presentDeleteConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isStage\n                            \n                            \n                                numStage\n                            \n                            \n                                offline\n                            \n                            \n                                parentId\n                            \n                            \n                                showAllData\n                            \n                            \n                                trek\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertController: AlertController, loadingController: LoadingController, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, settings: SettingsService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trek-card/trek-card.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isStage\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        numStage\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offline\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showAllData\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trek\n                    \n                \n                \n                    \n                        Type :         Trek\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clickDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clickDeleteConfirm($event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            deleteTrek\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTrek()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            presentDeleteConfirm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentDeleteConfirm(isAlert?: boolean, alertMsg?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/trek-card/trek-card.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isAlert\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    alertMsg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hydratedTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HydratedTrek\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgPracticeSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OfflineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routerLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/trek-card/trek-card.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Trek, HydratedTrek, Picture } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trek-card',\n  templateUrl: './trek-card.component.html',\n  styleUrls: ['./trek-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TrekCardComponent implements OnInit {\n  @Input() public trek: Trek;\n  @Input() public offline = false;\n  @Input() public showAllData: boolean;\n  @Input() public isStage = false;\n  @Input() public numStage = 0;\n  @Input() public parentId: number | undefined = undefined;\n\n  public hydratedTrek: HydratedTrek;\n  public imgSrc: string;\n  public routerLink: string;\n  public imgPracticeSrc: string;\n\n  constructor(\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    public settings: SettingsService,\n    private translate: TranslateService,\n  ) {}\n\n  ngOnInit() {\n    this.hydratedTrek = this.settings.getHydratedTrek(this.trek);\n    if (this.offline) {\n      this.imgSrc = this.offlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.offlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram,\n          } as Picture,\n        );\n      }\n    } else {\n      this.imgSrc = this.onlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.onlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram,\n          } as Picture,\n        );\n      }\n    }\n\n    if (this.isStage) {\n      this.routerLink = `/app/tabs/treks${this.offline ? '-offline' : ''}/trek-details/${this.parentId}/${\n        this.trek.properties.id\n      }`;\n    } else {\n      this.routerLink = `/app/tabs/treks${this.offline ? '-offline' : ''}/trek-details/${this.trek.properties.id}`;\n    }\n  }\n\n  public clickDeleteConfirm($event: Event) {\n    $event.stopPropagation();\n    this.presentDeleteConfirm();\n  }\n\n  private async deleteTrek() {\n    const translationTrekCard = await this.translate.get('trekCard').toPromise();\n\n    const loader = await this.loadingController.create({\n      message: translationTrekCard.deletionInProgress,\n    });\n    await loader.present();\n\n    this.offlineTreks\n      .removeTrek(this.isStage && this.parentId ? this.parentId : this.trek.properties.id, true)\n      .subscribe(\n        () => {},\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(true, translationTrekCard.errorWhileDeleting);\n        },\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(true, translationTrekCard.trekIsDelete);\n        },\n      );\n  }\n\n  private async presentDeleteConfirm(isAlert?: boolean, alertMsg?: string) {\n    const translationTrekCard = await this.translate.get('trekCard').toPromise();\n    const deleteConfirm = await this.alertController.create({\n      header: translationTrekCard.deleteTitle,\n      message: isAlert ? alertMsg : translationTrekCard.askDelete,\n      buttons: isAlert\n        ? [translationTrekCard.confirmButton]\n        : [\n            {\n              text: translationTrekCard.cancelButton,\n              role: 'cancel',\n              cssClass: 'secondary',\n            },\n            {\n              text: translationTrekCard.deleteLabel,\n              handler: () => {\n                this.deleteTrek();\n              },\n            },\n          ],\n    });\n\n    await deleteConfirm.present();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n  \n    \n    \n      \n        {{ isStage ? ('trek.details.stage' | translate) + ' ' + numStage + ' - ' : '' }}\n        {{ hydratedTrek.properties?.name }}\n      \n    \n  \n  \n    \n      \n        {{ 'treks.departure' | translate }}\n        \n          {{ hydratedTrek.properties.departure_city?.name }}\n        \n        {{ hydratedTrek.properties.departure }}\n      \n      \n        \n          \n        \n        {{ hydratedTrek.properties.difficulty?.name }}\n        \n          {{ hydratedTrek.properties.duration | lowerRound | number: '1.0-0' }}h 0\"\n            >{{ 60 * (hydratedTrek.properties.duration % 1) | number: '1.0-0' }}min\n        \n        = 24 && showAllData\">\n          {{ hydratedTrek.properties.duration / 24 | number: '1.0-0' }}j\n        \n        \n          {{ hydratedTrek.properties.length / 1000 | number: '1.1-1':'fr' }} km\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-card.component.scss\n                \n                .trash-button {\n  position: absolute;\n  z-index: 10;\n  top: 12px;\n  right: 12px;\n}\n\n.extand-card {\n  height: calc(100% - 20px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.picto-practice {\n  max-width: 24px;\n  max-height: 24px;\n}\n\n.extra-content-card {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.ellipsis {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.minimize-title {\n  font-size: 15px;\n}\n\n.minimize-padding-bottom {\n  padding-bottom: 8px;\n}\n\n.no-padding-top {\n  padding-top: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ isStage ? (\\'trek.details.stage\\' | translate) + \\' \\' + numStage + \\' - \\' : \\'\\' }}        {{ hydratedTrek.properties?.name }}                                {{ \\'treks.departure\\' | translate }}                  {{ hydratedTrek.properties.departure_city?.name }}                {{ hydratedTrek.properties.departure }}                                              {{ hydratedTrek.properties.difficulty?.name }}                  {{ hydratedTrek.properties.duration | lowerRound | number: \\'1.0-0\\' }}h 0\"            >{{ 60 * (hydratedTrek.properties.duration % 1) | number: \\'1.0-0\\' }}min                = 24 && showAllData\">          {{ hydratedTrek.properties.duration / 24 | number: \\'1.0-0\\' }}j                          {{ hydratedTrek.properties.length / 1000 | number: \\'1.1-1\\':\\'fr\\' }} km                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekContext.html":{"url":"interfaces/TrekContext.html","title":"interface - TrekContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonSrc\n                                \n                                \n                                        isStage\n                                \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        originalTrek\n                                \n                                \n                                        parentTrek\n                                \n                                \n                                        pois\n                                \n                                \n                                        touristicCategoriesWithFeatures\n                                \n                                \n                                        touristicContents\n                                \n                                \n                                        touristicEvents\n                                \n                                \n                                        trek\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonSrc\n                                    \n                                \n                                \n                                    \n                                        commonSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStage\n                                    \n                                \n                                \n                                    \n                                        isStage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     MapboxOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MapboxOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalTrek\n                                    \n                                \n                                \n                                    \n                                        originalTrek:         Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentTrek\n                                    \n                                \n                                \n                                    \n                                        parentTrek:         Trek | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:         Pois\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pois\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicCategoriesWithFeatures\n                                    \n                                \n                                \n                                    \n                                        touristicCategoriesWithFeatures:         TouristicCategoryWithFeatures[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicCategoryWithFeatures[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicContents\n                                    \n                                \n                                \n                                    \n                                        touristicContents:         TouristicContents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicContents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        touristicEvents\n                                    \n                                \n                                \n                                    \n                                        touristicEvents:         TouristicEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TouristicEvents\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trek\n                                    \n                                \n                                \n                                    \n                                        trek:         HydratedTrek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HydratedTrek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TrekContextResolver.html":{"url":"guards/TrekContextResolver.html","title":"guard - TrekContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TrekContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/trek.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, offlineTreks: OfflineTreksService, onlineTreks: OnlineTreksService, router: Router, settingsService: SettingsService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/trek.resolver.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settingsService\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/trek.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Pois,\n  Trek,\n  HydratedTrek,\n  TrekContext,\n  TreksService,\n  TouristicContents,\n  TouristicEvents,\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class TrekContextResolver implements Resolve {\n  constructor(\n    private loading: LoadingService,\n    private offlineTreks: OfflineTreksService,\n    private onlineTreks: OnlineTreksService,\n    private router: Router,\n    private settingsService: SettingsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const offline = !!route.data['offline'];\n    const isStage = !!route.data['isStage'];\n    const trekId = +(route.paramMap.get('trekId'));\n    const stageId = +(route.paramMap.get('stageId'));\n    const currentTrekId = isStage ? stageId : trekId;\n    const parentId: number | undefined = isStage ? trekId : undefined;\n\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n\n    return forkJoin(\n      treksService.getTrekById(currentTrekId, parentId),\n      treksService.getPoisForTrekById(currentTrekId, parentId),\n      treksService.getTouristicContentsForTrekById(currentTrekId, parentId),\n      treksService.getTouristicEventsForTrekById(currentTrekId, parentId),\n      isStage && parentId ? treksService.getTrekById(parentId) : of(null),\n    ).pipe(\n      map(\n        ([trek, pois, touristicContents, touristicEvents, parentTrek]: [\n          Trek | null,\n          Pois,\n          TouristicContents,\n          TouristicEvents,\n          Trek | null\n        ]): TrekContext | null => {\n          if (trek === null) {\n            this.router.navigate(['/']);\n            console.error('No trek found: ', currentTrekId);\n            return null;\n          } else {\n            const mapConfig: MapboxOptions = treksService.getMapConfigForTrekById(trek, offline);\n            const hydratedTrek: HydratedTrek = this.settingsService.getHydratedTrek(trek);\n            const commonSrc = treksService.getCommonImgSrc();\n            const touristicCategoriesWithFeatures = this.settingsService.getTouristicCategoriesWithFeatures(\n              touristicContents,\n            );\n\n            if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n              this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}  ${trek.properties.name}`);\n            }\n\n            // get parent trek to display trek name\n            // trek stage\n            // trek previous\n            // trek next\n\n            return {\n              treksTool: treksService,\n              offline: offline,\n              originalTrek: trek,\n              trek: hydratedTrek,\n              pois,\n              touristicContents,\n              touristicCategoriesWithFeatures,\n              touristicEvents,\n              mapConfig,\n              commonSrc,\n              isStage,\n              parentTrek,\n            };\n          }\n        },\n      ),\n      catchError((error: HttpErrorResponse) => {\n        this.loading.finish(); // there are two requests. finish loading if one fails\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekDetailsPageModule.html":{"url":"modules/TrekDetailsPageModule.html","title":"module - TrekDetailsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekDetailsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekDetailsPageModule_imports\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-details/trek-details.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekDetailsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TrekDetailsPage } from './trek-details.page';\nimport { CustomPipesModule } from '@app/shared/custom-pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver,\n    },\n    component: TrekDetailsPage,\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedTreksModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n    CustomPipesModule,\n  ],\n  declarations: [TrekDetailsPage],\n})\nexport class TrekDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekMapPage.html":{"url":"components/TrekMapPage.html","title":"component - TrekMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TrekMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/trek-map/trek-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-map\n            \n\n            \n                styleUrls\n                ./trek-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./trek-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                connectionError\n                            \n                            \n                                    Public\n                                currentPois\n                            \n                            \n                                    Public\n                                currentTrek\n                            \n                            \n                                    Public\n                                loader\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Public\n                                modalPoiDetails\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Public\n                                touristicCategoriesWithFeatures\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                trekUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                    Public\n                                navigateToChildren\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                presentInformationDeskDetails\n                            \n                            \n                                    Public\n                                    Async\n                                presentPoiDetails\n                            \n                            \n                                    Public\n                                refresh\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, modalController: ModalController, route: ActivatedRoute, router: Router, settings: SettingsService, platform: Platform, popoverCtrl: PopoverController, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/trek-map/trek-map.page.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popoverCtrl\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigateToChildren\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateToChildren(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentInformationDeskDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentInformationDeskDetails(informationDesk: InformationDesk)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    informationDesk\n                                    \n                                                InformationDesk\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentPoiDetails\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPoiDetails(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            refresh\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/trek-map/trek-map.page.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connectionError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPois\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Pois\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTrek\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HydratedTrek | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalPoiDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLIonModalElement | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            touristicCategoriesWithFeatures\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TouristicCategoryWithFeatures[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trekUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/trek-map/trek-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ModalController, Platform, PopoverController } from '@ionic/angular';\n\nimport { MapboxOptions } from 'mapbox-gl';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport {\n  HydratedTrek,\n  Poi,\n  Pois,\n  TrekContext,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TreksService,\n} from '@app/interfaces/interfaces';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-trek-map',\n  templateUrl: './trek-map.page.html',\n  styleUrls: ['./trek-map.page.scss'],\n})\nexport class TrekMapPage extends UnSubscribe implements OnDestroy {\n  public currentTrek: HydratedTrek | null = null;\n  public currentPois: Pois;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public loader = true;\n  public trekUrl = '';\n  public connectionError = false;\n  public modalPoiDetails: HTMLIonModalElement | null;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public offline = false;\n  private treksTool: TreksService;\n\n  constructor(\n    private loading: LoadingService,\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public settings: SettingsService,\n    private platform: Platform,\n    private popoverCtrl: PopoverController,\n    private location: Location,\n  ) {\n    super();\n  }\n\n  ionViewDidEnter(): void {\n    this.loading.begin('trek-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data): void => {\n        const context: TrekContext | 'connectionError' = data.context;\n        if (context === 'connectionError') {\n          this.connectionError = true;\n          this.loading.finish('trek-map'); // if there is a connection error, map won't be loaded\n        } else {\n          this.connectionError = false;\n          this.offline = context.offline;\n          this.currentTrek = context.trek;\n          this.currentPois = context.pois;\n          this.touristicCategoriesWithFeatures = context.touristicCategoriesWithFeatures;\n          this.mapConfig = context.mapConfig;\n          this.treksTool = context.treksTool;\n          this.commonSrc = context.treksTool.getCommonImgSrc();\n          this.trekUrl = context.treksTool.getTrekDetailsUrl((this.currentTrek as any).properties.id);\n        }\n      }),\n    );\n\n    if (this.platform.is('android')) {\n      this.subscriptions$$.push(\n        this.platform.backButton.subscribeWithPriority(99999, async () => {\n          // close popover\n          try {\n            const popover = await this.popoverCtrl.getTop();\n            if (popover) {\n              popover.dismiss();\n              return;\n            }\n\n            const modal = await this.modalController.getTop();\n            if (modal) {\n              modal.dismiss();\n              return;\n            }\n\n            this.location.back();\n          } catch (error) {}\n        }),\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  public async presentPoiDetails(poi: Poi): Promise {\n    if (this.modalPoiDetails) {\n      await this.modalPoiDetails.dismiss();\n    }\n\n    this.modalPoiDetails = await this.modalController.create({\n      component: PoiDetailsComponent,\n      componentProps: { poi, offline: this.offline, commonSrc: this.commonSrc },\n    });\n\n    this.modalPoiDetails.onDidDismiss().then(() => {\n      this.modalPoiDetails = null;\n    });\n\n    return await this.modalPoiDetails.present();\n  }\n\n  public async presentInformationDeskDetails(informationDesk: InformationDesk): Promise {\n    const modal = await this.modalController.create({\n      component: InformationDeskDetailsComponent,\n      componentProps: { informationDesk },\n    });\n    return await modal.present();\n  }\n\n  public mapIsLoaded(event: Event): void {\n    this.loading.finish('trek-map');\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n  public navigateToChildren(id: number) {\n    if (this.currentTrek) {\n      this.router.navigate([this.treksTool.getTrekDetailsUrl(id, this.currentTrek.properties.id)]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{ currentTrek!.properties.name }}\n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./trek-map.page.scss\n                \n                .bottom-container {\n  z-index: 8;\n  position: absolute;\n  bottom: 0;\n  padding: 0px 7px 5px 7px;\n  width: 100%;\n}\n\nion-header {\n  .custom-title {\n    padding-left: 20px;\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: 0.0125em;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ currentTrek!.properties.name }}                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrekMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekMapPageModule.html":{"url":"modules/TrekMapPageModule.html","title":"module - TrekMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TrekMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TrekMapPageModule_imports\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/trek-map/trek-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrekMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TrekMapPage } from './trek-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrekMapPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver,\n    },\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n  ],\n  declarations: [TrekMapPage],\n})\nexport class TrekMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekProperties.html":{"url":"interfaces/TrekProperties.html","title":"interface - TrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrekProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MinimalTrekProperties\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access\n                                \n                                \n                                        advice\n                                \n                                \n                                        advised_parking\n                                \n                                \n                                        arrival\n                                \n                                \n                                            Optional\n                                        arrival_city\n                                \n                                \n                                        ascent\n                                \n                                \n                                        children\n                                \n                                \n                                        cities\n                                \n                                \n                                        departure\n                                \n                                \n                                            Optional\n                                        departure_city\n                                \n                                \n                                        description\n                                \n                                \n                                        description_teaser\n                                \n                                \n                                        duration\n                                \n                                \n                                        information_desks\n                                \n                                \n                                        is_park_centered\n                                \n                                \n                                        networks\n                                \n                                \n                                        pictures\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Treks\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:         InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InformationDesk[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:         Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Picture[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Treks.html":{"url":"interfaces/Treks.html","title":"interface - Treks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Treks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Extends\n            \n            \n                    FeatureCollection\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        features\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:         Trek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Trek[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksContext.html":{"url":"interfaces/TreksContext.html","title":"interface - TreksContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mapConfig\n                                \n                                \n                                        offline\n                                \n                                \n                                        treksTool\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:         TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TreksService\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TreksContextResolver.html":{"url":"guards/TreksContextResolver.html","title":"guard - TreksContextResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    TreksContextResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/resolvers/treks.resolver.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(onlineTreks: OnlineTreksService, offlineTreks: OfflineTreksService, platform: Platform, firebaseAnalytics: FirebaseAnalytics)\n                    \n                \n                        \n                            \n                                Defined in src/app/resolvers/treks.resolver.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offlineTreks\n                                                  \n                                                        \n                                                                        OfflineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseAnalytics\n                                                  \n                                                        \n                                                                    FirebaseAnalytics\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/resolvers/treks.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nimport { TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\n@Injectable()\nexport class TreksContextResolver implements Resolve {\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics,\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline ? this.offlineTreks : this.onlineTreks;\n    const mapConfig =\n      offline && (this.platform.is('ios') || this.platform.is('android'))\n        ? environment.offlineMapConfig\n        : environment.onlineMapConfig;\n\n    if ((this.platform.is('ios') || this.platform.is('android')) && environment.useFirebase) {\n      this.firebaseAnalytics.setCurrentScreen(`${(route.component as any).name}`);\n    }\n\n    return of({\n      treksTool: treksService,\n      offline: offline,\n      mapConfig,\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksMapPage.html":{"url":"components/TreksMapPage.html","title":"component - TreksMapPage","body":"\n                   \n\n\n\n\n\n  Components\n  TreksMapPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/treks-map/treks-map.page.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                FilterTreksService\n                \n            \n\n\n            \n                selector\n                app-treks-map\n            \n\n            \n                styleUrls\n                ./treks-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-map.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appName\n                            \n                            \n                                    Public\n                                commonSrc\n                            \n                            \n                                    Public\n                                currentPosition$\n                            \n                            \n                                    Public\n                                filteredTreks\n                            \n                            \n                                    Public\n                                isInView\n                            \n                            \n                                    Public\n                                loaderStatus\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                mapConfig\n                            \n                            \n                                    Private\n                                mergeFiltersTreks$\n                            \n                            \n                                    Public\n                                noNetwork\n                            \n                            \n                                    Public\n                                numberOfActiveFilters\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                    Public\n                                onlineTreks\n                            \n                            \n                                    Public\n                                settings\n                            \n                            \n                                    Private\n                                treksTool\n                            \n                            \n                                    Public\n                                treksUrl\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewDidEnter\n                            \n                            \n                                ionViewDidLeave\n                            \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                mapIsLoaded\n                            \n                            \n                                navigateToTrek\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                presentFilters\n                            \n                            \n                                    Public\n                                    Async\n                                presentSearch\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingService, filterTreks: FilterTreksService, modalController: ModalController, onlineTreks: OnlineTreksService, router: Router, route: ActivatedRoute, settings: SettingsService, network: Network, platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/treks-map/treks-map.page.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterTreks\n                                                  \n                                                        \n                                                                        FilterTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        onlineTreks\n                                                  \n                                                        \n                                                                        OnlineTreksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                    Network\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewDidLeave\n                        \n                        \n                    \n                \n            \n            \n                \nionViewDidLeave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            mapIsLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapIsLoaded(loaded: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loaded\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToTrek\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToTrek(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/treks-map/treks-map.page.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : environment.appName\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            commonSrc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentPosition$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filteredTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MinimalTrek[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInView\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoadingService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mapConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MapboxOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mergeFiltersTreks$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            noNetwork\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numberOfActiveFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            offline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onlineTreks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OnlineTreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SettingsService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            treksTool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TreksService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treksUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/treks-map/treks-map.page.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { environment } from '@env/environment';\nimport { unsubscribe, UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { MinimalTrek, TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, mergeMap, first, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-treks-map',\n  templateUrl: './treks-map.page.html',\n  styleUrls: ['./treks-map.page.scss'],\n  providers: [FilterTreksService],\n})\nexport class TreksMapPage extends UnSubscribe implements OnInit, OnDestroy {\n  private mergeFiltersTreks$: Subscription;\n  public filteredTreks: MinimalTrek[];\n  public numberOfActiveFilters: string;\n  public offline: boolean;\n  private treksTool: TreksService;\n  public isInView = false;\n  public treksUrl: string;\n  public appName: string = environment.appName;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public currentPosition$: Subscription;\n  public noNetwork = false;\n  public loaderStatus: Boolean;\n\n  constructor(\n    public loading: LoadingService,\n    private filterTreks: FilterTreksService,\n    private modalController: ModalController,\n    public onlineTreks: OnlineTreksService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public settings: SettingsService,\n    private network: Network,\n    private platform: Platform,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.loading.begin('treks-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe(data => {\n        const context: TreksContext = data.context;\n        this.offline = context.offline;\n        this.treksTool = context.treksTool;\n        this.treksUrl = this.treksTool.getTreksUrl();\n        this.mapConfig = cloneDeep(context.mapConfig);\n        this.commonSrc = this.treksTool.getCommonImgSrc();\n      }),\n      this.onlineTreks.onlineTreksError$.subscribe(error => {\n        if (!!error) {\n          this.loading.finish(); // if there was a connection error, map could not be loaded\n        }\n      }),\n      this.loading.status.pipe(delay(0)).subscribe(status => (this.loaderStatus = status)),\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  ionViewWillEnter(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n\n  ionViewDidEnter(): void {\n    this.mapIsLoaded(false);\n    this.mergeFiltersTreks$ = combineLatest(\n      this.route.data.pipe(\n        first(),\n        map(data => data.context),\n        mergeMap((context: TreksContext) => context.treksTool.filteredTreks$),\n      ),\n      this.filterTreks.activeFiltersNumber$,\n    ).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n      this.numberOfActiveFilters = numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n      this.filteredTreks = filteredTreks;\n      this.isInView = true;\n    });\n    this.subscriptions$$.push(this.mergeFiltersTreks$);\n  }\n\n  ionViewDidLeave(): void {\n    this.isInView = false;\n    unsubscribe(this.mergeFiltersTreks$);\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size',\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size',\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public mapIsLoaded(loaded: boolean): void {\n    if (loaded) {\n      this.loading.finish('treks-map');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n     {{ appName }} \n  \n   0)\n    \"\n  >\n    \n      \n        \n          \n            {{ 'toolbar.filters' | translate }} {{ numberOfActiveFilters }}\n          \n            {{ 'toolbar.search' | translate }}\n        \n      \n    \n  \n\n\n\n  \n  \n    \n    \n  \n  \n    \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-map.page.scss\n                \n                .custom-button {\n  width: 100px;\n  text-transform: capitalize;\n}\n\n.button-margin-left {\n  margin-left: 12px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ appName }}      0)    \"  >                                        {{ \\'toolbar.filters\\' | translate }} {{ numberOfActiveFilters }}                      {{ \\'toolbar.search\\' | translate }}                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksMapPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksMapPageModule.html":{"url":"modules/TreksMapPageModule.html","title":"module - TreksMapPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksMapPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule_imports\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks-map/treks-map.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksMapPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { TreksMapPage } from './treks-map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TreksMapPage,\n    resolve: {\n      context: TreksContextResolver\n    }\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, IonicModule, RouterModule.forChild(routes), SharedModule, SharedUiModule, TranslateModule.forChild()],\n  declarations: [TreksMapPage],\n})\nexport class TreksMapPageModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksOrderComponent.html":{"url":"components/TreksOrderComponent.html","title":"component - TreksOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreksOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/treks-order/treks-order.component.ts\n\n\n\n    \n        Extends\n    \n    \n                UnSubscribe\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treks-order\n            \n\n            \n                styleUrls\n                ./treks-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./treks-order.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentOrder\n                            \n                            \n                                isFirstCheck\n                            \n                            \n                                orders\n                            \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ionViewWillEnter\n                            \n                            \n                                    Public\n                                    Async\n                                treksOrderChange\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navParams: NavParams, settings: SettingsService, platform: Platform, backgroundGeolocation: BackgroundGeolocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        settings\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backgroundGeolocation\n                                                  \n                                                        \n                                                                    BackgroundGeolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ionViewWillEnter\n                        \n                        \n                    \n                \n            \n            \n                \nionViewWillEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            treksOrderChange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    treksOrderChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/treks-order/treks-order.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         UnSubscribe\n\n                \n            \n            \n                \n                        Defined in         UnSubscribe:11\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirstCheck\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/treks-order/treks-order.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         UnSubscribe\n\n                                \n                            \n                        \n                            \n                                    Defined in         UnSubscribe:5\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\nimport { NavParams, Platform } from '@ionic/angular';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Order } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-treks-order',\n  templateUrl: './treks-order.component.html',\n  styleUrls: ['./treks-order.component.scss'],\n})\nexport class TreksOrderComponent extends UnSubscribe {\n  orders: any;\n  currentOrder: Order;\n  isFirstCheck = true;\n\n  constructor(\n    private navParams: NavParams,\n    private settings: SettingsService,\n    private platform: Platform,\n    private backgroundGeolocation: BackgroundGeolocation,\n  ) {\n    super();\n  }\n\n  ionViewWillEnter() {\n    this.orders = this.navParams.get('orders');\n\n    this.subscriptions$$.push(\n      this.settings.order$.subscribe(order => {\n        this.currentOrder = order.type;\n      }),\n    );\n  }\n\n  public async treksOrderChange(event: any) {\n    if (!this.isFirstCheck) {\n      if (event.detail.value === 'location') {\n        if (this.platform.is('ios') || this.platform.is('android')) {\n          const startLocation = await this.backgroundGeolocation.getCurrentLocation();\n          if (startLocation) {\n            this.settings.saveOrderState(event.detail.value, [startLocation.longitude, startLocation.latitude]);\n          } else {\n            // If location not provided, reset default order\n            this.settings.saveOrderState('default');\n          }\n        } else if ('geolocation' in navigator) {\n          navigator.geolocation.getCurrentPosition(position => {\n            this.settings.saveOrderState(event.detail.value, [position.coords.longitude, position.coords.latitude]);\n          });\n        }\n      } else {\n        this.settings.saveOrderState(event.detail.value);\n      }\n    } else {\n      this.isFirstCheck = false;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'toolbar.orderTitle' | translate }}\n    \n    \n      {{ order.name }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./treks-order.component.scss\n                \n                .no-lines {\n  --inner-border-width: 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'toolbar.orderTitle\\' | translate }}              {{ order.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollapsibleListComponent', 'selector': 'app-collapsible-list'},{'name': 'ConnectErrorComponent', 'selector': 'app-connect-error'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FiltersComponent', 'selector': 'app-filters'},{'name': 'FilterValueComponent', 'selector': 'app-filter-value'},{'name': 'GeolocateNotificationsComponent', 'selector': 'app-geolocate-notifications'},{'name': 'InformationDeskDetailsComponent', 'selector': 'app-information-desk-details'},{'name': 'LayersVisibilityComponent', 'selector': 'app-layers-visibility'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MapTreksVizComponent', 'selector': 'app-map-treks-viz'},{'name': 'MapTrekVizComponent', 'selector': 'app-map-trek-viz'},{'name': 'MoreItemPage', 'selector': 'app-more-item'},{'name': 'MorePage', 'selector': 'app-more'},{'name': 'PoiComponent', 'selector': 'app-poi'},{'name': 'PoiDetailsComponent', 'selector': 'app-poi-details'},{'name': 'ProgressComponent', 'selector': 'app-progress'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SelectFilterComponent', 'selector': 'app-select-filter'},{'name': 'TabsPage', 'selector': 'app-tabs'},{'name': 'TrekCardComponent', 'selector': 'app-trek-card'},{'name': 'TrekDetailsPage', 'selector': 'app-trek-details'},{'name': 'TrekMapPage', 'selector': 'app-trek-map'},{'name': 'TreksMapPage', 'selector': 'app-treks-map'},{'name': 'TreksOrderComponent', 'selector': 'app-treks-order'},{'name': 'TreksPage', 'selector': 'app-treks'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreksOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksPageModule.html":{"url":"modules/TreksPageModule.html","title":"module - TreksPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TreksPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\ncluster_TreksPageModule_imports\n\n\n\n\nTreksPage\n\nTreksPage\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/treks/treks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TreksPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedTreksModule\n                        \n                        \n                            SharedUiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { FiltersComponentModule } from '@app/components/filters/filters.module';\n\nimport { RouterModule } from '@angular/router';\nimport { TreksPage } from './treks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedTreksModule,\n    SharedUiModule,\n    FiltersComponentModule,\n    RouterModule.forChild([]),\n    TranslateModule.forChild(),\n  ],\n  declarations: [TreksPage],\n})\nexport class TreksPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksService.html":{"url":"interfaces/TreksService.html","title":"interface - TreksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TreksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filteredTreks$\n                                \n                                \n                                        offline\n                                \n                                \n                                        treks$\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getCommonImgSrc\n                                \n                                \n                                    getMapConfigForTrekById\n                                \n                                \n                                    getPoisForTrekById\n                                \n                                \n                                    getTouristicContentsForTrekById\n                                \n                                \n                                    getTouristicEventsForTrekById\n                                \n                                \n                                    getTrekById\n                                \n                                \n                                    getTrekDetailsUrl\n                                \n                                \n                                    getTrekImageSrc\n                                \n                                \n                                    getTrekMapUrl\n                                \n                                \n                                    getTreksMapUrl\n                                \n                                \n                                    getTreksUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCommonImgSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCommonImgSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMapConfigForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetMapConfigForTrekById(trek: Trek, isOffline: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isOffline\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MapboxOptions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoisForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoisForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicContentsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicContentsForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTouristicEventsForTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTouristicEventsForTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekById(id: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekDetailsUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekDetailsUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekImageSrc(trek: Trek, picture?: Picture)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trek\n                                    \n                                                Trek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    picture\n                                    \n                                                Picture\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrekMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrekMapUrl(trekId: number, parentId?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trekId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksMapUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksMapUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTreksUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetTreksUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/interfaces.ts:260\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filteredTreks$\n                                    \n                                \n                                \n                                    \n                                        filteredTreks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treks$\n                                    \n                                \n                                \n                                    \n                                        treks$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'default' | 'location' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(id: number, parentId?: number): Observable;\n  getTouristicEventsForTrekById(id: number, parentId?: number): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnSubscribe.html":{"url":"classes/UnSubscribe.html","title":"class - UnSubscribe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnSubscribe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/abstract/unsubscribe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            OnDestroy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                subscriptions$$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subscriptions$$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/abstract/unsubscribe.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/abstract/unsubscribe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nexport class UnSubscribe implements OnInit, OnDestroy {\n  protected subscriptions$$: Subscription[];\n\n  constructor() {\n    this.subscriptions$$ = [];\n  }\n\n  ngOnInit() {\n    if (!!this.subscriptions$$) {\n      this.subscriptions$$ = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$$.forEach((subscription: Subscription) => unsubscribe(subscription));\n    this.subscriptions$$ = [];\n  }\n\n}\n\nexport function unsubscribe(subscription: Subscription) {\n  if (subscription && subscription.unsubscribe) {\n    subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            noAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            class\n            UnSubscribe\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/abstract/unsubscribe.ts\n            \n            function\n            unsubscribe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/collapsible-list/collapsible-list.component.ts\n            \n            component\n            CollapsibleListComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/connect-error/connect-error.component.ts\n            \n            component\n            ConnectErrorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter-value/filter-value.component.ts\n            \n            component\n            FilterValueComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            component\n            GeolocateNotificationsComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/information-desk-details/information-desk-details.component.ts\n            \n            component\n            InformationDeskDetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/layers-visibility/layers-visibility.component.ts\n            \n            component\n            LayersVisibilityComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            component\n            MapTrekVizComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            component\n            MapTreksVizComponent\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            variable\n            mapboxgl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/poi-details/poi-details.component.ts\n            \n            component\n            PoiDetailsComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/poi/poi.component.ts\n            \n            component\n            PoiComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/progress/progress.component.ts\n            \n            component\n            ProgressComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/select-filter/select-filter.component.ts\n            \n            component\n            SelectFilterComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/trek-card/trek-card.component.ts\n            \n            component\n            TrekCardComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/treks-order/treks-order.component.ts\n            \n            component\n            TreksOrderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            ContainsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            DataSetting\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Filter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            FilterValue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            HydratedTrekProperties\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationDesk\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationIntro\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            InformationItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            IntervalFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTrekProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            MinimalTreks\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Picture\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Poi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Pois\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Property\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Settings\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategorie\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicCategoryWithFeatures\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicContents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TouristicEvents\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Trek\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekContext\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TrekProperties\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            Treks\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/interfaces.ts\n            \n            interface\n            TreksService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/pages/more/more-item/more-item.page.ts\n            \n            component\n            MoreItemPage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/more/more.page.ts\n            \n            component\n            MorePage\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/trek-details/trek-details.page.ts\n            \n            component\n            TrekDetailsPage\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/pages/trek-map/trek-map.page.ts\n            \n            component\n            TrekMapPage\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/pages/treks-map/treks-map.page.ts\n            \n            component\n            TreksMapPage\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/pages/treks/treks.page.ts\n            \n            component\n            TreksPage\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/pipes/lower-round.pipe.ts\n            \n            pipe\n            LowerRoundPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/resolvers/more-item.resolver.ts\n            \n            guard\n            MoreItemResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/more.resolver.ts\n            \n            guard\n            MoreResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/trek.resolver.ts\n            \n            guard\n            TrekContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/resolvers/treks.resolver.ts\n            \n            guard\n            TreksContextResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            injectable\n            FilterTreksService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            variable\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/geolocate/geolocate.service.ts\n            \n            injectable\n            GeolocateService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            injectable\n            LoadingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/loading/loading.service.ts\n            \n            interceptor\n            LoadingInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/more-informations/more-informations.service.ts\n            \n            injectable\n            MoreInformationsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            injectable\n            OfflineTreksService\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            injectable\n            OnlineTreksService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/services/online-treks/online-treks.service.ts\n            \n            variable\n            cloneDeep\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/search-treks/search-treks.service.ts\n            \n            injectable\n            SearchTreksService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/settings/settings.service.ts\n            \n            injectable\n            SettingsService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/variables.ts\n            \n            variable\n            primaryColor\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.3\n        \n            @angular/common : ^8.2.3\n        \n            @angular/core : ^8.2.3\n        \n            @angular/forms : ^8.2.3\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^8.2.3\n        \n            @angular/platform-browser-dynamic : ^8.2.3\n        \n            @angular/router : ^8.2.3\n        \n            @ionic-native/background-geolocation : ^5.12.0\n        \n            @ionic-native/core : ^5.12.0\n        \n            @ionic-native/file : ^5.12.0\n        \n            @ionic-native/firebase-analytics : ^5.12.0\n        \n            @ionic-native/globalization : ^5.12.0\n        \n            @ionic-native/ionic-webview : ^5.12.0\n        \n            @ionic-native/local-notifications : ^5.12.0\n        \n            @ionic-native/network : ^5.12.0\n        \n            @ionic-native/screen-orientation : ^5.12.0\n        \n            @ionic-native/social-sharing : ^5.12.0\n        \n            @ionic-native/splash-screen : ^5.12.0\n        \n            @ionic-native/status-bar : ^5.12.0\n        \n            @ionic-native/zip : ^5.12.0\n        \n            @ionic/angular : ^4.8.1\n        \n            @ionic/storage : ^2.2.0\n        \n            @mauron85/cordova-plugin-background-geolocation : ^3.0.5\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @turf/distance : ^6.0.1\n        \n            @turf/helpers : ^6.1.4\n        \n            @types/lodash.clonedeep : ^4.5.6\n        \n            @types/lodash.deburr : ^4.1.6\n        \n            @types/mapbox-gl : ^0.54.3\n        \n            cordova-android : ^8.0.0\n        \n            cordova-android-play-services-gradle-release : 3.0.0\n        \n            cordova-ios : 5.0.1\n        \n            cordova-plugin-badge : ^0.8.8\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : 6.0.1\n        \n            cordova-plugin-firebase-analytics : ^2.0.4\n        \n            cordova-plugin-globalization : 1.11.0\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^4.1.1\n        \n            cordova-plugin-local-notification : git+https://github.com/Steffaan/cordova-plugin-local-notifications.git\n        \n            cordova-plugin-mauron85-background-geolocation : 3.0.1\n        \n            cordova-plugin-network-information : 2.0.1\n        \n            cordova-plugin-screen-orientation : 3.0.1\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-plugin-x-socialsharing : 5.4.4\n        \n            cordova-plugin-zip : 3.1.0\n        \n            cordova-sqlite-storage : 3.0.0\n        \n            cordova-support-android-plugin : ^1.0.1\n        \n            cordova-support-google-services : ^1.3.2\n        \n            core-js : ^3.2.1\n        \n            es6-promise-plugin : 4.2.2\n        \n            lodash.clonedeep : ^4.5.0\n        \n            lodash.deburr : ^4.1.0\n        \n            mapbox-gl : ^1.2.1\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ^0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            noAnimation   (src/.../app.module.ts)\n                        \n                        \n                            unsubscribe   (src/.../unsubscribe.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            noAnimation\n                        \n                        \n                    \n                \n            \n            \n                \nnoAnimation(AnimationC)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    AnimationC\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/components/abstract/unsubscribe.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe(subscription)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGeotrek Mobile\nMobile application of Geotrek Rando (http://geotrek.fr).\nINSTALLATION\nBefore proceeding, make sure the latest version of Node.js and npm are installed\nnpm install -g ionic@5.1.0\n\nnpm install -g cordova@9.0.0\n\ngit clone git@github.com:GeotrekCE/Geotrek-mobile.git\n\ncd Geotrek-mobile\n\nnpm installRUN THE APP IN THE BROWSER\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.ts' with your personal api url\nionic serveRUN THE APP ON DEVICE\n/!\\ The run argument build the apk, then install it on the device\niOS\nNeed iOS environment setup available only on macOS\nionic cordova run iosAndroid\nNeed Android environment setup available on Windows, macOS and Linux\nionic cordova run androidBUILD RELEASE APP\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environments.prod.ts' with your personal api url\n/!\\ The build argument just build the apk, but don't install it on the device\niOS\nionic cordova build ios --prod --releaseAndroid\nionic cordova build android --prod --releaseCUSTOMIZATION OPTIONS\nYou can find below all available options. You can easily overwrite them to customize your app.\nconfig.xml\nApp id\nApp name\nGeotrek Startersrc/environments/environment.ts & environment.prod.ts\nYou can overwrite a lot of options inside these files:AppName (header of the app) , availableLanguage, api url, map options and more\nenvironment.prod.ts will be use for developmentenvironment.prod.ts will be use for release app\nsrc/assets/i18n\nYou can find all the internationalization ressources here (by default Fr and En)\nsrc/assets/map/icons/\nLocal icons to display on the map, like departure or parking icon\nsrc/assets/map/zone/zone.geojson\nGeosjon to display on the mapGenerally represents the limits of the geographical area of the application\nsrc/theme/variables.scss\nColors that will be usedThe most important point here is the primary color to customize your application\nicons and splashscreen\n\nThe source image for icons should ideally be at least 1024×1024px and located in resources/icon.png\n\nThe source image for splash screens should ideally be at least 2732×2732px and located in resources/splash.png. For best results, the splash screen's artwork should roughly fit within a square (1200×1200px) at the center of the image.\n\n\nThen you just have to run\nionic cordova resourcesOther resources\n\nAll others resources are provided by the api\nWe download a global package for offline mode when user downloads his first trek\n\nFirebase Analytics Configuration\nIn order to use Firebase analytics, you had to create a Firebase App.\n\nThen store google-services.json and GoogleService-Info.plist in ./Analytics/\nIn config.xml, add\n\n  \n    \n    ...\n  \n  \n    \n    ...\n  \nSet true to useFirebase variable in environment files\n\nRemove Firebase Analytics\nIn order to build the app without Firebase you had to\n\nSet false to useFirebase variable in environment files\n\nRun this list of command\n(If you add platforms previously, be sure to delete them)\n\n\n    ionic cordova platform rm android\n\n    ionic cordova platform rm ios\n\n    ionic cordova plugin rm cordova-plugin-firebase-analytics\n\n    ionic cordova plugin rm cordova-android-play-services-gradle-release\n\n    ionic cordova plugin rm cordova-support-google-services\n\n    ionic cordova plugin rm cordova-support-android-plugin\n\n    ionic cordova platform add android\n\n    ionic cordova build androidDocumentation\nAccess to extensive documentation\nLICENCE\n\nOpenSource - BSD\nCopyright (c) Makina Corpus - Parc National des Écrins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause License\nCopyright (c) 2019, Makina Corpus\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomPipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersComponentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoreItemPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MorePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedFiltersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedTreksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekDetailsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrekMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksMapPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TreksPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CustomPipesModule\n\n\n\ncluster_CustomPipesModule_declarations\n\n\n\ncluster_CustomPipesModule_exports\n\n\n\ncluster_FiltersComponentModule\n\n\n\ncluster_FiltersComponentModule_imports\n\n\n\ncluster_MoreItemPageModule\n\n\n\ncluster_MoreItemPageModule_declarations\n\n\n\ncluster_MoreItemPageModule_imports\n\n\n\ncluster_MorePageModule\n\n\n\ncluster_MorePageModule_declarations\n\n\n\ncluster_SharedFiltersModule\n\n\n\ncluster_SharedFiltersModule_declarations\n\n\n\ncluster_SharedFiltersModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedTreksModule\n\n\n\ncluster_SharedTreksModule_declarations\n\n\n\ncluster_SharedTreksModule_exports\n\n\n\ncluster_SharedUiModule\n\n\n\ncluster_SharedUiModule_declarations\n\n\n\ncluster_SharedUiModule_exports\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\ncluster_TrekDetailsPageModule\n\n\n\ncluster_TrekDetailsPageModule_declarations\n\n\n\ncluster_TrekMapPageModule\n\n\n\ncluster_TrekMapPageModule_declarations\n\n\n\ncluster_TreksMapPageModule\n\n\n\ncluster_TreksMapPageModule_declarations\n\n\n\ncluster_TreksPageModule\n\n\n\ncluster_TreksPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nInformationDeskDetailsComponent\n\nInformationDeskDetailsComponent\n\nAppModule -->\n\nInformationDeskDetailsComponent->AppModule\n\n\n\n\n\nLayersVisibilityComponent\n\nLayersVisibilityComponent\n\nAppModule -->\n\nLayersVisibilityComponent->AppModule\n\n\n\n\n\nPoiDetailsComponent\n\nPoiDetailsComponent\n\nAppModule -->\n\nPoiDetailsComponent->AppModule\n\n\n\n\n\nProgressComponent\n\nProgressComponent\n\nAppModule -->\n\nProgressComponent->AppModule\n\n\n\n\n\nTreksOrderComponent\n\nTreksOrderComponent\n\nAppModule -->\n\nTreksOrderComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingInterceptor\n\nLoadingInterceptor\n\nAppModule -->\n\nLoadingInterceptor->AppModule\n\n\n\n\n\nLowerRoundPipe\n\nLowerRoundPipe\n\n\n\nCustomPipesModule\n\nCustomPipesModule\n\nCustomPipesModule -->\n\nLowerRoundPipe->CustomPipesModule\n\n\n\n\n\nLowerRoundPipe \n\nLowerRoundPipe \n\nLowerRoundPipe  -->\n\nCustomPipesModule->LowerRoundPipe \n\n\n\n\n\nSharedFiltersModule\n\nSharedFiltersModule\n\n\n\nFiltersComponentModule\n\nFiltersComponentModule\n\nFiltersComponentModule -->\n\nSharedFiltersModule->FiltersComponentModule\n\n\n\n\n\nFilterComponent \n\nFilterComponent \n\nFilterComponent  -->\n\nSharedFiltersModule->FilterComponent \n\n\n\n\n\nFilterValueComponent \n\nFilterValueComponent \n\nFilterValueComponent  -->\n\nSharedFiltersModule->FilterValueComponent \n\n\n\n\n\nFiltersComponent \n\nFiltersComponent \n\nFiltersComponent  -->\n\nSharedFiltersModule->FiltersComponent \n\n\n\n\n\nSearchComponent \n\nSearchComponent \n\nSearchComponent  -->\n\nSharedFiltersModule->SearchComponent \n\n\n\n\n\nSelectFilterComponent \n\nSelectFilterComponent \n\nSelectFilterComponent  -->\n\nSharedFiltersModule->SelectFilterComponent \n\n\n\n\n\nMoreItemPage\n\nMoreItemPage\n\n\n\nMoreItemPageModule\n\nMoreItemPageModule\n\nMoreItemPageModule -->\n\nMoreItemPage->MoreItemPageModule\n\n\n\n\n\nSharedUiModule\n\nSharedUiModule\n\nMoreItemPageModule -->\n\nSharedUiModule->MoreItemPageModule\n\n\n\n\n\nMorePageModule\n\nMorePageModule\n\nMorePageModule -->\n\nSharedUiModule->MorePageModule\n\n\n\n\n\nCollapsibleListComponent \n\nCollapsibleListComponent \n\nCollapsibleListComponent  -->\n\nSharedUiModule->CollapsibleListComponent \n\n\n\n\n\nConnectErrorComponent \n\nConnectErrorComponent \n\nConnectErrorComponent  -->\n\nSharedUiModule->ConnectErrorComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedUiModule->LoaderComponent \n\n\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nSharedUiModule->TabsPageModule\n\n\n\n\n\nTreksPageModule\n\nTreksPageModule\n\nTreksPageModule -->\n\nSharedUiModule->TreksPageModule\n\n\n\n\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule\n\nTrekDetailsPageModule -->\n\nSharedUiModule->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPageModule\n\nTrekMapPageModule\n\nTrekMapPageModule -->\n\nSharedUiModule->TrekMapPageModule\n\n\n\n\n\nTreksMapPageModule\n\nTreksMapPageModule\n\nTreksMapPageModule -->\n\nSharedUiModule->TreksMapPageModule\n\n\n\n\n\nMorePage\n\nMorePage\n\nMorePageModule -->\n\nMorePage->MorePageModule\n\n\n\nTabsPageModule -->\n\nMorePageModule->TabsPageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nSharedFiltersModule -->\n\nFilterComponent->SharedFiltersModule\n\n\n\n\n\nFilterValueComponent\n\nFilterValueComponent\n\nSharedFiltersModule -->\n\nFilterValueComponent->SharedFiltersModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nSharedFiltersModule -->\n\nFiltersComponent->SharedFiltersModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nSharedFiltersModule -->\n\nSearchComponent->SharedFiltersModule\n\n\n\n\n\nSelectFilterComponent\n\nSelectFilterComponent\n\nSharedFiltersModule -->\n\nSelectFilterComponent->SharedFiltersModule\n\n\n\n\n\nGeolocateNotificationsComponent\n\nGeolocateNotificationsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nGeolocateNotificationsComponent->SharedModule\n\n\n\n\n\nMapTrekVizComponent\n\nMapTrekVizComponent\n\nSharedModule -->\n\nMapTrekVizComponent->SharedModule\n\n\n\n\n\nMapTreksVizComponent\n\nMapTreksVizComponent\n\nSharedModule -->\n\nMapTreksVizComponent->SharedModule\n\n\n\n\n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent \n\nGeolocateNotificationsComponent  -->\n\nSharedModule->GeolocateNotificationsComponent \n\n\n\n\n\nMapTrekVizComponent \n\nMapTrekVizComponent \n\nMapTrekVizComponent  -->\n\nSharedModule->MapTrekVizComponent \n\n\n\n\n\nMapTreksVizComponent \n\nMapTreksVizComponent \n\nMapTreksVizComponent  -->\n\nSharedModule->MapTreksVizComponent \n\n\n\nTrekMapPageModule -->\n\nSharedModule->TrekMapPageModule\n\n\n\nTreksMapPageModule -->\n\nSharedModule->TreksMapPageModule\n\n\n\n\n\nPoiComponent\n\nPoiComponent\n\n\n\nSharedTreksModule\n\nSharedTreksModule\n\nSharedTreksModule -->\n\nPoiComponent->SharedTreksModule\n\n\n\n\n\nTrekCardComponent\n\nTrekCardComponent\n\nSharedTreksModule -->\n\nTrekCardComponent->SharedTreksModule\n\n\n\n\n\nPoiComponent \n\nPoiComponent \n\nPoiComponent  -->\n\nSharedTreksModule->PoiComponent \n\n\n\n\n\nTrekCardComponent \n\nTrekCardComponent \n\nTrekCardComponent  -->\n\nSharedTreksModule->TrekCardComponent \n\n\n\nTreksPageModule -->\n\nSharedTreksModule->TreksPageModule\n\n\n\nTrekDetailsPageModule -->\n\nSharedTreksModule->TrekDetailsPageModule\n\n\n\n\n\nCollapsibleListComponent\n\nCollapsibleListComponent\n\nSharedUiModule -->\n\nCollapsibleListComponent->SharedUiModule\n\n\n\n\n\nConnectErrorComponent\n\nConnectErrorComponent\n\nSharedUiModule -->\n\nConnectErrorComponent->SharedUiModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedUiModule -->\n\nLoaderComponent->SharedUiModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\nTabsPageModule -->\n\nTreksPageModule->TabsPageModule\n\n\n\n\n\nTrekDetailsPage\n\nTrekDetailsPage\n\nTrekDetailsPageModule -->\n\nTrekDetailsPage->TrekDetailsPageModule\n\n\n\n\n\nTrekMapPage\n\nTrekMapPage\n\nTrekMapPageModule -->\n\nTrekMapPage->TrekMapPageModule\n\n\n\n\n\nTreksMapPage\n\nTreksMapPage\n\nTreksMapPageModule -->\n\nTreksMapPage->TreksMapPageModule\n\n\n\n\n\nTreksPage\n\nTreksPage\n\nTreksPageModule -->\n\nTreksPage->TreksPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    30 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        43 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    Order\n                \n            \n            \n                \n                        \"default\" | \"location\" | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneDeep   (src/.../offline-treks.service.ts)\n                        \n                        \n                            cloneDeep   (src/.../online-treks.service.ts)\n                        \n                        \n                            distance   (src/.../geolocate-notifications.component.ts)\n                        \n                        \n                            distance   (src/.../filter-treks.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-trek-viz.component.ts)\n                        \n                        \n                            mapboxgl   (src/.../map-treks-viz.component.ts)\n                        \n                        \n                            primaryColor   (src/.../variables.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/offline-treks/offline-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/services/online-treks/online-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneDeep\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.clonedeep')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/app/services/filter-treks/filter-treks.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            distance\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('@turf/distance').default\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: true,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en', 'it'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    attributionText:\n      '© OpenStreetMap contributors | © OpenTopoMap ',\n    addSoustractMaxBounds: 0.01,\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poiIconSize: 1,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1,\n    },\n    stagePaint: {\n      // style stage circle on parent map\n      'circle-color': '#fff',\n      'circle-stroke-color': '#000000',\n      'circle-radius': 14,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5,\n      },\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff',\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1],\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12,\n        },\n      },\n    },\n    touristicContentLayersProperties: {\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1,\n        },\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n  poiCollapseInitialSize: 5,\n  touristicContentCollapseInitialSize: 5,\n  containsFilterShouldUseSelectAbove: 7,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appName: 'Geotrek Starter', // app name used for app header\n  production: false,\n  useFirebase: false,\n  availableLanguage: ['fr', 'en', 'it'], // we assume that availableLanguage[0] is default language, or 'fr' if array is empty\n  mapbox: {\n    accessToken: null, // only if you use mapbox vector tiles\n  },\n  onlineBaseUrl: 'https://my-rando-domain.fr/mobile', // api url for app\n  onlineMapConfig: {\n    // default online map config, for this starter we use raster tiles from open topo map\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: [\n            'https://a.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://b.tile.opentopomap.org/{z}/{x}/{y}.png',\n            'https://c.tile.opentopomap.org/{z}/{x}/{y}.png',\n          ],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 17,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  offlineMapConfig: {\n    // offline map default config\n    attributionControl: false,\n    style: {\n      version: 8,\n      glyphs: './assets/map/{fontstack}/{range}.pbf',\n      sources: {\n        'tiles-background': {\n          type: 'raster',\n          tiles: ['/tiles/{z}/{x}/{y}.png'],\n          tileSize: 256,\n        },\n      },\n      layers: [\n        {\n          id: 'tiles-background',\n          type: 'raster',\n          source: 'tiles-background',\n          minzoom: 0,\n          maxzoom: 13,\n        },\n      ],\n    },\n    minZoom: 0,\n    maxZoom: 16,\n    zoom: 8,\n    center: [0.705824, 44.410157],\n  },\n  trekZoom: {\n    // zoom config for trek layer map\n    minZoom: 13,\n    maxZoom: 16,\n    zoom: 13,\n  },\n  map: {\n    attributionText:\n      '© OpenStreetMap contributors | © OpenTopoMap ',\n    addSoustractMaxBounds: 0.01,\n    globalMapIconSize: 1, // check your icon size, ideally it would be 48px*48px\n    informationIconSize: 1,\n    parkingIconSize: 0.6,\n    departureArrivalIconSize: 0.8,\n    poiIconSize: 1,\n    clusterPaint: {\n      // cluster style on map treks\n      'circle-color': primaryColor,\n      'circle-stroke-color': '#fff',\n      'circle-radius': 18,\n      'circle-stroke-width': 1,\n    },\n    stagePaint: {\n      // style stage circle on parent map\n      'circle-color': '#fff',\n      'circle-stroke-color': '#000000',\n      'circle-radius': 14,\n      'circle-stroke-width': 1,\n    },\n    zoneLayerProperties: {\n      // src/assets/map/zone/zone.geojson\n      // optionnal geojson to display on map\n      type: 'fill',\n      paint: {\n        'fill-color': primaryColor,\n        'fill-outline-color': '#625b5d',\n        'fill-opacity': 0.3,\n      },\n    },\n    zoneOutlineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-color': primaryColor,\n        'line-opacity': 1,\n        'line-width': 8,\n      },\n    },\n    trekLineLayerProperties: {\n      type: 'line',\n      paint: {\n        'line-width': 6,\n        'line-color': '#61B22F',\n      },\n    },\n    trekArrowLayerProperties: {\n      layout: {\n        'symbol-placement': 'line',\n        'symbol-spacing': 250,\n        'icon-size': 0.5,\n      },\n    },\n    pointReferenceLayersProperties: {\n      text: {\n        paint: {\n          'text-color': '#fff',\n        },\n        layout: {\n          'text-ignore-placement': true,\n          'text-allow-overlap': true,\n          'text-field': ['get', 'index'],\n          'text-font': ['Roboto Regular'],\n          'text-size': 12,\n          'text-offset': [0, 0.1],\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': '#f04141',\n          'circle-radius': 12,\n        },\n      },\n    },\n    touristicContentLayersProperties: {\n      icon: {\n        layout: {\n          'icon-image': ['concat', 'touristicContent', ['get', 'category']],\n          'icon-size': 1,\n          'icon-allow-overlap': true,\n          'icon-ignore-placement': true,\n        },\n      },\n      circle: {\n        paint: {\n          'circle-color': primaryColor,\n          'circle-stroke-color': '#fff',\n          'circle-radius': 16,\n          'circle-stroke-width': 1,\n        },\n      },\n    },\n  },\n  treksByStep: 15, // default number of treks to display on treks list\n  metersToNotify: 20, // notify poi within user position and [metersToNotify]\n  backgroundGeolocation: {\n    // native background geolocation options\n    desiredAccuracy: 10,\n    stationaryRadius: 3,\n    distanceFilter: 5,\n    interval: 3000,\n  },\n  poiCollapseInitialSize: 5,\n  touristicContentCollapseInitialSize: 5,\n  containsFilterShouldUseSelectAbove: 7,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mapboxgl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('mapbox-gl')\n                        \n                    \n\n\n            \n        \n\n    src/environments/variables.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            primaryColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#3880ff'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
