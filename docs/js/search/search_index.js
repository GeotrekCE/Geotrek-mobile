var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["1024×1024px","1200×1200px","2732×2732px","8","access","add","alreadi","analyt","android","androidbuild","androidtest","api","apiw","apk","app","applic","area","argument","artwork","avail","availablelanguag","befor","below","best","browser","bsd","build","c","center","clone","color","command","command(if","config.xml","configur","copyright","cordova","cordova@9.0.0git","corpu","creat","crin","custom","cypress","cypress:openheadless","cypress:rundocument","de","default","delet","departur","develop","developmentenvironment.prod.t","devic","display","document","don't","download","easier","easili","en","end","enough","environ","environment.prod.t","environment.t","extens","fals","file","files:appnam","fill","find","firebas","first","fit","fr","g","geograph","geosjon","geotrek","git@github.com:geotrekce/geotrek","global","googl","googleservic","gradl","header","here","http://geotrek.fr","icon","id","ideal","imag","import","index","info.plist","insid","instal","installed.it","installrun","instead","internation","io","ionic","ionic@5.4.11npm","iosandroid","java","jdk","kit","latest","licenc","limit","line","linux","list","local","locat","lot","maco","make","makina","map","mapgener","match","minimum","mobil","mobile.gitcd","mobilenpm","mode","more","name","nation","need","node.j","npm","nvm","offici","offlin","on","onlinebaseurl","open","openjdk","opensourc","option","oracl","order","other","overwrit","packag","parc","park","person","platform","play","plugin","point","previous","primari","proceed","prod","provid","rando","readm","releas","releaseandroid","releasecustom","remov","repres","requir","resourc","resources/icon.png","resources/splash.png","resourcesoth","ressourc","result","rm","roughli","run","screen","screen'","sdk","serverun","servic","services.json","set","setup","sourc","splash","splashscreen","squar","src/assets/i18n","src/assets/map/icon","src/assets/map/zone/zone.geojson","src/environments/environment.prod.t","src/environments/environment.t","src/theme/variables.scss","startersrc/environments/environment.t","store","support","sure","system","test","tool","trek","true","unsur","url","us","usedth","usefirebas","user","usual","variabl","verifi","version","window","within","without","work"],"overview.html":["1","13","14","16","29","30","browser","class","compon","inject","interfac","match","modul","out","overview","pipe","reset","result","rout","support","svg","zoom"],"modules.html":["appmodul","approutingmodul","brows","browser","custompipesmodul","filterscomponentmodul","match","modul","moreitempagemodul","morepagemodul","result","sharedfiltersmodul","sharedmodul","sharedtreksmodul","shareduimodul","support","svg","tabspagemodul","tabspageroutingmodul","trekdetailspagemodul","trekmappagemodul","treksmappagemodul","trekspagemodul"],"modules/AppModule.html":["analytics/ngx","angular/common","angular/common/http","angular/common/locales/fr","angular/cor","angular/platform","angular/rout","anim","animationc","app/app","app/app.compon","app/components/inform","app/components/lay","app/components/poi","app/components/progress/progress.compon","app/resolvers/mor","app/resolvers/more.resolv","app/resolvers/trek.resolv","app/resolvers/treks.resolv","app/services/loading/loading.servic","appcompon","appmodul","approutingmodul","assets/i18n","backgroundgeoloc","bar/ngx","bootstrap","browser","browser/anim","browseranimationsmodul","browsermodul","class","components/trek","createtranslateload","createtranslateloader(http","declar","dep","desk","details.compon","details/inform","details/poi","deviceorient","entrycompon","export","file","firebaseanalyt","fr","function","geolocation/ngx","global","http_interceptor","httpclient","httpclientmodul","import","info","informationdeskdetailscompon","ionic","ionic/angular","ionic/cor","ionic/storag","ionicmodul","ionicmodule.forroot","ionicroutestrategi","ionicstoragemodul","ionicstoragemodule.forroot","item.resolv","json","layersvisibilitycompon","loader","loadinginterceptor","localefr","localnotif","match","md","mode","modul","moreitemresolv","moreresolv","multi","native/background","native/devic","native/file/ngx","native/firebas","native/globalization/ngx","native/ion","native/loc","native/network/ngx","native/screen","native/soci","native/splash","native/statu","native/zip/ngx","navanim","network","new","ngmodul","ngx","noanim","noanimation(animationc","notifications/ngx","order.compon","order/trek","orientation/ngx","out","poidetailscompon","progresscompon","promis","promise.resolve(new","provid","registerlocaledata","registerlocaledata(localefr","reset","result","return","routereusestrategi","routing.modul","screen/ngx","screenorient","sharing/ngx","socialshar","sourc","splashscreen","src/app/app.module.t","statusbar","support","svg","translate/cor","translate/http","translatehttpload","translatehttploader(http","translateload","translatemodul","translatemodule.forroot","trekcontextresolv","trekscontextresolv","treksordercompon","true","useclass","usefactori","visibility.compon","visibility/lay","webview","webview/ngx","zip","zoom"],"modules/AppRoutingModule.html":["angular/cor","angular/rout","app","app/map","app/map/:trekid","app/map/:trekid/:stageid","approutingmodul","browser","class","const","data","export","file","full","import","info","isstag","loadchildren","map.module#trekmappagemodul","map/trek","match","modul","ngmodul","offlin","offline/:trekid","offline/:trekid/:stageid","onsameurlnavig","out","pages/tabs/tabs.module#tabspagemodul","pages/trek","path","pathmatch","redirectto","reload","reset","result","rout","routermodul","routermodule.forroot(rout","routing.module.t","sourc","src/app/app","support","svg","true","zoom"],"modules/CustomPipesModule.html":["angular/cor","app/pipes/low","browser","class","custompipesmodul","declar","export","file","import","info","lowerroundpip","match","modul","ngmodul","out","pipes.module.t","reset","result","round.pip","sourc","src/app/shared/custom","support","svg","zoom"],"modules/FiltersComponentModule.html":["angular/common","angular/cor","app/shared/shar","browser","class","commonmodul","export","file","filters.modul","filterscomponentmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","ngx","out","reset","result","sharedfiltersmodul","sourc","src/app/components/filters/filters.module.t","support","svg","translate/cor","translatemodul","translatemodule.forchild","zoom"],"modules/MoreItemPageModule.html":["alway","angular/common","angular/cor","angular/rout","app/resolvers/mor","app/shared/shar","browser","class","commonmodul","compon","const","declar","export","file","import","info","ionic/angular","ionicmodul","item","item.module.t","item.pag","item.resolv","item/mor","match","modul","more","moreitempag","moreitempagemodul","moreitemresolv","ngmodul","ngx","out","path","reset","resolv","result","rout","routermodul","routermodule.forchild(rout","runguardsandresolv","shareduimodul","sourc","src/app/pages/more/mor","support","svg","translate/cor","translatemodul","translatemodule.forchild","ui.modul","zoom"],"modules/MorePageModule.html":["alway","angular/common","angular/cor","angular/rout","app/resolvers/more.resolv","app/shared/shar","browser","class","commonmodul","compon","const","declar","export","file","import","info","ionic/angular","ionicmodul","item","match","modul","more.pag","morepag","morepagemodul","moreresolv","ngmodul","ngx","out","path","reset","resolv","result","rout","routermodul","routermodule.forchild(rout","runguardsandresolv","shareduimodul","sourc","src/app/pages/more/more.module.t","support","svg","translate/cor","translatemodul","translatemodule.forchild","ui.modul","zoom"],"modules/SharedFiltersModule.html":["angular/common","angular/cor","app","app/components/filt","app/components/filter/filter.compon","app/components/filters/filters.compon","app/components/in","app/components/search/search.compon","app/components/select","browser","class","commonmodul","declar","disclosure.compon","disclosure/in","entrycompon","export","file","filter.compon","filter/select","filtercompon","filters.module.t","filterscompon","filtervaluecompon","import","inappdisclosurecompon","info","match","modul","ngmodul","ngx","out","reset","result","searchcompon","selectfiltercompon","sharedfiltersmodul","sourc","src/app/shared/shar","support","svg","translate/cor","translatemodul","translatemodule.forchild","value.compon","value/filt","zoom"],"modules/SharedModule.html":["angular/common","angular/cor","app/components/geoloc","app/components/map","browser","class","commonmodul","declar","export","file","geolocatenotificationscompon","import","info","ionic/angular","ionicmodul","maptreksvizcompon","maptrekvizcompon","match","modul","ngmodul","ngx","notifications.compon","notifications/geoloc","out","reset","result","sharedmodul","sourc","src/app/shared/shared.module.t","support","svg","translate/cor","translatemodul","translatemodule.forchild","trek","viz.compon","viz/map","zoom"],"modules/SharedTreksModule.html":["angular/common","angular/cor","angular/rout","app/components/poi/poi.compon","app/components/trek","browser","card.compon","card/trek","class","commonmodul","custom","custompipesmodul","declar","export","file","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","ngx","out","pipes.modul","poicompon","reset","result","routermodul","sharedtreksmodul","sourc","src/app/shared/shar","support","svg","translate/cor","translatemodul","translatemodule.forchild","trekcardcompon","treks.module.t","zoom"],"modules/SharedUiModule.html":["angular/common","angular/cor","angular/rout","app/components/collaps","app/components/connect","app/components/loader/loader.compon","browser","class","collapsiblelistcompon","commonmodul","connecterrorcompon","declar","error.compon","error/connect","export","file","import","info","ionic/angular","ionicmodul","list.compon","list/collaps","loadercompon","match","modul","ngmodul","out","reset","result","routermodul","shareduimodul","sourc","src/app/shared/shar","support","svg","ui.module.t","zoom"],"modules/TabsPageModule.html":["angular/common","angular/cor","app/shared/shar","browser","class","commonmodul","declar","export","file","import","info","ionic/angular","ionicmodul","match","modul","more/more.modul","morepagemodul","ngmodul","ngx","out","reset","result","shareduimodul","sourc","src/app/pages/tabs/tabs.module.t","support","svg","tabs.pag","tabs.routing.modul","tabspag","tabspagemodul","tabspageroutingmodul","translate/cor","translatemodul","translatemodule.forchild","treks/treks.modul","trekspagemodul","ui.modul","zoom"],"modules/TabsPageRoutingModule.html":["angular/cor","angular/rout","app/resolvers/treks.resolv","app/tabs/trek","browser","children","class","compon","const","context","data","details.module#trekdetailspagemodul","details/:trekid","details/:trekid/:stageid","details/trek","export","file","full","import","info","isstag","item.module#moreitempagemodul","item/mor","loadchildren","map","map.module#treksmappagemodul","map/trek","match","modul","more","more/mor","more/more.module#morepagemodul","moreitemid","ngmodul","offlin","out","path","pathmatch","redirectto","reset","resolv","result","rout","routermodul","routermodule.forchild(rout","sourc","src/app/pages/tabs/tabs.routing.module.t","support","svg","tab","tabs.pag","tabspag","tabspageroutingmodul","trek","treks/treks.pag","trekscontextresolv","trekspag","true","zoom"],"modules/TrekDetailsPageModule.html":["alway","angular/common","angular/cor","angular/rout","app/resolvers/trek.resolv","app/shared/custom","app/shared/shar","browser","class","commonmodul","compon","const","context","custompipesmodul","declar","details.module.t","details.pag","details/trek","export","file","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","ngx","out","path","pipes.modul","reset","resolv","result","rout","routermodul","routermodule.forchild(rout","runguardsandresolv","sharedtreksmodul","shareduimodul","sourc","src/app/pages/trek","support","svg","translate/cor","translatemodul","translatemodule.forchild","trek","trekcontextresolv","trekdetailspag","trekdetailspagemodul","treks.modul","ui.modul","zoom"],"modules/TrekMapPageModule.html":["alway","angular/common","angular/cor","angular/rout","app/components/select","app/resolvers/trek.resolv","app/shared/shar","app/shared/shared.modul","browser","class","commonmodul","compon","const","context","declar","export","file","import","info","ionic/angular","ionicmodul","map.module.t","map.pag","map/trek","match","modul","ngmodul","ngx","out","path","poi.compon","poi/select","reset","resolv","result","rout","routermodul","routermodule.forchild(rout","runguardsandresolv","selectpoicompon","sharedmodul","shareduimodul","sourc","src/app/pages/trek","support","svg","translate/cor","translatemodul","translatemodule.forchild","trek","trekcontextresolv","trekmappag","trekmappagemodul","ui.modul","zoom"],"modules/TreksMapPageModule.html":["angular/common","angular/cor","angular/rout","app/components/filters/filters.modul","app/components/select","app/resolvers/treks.resolv","app/shared/shar","app/shared/shared.modul","browser","class","commonmodul","compon","const","context","declar","export","file","filterscomponentmodul","import","info","ionic/angular","ionicmodul","map.module.t","map.pag","map/trek","match","modul","ngmodul","ngx","out","path","reset","resolv","result","rout","routermodul","routermodule.forchild(rout","selecttrekcompon","sharedmodul","shareduimodul","sourc","src/app/pages/trek","support","svg","translate/cor","translatemodul","translatemodule.forchild","trek","trek.compon","trek/select","trekscontextresolv","treksmappag","treksmappagemodul","ui.modul","zoom"],"modules/TreksPageModule.html":["angular/common","angular/cor","angular/rout","app/components/filters/filters.modul","app/shared/shar","browser","class","commonmodul","declar","export","file","filterscomponentmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","ngx","out","reset","result","routermodul","routermodule.forchild","sharedtreksmodul","shareduimodul","sourc","src/app/pages/treks/treks.module.t","support","svg","translate/cor","translatemodul","translatemodule.forchild","treks.modul","treks.pag","trekspag","trekspagemodul","ui.modul","zoom"],"components/AppComponent.html":["0","1","2","angular/cor","app","app.component.html","app/services/onlin","app/services/settings/settings.servic","appcompon","array","assum","avail","availablelanguage[0","await","bar/ngx","class","compon","constructor","constructor(platform","default","defaultlanguag","empti","env/environ","environ","environment.availablelanguag","environment.availablelanguage.indexof(defaultlanguag","environment.availablelanguage.length","environment.availablelanguage[0","export","file","fr","global","import","info","initializeapp","ionic","ionic/angular","languag","match","metadata","method","native/globalization/ngx","native/splash","native/statu","navigator.language.slice(0","ngx","onlinetrek","onlinetreksservic","platform","privat","result","return","root","screen/ngx","selector","set","settingsservic","sourc","splashscreen","src/app/app.component.t","statusbar","templateurl","this.globalization.getpreferredlanguag","this.initializeapp","this.onlinetreks.loadtrek","this.platform.is('android","this.platform.is('io","this.platform.ready().then(async","this.settings.loadset","this.splashscreen.hid","this.statusbar.stylelightcont","this.translate.setdefaultlang(defaultlanguag","translat","translate/cor","translateservic","treks.servic","treks/onlin","user","value.slice(0","void"],"components/CollapsibleListComponent.html":["5","alwaysdisplayeditem","angular/cor","app","boolean","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","class","collaps","collapsiblelistcompon","compon","constructor","default","expand","expandableitem","export","fals","file","hidealllabel","implement","import","info","initials","initialst","input","item","itemtempl","list","list.component.html","list.component.scss","list.component.t","list/collaps","match","metadata","method","ngoninit","oninit","properti","public","result","return","selector","showalllabel","sourc","src/app/components/collaps","string","styleurl","t","templateref","templateurl","this.alwaysdisplayeditem","this.expand","this.expandableitem","this.initials","this.initialst","this.items.length","this.items.slic","this.items.slice(0","toggleexpand","type","valu","void"],"components/ConnectErrorComponent.html":["angular/cor","app","buttontext","class","compon","connect","connecterrorcompon","constructor","content","error","error.component.html","error.component.scss","error.component.t","error/connect","event","eventemitt","export","file","icon","import","info","input","match","metadata","new","output","public","result","retri","selector","sourc","src/app/components/connect","styleurl","templateurl","titl","type"],"components/FilterComponent.html":["angular/cor","app","app/components/select","app/interfaces/interfac","async","await","boolean","check","class","commonsrc","compon","componentprop","const","constructor","constructor(modalcontrol","constructor(priv","containsfiltershoulduseselectabov","cssclass","data","data.temporaryfilt","docheck","env/environ","environ","environment.containsfiltershoulduseselectabov","event","eventemitt","export","file","filter","filter.compon","filter.component.html","filter.component.scss","filter/select","filtercompon","filtervalu","filtervalue.check","full","implement","import","info","input","ionic/angular","match","metadata","method","modal","modal.ondiddismiss","modal.pres","modalcontrol","new","ngdocheck","ngoninit","oninit","openselect","output","promis","properti","public","result","return","selectchang","selecteditem","selecteditems.join","selecteditems.push(filtervalue.nam","selectfiltercompon","selector","size","sourc","src/app/components/filter/filter.component.t","string","styleurl","templateurl","temporaryfilter.valu","this.commonsrc","this.filt","this.filter.values.find((valu","this.modalcontroller.cr","this.selectchange.emit","this.selecteditem","this.updateselecteditems(data.temporaryfilt","this.updateselecteditems(this.filt","this.valuechange.emit","type","updateselecteditem","updateselecteditems(temporaryfilt","valu","value.check","valuechang","valuechanged(undefin","void"],"components/FilterValueComponent.html":["angular/cor","app","app/interfaces/interfac","check","class","commonsrc","compon","constructor","customev","event","event.detail.check","eventemitt","export","file","filter","filtervalu","filtervaluecompon","implement","import","info","input","match","metadata","method","new","ngoninit","oninit","output","public","result","return","selector","sourc","src/app/components/filt","string","styleurl","templateurl","this.valuechange.emit","type","valu","value.component.html","value.component.scss","value.component.t","value/filt","valuechang","valuecheckchang","valuecheckchanged($ev","void"],"components/FiltersComponent.html":["0","1","angular/cor","app","app/components/abstract/unsubscrib","app/interfaces/interfac","app/services/filt","app/services/offlin","app/services/onlin","app/services/settings/settings.servic","applyfilt","behaviorsubject","boolean","checkstat","class","close","combinelatest","combinelatest(trek","commonsrc","compon","const","constructor","constructor(modalctrl","default","element","element.id","erasefilt","event.filt","event.filter.id","export","extend","fals","file","filter","filter.id","filter.values.foreach((valu","filters.component.html","filters.component.scss","filterscompon","filterssubscript","filtertreksservic","filtertreksservice.filter(trek","filtervalu","filtervalue.check","handlefiltersst","handlefiltersstate(checkst","handleselect","handleselect(ev","implement","import","info","input","ionic/angular","ionviewdident","isonlin","match","metadata","method","minimaltrek","modalcontrol","modalctrl","nbtemporaryfilterstrek","new","ngondestroy","ngoninit","null","number","offlinetrek","offlinetreksservic","ondestroy","oninit","onlinetrek","onlinetreksservic","platform","privat","properti","public","result","return","rxj","selector","set","settingsservic","sourc","src/app/components/filters/filters.component.t","string","styleurl","subscript","super","super.ngondestroy","super.ngoninit","tempfilt","tempfilter.id","templateurl","temporaryfilt","temporaryfilter.values.find","temporaryfilterindex","temporaryfilters).length","temporaryfilters.find","temporaryfilters.findindex","temporaryfilters.foreach((filt","temporaryfilters[temporaryfilterindex","tempvalu","tempvalue.id","this.clos","this.commonsrc","this.filt","this.filterssubscript","this.filterssubscription.unsubscrib","this.isonlin","this.modalctrl.dismiss","this.modalctrl.dismiss(tru","this.nbtemporaryfilterstrek","this.offlinetreks.getcommonimgsrc","this.offlinetreks.trek","this.onlinetreks.getcommonimgsrc","this.onlinetreks.trek","this.platform.backbutton.subscribewithpriority(99999","this.settings.filters$.subscribe((filt","this.settings.savefiltersstate(this.temporaryfilters$.getvalu","this.subscriptions$$.push","this.temporaryfilters$).subscrib","this.temporaryfilters$.getvalu","this.temporaryfilters$.next(filt","this.temporaryfilters$.next(temporaryfilt","this.unsubscribefilt","trackbyfilterid","trackbyfilterid(index","trackfilt","trackfilters(index","trek","treks.servic","treks/filt","treks/offlin","treks/onlin","type","unsubscrib","unsubscribefilt","valu","value.check","value.id","void"],"components/GeolocateNotificationsComponent.html":["0","1","1000","2","alertcontrol","angular/cor","app","app/interfaces/interfac","app/services/geolocate/geolocate.servic","array.isarray(this.currentpois.featur","async","await","boolean","button","cancel","changenotificationsmod","changes.currentpoi","changescurrentpoi","changescurrentpois.currentvalu","changescurrentpois.previousvalu","checktonotifi","checktonotify(fromcoordin","class","clicklocalnotif","compon","const","constructor","constructor(platform","coordin","cssclass","currentpoi","currentpoistonotifi","currentposit","data","data.id","default","disablegeolocationnotif","distanc","distance(from","enablegeolocationnotif","env/environ","environ","environment.meterstonotifi","event","eventemitt","export","fals","featur","feature.geometry.coordin","feature.properties.id","feature.properties.nam","file","foreground","fromcoordin","geoloc","geolocate.asklocatepermiss","geolocate.cancel","geolocate.open","geolocatenotificationscompon","geolocateservic","handler","header","icon","id","implement","import","info","input","ionic","ionic/angular","kilomet","kmtonotifi","launch","localnotif","lockscreen","match","messag","metadata","method","name","native/loc","new","ngonchanges(chang","ngondestroy","ngoninit","ngx","notif","notifications.component.html","notifications.component.scss","notifications.component.t","notifications/geoloc","notifications/ngx","notificationsmodeisact","notifiedindex","number","on('click","onchang","ondestroy","oninit","option","output","permiss","persmissionsconfirm","persmissionsconfirm.pres","platform","poi","point","point(feature.coordin","point(fromcoordin","presentpersmissionsconfirm","presentpoidetail","prioriti","privat","properti","public","require('@turf/distance').default","res://ic_stat_panorama","res://icon","result","return","role","rxj","secondari","selector","silent","simplechang","smallicon","sourc","src/app/components/geoloc","string","styleurl","subscrib","subscribe(async","subscript","templateurl","text","this.alertcontroller.cr","this.checktonotify(coordin","this.clicklocalnotif","this.clicklocalnotifications$.unsubscrib","this.currentpoi","this.currentpois.features.find","this.currentpois.features.map((featur","this.currentpoistonotifi","this.currentpoistonotify.findindex","this.currentpoistonotify.length","this.currentpoistonotify.splice(notifiedindex","this.currentpoistonotify[notifiedindex].id","this.currentpoistonotify[notifiedindex].nam","this.currentposit","this.currentposition$.unsubscrib","this.disablegeolocationnotif","this.enablegeolocationnotif","this.geolocate.checkauthor","this.geolocate.currentposition$.subscrib","this.geolocate.showappset","this.geolocate.startnotificationsmodetracking(this.treknam","this.geolocate.startonmaptrack","this.geolocate.stopnotificationsmodetrack","this.geolocate.stoponmaptracking(fals","this.localnotif","this.localnotifications.haspermiss","this.localnotifications.requestpermiss","this.localnotifications.schedul","this.localnotifications.setdefault","this.notificationsmodeisact","this.platform.is('android","this.platform.is('io","this.presentpersmissionsconfirm","this.presentpoidetails.emit(poi","this.transl","titl","trad","trad['geolocate.asklocatepermiss","trad['geolocate.cancel","trad['geolocate.open","translat","translate/cor","translateservic","treknam","true","turf/help","type","unit","valu","vibrat","void"],"components/InAppDisclosureComponent.html":["alreadyaskgeolocationpermiss","angular/cor","app","async","await","class","close","compon","constructor","constructor(modalctrl","constructor(priv","disclosur","disclosure.component.html","disclosure.component.scss","disclosure.component.t","disclosure/in","export","file","implement","import","inappdisclosurecompon","info","ionic/angular","ionic/storag","json.stringify(tru","match","metadata","method","modalcontrol","modalctrl","ngoninit","oninit","properti","public","result","return","selector","sourc","src/app/components/in","storag","styleurl","templateurl","this.modalctrl.dismiss","this.storage.set","void"],"components/InformationDeskDetailsComponent.html":["angular/cor","app","app/interfaces/interfac","baseurl","class","close","compon","constructor","constructor(modalctrl","constructor(publ","desk","detail","details.component.html","details.component.scss","details.component.t","details/inform","env/environ","environ","environment.onlinebaseurl","export","file","import","info","inform","informationdesk","informationdeskdetailscompon","informationdeskpictur","ionic/angular","ionviewwillent","match","metadata","method","modalcontrol","modalctrl","navparam","properti","public","result","return","selector","sourc","src/app/components/inform","string","styleurl","templateurl","this.baseurl}${this.informationdesk.pictur","this.informationdesk","this.informationdesk.pictur","this.informationdeskpictur","this.modalctrl.dismiss","this.navparams.get('informationdesk","void"],"components/LayersVisibilityComponent.html":["angular/cor","app","changelayervis","class","compon","constructor","constructor(navparam","constructor(priv","event.detail.valu","export","file","import","info","ionic/angular","ionviewwillent","layer","layersvisibilitycompon","layervisibilitychang","layervisibilitychange(ev","match","metadata","method","navparam","properti","public","result","return","selector","sourc","src/app/components/lay","styleurl","templateurl","this.changelayervis","this.changelayervisibility(event.detail.check","this.lay","this.navparams.get('changelayervis","this.navparams.get('lay","visibility.component.html","visibility.component.scss","visibility.component.t","visibility/lay","visibl","void"],"components/LoaderComponent.html":["50","add","angular/cor","app","app/services/loading/loading.servic","boolean","chang","check","class","compon","condit","constructor","constructor(load","constructor(publ","default","delay","export","express","file","implement","import","info","input","load","loader","loader.component.html","loader.component.scss","loadercompon","loaderstatu","loadingservic","match","metadata","ngondestroy","null","ondestroy","pipe(delay(0","prevent","privat","progressbarwidth","properti","public","result","rxj","rxjs/oper","selector","sourc","src/app/components/loader/loader.component.t","statu","styleurl","subscribe((statu","subscript","templateurl","this.loaderstatu","this.loaderstatus$.unsubscrib","this.loading.statu","type","valu","void"],"components/MapTrekVizComponent.html":["0","0.1","000000","1","1)[0","18","3000","50","alertcontrol","alertloc","alertlocation.pres","allow","angular/cor","anim","any).features[0].properties.id","any).setrotation(head","app","app/components/abstract/unsubscrib","app/components/in","app/components/lay","app/components/select","app/interfaces/interfac","app/services/geolocate/geolocate.servic","app/services/settings/settings.servic","arriv","arrival[0","arrival[1","arrow","assets/map/icons/arrival.png","assets/map/icons/arrow.png","assets/map/icons/departure.png","assets/map/icons/departurearrival.png","assets/map/icons/parking.png","async","await","befor","boolean","bound","browser","button","case","categori","category.id","center","changelayervis","changelayervisibility(check","changes.currentpoi","changes.currenttrek","changes.touristiccategorieswithfeatur","changescurrentpoi","changescurrentpois.previousvalu","changescurrenttrek","changescurrenttrek.previousvalu","check","children","children.properti","children.properties.index","childrentrek","childrentrek.properti","childrentrek.properties.id","childrentreks.features.foreach((children","childrentreks.length","childrentrekssourc","childrentrekssource.setdata(childrentrek","circl","circlecolorexpress","circlecolorexpression.push('match","circlecolorexpression.push(['get","circlecolorexpression.push(category.color","circlecolorexpression.push(category.id","circlecolorexpression.push(environment.map.clusterpaint['circl","class","click","cluster","clusterid","clusterradiu","clustersourc","clustersource.id","clustersource.translateid","color","commonsrc","compact","complet","compon","componentprop","concat","const","constructor","constructor(set","contain","content","coordin","coordinates[0","coordinates[1","count","createmap","cssclass","currenthead","currentpoi","currentposit","currenttrek","currenttyp","currenttype.color","currenttype.pictogram","customattribut","cypress","data","data.id","data.selectedpoiid","dataset","default","delay","departur","departure[0","departure[1","departurearriv","departurearrivaldata","departurearrivaldata.features.push","departurearrivalsourc","departurearrivalsource.setdata(departurearrivaldata","desk","disclosure.compon","disclosure/in","display","distinctuntilchang","document.createelement('div","e","e.featur","e.features.length","e.features[0","e.features[0].properti","e.features[0].properties.id","el","el.classnam","element","env/environ","environ","environment.map.attributiontext","environment.map.clusterpaint","environment.map.clustertextpaint","environment.map.departurearrivalicons","environment.map.enablerot","environment.map.informationicons","environment.map.parkingicons","environment.map.pointreferencelayersproperties.circl","environment.map.pointreferencelayersproperties.text","environment.map.poislayersproperties.icons","environment.map.poislayersproperties.vis","environment.map.stagepaint","environment.map.touristiccontentlayersproperties.circle.paint","environment.map.touristiccontentlayersproperties.icon.layout","environment.map.touristiccontentlayersproperties.vis","environment.map.trekarrowlayerproperties.layout","environment.map.trekfitboundsopt","environment.map.treklinelayerproperti","environment.map.zonelayerproperti","environment.map.zoneoutlinelayerproperti","environment.mapbox","environment.mapbox.accesstoken","environment.trekzoom.maxzoom","environment.trekzoom.zoom","err","error","errortransl","errortranslation['confirmbutton","errortranslation['head","errortranslation['messag","errortranslation['subhead","event","eventemitt","expans","export","extend","fals","featur","feature.properties.categori","feature.properties.id","feature.properties.nam","feature.properties.typ","featurecollect","featureproperti","featureproperties.cluster_id","features.find","features.foreach((featur","features[0].geometri","features[0].properti","featuresinclust","field","file","filter","filter((currentposit","fit","fitbound","fittotrekbound","fli","flytouserloc","font","foreach((clustersourc","foreach((layernam","fromasset","full","geojson","geojsonproperti","geojsonsourc","geojsonsource).getclusterexpansionzoom","geojsonsource).getclusterleav","geoloc","geolocateservic","geometri","get('geolocate.error","get('trek.details.touristiccontent.nam","gl","go","handleclustersinteract","handlenavigatemod","head","header","hide","hydratedtrek","icon","id","ignor","imag","imagestoload","imagestoload.foreach((imagetoload","imagestoload.length","imagestoload.push","imagetoload.fromasset","imagetoload.pictogram","imgtypepoi","implement","import","inappdisclosurecompon","index","infin","info","inform","information_desk_properti","information_desk_property.id","information_desk_property.latitud","information_desk_property.longitud","information_desk_property.typ","information_desk_typ","informationdesk","informationdesk${typeinformationdesk.id","informationdeskproperti","informationdeskproperty.id","informationdesks.features.push","informationdesksourc","informationdesksource.setdata(informationdesk","initializelay","initializesourc","input","insid","instanc","ionic","ionic/angular","itiner","json.pars","json.parse(poi.properties.pictur","layer","layernam","layersnam","layersvisibilitycompon","layout","left","line","loadimag","loadimages.subscrib","locat","lodash","map","mapbox","mapboxgl","mapboxgl.accesstoken","mapboxgl.attributioncontrol","mapboxgl.mark","mapboxgl.navigationcontrol","mapboxgl.scalecontrol","mapconfig","mapisload","maplayermouseev","maptrekvizcompon","mapviz","marker","markerposit","match","maxzoom","messag","metadata","method","metric","modal","modal.ondiddismiss","modal.pres","modalcontrol","more","name","native/screen","navig","navigatemodeisact","navigatetochildren","need","new","next","ngonchanges(chang","ngondestroy","ngx","none","null","number","object","observ","observable.cr","observer.complet","offset","onchang","ondestroy","orientation/ngx","outlin","output","overlap","paint","park","parking.features.push","parkingsourc","parkingsource.setdata(park","pictogram","pipe","placement","platform","poi","poi.compon","poi.properti","poi.properties.pictur","poi/select","poi_typ","point","point).coordin","point_count","point_count_abbrevi","point_refer","point_reference[0","point_reference[1","pointer","pointsrefer","pointsreference.features.push","pointsreferencesourc","pointsreferencesource.setdata(pointsrefer","pois${poitype.id","poissourc","poissource.setdata(this.currentpoi","poistyp","poityp","poitype.id","poitype.pictogram","popov","popover.pres","popovercontrol","presentconfirmfeatur","presentconfirmfeatures(featur","presentinappdisclosur","presentinformationdeskdetail","presentpoidetail","privat","problem","promis","properti","public","puls","radiopoi","radiopois.push(poi","refer","regular","require('mapbox","resiz","result","return","roboto","rxj","rxjs/oper","same","screenorient","selectedfeatur","selector","selectpoicompon","set","setlnglat(coordin","settingsservic","shouldshowinappdisclosur","showcompass","showlayersvis","showlayersvisibility(ev","simplechang","size","sourc","split","src","src/app/components/map","static","string","styleurl","subhead","subscribe(async","subscript","super","super.ngondestroy","symbol","templateurl","test","text","themepoi","this.alertcontroller.cr","this.changelayervisibility(check","this.commonsrc","this.commonsrc}${imagetoload.pictogram","this.createmap","this.currentpoi","this.currenttrek","this.currenttrek.geometry.coordinates.slic","this.currenttrek.geometry.coordinates[0","this.currenttrek.properties.children","this.currenttrek.properties.children.featur","this.currenttrek.properties.children.features.length","this.currenttrek.properties.information_desk","this.currenttrek.properties.information_desks.find","this.currenttrek.properties.information_desks.foreach","this.currenttrek.properties.information_desks.length","this.currenttrek.properties.parking_loc","this.currenttrek.properties.points_refer","this.currenttrek.properties.points_reference.foreach","this.currenttrek.properties.points_reference.length","this.datasettings.find","this.flytouserloc","this.geolocate.checkifcangetcurrenthead","this.geolocate.currentheading$.subscribe((head","this.geolocate.currentposit","this.geolocate.currentposition$.subscrib","this.geolocate.getcurrentposit","this.geolocate.shouldshowinappdisclosur","this.geolocate.startonmaptrack","this.geolocate.stopnotificationsmodetrack","this.geolocate.stoponmaptrack","this.handleclustersinteract","this.initializelay","this.initializesourc","this.map","this.map.addcontrol","this.map.addimage(imagetoload.id.tostr","this.map.addlay","this.map.addsource('children","this.map.addsource('departur","this.map.addsource('inform","this.map.addsource('park","this.map.addsource('poi","this.map.addsource('point","this.map.addsource('tourist","this.map.addsource('trek","this.map.addsource('zon","this.map.dragpan.dis","this.map.dragpan.en","this.map.dragrotate.dis","this.map.easeto","this.map.fitbound","this.map.flyto","this.map.getcanvas().style.cursor","this.map.getlayoutproperti","this.map.getlayoutproperty('poi","this.map.getsourc","this.map.getsource('park","this.map.getsource('poi","this.map.getsource('trek","this.map.getzoom","this.map.loadimag","this.map.on","this.map.on('click","this.map.on('load","this.map.on('mouseent","this.map.on('mouseleav","this.map.panto(coordin","this.map.queryrenderedfeatures(e.point","this.map.remov","this.map.res","this.map.setlayoutproperti","this.map.touchzoomrotate.disablerot","this.mapconfig","this.mapconfig.maxzoom","this.mapconfig.styl","this.mapconfig.trekbound","this.mapisloaded.emit(tru","this.mapviz.nativeelement.mapinst","this.markerposit","this.markerposition.addto(this.map","this.markerposition.remov","this.markerposition.setlnglat(coordin","this.modalcontroller.cr","this.navig","this.navigate$.unsubscrib","this.navigatemodeisact","this.navigatetochildren.emit(childrentrek.properties.id","this.platform.is('android","this.platform.is('io","this.poistyp","this.poistype.values.find","this.poistype.values.foreach((poityp","this.popovercontroller.cr","this.presentconfirmfeatur","this.presentinappdisclosur","this.presentinformationdeskdetails.emit(informationdesk","this.presentpoidetails.emit(poi","this.presentpoidetails.emit(selectedfeatur","this.presentpoidetails.emit(touristiccont","this.screenorientation.onchange().subscrib","this.settings.getzonefromstorag","this.subscriptions$$.push","this.touristiccategorieswithfeatur","this.touristiccategorieswithfeatures.foreach","this.touristicscontentcategori","this.touristicscontentcategory.values.find","this.touristicscontentcategory.values.foreach((categori","this.transl","this.translate.get('trek.details.poi.name').topromis","this.updatesourc","throttl","throttle(this.flytouserloc","throttletim","throttletime(environment.backgroundgeolocation.interv","throw","top","topromis","tostr","tourist","touristiccategorieswithfeatur","touristiccategorieswithfeatures.previousvalu","touristiccategorywithfeatur","touristiccategorywithfeatures.featur","touristiccont","touristiccontent${touristiccontent.id","touristiccontent.pictogram","touristiccontent.properti","touristiccontent.properties.pictur","touristiccontent_categori","touristics_cont","touristicscont","touristicscontent.setdata(touristics_cont","touristicscontent.values.foreach((touristiccont","touristicscontentcategori","touristicscontentfeatur","touristicscontentfeatures.concat","translat","translate/cor","translateid","translateservic","transluc","trek","trek.details.poi.nam","trek.details.touristiccontent.nam","treksourc","treksource.setdata(this.currenttrek","true","type","typeinformationdesk","typeinformationdesk.pictogram","typeinformationdesks.values.foreach((typeinformationdesk","undefin","unit","unsubscrib","updatesourc","user","userloc","userlocation.latitud","userlocation.longitud","valu","view","viewchild","viewchild('mapviz","visibility.compon","visibility/lay","visibl","viz","viz.component.html","viz.component.scss","viz.component.t","viz/map","void","window.settimeout","zone","zoom"],"components/MapTreksVizComponent.html":["0","0.1","1","16","18","3000","50","abstract/unsubscrib","addsourceslayersev","alertcontrol","alertloc","alertlocation.pres","angular/cor","anim","any).setrotation(head","any).sourc","any).sources['til","app","app/components/in","app/components/select","app/interfaces/interfac","app/services/geolocate/geolocate.servic","app/services/settings/settings.servic","async","await","background","background'].tiles[0","befor","boolean","bound","bounds.extend(coord","button","center","changes.filteredtrek","changescurrenttrek","changescurrenttreks.currentvalu","changescurrenttreks.previousvalu","circl","circlecolorexpress","circlecolorexpression.push('match","circlecolorexpression.push(['get","circlecolorexpression.push(environment.map.clusterpaint['circl","circlecolorexpression.push(practice.color","circlecolorexpression.push(practice.id","class","cluster","clusterid","clusterradiu","color","commonsrc","compact","complet","compon","componentprop","const","constructor","constructor(set","contain","coord","coordin","coordinates.push(feature.geometry.coordin","coordinates.reduc","coordinates[0","coordinates[1","count","createmap","cssclass","currenthead","currentposit","customattribut","cypress","data","data.id","data.selectedtrekid","dataset","delay","disclosure.compon","disclosure/in","display","distinctuntilchang","document.createelement('div","e","el","el.classnam","element","env/environ","environ","environment.map.attributiontext","environment.map.clusterpaint","environment.map.clustertextpaint","environment.map.enablerot","environment.map.globalmapicons","environment.map.treksfitboundsopt","environment.map.zonelayerproperti","environment.map.zoneoutlinelayerproperti","environment.mapbox","environment.mapbox.accesstoken","environment.offlinemapconfig.styl","environment.trekzoom.zoom","err","error","errortransl","errortranslation['confirmbutton","errortranslation['head","errortranslation['messag","errortranslation['subhead","event","eventemitt","expans","export","extend","fals","featur","feature.geometri","feature.geometry.coordin","feature.geometry.coordinates[0","feature.geometry.coordinates[1","feature.properti","featurecollect","featureproperti","featureproperties.cluster_id","features.foreach((featur","features[0].geometri","features[0].properti","featuresinclust","field","file","filter","filter((currentposit","filteredtrek","fitbound","fli","flytouserloc","font","full","geojson","geojsonproperti","geojsonsourc","geojsonsource).getclusterexpansionzoom","geojsonsource).getclusterleav","geojsonsourceraw","geoloc","geolocateservic","geometri","get('geolocate.error","gl","head","header","hydratedtrek","hydratedtrek.properties.id","hydratedtrek.properties.nam","hydratedtrek.properties.practice.color","hydratedtrek.properties.practice.pictogram","icon","id","imag","imgpractic","implement","import","inappdisclosurecompon","index","infin","info","inform","input","insid","instanc","ionic","ionic/angular","layer","layout","left","loadimag","loadimages.subscrib","locat","lodash","map","mapbox","mapboxgl","mapboxgl.accesstoken","mapboxgl.attributioncontrol","mapboxgl.lnglatbounds(coordinates[0","mapboxgl.map","mapboxgl.mark","mapboxgl.navigationcontrol","mapboxgl.scalecontrol","mapboxopt","mapconfig","mapisload","maptreksvizcompon","mapviz","marker","markerposit","match","maxzoom","messag","metadata","method","metric","minimaltrek","modal","modal.ondiddismiss","modal.pres","modalcontrol","more","name","native/screen","navigatetotrek","need","new","next","ngonchanges(chang","ngondestroy","ngx","null","number","observ","observable.cr","observer.complet","offlin","offset","onchang","ondestroy","orientation/ngx","outlin","output","paint","pipe","platform","point","point).coordin","point_count","point_count_abbrevi","practic","practices.values.foreach((practic","practices.values.length","presentconfirmfeatur","presentconfirmfeatures(featur","presentinappdisclosur","privat","problem","promis","properti","public","puls","radiotrek","radiotreks.push(trek","radiu","regular","require('mapbox","resiz","result","return","roboto","rxj","rxjs/oper","screenorient","selector","selecttrekcompon","set","setlnglat(coordin","settingsservic","shouldshowinappdisclosur","showcompass","simplechang","size","sourc","src","src/app/components/map","static","string","styleurl","subhead","subscribe(async","super","super.ngondestroy","symbol","templateurl","test","text","this.addsourceslayersev","this.alertcontroller.cr","this.commonsrc","this.commonsrc}${practice.pictogram","this.createmap","this.datasettings.find","this.filteredtrek","this.filteredtreks.foreach((featur","this.flytouserloc","this.geolocate.checkifcangetcurrenthead","this.geolocate.currentheading$.subscribe((head","this.geolocate.currentposit","this.geolocate.getcurrentposit","this.geolocate.shouldshowinappdisclosur","this.geolocate.startonmaptrack","this.geolocate.stoponmaptrack","this.map","this.map.addcontrol","this.map.addimage(practice.id.tostr","this.map.addlay","this.map.addsource('trek","this.map.addsource('zon","this.map.dragrotate.dis","this.map.easeto","this.map.fitbounds(bound","this.map.flyto","this.map.getsourc","this.map.getsource('trek","this.map.getzoom","this.map.loadimag","this.map.on('click","this.map.on('load","this.map.queryrenderedfeatures(e.point","this.map.remov","this.map.res","this.map.touchzoomrotate.disablerot","this.mapconfig","this.mapconfig.maxzoom","this.mapconfig.styl","this.mapisloaded.emit(tru","this.mapviz.nativeelement.mapinst","this.markerposit","this.markerposition.addto(this.map","this.markerposition.remov","this.markerposition.setlnglat(coordin","this.modalcontroller.cr","this.navigatetotrek.emit(data.selectedtrekid","this.navigatetotrek.emit(feature.properties.id","this.offlin","this.platform.is('android","this.platform.is('io","this.practic","this.practices.values.foreach((practic","this.presentconfirmfeatur","this.presentinappdisclosur","this.screenorientation.onchange().subscrib","this.settings.gethydratedtrek","this.settings.getzonefromstorag","this.subscriptions$$.push","this.transl","throttl","throttle(this.flytouserloc","throttletim","throttletime(environment.backgroundgeolocation.interv","throw","tile","tiles[0","top","topromis","translat","translate/cor","translateservic","trek","trek.compon","trek/select","trekssourc","trekssource.setdata","true","type","undefin","unit","unsubscrib","user","userloc","userlocation.latitud","userlocation.longitud","view","viewchild","viewchild('mapviz","viz","viz.component.html","viz.component.scss","viz.component.t","viz/map","void","window.settimeout","zone","zoom"],"components/MoreItemPage.html":["activatedrout","angular/cor","angular/rout","app","app/components/abstract/unsubscrib","app/interfaces/interfac","boolean","class","compon","connectionerror","const","constructor","constructor(priv","constructor(rout","data","data['item","default","export","extend","fals","file","implement","import","info","informationitem","item","item.page.html","item.page.scss","item.page.t","item/mor","match","metadata","method","more","moreitem","moreitemid","moreitempag","ngoninit","number","ondestroy","oninit","privat","properti","refresh","result","return","rout","router","selector","sourc","src/app/pages/more/mor","styleurl","super","super.ngoninit","templateurl","this.connectionerror","this.moreitem","this.route.data.subscribe((data","this.router.navigate([this.router.url","this.subscriptions$$.push","true","unsubscrib","valu","void"],"components/MorePage.html":["activatedrout","angular/cor","angular/rout","app","app/components/abstract/unsubscrib","app/interfaces/interfac","appnam","boolean","class","compon","connectionerror","const","constructor","constructor(priv","constructor(rout","data.item","default","env/environ","environ","environment.appnam","export","extend","fals","file","implement","import","info","informationintro","item","match","metadata","method","more","more.page.html","more.page.scss","moreinformationsintro","morepag","ngoninit","oninit","privat","properti","public","refresh","result","return","rout","router","selector","sourc","src/app/pages/more/more.page.t","string","styleurl","super","super.ngoninit","templateurl","this.connectionerror","this.moreinformationsintro","this.route.data.subscribe((data","this.router.navigate([this.router.url","this.subscriptions$$.push","true","unsubscrib","valu","void"],"components/PoiComponent.html":["0","angular/cor","app","app/interfaces/interfac","app/services/offlin","app/services/onlin","baseurl","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","changes.poi","class","commonsrc","compon","const","constructor","constructor(offlinetrek","currenttypepoi","currenttypepoi.pictogram","dataset","default","env/environ","environ","environment.onlinebaseurl","export","fals","file","implement","import","info","input","match","metadata","ngonchanges(chang","null","offlin","offlinetrek","offlinetreksservic","onchang","onlinetrek","onlinetreksservic","pictur","poi","poi.component.html","poi.component.scss","poicompon","properti","public","result","selector","simplechang","sourc","src/app/components/poi/poi.component.t","string","styleurl","templateurl","this.commonsrc","this.offlin","this.offlinetreks.gettrekimagesrc","this.onlinetreks.gettrekimagesrc","this.pictur","this.poi.properties.pictures.length","this.poi.properties.pictures[0","this.poi.properties.typ","this.typeimgsrc","this.typepoi","this.typepois.values.find","trek","treks.servic","treks/offlin","treks/onlin","type","typeimgsrc","typepoi","typepoi.id","undefin","url","valu","void"],"components/PoiDetailsComponent.html":["0","angular/cor","app","app/interfaces/interfac","app/services/offlin","app/services/onlin","app/services/settings/settings.servic","baseurl","boolean","class","close","commonsrc","compon","const","constructor","constructor(modalctrl","currenttypepoi","currenttypepoi.pictogram","default","detail","details.component.html","details.component.scss","details.component.t","details/poi","env/environ","environ","environment.onlinebaseurl","export","fals","file","import","info","ionic/angular","ionviewwillent","match","metadata","method","modalcontrol","modalctrl","navparam","null","offlin","offlinetrek","offlinetreksservic","onlinetrek","onlinetreksservic","pictur","poi","poi_typ","poidetailscompon","poiimg","properti","public","result","return","rxj","selector","set","setting.id","settings.find((set","settingsservic","settingssub","sourc","src/app/components/poi","string","styleurl","subscript","templateurl","this.commonsrc","this.modalctrl.dismiss","this.navparams.get('commonsrc","this.navparams.get('offlin","this.navparams.get('poi","this.offlin","this.offlinetreks.gettrekimagesrc","this.onlinetreks.gettrekimagesrc","this.pictur","this.poi","this.poi.properti","this.poi.properties.pictur","this.poi.properties.pictures.length","this.poi.properties.pictures[0","this.poi.properties.pictures[0].url","this.poi.properties.typ","this.settings.data$.subscribe((set","this.settingssub","this.settingssub.unsubscrib","this.typeimgsrc","trek","treks.servic","treks/offlin","treks/onlin","typeimgsrc","typepoi","typepoi.id","typepois.values.find","url","valu","void"],"components/ProgressComponent.html":["angular/cor","app","app/services/offlin","changedetect","changedetectionstrategi","changedetectionstrategy.default","changedetectorref","class","compon","constructor","constructor(offlinetrek","currentprogress","export","file","import","info","ionviewwillent","ionviewwillleav","match","metadata","method","number","offlinetrek","offlinetreksservic","privat","progress","progress.component.html","progress.component.scss","progresscompon","properti","public","ref","result","return","rxj","selector","sourc","src/app/components/progress/progress.component.t","styleurl","subscript","templateurl","this.currentprogress","this.currentprogress$.unsubscrib","this.offlinetreks.currentprogressdownload$.subscrib","this.ref.detectchang","treks.servic","treks/offlin","val","void"],"components/SearchComponent.html":["30","angular/cor","app","app/components/abstract/unsubscrib","app/interfaces/interfac","app/services/offlin","app/services/onlin","app/services/search","boolean","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","changedetectorref","class","close","compon","const","constructor","constructor(modalctrl","currentmaxtrek","currentsearchvalu","default","element","element.properties.id","expandtrek","expandtreks(infinitescrol","export","extend","fals","file","filteredtrek","implement","import","infinitescroll.target.complet","info","ionic/angular","ionviewdident","isonlin","match","metadata","method","minimaltrek","modalcontrol","modalctrl","navigatetotrek","navigatetotrek(id","navparam","ngoninit","null","number","offlinetrek","offlinetreksservic","oninit","onlinetrek","onlinetreksservic","platform","privat","properti","provid","public","ref","result","return","search","search(searchvalu","search.component.html","search.component.scss","searchcompon","searchtrek","searchtreksservic","searchvalu","selector","sourc","src/app/components/search/search.component.t","string","styleurl","super","super.ngoninit","templateurl","this.clos","this.currentmaxtrek","this.currentsearchvalu","this.filteredtrek","this.filteredtreks.length","this.modalctrl.dismiss","this.modalctrl.dismiss(id","this.navparams.get('isonlin","this.offlinetrek","this.onlinetrek","this.platform.backbutton.subscribewithpriority(99999","this.ref.detectchang","this.searchtreks.search","this.searchtreks.search(this.treks.featur","this.subscriptions$$.push","this.trek","this.treks.featur","this.treksbystep","this.viewisload","tracktrek","tracktrek(index","trek","treks.servic","treks/offlin","treks/onlin","treks/search","treksbystep","trekstool","trekstool.treks$.subscribe((trek","true","unsubscrib","valu","viewisload","void"],"components/SelectFilterComponent.html":["20","a.name.localecompare(b.nam","angular/cor","app","app/interfaces/interfac","b","boolean","cancel","check","class","commonsrc","compon","const","constructor","constructor(modalcontrol","constructor(priv","currentmaxfiltervalu","deburr","deburr(value.name.tolowercase()).startswith(searchvalu","default","element","element.id","event.check","event.value.id","expandfiltervalu","expandfiltervalues(infinitescrol","export","file","filter","filter((valu","filter.component.html","filter.component.scss","filter.component.t","filter.valu","filter.values.sort(function(a","filter/select","filtervalu","filtervalue.check","filtervaluesbystep","implement","import","infinitescroll.target.complet","info","input","ionic/angular","ionviewdident","lodash","match","metadata","method","modalcontrol","ngoninit","null","number","oninit","properti","public","result","return","search","search(searchvalu","searchvalu","searchvalue.tolowercas","searchvaluesinfilt","searchvaluesinfilter(filt","select","selecteditem","selectfiltercompon","selector","sort(function(a","sourc","src/app/components/select","string","styleurl","templateurl","temporaryfilt","this.currentmaxfiltervalu","this.filt","this.filter.valu","this.filtervaluesbystep","this.modalcontroller.dismiss","this.searchvaluesinfilt","this.temporaryfilt","this.temporaryfilter.values.find","this.valuestodisplay","this.valuestodisplay.length","trackfiltervalu","trackfiltervalues(index","type","valu","value.id","valuechang","valuechanged(ev","valuestodisplay","void"],"components/SelectPoiComponent.html":["angular/cor","app","cancel","class","color","compon","constructor","constructor(modalcontrol","constructor(priv","evt.detail.valu","export","file","id","imgpoi","implement","import","info","input","ionic/angular","match","metadata","method","modalcontrol","name","ngoninit","number","oninit","poi","poi.component.html","poi.component.scss","poi.component.t","poi/select","properti","public","radiopoi","result","return","select","selectedpoichang","selectedpoichange(evt","selectedpoiid","selector","selectpoicompon","sourc","src","src/app/components/select","string","styleurl","templateurl","themepoi","this.modalcontroller.dismiss","this.selectedpoiid","type","undefin","void"],"components/SelectTrekComponent.html":["angular/cor","app","cancel","class","color","compon","constructor","constructor(modalcontrol","constructor(priv","evt.detail.valu","export","file","id","imgpractic","implement","import","info","input","ionic/angular","match","metadata","method","modalcontrol","name","ngoninit","number","oninit","properti","public","radiotrek","result","return","select","selectedtrekchang","selectedtrekchange(evt","selectedtrekid","selector","selecttrekcompon","sourc","src","src/app/components/select","string","styleurl","templateurl","this.modalcontroller.dismiss","this.selectedtrekid","trek","trek.component.html","trek.component.scss","trek.component.t","trek/select","type","undefin","void"],"components/TabsPage.html":["angular/common","angular/cor","angular/rout","app","app/tabs/mor","app/tabs/trek","class","compon","const","constructor","constructor(platform","export","file","import","info","ionic/angular","locat","match","metadata","offlin","platform","privat","result","router","selector","sourc","src/app/pages/tabs/tabs.page.t","styleurl","tab","tabs.page.html","tabs.page.scss","tabspag","templateurl","this.location.back","this.platform.backbutton.subscribewithpriority(9999","this.router.url","url"],"components/TrekCardComponent.html":["0","alertcontrol","alertmsg","angular/cor","app","app/interfaces/interfac","app/services/offlin","app/services/onlin","app/services/settings/settings.servic","app/tabs/trek","async","await","boolean","button","cancel","card","card.component.html","card.component.scss","card.component.t","card/trek","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","class","clickdeleteconfirm","clickdeleteconfirm($ev","compon","const","constructor","constructor(alertcontrol","cssclass","default","deleteconfirm","deleteconfirm.pres","deletetrek","details/${this.parentid}/${this.trek.properties.id","details/${this.trek.properties.id","event","event.stoppropag","export","fals","file","get('trekcard","handler","header","hydratedtrek","imgpracticesrc","imgsrc","implement","import","info","input","ionic/angular","isalert","isstag","loader","loader.dismiss","loader.pres","loadingcontrol","match","messag","metadata","method","ngoninit","ngx","number","numstag","offlin","offlinetrek","offlinetreksservic","oninit","onlinetrek","onlinetreksservic","parentid","pictur","presentdeleteconfirm","presentdeleteconfirm(isalert","privat","properti","public","removetrek","result","return","role","routerlink","secondari","selector","set","settingsservic","showalldata","sourc","src/app/components/trek","string","styleurl","subscrib","templateurl","text","this.alertcontroller.cr","this.deletetrek","this.hydratedtrek","this.hydratedtrek.properties.practic","this.hydratedtrek.properties.practice.pictogram","this.imgpracticesrc","this.imgsrc","this.isstag","this.loadingcontroller.cr","this.offlin","this.offlinetrek","this.offlinetreks.gettrekimagesrc","this.offlinetreks.gettrekimagesrc(this.trek","this.onlinetrek","this.onlinetreks.gettrekimagesrc","this.onlinetreks.gettrekimagesrc(this.trek","this.parentid","this.presentdeleteconfirm","this.presentdeleteconfirm(tru","this.routerlink","this.settings.gethydratedtrek","this.transl","this.trek","this.trek.properties.id","topromis","translat","translate/cor","translateservic","translationtrekcard","translationtrekcard.askdelet","translationtrekcard.cancelbutton","translationtrekcard.confirmbutton","translationtrekcard.deletelabel","translationtrekcard.deletetitl","translationtrekcard.deletioninprogress","translationtrekcard.errorwhiledelet","translationtrekcard.trekisdelet","trek","trekcardcompon","treks.servic","treks/offlin","treks/onlin","trekservic","trekservice.getcommonimgsrc","true","type","undefin","url","valu","void"],"components/TrekDetailsPage.html":["0","1","accur","activatedrout","alertcontrol","analytics/ngx","angular/cor","angular/rout","api","apiurl","app","app/components/abstract/unsubscrib","app/components/progress/progress.compon","app/interfaces/interfac","app/services/offlin","app/services/onlin","app/services/settings/settings.servic","app/tabs/treks${this.offlin","async","await","baseurl","behavior","block","boolean","button","cancel","changedetect","changedetectionstrategi","changedetectionstrategy.onpush","changedetectorref","children","children.properties.id","class","commonsrc","compon","connectionerror","const","constructor","constructor(onlinetrek","context","context.commonsrc","context.isstag","context.offlin","context.originaltrek","context.parenttrek","context.parenttrek.properties.id","context.pois.featur","context.touristiccategorieswithfeatur","context.touristiccont","context.touristicevents.featur","context.trek","context.trek.properties.children","context.trek.properties.children.features.length","context.trek.properties.id","context.trekstool","context.trekstool.gettrekmapurl","cssclass","currentpoi","currenttrek","data","data.context","dataset","default","detail","details.page.html","details.page.scss","details.page.t","details/trek","download","downloadconfirm","downloadconfirm.pres","downloadtrek","env/environ","environ","environment.appnam","environment.onlinebaseurl","environment.onlinebaseurl.replac","environment.poicollapseinitials","environment.touristiccontentcollapseinitials","environment.trekdetails.showimgrulesifparkcent","environment.usefirebas","export","extend","fals","file","firebaseanalyt","getpicturesrc","getpicturesrc(pictur","getpoisfortrekbyid(this.parenttrek.properties.id","gettouristiccontentsfortrekbyid(this.parenttrek.properties.id","gotostep","gotostep(stepid","handler","header","hydratedtrek","implement","import","info","inlin","ionic","ionic/angular","ionviewdident","isalert","isavailableofflin","isitiner","isstag","maplink","match","messag","metadata","method","mobil","modal","modalcontrol","modalprogress","modalprogress.dismiss","modalprogress.pres","name","native/firebas","native/soci","nearest","nexttrek","ngoninit","ngx","null","number","offlin","offlinetrek","offlinetreksservic","ondestroy","oninit","onlinetrek","onlinetreksservic","onlineurl","onlineurl}${this.currenttrek.properties.practice.slug}/${this.currenttrek.properties.slug","originaltrek","parenttrek","pictur","platform","poi","poi_typ","poicollapseinitials","presentdownloadconfirm","presentdownloadconfirm(isalert","previoustrek","privat","progress","progresscompon","properti","public","ref","refresh","result","return","role","rout","router","saveresult","savetrek","scrolltostag","scrolltostages(stag","secondari","selector","servic","set","setting.id","settings.find","settingsservic","share","sharetrek","sharing/ngx","sharingopt","showimgrulesifparkcent","simpletrek","smooth","socialshar","sourc","src/app/pages/trek","stageindex","stages.scrollintoview","start","stepid","string","styleurl","subject","subscrib","success","super","super.ngoninit","templateurl","text","this.alertcontroller.cr","this.baseurl.replace('mobil","this.commonsrc","this.connectionerror","this.currentpoi","this.currenttrek","this.currenttrek.properties.id","this.currenttrek.properties.nam","this.downloadtrek","this.firebaseanalytics.logev","this.isavailableofflin","this.isitiner","this.isstag","this.maplink","this.modalcontroller.cr","this.offlin","this.offlinetrek","this.offlinetreks.createnewprogressstream","this.offlinetreks.trekisavailableofflin","this.onlinetrek","this.onlinetreks.getminimaltrekbyid","this.originaltrek","this.parenttrek","this.parenttrek.properties.children.featur","this.parenttrek.properties.children.features.findindex","this.parenttrek.properties.id","this.platform.is('android","this.platform.is('io","this.presentdownloadconfirm(tru","this.previoustrek","this.ref.markforcheck","this.route.data.subscribe(async","this.router.navigate([this.router.url","this.socialsharing.sharewithoptions(sharingoptions).then","this.stageindex","this.subscriptions$$.push","this.touristiccategorieswithfeatur","this.touristiccont","this.touristicev","this.translate.get('trek.downloadalert').subscribe(async","this.translate.getdefaultlang()}/trek","this.trekstool","this.trekstool.gettrekimagesrc(this.originaltrek","this.trekstool.gettreksurl","this.treksurl","this.typepoi","topromis","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristiccontentcollapseinitials","touristicev","trad","trad.cancelbutton","trad.confirmbutton","trad.confirmerror","trad.contentitiner","trad.contenttrek","trad.error","trad.success","trad.titletrek","translat","translate/cor","translateservic","trek","trekcontext","trekdetailspag","treks.servic","treks/offlin","treks/onlin","treksservic","trekstool","treksurl","true","typepoi","undefin","unsubscrib","url","valu","void"],"components/TrekMapPage.html":["activatedrout","angular/common","angular/cor","angular/rout","any).properties.id","app","app/components/abstract/unsubscrib","app/components/inform","app/components/poi","app/interfaces/interfac","app/services/loading/loading.servic","app/services/settings/settings.servic","async","await","boolean","catch","class","close","commonsrc","compon","componentprop","connect","connectionerror","const","constructor","constructor(load","context","context.mapconfig","context.offlin","context.poi","context.touristiccategorieswithfeatur","context.trek","context.trekstool","context.trekstool.getcommonimgsrc","context.trekstool.gettrekdetailsurl","cssclass","currentpoi","currenttrek","data","data.context","default","desk","details.compon","details/inform","details/poi","error","event","export","extend","fals","file","full","gl","htmlionmodalel","hydratedtrek","implement","import","info","informationdesk","informationdeskdetailscompon","ionic/angular","ionviewdident","load","loader","loadingservic","locat","map","map.page.html","map.page.scss","map.page.t","map/trek","mapbox","mapboxopt","mapconfig","mapisload","mapisloaded(ev","match","metadata","method","modal","modal.dismiss","modal.pres","modalcontrol","modalpoidetail","navigatetochildren","navigatetochildren(id","ngondestroy","null","number","offlin","ondestroy","platform","poi","poidetailscompon","popov","popover.dismiss","popovercontrol","popoverctrl","presentinformationdeskdetail","presentinformationdeskdetails(informationdesk","presentpoidetail","presentpoidetails(poi","privat","promis","properti","public","refresh","result","return","rout","router","selector","set","settingsservic","size","sourc","src/app/pages/trek","string","styleurl","super","super.ngondestroy","templateurl","this.commonsrc","this.connectionerror","this.currentpoi","this.currenttrek","this.currenttrek.properties.id","this.loading.begin('trek","this.loading.finish","this.loading.finish('trek","this.location.back","this.mapconfig","this.modalcontroller.cr","this.modalcontroller.gettop","this.modalpoidetail","this.modalpoidetails.dismiss","this.modalpoidetails.ondiddismiss().then","this.modalpoidetails.pres","this.offlin","this.platform.backbutton.subscribewithpriority(99999","this.platform.is('android","this.popoverctrl.gettop","this.route.data.subscribe((data","this.router.navig","this.router.navigate([this.router.url","this.subscriptions$$.push","this.touristiccategorieswithfeatur","this.trekstool","this.trekstool.gettrekdetailsurl(id","this.trekurl","touristiccategorieswithfeatur","touristiccategorywithfeatur","trek","trekcontext","trekmappag","treksservic","trekstool","trekurl","tri","true","unsubscrib","valu","void","won't"],"components/TreksMapPage.html":["0","activatedrout","angular/cor","angular/rout","app","app/components/abstract/unsubscrib","app/components/filters/filters.compon","app/components/search/search.compon","app/interfaces/interfac","app/services/filt","app/services/loading/loading.servic","app/services/onlin","app/services/settings/settings.servic","appnam","async","await","boolean","checknetwork","class","clonedeep","clonedeep(context.mapconfig","combinelatest","commonsrc","compon","componentprop","connect","const","constructor","constructor(load","context","context.offlin","context.trekstool","context.trekstool.filteredtrek","cssclass","currentposit","data","data.context","default","delay","env/environ","environ","environment.appnam","error","export","extend","fals","file","filteredtrek","filterscompon","filtertrek","filtertreksservic","first","full","gl","implement","import","info","ionic","ionic/angular","ionviewdident","ionviewdidleav","isinview","isonlin","load","loaderstatu","loadingservic","loadtrek","lodash","map","map((data","map.page.html","map.page.scss","map.page.t","map/trek","mapbox","mapboxopt","mapconfig","mapisload","mapisloaded(load","match","mergefilterstrek","mergemap","mergemap((context","metadata","method","minimaltrek","modal","modal.ondiddismiss","modal.pres","modalcontrol","native/network/ngx","navigatetotrek","navigatetotrek(id","network","ngondestroy","ngoninit","none","nonetwork","number","numberofactivefilt","offlin","ondestroy","oninit","onlinetrek","onlinetreksservic","pipe(delay(0","platform","presentfilt","presentsearch","privat","promis","properti","provid","public","result","return","rout","router","rxj","rxjs/internal/subscript","rxjs/oper","searchcompon","selector","set","settingsservic","size","sourc","src/app/pages/trek","statu","string","styleurl","subscribe(([filteredtrek","subscribe((statu","subscript","super","super.ngondestroy","super.ngoninit","templateurl","this.checknetwork","this.commonsrc","this.filteredtrek","this.filtertreks.activefiltersnumb","this.isinview","this.loaderstatu","this.loading.begin('trek","this.loading.finish","this.loading.finish('trek","this.loading.statu","this.mapconfig","this.mapisloaded(fals","this.mergefilterstrek","this.modalcontroller.cr","this.navigatetotrek(data","this.network.typ","this.nonetwork","this.numberofactivefilt","this.offlin","this.onlinetreks.loadtrek","this.onlinetreks.onlinetrekserror$.subscribe((error","this.platform.is('android","this.platform.is('io","this.route.data.pip","this.route.data.subscribe((data","this.router.navigate([this.trekstool.gettrekdetailsurl(id","this.settings.loadset","this.subscriptions$$.push","this.subscriptions$$.push(this.mergefilterstrek","this.trekstool","this.trekstool.getcommonimgsrc","this.trekstool.gettreksurl","this.treksurl","trek","treks.servic","treks/filt","treks/onlin","trekscontext","treksmappag","treksservic","trekstool","treksurl","true","unsubscrib","unsubscribe(this.mergefilterstrek","valu","void"],"components/TreksOrderComponent.html":["alphabet","angular/cor","app","app/components/abstract/unsubscrib","app/components/in","app/interfaces/interfac","app/services/geolocate/geolocate.servic","app/services/settings/settings.servic","async","await","backgroundgeoloc","boolean","catch","catcherror","class","compon","componentprop","const","constructor","constructor(navparam","cssclass","currentord","default","disclosure.compon","disclosure/in","error","export","extend","fals","file","full","geoloc","geolocateservic","geolocation/ngx","import","inappdisclosurecompon","info","ionic","ionic/angular","ionviewwillent","isfirstcheck","locat","match","metadata","method","modal","modal.ondiddismiss","modal.pres","modalcontrol","native/background","navig","navigator.geolocation.getcurrentposit","navparam","order","order!.typ","order.component.html","order.component.scss","order.component.t","order/trek","ordervalu","platform","popovercontrol","posit","position.coords.latitud","position.coords.longitud","presentinappdisclosur","privat","promis","properti","public","random","result","return","selector","set","settingsservic","shouldshowinappdisclosur","size","sourc","src/app/components/trek","startloc","startlocation.latitud","startlocation.longitud","string","styleurl","super","templateurl","this.backgroundgeolocation.getcurrentloc","this.currentord","this.geolocate.shouldshowinappdisclosur","this.modalcontroller.cr","this.navparams.get('ord","this.ord","this.platform.is('android","this.platform.is('io","this.popovercontroller.dismiss","this.presentinappdisclosur","this.settings.order$.subscribe((ord","this.settings.saveorderstate(ordervalu","this.subscriptions$$.push","trek","treksorderchang","treksorderchange(ordervalu","treksordercompon","tri","true","unsubscrib","valu","void"],"components/TreksPage.html":["0","12","2","6","activatedrout","alertcontrol","alertloc","alertlocation.ondiddismiss","alertlocation.pres","alphabet","angular/cor","angular/rout","app","app/components/abstract/unsubscrib","app/components/filters/filters.compon","app/components/in","app/components/search/search.compon","app/components/trek","app/interfaces/interfac","app/services/filt","app/services/geolocate/geolocate.servic","app/services/loading/loading.servic","app/services/offlin","app/services/onlin","app/services/settings/settings.servic","appnam","async","await","boolean","button","chang","changecols","checknetwork","class","colsiz","combinelatest","compon","componentprop","const","constructor","constructor(filtertrek","content","context","context.offlin","context.trekstool","context.trekstool.filteredtrek","context.trekstool.gettreksmapurl","cssclass","currentmaxtrek","currentposit","currentposition.latitud","currentposition.longitud","data","data.context","data.error","default","delay","disclosure.compon","disclosure/in","element","element.properties.id","enter","env/environ","environ","environment.appnam","environment.cols","environment.initialord","environment.treksbystep","errortransl","errortranslation['confirmbutton","errortranslation['head","errortranslation['messag","errortranslation['subhead","event","expandtrek","expandtreks(infinitescrol","export","extend","fals","file","filter","filteredtrek","filterscompon","filtertrek","filtertreksservic","final","first","full","geoloc","geolocateservic","get('geolocate.error","getmdcols","handleinitialord","header","implement","import","inappdisclosurecompon","infinitescroll.target.complet","info","inform","ioncont","ionic","ionic/angular","isonlin","load","loaderstatu","loadingservic","loadtrek","locat","map","map((data","maplink","match","mergemap","mergemap((context","messag","metadata","method","minimaltrek","modal","modal.ondiddismiss","modal.pres","modalcontrol","name","native/network/ngx","navigatetotrek","navigatetotrek(id","nbofflinetrek","network","ngoninit","ngx","none","nonetwork","null","number","numberofactivefilt","offlin","offlinetrek","offlinetreksservic","oninit","onlinetrek","onlinetreksservic","order","order.compon","order/trek","pipe(delay(0","platform","popov","popover.ondiddismiss","popover.pres","popovercontrol","presentfilt","presentgeolocateerror","presentinappdisclosur","presentsearch","privat","problem","promis","properti","provid","public","random","resetfilt","result","return","rout","router","rxj","rxjs/oper","searchcompon","select","selector","set","settingsservic","shouldshowinappdisclosur","showtreksord","showtreksorder(ev","size","sourc","src/app/pages/treks/treks.page.t","static","statu","string","styleurl","subhead","subscribe(([filteredtrek","subscribe((statu","super","super.ngoninit","templateurl","this.alertcontroller.cr","this.checknetwork","this.cols","this.content.scrolltotop","this.currentmaxtrek","this.filteredtrek","this.filteredtreks.length","this.filtertreks.activefiltersnumb","this.geolocate.getcurrentposit","this.geolocate.shouldshowinappdisclosur","this.handleinitialord","this.loaderstatu","this.loading.statu","this.maplink","this.modalcontroller.cr","this.navigatetotrek(data","this.nbofflinetrek","this.network.typ","this.nonetwork","this.numberofactivefilt","this.offlin","this.offlinetreks.treks$.subscribe((trek","this.onlinetreks.loadtrek","this.platform.is('android","this.platform.is('io","this.popovercontroller.cr","this.presentgeolocateerror","this.presentinappdisclosur","this.route.data.pip","this.route.data.subscribe((data","this.router.navigate([this.trekstool.gettrekdetailsurl(id","this.settings.data","this.settings.loadset","this.settings.order$.valu","this.settings.resetfilt","this.settings.saveorderstate('alphabet","this.settings.saveorderstate(environment.initialord","this.subscriptions$$.push","this.transl","this.translate.get('toolbar.orderbyalphabet').topromis","this.translate.get('toolbar.orderbylocation').topromis","this.translate.get('toolbar.orderbyrandom').topromis","this.treksbystep","this.trekstool","tool","topromis","tracktrek","tracktrek(index","translat","translate/cor","translateservic","transluc","trek","treks.features.length","treks.page.html","treks.page.scss","treks.servic","treks/filt","treks/offlin","treks/onlin","treksbystep","trekscontext","treksordercompon","trekspag","treksservic","trekstool","tri","true","unsubscrib","user","valu","viewchild","viewchild('cont","void"],"injectables/CacheService.html":["0","1","1000","200","4","60","actual","angular/common/http","angular/cor","broadcast","cach","cacheservic","catcherror","catcherror((error","class","complet","const","constructor","constructor(http","constructor(priv","creat","default","delay","delet","dure","each","emit","eventemitt","everyth","export","file","get","get(url","hit","http","httpclient","import","increment","info","inject","key","last","make","match","maxsiz","method","ms","new","null","number","object.keys(this.cache).length","observ","observable.pip","option","options).pip","privat","properti","providedin","public","publishreplay","publishreplay(1","refcount","refreshdelay","replaysubject","request","respons","result","return","revok","revoking(observ","root","rxj","rxjs/oper","send","sent","set","sourc","src/app/services/cache/cache.service.t","store","string","subscrib","take","take(1","tap","this.cach","this.cache.hasownproperty(url","this.cache[revok","this.cache[url","this.hit","this.hits[revok","this.hits[url","this.http.get(url","this.maxs","this.refreshdelay","this.revoke.emit","this.revoke.emit(revok","this.revoke.subscribe((revok","throwerror","throwerror(error","time","todo","valu","without"],"injectables/FilterTreksService.html":["0","0.5","1","a.geometri","a.properties.nam","activefiltersnumb","alphabet","angular/cor","any).indexof(filtervalu","app/interfaces/interfac","app/services/settings/settings.servic","b","b.geometri","b.properties.nam","boolean","checkedvalue.id","checkedvalue.interv","class","combinelatest","const","constructor","constructor(priv","constructor(set","contain","containsfilt","containsfilter(filt","criterionvalu","distanc","distancefromtreka","distancefromtrekb","export","fals","featur","feature.properties[filter.id","file","filter","filter((valu","filter(trek","filter.typ","filter.valu","filter.values.filter((valu","filteredfeatur","filteredfeatures.filter((featur","filteredtrek","filteredtreks.sort((a","filters.foreach((filt","filtertreksservic","filtertreksservice.containsfilt","filtertreksservice.filter(trek","filtertreksservice.getcheckedidforfilt","filtertreksservice.getcheckedidforfilter(filter).indexof","filtertreksservice.getcheckedinterval(filter).foreach","filtertreksservice.getnumberofactivefilters(filt","filtertreksservice.intervalfilt","filtertreksservice.isfilteractive(filt","filtertreksservice.sort","getcheckedidforfilt","getcheckedidforfilter(filt","getcheckedinterv","getcheckedinterval(filt","getfilteredtrek","getfilteredtreks(trek","getnumberofactivefilt","getnumberofactivefilters(filt","import","info","inject","interv","intervalfilt","intervalfilter(filt","isfilteract","isfilteractive(filt","isininterv","length","locat","map","map(([trek","map((checkedvalu","map((filt","match","math.random","max","method","min","minimaltrek","null","number","numberofactivefilt","observ","order","order.typ","order.valu","pipe","point","point(a.geometry.coordin","point(b.geometry.coordin","point(userloc","privat","properti","providedin","public","random","require('@turf/distance').default","result","return","root","rxj","rxjs/oper","set","settings.filters$.pip","settingsservic","sort","sort(filteredtrek","sourc","src/app/services/filt","static","this.activefiltersnumb","this.settings.filt","this.settings.ord","trek","treks.featur","treks.service.t","treks/filt","true","turf/help","undefin","user","userloc","value.check","value.checked).length","value.interv","void"],"injectables/GeolocateService.html":["0","10000","16","alreadyaskgeolocationpermiss","angular/cor","async","await","backgroundgeoloc","backgroundgeolocationconfig","backgroundgeolocationev","backgroundgeolocationlocationprovid","backgroundgeolocationlocationprovider.distance_filter_provid","behaviorsubject","behaviorsubject(nul","boolean","catch","checkauthor","checkifbackgroundgeolocationisrun","checkifcangetcurrenthead","class","const","constructor","constructor(backgroundgeoloc","currenthead","currentheadingsubscript","currentposit","currentpositioninterv","debug","deviceorient","deviceorientationcompasshead","deviceorientationcompassheading).hasownproperti","enablehighaccuraci","env/environ","environ","environment.backgroundgeoloc","environment.backgroundgeolocation.interv","error","export","fals","file","final","frequenc","geoloc","geolocateservic","geolocation/ngx","geolocationconfig","get('geolocate.notificationtitl","getcurrentposit","import","info","inject","ionic","ionic/angular","ionic/storag","latitud","location.latitud","locationprovid","longitud","match","maximumag","method","native/background","native/devic","navigator.geolocation.getcurrentposit","navigator.geolocation.getcurrentposition((posit","new","ngx","notificationtext","notificationtitl","null","number","object","on(backgroundgeolocationevents.loc","on(backgroundgeolocationevents.start","orientation/ngx","platform","posit","position.coords.latitud","position.coords.longitud","privat","promise((resolv","properti","providedin","public","reject","resethead","resetposit","resolve(tru","result","return","root","rxj","shouldshowinappdisclosur","showappset","showlocationset","sourc","src/app/services/geolocate/geolocate.service.t","startforeground","startloc","startlocation.latitud","startlocation.longitud","startnotificationsmodetrack","startnotificationsmodetracking(notificationtext","startonmaptrack","statu","status.author","status.isrun","stopnotificationsmodetrack","stoponmaptrack","stoponmaptracking(resethead","stopontermin","storag","string","subscribe((data","subscribe((loc","subscribe(async","subscript","this.backgroundgeoloc","this.backgroundgeolocation.checkstatu","this.backgroundgeolocation.configure(geolocationconfig","this.backgroundgeolocation.getcurrentloc","this.backgroundgeolocation.showappset","this.backgroundgeolocation.showlocationset","this.backgroundgeolocation.start","this.backgroundgeolocation.stop","this.checkifbackgroundgeolocationisrun","this.checkifcangetcurrenthead","this.currentheading$.next(data.truehead","this.currentheading$.next(nul","this.currentheadingsubscript","this.currentheadingsubscription.unsubscrib","this.currentposition$.next","this.currentposition$.next([location.longitud","this.currentposition$.next(nul","this.currentpositioninterv","this.deviceorient","this.deviceorientation.getcurrenthead","this.getcurrentposit","this.platform.is('android","this.platform.is('io","this.storage.get","this.transl","timeout","topromis","translat","translate/cor","translateservic","tri","true","truehead","typeof","void","watchhead","window.clearinterval(this.currentpositioninterv","window.setinterv"],"injectables/LoadingInterceptor.html":["0","angular/common/http","angular/cor","begin","begin(id","behaviorsubject","behaviorsubject(fals","boolean","catcherror","catcherror((error","class","const","constructor","constructor(protect","event","export","file","filter((loadingid","finish","finish(id","getvalu","httpevent","httphandler","httpinterceptor","httprequest","httprespons","id","ids.length","ids.push(id","implement","import","info","inject","instanceof","intercept","isload","isloading(id","list","load","loadingid","loadingids.indexof(id","loadinginterceptor","loadingservic","map","map((loadingid","match","method","new","next","next.handle(req).pip","observ","pipe(map((id","privat","properti","providedin","public","req","req.method","req.urlwithparam","result","return","root","rxj","rxjs/oper","servic","service.status.getvalu","service.status.next(isload","sourc","src/app/services/loading/loading.service.t","state","statu","string","subscribe((isload","tap","tap((ev","this.loading.begin(loadingid","this.loading.finish(loadingid","this.loadingid","this.loadingids.getvalu","this.loadingids.next","this.loadingids.next(id","this.loadingids.pip","this.status.subscrib","throwerror","throwerror(error","undefin","void"],"injectables/LoadingService.html":["0","angular/common/http","angular/cor","begin","begin(id","behaviorsubject","behaviorsubject(fals","boolean","catcherror","catcherror((error","class","const","constructor","constructor(protect","event","export","file","filter((loadingid","finish","finish(id","getvalu","httpevent","httphandler","httpinterceptor","httprequest","httprespons","id","ids.length","ids.push(id","implement","import","info","inject","instanceof","intercept","isload","isloading(id","list","load","loadingid","loadingids.indexof(id","loadinginterceptor","loadingservic","map","map((loadingid","match","method","new","next","next.handle(req).pip","observ","pipe(map((id","privat","properti","providedin","public","req","req.method","req.urlwithparam","result","return","root","rxj","rxjs/oper","servic","service.status.getvalu","service.status.next(isload","sourc","src/app/services/loading/loading.service.t","state","statu","string","subscribe((isload","tap","tap((ev","this.loading.begin(loadingid","this.loading.finish(loadingid","this.loadingid","this.loadingids.getvalu","this.loadingids.next","this.loadingids.next(id","this.loadingids.pip","this.status.subscrib","throwerror","throwerror(error","undefin","void"],"injectables/MoreInformationsService.html":["accept","angular/common/http","angular/cor","apiurl","app/interfaces/interfac","app/services/cache/cache.servic","cach","cacheservic","class","const","constructor","constructor(cach","env/environ","environ","environment.onlinebaseurl","export","file","getmoreitem","getmoreitembyid","getmoreitembyid(id","header","httpheader","httpoption","import","info","informationintro","informationitem","informations.service.t","informations/mor","inject","languag","match","method","moreinformationsservic","new","ngx","number","observ","privat","properti","providedin","public","result","return","root","rxj","sourc","src/app/services/mor","string","this.apiurl}/flatpages.json","this.apiurl}/flatpages/${id}.json","this.cache.get","this.translate.getdefaultlang","translat","translate/cor","translateservic"],"injectables/MoreItemResolver.html":["activatedroutesnapshot","analytics/ngx","angular/common/http","angular/cor","angular/rout","app/interfaces/interfac","app/services/mor","catcherror","catcherror((error","class","connectionerror","const","constructor","constructor(mor","env/environ","environ","environment.usefirebas","error.statu","export","file","firebaseanalyt","httperrorrespons","implement","import","info","informationitem","informations.servic","informations/mor","inject","ionic","ionic/angular","item.resolver.t","match","method","more","moreinformationsservic","moreitemid","moreitemresolv","native/firebas","of('connectionerror","platform","privat","resolv","resolve(rout","result","return","route.parammap.get('moreitemid","rxj","rxjs/oper","sourc","src/app/resolvers/mor","tap","tap((item","this.firebaseanalytics.setcurrentscreen(`${item.titl","this.more.getmoreitembyid(moreitemid).pip","this.platform.is('android","this.platform.is('io","throwerror","throwerror(error","void"],"injectables/MoreResolver.html":["activatedroutesnapshot","analytics/ngx","angular/common/http","angular/cor","angular/rout","app/interfaces/interfac","app/services/mor","catcherror","catcherror((error","class","connectionerror","constructor","constructor(mor","env/environ","environ","environment.usefirebas","error.statu","export","file","firebaseanalyt","httperrorrespons","implement","import","info","informationintro","informations.servic","informations/mor","inject","ionic","ionic/angular","match","more","moreinformationsservic","moreresolv","native/firebas","of('connectionerror","platform","privat","properti","resolv","result","return","rout","rxjs/internal/observable/of","rxjs/internal/observable/throwerror","rxjs/oper","sourc","src/app/resolvers/more.resolver.t","tap","this.firebaseanalytics.setcurrentscreen(`inform","this.more.getmoreitems().pip","this.platform.is('android","this.platform.is('io","throwerror","throwerror(error"],"injectables/OfflineTreksService.html":["0","1","2","angular/common/http","angular/cor","any).sourc","any).sources['til","any).trekbound","app/interfaces/interfac","app/map","app/services/filt","app/services/onlin","app/tabs/trek","array","array$.pipe(concatal","array$.pipe(count","async","await","background","background'].tiles[0","background'].typ","behaviorsubject","behaviorsubject(0","behaviorsubject(nul","blob","boolean","boolean(await","case","catch","catcherror","catcherror((","catcherror((error","check","check.cod","children","children.properties.id","childrentoremov","childrentoremove.push","class","clonedeep","clonedeep(environment.offlinemapconfig","clonedeep(environment.onlinemapconfig","clonedeep(this.treks$.getvalu","clonedeep(this.treks$.valu","common","concatal","concatmap","concatmap((jsontrek","const","constructor","constructor(platform","content","count","creat","createdirifnotexist","createdirifnotexists(dirnam","createnewprogressstream","current","currentprogress","currentprogressdownload","data","default","delay","delaywhen","delaywhen((zipfil","delet","details/${parentid}/${trekid","details/${trekid","dirdataloc","dirnam","document","download","emptytrek","env/environ","environ","environment.offlinemapconfig.styl","environment.onlinebaseurl","environment.onlinebaseurl}${imgpath","environment.trekzoom.maxzoom","environment.trekzoom.minzoom","environment.trekzoom.zoom","error('error","event.load","event.tot","event.typ","exist","export","fakemediadl","fals","featur","feature.properties.id","featurecollect","file","filteredtrek","filtertrek","filtertreksservic","first","folder","forkjoin","forkjoin(tasks).pip","from(observ","from(storage.remove(`trek","from(storage.set('offlin","from(storage.set(`poi","from(storage.set(`trek","from(this.createdirifnotexists('offlin","from(this.createdirifnotexists('zip","from(this.file.removefile(offlinezipuri","from(this.storage.get('offlin","from(this.storage.get(`trek","from(this.storage.get(path)).pip","full","fulltrek","fulltrek.properties.children","fulltrek.properties.children.featur","fulltrek.properties.children.features.foreach((children","fulltrek.properties.children.features.length","getcommonimgsrc","getdirlocaldataloc","getmapconfigfortrekbyid","getmapconfigfortrekbyid(trek","getpoisfortrekbyid","getpoisfortrekbyid(children.properties.id","getpoisfortrekbyid(trekid","gettilesdirectoryfortrekbyid","gettilesdirectoryfortrekbyid(trekid","gettouristiccontentsfortrekbyid","gettouristiccontentsfortrekbyid(children.properties.id","gettouristiccontentsfortrekbyid(trekid","gettouristiceventsfortrekbyid","gettouristiceventsfortrekbyid(trekid","gettrek","gettrekbyid","gettrekbyid(children.properties.id","gettrekbyid(trekid","gettrekdetailsurl","gettrekdetailsurl(trekid","gettrekimagesrc","gettrekimagesrc(trek","gettrekmapurl","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","given","gl","http","httpclient","httpeventtyp","httpeventtype.downloadprogress","httprequest","httprequest('get","id","imag","imgpath","implement","import","info","inject","insid","ionic","ionic/angular","ionic/storag","ismobil","isofflin","it'","json","json.parse(jsonpoi","json.parse(jsontouristiccont","json.parse(jsontrek","json.stringify(childrenjson","json.stringify(fulltrek","json.stringify(newtrek","json.stringify(poi","json.stringify(touristiccont","json.stringify(trek","last","map","map((","map((childrenjson","map((ev","map((jsonpoi","map((jsontouristiccont","map((jsontrek","map((removeresult","map((trek","mapbox","mapboxopt","mapconfig","mapconfig.cent","mapconfig.maxzoom","mapconfig.styl","mapconfig.style.lay","mapconfig.style.layers.push","mapconfig.style.sourc","mapconfig.style.sources['til","match","maxzoom","media","media.zip","mediadownloadprogress","mergemap","method","minimaltrek","minzoom","name","native/file/ngx","native/ion","native/zip/ngx","nb","nbprogress","new","newtrek","newtreks.featur","newtreks.features.filter((featur","newtreks.features.push(simpletrek","number","observ","of(1).pipe(delay(1000","of(2).pipe(delay(1000","of(3).pipe(delay(1000","of(4).pipe(delay(1000","of(5).pipe(delay(1000","of(tru","of(true).pipe(delay(6000","of(true).pipe(switchmapto(request","offlin","offline/${parentid}/${trekid","offline/${trekid","offline/${trekid}/tiles/{z}/{x}/{y}.png","offline/trek","offlinetreksservic","offlineuriloc","offlinezipdownloadurl","offlinezipuri","onlinetreksservic","parentid","path","pictur","picture.url","pipe","pipe(map","pipe(switchmapto(ratio","platform","poi","privat","progress","progress$.pip","properti","providedin","public","raster","ratio","remov","removemedia","removemedia(trekid","removeresult","removeresult.success","removetrek","removetrek(trekid","replac","reportprogress","req","request","requestf","requestfour","requeston","requestthre","requesttwo","require('lodash.clonedeep","responsetyp","result","retur","return","root","rxj","rxjs/oper","save","savecommonmedia","savemediafortrek","savemediafortrek(trekid","savetrek","savetrek(simpletrek","scan","scan((curr","share","simpletrek","simpletrek.properties.id","sourc","src","src/app/services/offlin","storag","storage.remov","storage.remove(`poi","storage.set","stream","stream.pip","stream.pipe(catcherror","stream.pipe(mergemap","string","subscribe((currentprogress","switch","switchmapto","tap","tap((unzipresult","task","tasks.push","tasks.push(from(storage.remove(`poi","tasks.push(from(storage.remove(`touristiccont","tasks.push(from(storage.set('offlin","tasks.push(this.fakemediadl","tasks.push(this.savecommonmedia","tasks.push(this.savemediafortrek(trekid","this.currentprogressdownload$.next(0","this.currentprogressdownload$.next(currentprogress","this.file.applicationstoragedirectori","this.file.checkdir(dirdataloc","this.file.createdir(dirdataloc","this.file.removerecursively(offlineuriloc","this.file.writefile(offlinezipuri","this.filteredtrek","this.filtertreks.getfilteredtreks(this.trek","this.getcommonimgsrc","this.getdirlocaldataloc","this.getdirlocaldatalocation()}offlin","this.getdirlocaldatalocation()}offline/${imgpath","this.getdirlocaldatalocation()}offline/${trekid}/tiles/{z}/{x}/{y}.pbf","this.getdirlocaldatalocation()}zip","this.gettilesdirectoryfortrekbyid","this.gettreks().subscribe((trek","this.http.request(req).pip","this.ismobil","this.mediadownloadprogress","this.onlinetreksservic","this.platform.is('android","this.platform.is('io","this.removemedia(trekid","this.removetrek(trekid","this.storag","this.storage.get(`trek","this.trekdownloadprogress","this.treks$.next(newtrek","this.treks$.next(trek","this.treks$.valu","this.treks$.value.features.length","this.updateprogress(ev","this.webview.convertfilesrc","this.zip.unzip(`${offlinezipuri}${trekid}.zip","this.zip.unzip(`${offlinezipuri}media.zip","this.zipurl}/${trekid}.zip","throw","throwerror","throwerror(fals","throwerror(new","thumbnail","tile","tiles[0","tourist","touristiccont","touristicev","touristiceventsitem","trek","trek.bbox","trek.properties.children","trek.properties.children.features.foreach((children","trek.properties.children.features.length","trek.properties.first_pictur","trek.properties.first_picture.url","trek.properties.id","trekdownloadprogress","trekid","trekid}.zip","trekid}`)).pip","trekisavailableofflin","trekisavailableoffline(trekid","treks')).pip","treks.featur","treks.features.filter((featur","treks.servic","treks.service.t","treks/filt","treks/offlin","treks/onlin","treksservic","tri","true","type","typeof","undefin","unzip","unzipresult","updat","updateprogress","updateprogress(ev","valu","void","webview","webview/ngx","withlatestfrom","withlatestfrom(count","withmedia","write","zip","zipfil","zipurl","zoom"],"injectables/OnlineTreksService.html":["accept","angular/common/http","angular/cor","any).trekbound","apiurl","app/interfaces/interfac","app/map/${parentid}/${trekid","app/map/${trekid","app/services/cache/cache.servic","app/services/filt","app/tabs/trek","app/tabs/treks/trek","behaviorsubject","behaviorsubject(nul","boolean","cach","cacheservic","class","clonedeep","clonedeep(environment.onlinemapconfig","const","constructor","constructor(http","data","default","details/${parentid}/${trekid","details/${trekid","env/environ","environ","environment.onlinebaseurl","environment.trekzoom.zoom","error","export","fals","feature.properties.id","file","filteredtrek","filtertrek","filtertreksservic","getcommonimgsrc","getmapconfigfortrekbyid","getmapconfigfortrekbyid(trek","getminimaltrekbyid","getminimaltrekbyid(trekid","getpoisfortrekbyid","getpoisfortrekbyid(trekid","gettouristiccontentsfortrekbyid","gettouristiccontentsfortrekbyid(trekid","gettouristiceventsfortrekbyid","gettouristiceventsfortrekbyid(trekid","gettrek","gettrekbyid","gettrekbyid(trekid","gettrekdetailsurl","gettrekdetailsurl(trekid","gettrekimagesrc","gettrekimagesrc(trek","gettrekmapurl","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","given","gl","header","http","httpclient","httpheader","httpoption","imag","implement","import","info","inject","languag","loadtrek","map","mapbox","mapboxopt","mapconfig","mapconfig.cent","match","method","minimaltrek","new","ngx","number","observ","offlin","onlinetrekserror","onlinetreksservic","parentid","pictur","picture.url","poi","privat","properti","providedin","public","require('lodash.clonedeep","result","retur","return","root","rxj","sourc","src","src/app/services/onlin","string","this.apiurl}/${parentid}/pois/${trekid}.geojson","this.apiurl}/${parentid}/touristic_contents/${trekid}.geojson","this.apiurl}/${parentid}/touristic_events/${trekid}.geojson","this.apiurl}/${parentid}/treks/${trekid}.geojson","this.apiurl}/${trekid}/pois.geojson","this.apiurl}/${trekid}/touristic_contents.geojson","this.apiurl}/${trekid}/touristic_events.geojson","this.apiurl}/${trekid}/trek.geojson","this.apiurl}/treks.geojson","this.cache.get","this.filteredtrek","this.filtertreks.getfilteredtreks(this.trek","this.gettreks().subscrib","this.http.get","this.onlinetrekserror$.next(error","this.onlinetrekserror$.next(nul","this.translate.getdefaultlang","this.treks$.getvalu","this.treks$.next(data","thumbnail","touristiccont","touristicev","translat","translate/cor","translateservic","trek","trek.bbox","trek.features.find((featur","trek.properties.first_pictur","trek.properties.first_picture.url","trekid","treks.servic","treks.service.t","treks/filt","treks/onlin","treksservic","undefin","valu","void","zoom"],"injectables/SearchTreksService.html":["a.properties.name.localecompare(b.properties.nam","angular/cor","app/interfaces/interfac","b","class","deburr","deburr(searchvalue.tolowercas","deburr(trek.properties.name.tolowercase()).includes(searchvalu","export","file","filter((trek","import","info","inject","lodash","match","method","minimaltrek","providedin","public","result","return","root","search","search(trek","searchtreksservic","searchvalu","sort(function(a","sourc","src/app/services/search","string","trek","treks.service.t","treks.sort(function(a","treks/search"],"injectables/SettingsService.html":["0","1","a.indexof(v","accept","angular/common/http","angular/cor","apiurl","app/interfaces/interfac","array.isarray(touristiccontents.featur","async","await","behaviorsubject","behaviorsubject([0","behaviorsubject(nul","categori","categories.foreach((categoryid","category.nam","categoryid","check","citi","class","clonedeep","clonedeep(this.filters$.getvalu","clonedeep(trek","commonsrc","const","constructor","constructor(http","contour/contour.geojson","currentdataset","currentdatasetting.values.map((valu","data","data.id","dataset","datasetting.find((data","defaultset","difficulti","distanc","env/environ","environ","environment.onlinebaseurl","export","fals","featur","featurecollect","file","filter","filter((v","filter.id","filter.valu","filter.values.foreach((valu","filters.foreach((filt","filters.push(filt","geojson","geoloc","getfilt","getfilters(set","gethydratedtrek","gethydratedtrek(trek","getset","gettouristiccategorieswithfeatur","gettouristiccategorieswithfeatures(touristiccont","getvalueforpropertybyid","getvalueforpropertybyid(propertynam","getzonefromstorag","getzonefromurl","gi","header","http","httpclient","httpheader","httpoption","hydratedtrek","hydratedtrek.properties.advic","hydratedtrek.properties.arrival_c","hydratedtrek.properties.c","hydratedtrek.properties.departure_c","hydratedtrek.properties.descript","hydratedtrek.properties.difficulti","hydratedtrek.properties.information_desks.foreach((information_desk","hydratedtrek.properties.network","hydratedtrek.properties.practic","hydratedtrek.properties.rout","hydratedtrek.properties.them","id","import","info","information_desk.typ","information_desk_typ","informationdesk","inject","ionic","ionic/angular","ionic/storag","json.parse(await","json.stringify(set","json.stringify(zon","languag","loadset","locat","lodash","map((touristiccont","match","method","name","native/network/ngx","network","new","ngx","none","number","observ","order","platform","practic","privat","properti","property.values.find((valu","propertynam","propertyvalu","providedin","public","regexp","regexp(`src=\"${this.apiurl","replace(/src\\=\\\"\\//gi","replace(regexp","resetfilt","result","return","root","rout","rxj","savefiltersst","savefiltersstate(filt","saveorderst","saveorderstate(ord","set","setofflineset","settings.data","settings.data.find","settings.filt","settings.filters.foreach((filt","settings.json","settingsservic","sourc","src","src/app/services/settings/settings.service.t","src=\"${commonsrc","storag","string","theme","this.data$.getvalu","this.data$.next(defaultsettings.data","this.data$.next(settings.data","this.filters$.next(filt","this.filters$.next(this.getfilters(defaultset","this.filters$.next(this.getfilters(set","this.getsettings().subscribe(async","this.getvalueforpropertybyid","this.getvalueforpropertybyid('c","this.getvalueforpropertybyid('network","this.getvalueforpropertybyid('them","this.getzonefromurl().subscrib","this.http.get(this.apiurl","this.network.typ","this.order$.next","this.platform.is('android","this.platform.is('io","this.savefiltersstate(filt","this.setofflineset","this.storage.get('zon","this.storage.get(`set","this.storage.remove('zon","this.storage.set('set","this.storage.set('zon","this.translate.getdefaultlang","touristiccategori","touristiccategorieswithfeatur","touristiccategorieswithfeatures.push","touristiccategorywithfeatur","touristiccont","touristiccontent.properties.categori","touristiccontent_categori","touristiccontents.featur","touristiccontents.features.filt","translat","translate/cor","translateservic","trek","trek.properties.advic","trek.properties.arrival_c","trek.properties.c","trek.properties.cities.map","trek.properties.departure_c","trek.properties.descript","trek.properties.difficulti","trek.properties.information_desk","trek.properties.network","trek.properties.networks.map","trek.properties.practic","trek.properties.rout","trek.properties.them","trek.properties.themes.map","type","us","user","userloc","valu","value.check","value.id","void","zone"],"injectables/TrekContextResolver.html":["activatedroutesnapshot","analytics/ngx","angular/common/http","angular/cor","angular/rout","app/interfaces/interfac","app/services/loading/loading.servic","app/services/offlin","app/services/onlin","app/services/settings/settings.servic","catcherror","catcherror((error","class","commonsrc","connectionerror","console.error('no","const","constructor","constructor(load","currenttrekid","display","env/environ","environ","environment.usefirebas","error.statu","export","fail","file","finish","firebaseanalyt","forkjoin","found","gl","httperrorrespons","hydratedtrek","implement","import","info","inject","ionic","ionic/angular","isstag","load","loadingservic","map","mapbox","mapboxopt","mapconfig","match","method","name","native/firebas","next","null","number","of('connectionerror","of(nul","offlin","offlinetrek","offlinetreksservic","on","onlinetrek","onlinetreksservic","originaltrek","parent","parentid","parenttrek","pipe","platform","poi","previou","privat","request","resolv","resolve(rout","result","return","route.data['isstag","route.data['offlin","route.parammap.get('stageid","route.parammap.get('trekid","router","rxj","rxjs/oper","settingsservic","sourc","src/app/resolvers/trek.resolver.t","stage","stageid","this.firebaseanalytics.setcurrentscreen","this.loading.finish","this.offlinetrek","this.onlinetrek","this.platform.is('android","this.platform.is('io","this.router.navig","this.settingsservice.gethydratedtrek","this.settingsservice.gettouristiccategorieswithfeatur","throwerror","throwerror(error","touristiccategorieswithfeatur","touristiccont","touristicev","trek","trek.properties.nam","trekcontext","trekcontextresolv","trekid","treks.servic","treks/offlin","treks/onlin","treksservic","treksservice.getcommonimgsrc","treksservice.getmapconfigfortrekbyid","treksservice.getpoisfortrekbyid(currenttrekid","treksservice.gettouristiccontentsfortrekbyid(currenttrekid","treksservice.gettouristiceventsfortrekbyid(currenttrekid","treksservice.gettrekbyid(currenttrekid","treksservice.gettrekbyid(parentid","trekstool","two","undefin","void"],"injectables/TreksContextResolver.html":["activatedroutesnapshot","analytics/ngx","angular/cor","angular/rout","app/interfaces/interfac","app/services/offlin","app/services/onlin","class","const","constructor","constructor(onlinetrek","env/environ","environ","environment.offlinemapconfig","environment.onlinemapconfig","environment.usefirebas","export","file","firebaseanalyt","implement","import","info","inject","ionic","ionic/angular","mapconfig","match","method","native/firebas","observ","offlin","offlinetrek","offlinetreksservic","onlinetrek","onlinetreksservic","platform","privat","resolv","resolve(rout","result","return","route.data['offlin","rxj","sourc","src/app/resolvers/treks.resolver.t","this.firebaseanalytics.setcurrentscreen(`trek","this.offlinetrek","this.onlinetrek","this.platform.is('android","this.platform.is('io","treks.servic","treks/offlin","treks/onlin","trekscontext","trekscontextresolv","treksservic","trekstool"],"routes.html":["app","app/map","app/map/:trekid","app/map/:trekid/:stageid","app/tabs/trek","compon","full","match","moreitempag","morepag","offline/:trekid","offline/:trekid/:stageid","path","pathmatch","redirectto","result","rout","tab","tabspag","trekdetailspag","trekmappag","treksmappag"],"pipes/LowerRoundPipe.html":["angular/cor","class","export","file","implement","import","info","lowerround","lowerroundpip","match","math.floor(valu","name","number","pipe","pipetransform","result","return","round.pipe.t","sourc","src/app/pipes/low","transform(valu"],"classes/UnSubscribe.html":["angular/cor","class","constructor","export","file","function","implement","import","info","match","ngondestroy","ngoninit","ondestroy","oninit","properti","protect","result","rxjs/internal/subscript","sourc","src/app/components/abstract/unsubscribe.t","subscript","subscription.unsubscrib","this.subscript","this.subscriptions$$.foreach((subscript","unsubscrib","unsubscribe(subscript"],"interfaces/ContainsFilter.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/DataSetting.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Filter.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/FilterValue.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/HydratedTrek.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/HydratedTrekProperties.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/InformationDesk.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/InformationIntro.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/InformationItem.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/IntervalFilter.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/MinimalTrek.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/MinimalTrekProperties.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/MinimalTreks.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Picture.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Poi.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practica","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Pois.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Property.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Settings.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TouristicCategorie.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TouristicCategoryWithFeatures.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TouristicContent.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TouristicContents.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TouristicEvent.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TouristicEvents.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Trek.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TrekContext.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TrekProperties.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/Treks.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TreksContext.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid(trek","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiceventsfortrekbyid","gettrekbyid(id","gettrekdetailsurl(trekid","gettrekimagesrc(trek","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"interfaces/TreksService.html":["access","advic","advised_park","alphabet","ambianc","arriv","arrival_c","ascent","author","boolean","categori","chang","check","children","citi","color","commonsrc","complet","contact","contain","containsfilt","content","context","coordin","data","dataset","departur","departure_c","descript","description_teas","difficulti","durat","email","export","extend","external_url","featur","featurecollect","file","filter","filteredtrek","filtervalu","first_pictur","geojson","geometri","getcommonimgsrc","getmapconfigfortrekbyid","getmapconfigfortrekbyid(trek","getpoisfortrekbyid","getpoisfortrekbyid(id","gettouristiccontentsfortrekbyid","gettouristiccontentsfortrekbyid(id","gettouristiceventsfortrekbyid","gettouristiceventsfortrekbyid(id","gettrekbyid","gettrekbyid(id","gettrekdetailsurl","gettrekdetailsurl(trekid","gettrekimagesrc","gettrekimagesrc(trek","gettrekmapurl","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","gl","hidealllabel","hydratedtrek","hydratedtrekproperti","id","import","info","information_desk","informationdesk","informationintro","informationitem","interfac","interv","intervalfilt","is_park_cent","isofflin","isstag","latitud","legend","length","locat","longitud","mapbox","mapboxopt","mapconfig","match","method","minimaltrek","minimaltrekproperti","multipoint","municip","name","navig","network","null","number","observ","offlin","order","originaltrek","parentid","parenttrek","parking_loc","phone","photo_url","pictogram","pictur","poi","point","points_refer","postal_cod","practic","practical_info","profil","properti","random","result","return","rout","rxjs/internal/observ","set","showalllabel","slug","sourc","src/app/interfaces/interfaces.t","street","string","theme","thumbnail","titl","todo","touristiccategori","touristiccategorieswithfeatur","touristiccategorywithfeatur","touristiccont","touristicev","trek","trekcontext","trekproperti","trekscontext","treksservic","trekstool","type","url","usag","valu","websit"],"miscellaneous.html":["3880ff","clonedeep","default","distanc","environ","mapboxgl","match","miscellan","primarycolor","result","valu","variabl"],"coverage.html":["0","0/1","0/10","0/11","0/12","0/13","0/14","0/16","0/18","0/19","0/2","0/3","0/32","0/4","0/5","0/6","0/7","1/17","1/19","1/3","1/6","10","12","16","17","18","2/10","2/19","2/36","2/8","20","21","25","3","3/16","3/17","3/25","3/31","31","33","4/19","4/32","5","5/16","9","app","appcompon","cacheservic","card.component.t","card/trek","class","collapsiblelistcompon","compon","connecterrorcompon","containsfilt","coverag","dataset","desk","details.component.t","details.page.t","details/inform","details/poi","details/trek","disclosure.component.t","disclosure/in","document","error.component.t","error/connect","file","filter","filter.component.t","filter/select","filtercompon","filterscompon","filtertreksservic","filtervalu","filtervaluecompon","geolocatenotificationscompon","geolocateservic","hydratedtrek","hydratedtrekproperti","identifi","inappdisclosurecompon","informationdesk","informationdeskdetailscompon","informationintro","informationitem","informations.service.t","informations/mor","inject","interfac","intervalfilt","item.page.t","item.resolver.t","item/mor","layersvisibilitycompon","list.component.t","list/collaps","loadercompon","loadinginterceptor","loadingservic","lowerroundpip","map.page.t","map/trek","maptreksvizcompon","maptrekvizcompon","match","minimaltrek","minimaltrekproperti","moreinformationsservic","moreitempag","moreitemresolv","morepag","moreresolv","notifications.component.t","notifications/geoloc","offlinetreksservic","onlinetreksservic","order.component.t","order/trek","pictur","pipe","poi","poi.component.t","poi/select","poicompon","poidetailscompon","progresscompon","project","properti","result","round.pipe.t","searchcompon","searchtreksservic","selectfiltercompon","selectpoicompon","selecttrekcompon","set","settingsservic","src/app/app.component.t","src/app/components/abstract/unsubscribe.t","src/app/components/collaps","src/app/components/connect","src/app/components/filt","src/app/components/filter/filter.component.t","src/app/components/filters/filters.component.t","src/app/components/geoloc","src/app/components/in","src/app/components/inform","src/app/components/lay","src/app/components/loader/loader.component.t","src/app/components/map","src/app/components/poi","src/app/components/poi/poi.component.t","src/app/components/progress/progress.component.t","src/app/components/search/search.component.t","src/app/components/select","src/app/components/trek","src/app/interfaces/interfaces.t","src/app/pages/more/mor","src/app/pages/more/more.page.t","src/app/pages/tabs/tabs.page.t","src/app/pages/trek","src/app/pages/treks/treks.page.t","src/app/pipes/low","src/app/resolvers/mor","src/app/resolvers/more.resolver.t","src/app/resolvers/trek.resolver.t","src/app/resolvers/treks.resolver.t","src/app/services/cache/cache.service.t","src/app/services/filt","src/app/services/geolocate/geolocate.service.t","src/app/services/loading/loading.service.t","src/app/services/mor","src/app/services/offlin","src/app/services/onlin","src/app/services/search","src/app/services/settings/settings.service.t","statement","tabspag","touristiccategori","touristiccategorywithfeatur","touristiccont","touristicev","trek","trek.component.t","trek/select","trekcardcompon","trekcontext","trekcontextresolv","trekdetailspag","trekmappag","trekproperti","treks.service.t","treks/filt","treks/offlin","treks/onlin","treks/search","trekscontext","trekscontextresolv","treksmappag","treksordercompon","trekspag","treksservic","type","unsubscrib","value.component.t","value/filt","visibility.component.t","visibility/lay","viz.component.t","viz/map"]},"length":97},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.007654455986878075},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.01597444089456869},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.009111617312072893},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.009450171821305841},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"coverage.html":{"ref":"coverage.html","tf":0.1303370786516854}},".":{"1":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}},"5":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}},"docs":{}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006741573033707865}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.017977528089887642}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02247191011235955}}},"3":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.024719101123595506}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.015730337078651686}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.008988764044943821}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.006741573033707865}}},"docs":{}}},"1":{"0":{"0":{"0":{"0":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}},"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}},"docs":{}},"2":{"4":{"docs":{},"×":{"1":{"0":{"2":{"4":{"docs":{},"p":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"2":{"0":{"0":{"docs":{},"×":{"1":{"2":{"0":{"0":{"docs":{},"p":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"3":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464}}},"4":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464}}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"8":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.019169329073482427},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006013745704467354},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}},")":{"docs":{},"[":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"docs":{}}},"/":{"1":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"docs":{}}},"2":{"0":{"0":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}}},"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.01646090534979424},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"7":{"3":{"2":{"docs":{},"×":{"2":{"7":{"3":{"2":{"docs":{},"p":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464}}},"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"3":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}}},"3":{"0":{"0":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}},"docs":{}},"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.01556420233463035}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"8":{"8":{"0":{"docs":{},"f":{"docs":{},"f":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.037037037037037035}}}}},"docs":{}},"docs":{}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"2":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"3":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"docs":{}}},"4":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"/":{"1":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"3":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"docs":{}}},"5":{"0":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}},"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"coverage.html":{"ref":"coverage.html","tf":0.008988764044943821}},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{}},"docs":{}}},"6":{"0":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}}},"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}},"8":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.011589403973509934},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.008291873963515755},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.008064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.008064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.008210180623973728},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.012032085561497326},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.007575757575757576},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.008361204013377926},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.008223684210526315},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.008210180623973728},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.010736196319018405},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.008291873963515755},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.008223684210526315},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.00794912559618442},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.008361204013377926},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.008156606851549755},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.008361204013377926},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.008361204013377926},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.008291873963515755},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.007974481658692184},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.008361204013377926},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.008183306055646482},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.008361204013377926},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.008210180623973728},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.007739938080495356},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.01032448377581121},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.008361204013377926},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.007541478129713424}}}},"p":{"docs":{},"t":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.011990407673860911},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}},"u":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214}}}}}}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186}},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.02112676056338028}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0169971671388102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01288659793814433}},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01804123711340206}},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}},"y":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.03},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.02577319587628866},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.021739130434782608},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.1282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"routes.html":{"ref":"routes.html","tf":0.07407407407407407},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598}}}},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.007299270072993}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":5.023809523809524}}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304}}}}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186}}}}}}}}},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"routes.html":{"ref":"routes.html","tf":0.07407407407407407}},"/":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}},"/":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}},"s":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01824817518248175},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.015037593984962},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.027777777777777776},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0065609622744669215},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},"a":{"docs":{},"l":{"docs":{},"[":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"1":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"docs":{}},"_":{"docs":{},"c":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}},"o":{"docs":{},"w":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"e":{"docs":{},"[":{"0":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}},"docs":{}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"1":{"8":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}},"docs":{}},"docs":{}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"/":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004920721705850191},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.010835913312693499},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.015945330296127564},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.008213552361396304}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.015789473684210527},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0169971671388102},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.012575177692728267},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.018691588785046728},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.01871657754010695},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.011764705882352941},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.05752212389380531},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.03560371517027864},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.03416856492027335},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"v":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.006134969325153374},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.006578947368421052},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}},"b":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"(":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}},"[":{"0":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}},"docs":{}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.18823529411764706}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules.html":{"ref":"modules.html","tf":0.18823529411764706},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}}}}}}}}}},"s":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.01804123711340206}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.00429553264604811}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.011389521640091117}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}},"e":{"docs":{},"v":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"]":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}}}}}},"y":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.02912621359223301},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.018404907975460124},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.012084592145015106},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.04040404040404041},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.013953488372093023},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.018823529411764704},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.009111617312072893},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006013745704467354},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.013245033112582781},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.013266998341625208},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.012903225806451613},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.013136288998357963},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.013368983957219251},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.012121212121212121},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.013377926421404682},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.013157894736842105},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.013377926421404682},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.013136288998357963},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.012269938650306749},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.013266998341625208},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.013157894736842105},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.012718600953895072},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.013377926421404682},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.013050570962479609},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.013377926421404682},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.013377926421404682},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.013266998341625208},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.012759170653907496},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.013377926421404682},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.01309328968903437},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.013377926421404682},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.013136288998357963},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.018575851393188854},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.013377926421404682},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.016638935108153077},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.016591251885369532}},"(":{"docs":{},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}},"b":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14814814814814814}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.038461538461538464},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.02912621359223301},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":5.040816326530612},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.008747949699289229},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00875}},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004920721705850191}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0064516129032258064},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0065252854812398045},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.07042253521126761}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.07462686567164178},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":5.014084507042254},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"(":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.044444444444444446},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.021739130434782608},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.029850746268656716},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.015789473684210527},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.011857707509881422},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.020833333333333332},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.022556390977444},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":5.02112676056338},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":5.041095890410959},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":5.021052631578947},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":5.032258064516129},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":5.009063444108762},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":5.008498583569405},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":5.038461538461538},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":5.029126213592233},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":5.04054054054054},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":5.03030303030303},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":5.003280481137233},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":5.00625},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":5.027027027027027},"components/MorePage.html":{"ref":"components/MorePage.html","tf":5.027777777777778},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":5.0184049079754605},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":5.013513513513513},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":5.032608695652174},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":5.011673151750973},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":5.012345679012346},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":5.024590163934426},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":5.026086956521739},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":5.044776119402985},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":5.009345794392523},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":5.006201550387597},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":5.0133689839572195},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":5.011764705882353},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":5.017699115044247},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":5.010835913312693},"routes.html":{"ref":"routes.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.0651685393258427}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"x":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}}},"s":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.01812688821752266},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0226628895184136},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.028977583378895572},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.03125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.01557632398753894},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.012403100775193798},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.017027863777089782},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.012779552715654952},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.02050113895216401},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.026490066225165563},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.026490066225165563},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.029209621993127148},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.019184652278177457},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.026694045174537988},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.043478260869565216},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.029411764705882353}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.02112676056338028},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0410958904109589},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.03225806451612903},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.019867549668874173},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.019867549668874173},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.061224489795918366}},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}},"r":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304}}}}}}}}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"o":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0821917808219178},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.07462686567164178},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":5.027397260273973},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.04504504504504504},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.046296296296296294},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.007751937984496124},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.013368983957219251},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.009841443411700382},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.006622516556291391},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0064516129032258064},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":5.003311258278146},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.015789473684210527}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"a":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"v":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.04381443298969072}},"@":{"9":{"docs":{},".":{"0":{"docs":{},".":{"0":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"p":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"i":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.009933774834437087},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.009950248756218905},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.00967741935483871},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.00967741935483871},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.013136288998357963},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.008021390374331552},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.00909090909090909},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.010033444816053512},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.009868421052631578},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.010033444816053512},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.013136288998357963},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.009202453987730062},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.009950248756218905},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.009868421052631578},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.012718600953895072},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.010033444816053512},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.009787928221859706},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.010033444816053512},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.010033444816053512},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.009950248756218905},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.012759170653907496},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.010033444816053512},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.01309328968903437},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.010033444816053512},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.013136288998357963},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.009287925696594427},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.008849557522123894},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.010033444816053512},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.009983361064891847},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.00904977375565611}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}},"1":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}},"docs":{}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.002247191011236}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":5.052631578947368},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.06521739130434782},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.018223234624145785}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948}}}}}}},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}},"t":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.02459016393442623},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.02608695652173913},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}},"s":{"docs":{},"e":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}}}}},"c":{"docs":{},"h":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.011389521640091117},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"(":{"docs":{},"(":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.01904761904761905},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":5.0095238095238095},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.027777777777777776},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}},"y":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.04054054054054054},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.02631578947368421},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}},"i":{"docs":{},"f":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.011481683980317113},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00875}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}},"[":{"docs":{},"'":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"'":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"i":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.008213552361396304},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.02112676056338028},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.007751937984496124},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.037037037037037035}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03759398496240601}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364}}}}}}}}},"a":{"docs":{},"y":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.007731958762886598}},"(":{"docs":{},"(":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0065609622744669215},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.007374631268436578},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}},"e":{"docs":{},"[":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"1":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"docs":{}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598}},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.01366742596810934}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.05263157894736842},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.021739130434782608},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.029850746268656716},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304}}}}}},"s":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.07766990291262135},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.008291873963515755},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.008064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.008064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.008210180623973728},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.009358288770053475},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.010606060606060607},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.008361204013377926},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.008223684210526315},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.008210180623973728},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.008291873963515755},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.008223684210526315},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.011128775834658187},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.008361204013377926},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.008156606851549755},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.008361204013377926},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.008361204013377926},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.008291873963515755},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.011164274322169059},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.008361204013377926},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.008183306055646482},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.008361204013377926},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.008210180623973728},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.007739938080495356},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.01032448377581121},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.008361204013377926},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.007541478129713424}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.007974481658692184},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.007374631268436578},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009}}}}}},"t":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"#":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.027777777777777776}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888}},"/":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.027777777777777776},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564}}}}}},"t":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14814814814814814}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"a":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}},"b":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.03571428571428571},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.034722222222222224},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.008747949699289229},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.008213552361396304},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004373974849644614},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0075},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.008213552361396304},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":5.0049751243781095},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.006688963210702341},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}}},"a":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}},"e":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"c":{"docs":{},"h":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14814814814814814}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}},"i":{"docs":{},"n":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}},"[":{"0":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}},"docs":{}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.02152317880794702},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.02155887230514096},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.020967741935483872},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.020967741935483872},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.021346469622331693},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.017379679144385027},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.019696969696969695},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.021739130434782608},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.02138157894736842},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.021739130434782608},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.021346469622331693},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.019938650306748466},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.02155887230514096},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.02138157894736842},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.02066772655007949},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.021739130434782608},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.021207177814029365},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.021739130434782608},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.021739130434782608},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.02155887230514096},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.02073365231259968},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.021739130434782608},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.02127659574468085},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.021739130434782608},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.021346469622331693},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.020123839009287926},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.019174041297935103},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.021739130434782608},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.021630615640599003},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0196078431372549}}}},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.07894736842105263},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.03260869565217391},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0410958904109589},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.04411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.04477611940298507},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.05132450331125828},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.05140961857379768},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.05},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.05},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.05090311986863711},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.04144385026737968},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.04696969696969697},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.051839464882943144},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.05098684210526316},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.051839464882943144},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.05090311986863711},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.04754601226993865},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.05140961857379768},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.05098684210526316},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0492845786963434},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.051839464882943144},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.05057096247960848},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.051839464882943144},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.051839464882943144},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.05140961857379768},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.049441786283891544},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.051839464882943144},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.05073649754500818},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.051839464882943144},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.05090311986863711},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.047987616099071206},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.045722713864306784},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.051839464882943144},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.051580698835274545},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.04675716440422323}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.04225352112676056}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.02112676056338028}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}},"r":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625}},"o":{"docs":{},"r":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.022123893805309734},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.02050113895216401},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726}}}}}},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"[":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006013745704467354}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}},"y":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.01904761904761905}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.006060606060606061},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0410958904109589},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.02631578947368421},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.03225806451612903},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004920721705850191},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}},"y":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044}}}}}}}}}}}}}}}},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.01812688821752266},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}}}}}}}}},"[":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}},"]":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.019830028328611898},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.02702702702702703},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.027777777777777776},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.017054263565891473},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.013368983957219251},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.011764705882352941},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}},"k":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.012027491408934709},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"s":{"docs":{},":":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.04736842105263158},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.06451612903225806},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.054380664652567974},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004373974849644614},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.0411522633744856},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.05750798722044728},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.026694045174537988},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.008291873963515755},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":5.009677419354839},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.008064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.008210180623973728},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.007575757575757576},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.008361204013377926},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.008223684210526315},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.008210180623973728},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.008291873963515755},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.008223684210526315},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.00794912559618442},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.008361204013377926},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.008156606851549755},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.015050167224080268},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.008361204013377926},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.008291873963515755},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.007974481658692184},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.008361204013377926},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.008183306055646482},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.008361204013377926},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.008210180623973728},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.007739938080495356},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.007374631268436578},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.008361204013377926},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.007541478129713424},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.06521739130434782},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":5.006042296072508},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":5.044444444444444},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}},"t":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.05434782608695652},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":5.010526315789473},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.015789473684210527},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.03225806451612903},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.012084592145015106},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.02880658436213992},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0064516129032258064},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":5.004838709677419},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.05434782608695652},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":5.021505376344086},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":5.006389776357827},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}},"v":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}},"a":{"docs":{},"l":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.015463917525773196}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.0425531914893617},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.0449438202247191},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0392156862745098}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"_":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405}},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884}}}}}}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"`":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"`":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"`":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612}}}}}}}},"l":{"docs":{},"l":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"routes.html":{"ref":"routes.html","tf":0.07407407407407407}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.015},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.01597444089456869},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.03145695364238411},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.03150912106135987},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.03064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.03064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.034482758620689655},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.02540106951871658},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.02878787878787879},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.03177257525083612},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.03125},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.03177257525083612},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.034482758620689655},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.029141104294478526},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.03482587064676617},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.03125},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.033386327503974564},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.03511705685618729},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.03099510603588907},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.03177257525083612},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.03177257525083612},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.03482587064676617},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.03349282296650718},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.03511705685618729},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.03436988543371522},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.03511705685618729},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.034482758620689655},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.029411764705882353},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.028023598820058997},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.03511705685618729},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.03161397670549085},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.02865761689291101}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}},"1":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}},"docs":{}}}}}}}}}}}}}}},"i":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}},"[":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.007654455986878075},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.014900662251655629},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.014925373134328358},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.014516129032258065},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.014516129032258065},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.014778325123152709},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.012032085561497326},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.013636363636363636},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.015050167224080268},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.014802631578947368},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.015050167224080268},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.014778325123152709},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.013803680981595092},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.014925373134328358},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.014802631578947368},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.014308426073131956},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.01839464882943144},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.01468189233278956},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.015050167224080268},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.015050167224080268},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.014925373134328358},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.014354066985645933},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.01839464882943144},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.014729950900163666},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.01839464882943144},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.014778325123152709},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.01393188854489164},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.01327433628318584},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.01839464882943144},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.014975041597337771},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.013574660633484163}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}},"docs":{}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}},"k":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948}},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006013745704467354}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}},"l":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}}}}}}}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}},"e":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"s":{"docs":{},"j":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0226628895184136},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0684931506849315},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":5.005665722379604},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":5.004555808656036},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.006014215418261345},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004920721705850191},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.009933774834437087},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.009950248756218905},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.00967741935483871},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.00967741935483871},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.013136288998357963},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.008021390374331552},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.00909090909090909},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.010033444816053512},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.009868421052631578},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.010033444816053512},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.013136288998357963},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.009202453987730062},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.009950248756218905},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.009868421052631578},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.012718600953895072},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.010033444816053512},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.009787928221859706},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.010033444816053512},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.010033444816053512},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.009950248756218905},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.012759170653907496},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.010033444816053512},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.01309328968903437},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.010033444816053512},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.013136288998357963},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.009287925696594427},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.008849557522123894},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.010033444816053512},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.009983361064891847},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.00904977375565611}}}}}}}},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"(":{"docs":{},"'":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"(":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364}}}}}}}},"i":{"docs":{},"d":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}}}}}},"m":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.03}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}},"h":{"docs":{},"y":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}}}}}}}}}}},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"t":{"docs":{},"@":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03007518796992481}}}}}}},"o":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.011990407673860911},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.03},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.014388489208633094},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"'":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.04},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.03357314148681055},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}}},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.0380952380952381}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}}}}}},"r":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}}}}}}}}}},"y":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.01557632398753894},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.01026694045174538},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":5.004926108374384},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.006191950464396285},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.006568144499178982},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":5.004010695187166},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.012575177692728267},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.018589393110989613},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.033112582781456956},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.033112582781456956},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.012320328542094456},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.033112582781456956},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.03316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.03225806451612903},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.03225806451612903},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.029556650246305417},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.026737967914438502},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.030303030303030304},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.033444816053511704},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.03289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.033444816053511704},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.029556650246305417},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.03067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.029850746268656716},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.029605263157894735},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.03179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.030100334448160536},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.03262642740619902},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.030100334448160536},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.033444816053511704},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.03316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.03189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.030100334448160536},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.03273322422258593},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.030100334448160536},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.029556650246305417},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.02786377708978328},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.02654867256637168},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.030100334448160536},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.029950083194675542},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.027149321266968326}},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004373974849644614}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.14233576642335766},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.03571428571428571},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.07894736842105263},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.15555555555555556},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.13333333333333333},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.14084507042253522},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.10869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.1095890410958904},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.1323529411764706},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.11940298507462686},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.16417910447761194},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.041666666666666664},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.1411764705882353},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.13953488372093023},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.14772727272727273},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.16666666666666666},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.06766917293233082},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.02631578947368421},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.027190332326283987},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.028328611898016998},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.038461538461538464},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.038834951456310676},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.04040404040404041},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.01038819026790596},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.02},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.036036036036036036},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.046296296296296294},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.03067484662576687},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.036036036036036036},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.03260869565217391},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.027237354085603113},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.01646090534979424},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05970149253731343},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.021806853582554516},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.021705426356589147},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.029411764705882353},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.042352941176470586},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.035398230088495575},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.032507739938080496},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.01904761904761905},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.019169329073482427},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.018223234624145785},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.026490066225165563},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.026490066225165563},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.07},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.11702127659574468},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.12359550561797752},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.012027491408934709},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.02158273381294964},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.05084745762711865},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.022587268993839837},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.05533596837944664},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.08823529411764706},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612}}}}}}}}},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087}},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082}}}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004920721705850191},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}},"f":{"docs":{},"o":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},".":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}},"r":{"docs":{},"m":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.05825242718446602},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.04854368932038835},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":5.006060606060606},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.007374631268436578},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014598540145985401},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":5.019417475728155},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.02912621359223301}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"y":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"y":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.02702702702702703},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":5.003289473684211},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.027777777777777776},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":5.003344481605351},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.015463917525773196}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"n":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":5.051324503311259},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":5.051409618573798},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":5.05},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":5.05},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":5.050903119868637},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":5.041443850267379},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":5.046969696969697},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":5.051839464882943},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":5.050986842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":5.051839464882943},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":5.050903119868637},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":5.0475460122699385},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":5.051409618573798},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":5.050986842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":5.049284578696343},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":5.051839464882943},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":5.0505709624796085},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":5.051839464882943},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":5.051839464882943},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":5.051409618573798},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":5.049441786283891},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":5.051839464882943},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":5.050736497545008},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":5.051839464882943},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":5.050903119868637},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":5.047987616099071},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":5.045722713864307},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":5.051839464882943},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":5.0515806988352745},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":5.046757164404223},"coverage.html":{"ref":"coverage.html","tf":0.06741573033707865}}}}},"v":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.008064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.008064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}},"a":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.012779552715654952},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":5.003344481605351},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":5.014285714285714},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":5.0095846645367414},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":5.006833712984054},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":5.026490066225166},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":5.026490066225166},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":5.03},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":5.031914893617022},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":5.033707865168539},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":5.002577319587629},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":5.0071942446043165},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":5.0508474576271185},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":5.006160164271047},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":5.011857707509882},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":5.029411764705882},"coverage.html":{"ref":"coverage.html","tf":0.03146067415730337}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.05434782608695652},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":5.0256410256410255},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.022556390977443608}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}},"s":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521}},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.056338028169014086},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0821917808219178},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.043010752688172046},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0113314447592068},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.04040404040404041},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004373974849644614},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00875},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.03680981595092025},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.01646090534979424},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.03278688524590164},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.02608695652173913},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.024922118380062305}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.01288659793814433}},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.03608247422680412},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.04744525547445255},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.022556390977443608},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}},"@":{"5":{"docs":{},".":{"4":{"docs":{},".":{"1":{"1":{"docs":{},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.044444444444444446},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.029850746268656716},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.02912621359223301},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.04054054054054054},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.03260869565217391},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.03260869565217391}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.04504504504504504},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.027777777777777776}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334}}}},"#":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018}}}}}},"t":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}},"'":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.023715415019762844},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584}}}}}}}}}},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"_":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"d":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282}}},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}}}}}}}},"a":{"docs":{},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"l":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"m":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}},"e":{"docs":{},"y":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.01904761904761905}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.12162162162162163},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"s":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014598540145985401},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":5.027027027027027},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004373974849644614}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0065609622744669215},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.011990407673860911},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"n":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}},"u":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521}}}}}},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0169971671388102}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05970149253731343},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}},"k":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"a":{"docs":{},"d":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.030303030303030304},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.011764705882352941},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.007739938080495356},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948}},"e":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.07462686567164178},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":5.02020202020202},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.06060606060606061},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":5.013245033112582},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.033112582781456956},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.033112582781456956}},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":5.0198675496688745},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.05952380952380952},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.05555555555555555}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.13157894736842105},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":5.071428571428571},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.006134969325153374},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.006578947368421052},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}},"k":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.007654455986878075},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01625},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.016042780748663103},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.01411764705882353},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"#":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.047619047619047616}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"t":{"docs":{"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176}}}}}},"t":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.047619047619047616},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"v":{"docs":{},"i":{"docs":{},"z":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0684931506849315},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":5.0025},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"z":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0684931506849315},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":5.001093493712411},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"g":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.14814814814814814}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"p":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.00429553264604811},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.006191950464396285},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0066555740432612314},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},".":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}},"v":{"docs":{},"i":{"docs":{},"z":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}},"(":{"docs":{},"(":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"[":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"modules.html":{"ref":"modules.html","tf":0.023529411764705882},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.05263157894736842},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.044444444444444446},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.021739130434782608},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.029850746268656716},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"routes.html":{"ref":"routes.html","tf":0.07407407407407407},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.07142857142857142},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.07407407407407407},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571}}}}}}}}}}}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}}}}}}}},"x":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.01556420233463035},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.02875399361022364},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.05084745762711865},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":5.006568144499179},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":5.009950248756219},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.008210180623973728},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":5.006134969325154},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.037037037037036}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}},"n":{"docs":{},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}},"u":{"docs":{},"l":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules.html":{"ref":"modules.html","tf":10.011764705882353},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.0036496350364965},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":5.011904761904762},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":5.026315789473684},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":5.022222222222222},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":5.013333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":5.014084507042254},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":5.010869565217392},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":5.013698630136986},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":5.014705882352941},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":5.014925373134329},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":5.014925373134329},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":5.006944444444445},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":5.011764705882353},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":5.011627906976744},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":5.011363636363637},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":5.015151515151516}}}},"a":{"docs":{},"l":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.015789473684210527},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.02459016393442623},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.02608695652173913},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.009302325581395349},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.02912621359223301},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.05405405405405406},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.02702702702702703}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.05333333333333334},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":5.018018018018018},"routes.html":{"ref":"routes.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":5.026666666666666}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":5.0212765957446805},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"i":{"docs":{},"d":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.02702702702702703},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425}}}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.027777777777777776}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":5.02},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.056338028169014086},"components/MorePage.html":{"ref":"components/MorePage.html","tf":5.018518518518518},"routes.html":{"ref":"routes.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":5.028169014084507},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04477611940298507}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":5.022471910112359},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517}}}}}}}}}}}},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358}},"e":{"docs":{},"#":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.008210180623973728},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.008210180623973728},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}},".":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.019867549668874173},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.02321724709784411},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.02258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.02258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.019704433497536946},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.01871657754010695},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.021212121212121213},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.020066889632107024},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.019736842105263157},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.020066889632107024},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.019704433497536946},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.02147239263803681},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.02321724709784411},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.019736842105263157},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.022257551669316374},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.020066889632107024},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.022838499184339316},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.020066889632107024},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.023411371237458192},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.02321724709784411},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.022328548644338118},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.020066889632107024},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.019639934533551555},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.020066889632107024},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.019704433497536946},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.018575851393188854},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.017699115044247787},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.020066889632107024},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.019966722129783693},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.01809954751131222}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"v":{"docs":{},"e":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}},"i":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}},"docs":{}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.05825242718446602},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.04054054054054054},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.02702702702702703},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.01556420233463035},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.012320328542094456},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}},"w":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004920721705850191},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.016786570743405275},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.012320328542094456}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.009111617312072893}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.005467468562055768},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464}}}},"v":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.05263157894736842},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.044444444444444446},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.021739130434782608},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.029850746268656716},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304}}}}}}},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}}}}}},"b":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.015105740181268883},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.03067484662576687},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.02252252252252252},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.01556420233463035},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.012779552715654952},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.02733485193621868},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.019762845849802372},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.015105740181268883},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0311284046692607},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.024691358024691357},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.03278688524590164},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.034782608695652174},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.021671826625386997},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.01904761904761905},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.04792332268370607},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.03436426116838488},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.07194244604316546},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.01026694045174538},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.07142857142857142},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.08774834437086093},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.087893864013267},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.08548387096774193},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.09516129032258064},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.090311986863711},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.08957219251336898},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.09242424242424242},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.09197324414715718},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.09046052631578948},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.08862876254180602},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.090311986863711},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.10276073619631902},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.087893864013267},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.08717105263157894},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.09062003179650238},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.08862876254180602},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.08972267536704731},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.08862876254180602},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.09197324414715718},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.0912106135986733},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.09090909090909091},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.08862876254180602},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.09328968903436989},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.08862876254180602},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.090311986863711},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.08204334365325078},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.08997050147492626},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.08862876254180602},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.08818635607321132},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.09803921568627451}},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.01411764705882353},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.009287925696594427},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.034722222222222224},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.007731958762886598},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.019762845849802372},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.049019607843137254},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.007739938080495356},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.007541478129713424}},"e":{"docs":{},"/":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}},"/":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}}},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"}":{"docs":{},"/":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"{":{"docs":{},"z":{"docs":{},"}":{"docs":{},"/":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},"/":{"docs":{},"{":{"docs":{},"y":{"docs":{},"}":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.018404907975460124},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.018018018018018018},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.03260869565217391},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":5.001718213058419},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}},"(":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"2":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"3":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"4":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"5":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"1":{"0":{"0":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"6":{"0":{"0":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.024539877300613498},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.018018018018018018},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":5.004796163069544},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224}}}}}}}}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"j":{"docs":{},"d":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.015789473684210527}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.030973451327433628},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.02875399361022364},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.014373716632443531},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894}}}}}},"t":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"!":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.038461538461538}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607}}}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0410958904109589},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.03225806451612903},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.04285714285714286},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.012779552715654952},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.019867549668874173},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.019867549668874173},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.03},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.01288659793814433},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.016786570743405275},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.011589403973509934},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.011608623548922056},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.01129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.01129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.011494252873563218},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.009358288770053475},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.010606060606060607},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.011705685618729096},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.011513157894736841},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.011705685618729096},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.011494252873563218},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.010736196319018405},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.011608623548922056},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.011513157894736841},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.011128775834658187},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.011705685618729096},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.011419249592169658},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.011705685618729096},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.011705685618729096},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.011608623548922056},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.011164274322169059},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.011705685618729096},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.011456628477905073},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.011705685618729096},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.011494252873563218},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.010835913312693499},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.01032448377581121},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.011705685618729096},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.011647254575707155},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.010558069381598794}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"i":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.018900343642611683},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.04316546762589928},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.02766798418972332},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.009933774834437087},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.009950248756218905},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.00967741935483871},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.00967741935483871},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.009852216748768473},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.008021390374331552},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.00909090909090909},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.010033444816053512},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.009868421052631578},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.010033444816053512},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.009852216748768473},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.009202453987730062},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.009950248756218905},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.009868421052631578},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.009538950715421303},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.010033444816053512},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.009787928221859706},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.010033444816053512},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.010033444816053512},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.009950248756218905},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.009569377990430622},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.010033444816053512},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.009819967266775777},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.010033444816053512},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.009852216748768473},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.009287925696594427},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.008849557522123894},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.010033444816053512},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.009983361064891847},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.01809954751131222}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.011857707509881422},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"#":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.047619047619047616}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.07142857142857142},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.10416666666666667},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.022556390977443608},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.012084592145015106},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.014164305949008499},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.01556420233463035},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.04477611940298507},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.009287925696594427},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.01366742596810934},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.0425531914893617},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.0449438202247191},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.008213552361396304},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0392156862745098}}}}}}},"y":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}},"u":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.015463917525773196}}}}}}},"o":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.01038819026790596},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.03680981595092025},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.04954954954954955},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.013368983957219251},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.015463917525773196},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.008291873963515755},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.008064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.008064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.008210180623973728},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.007575757575757576},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.008361204013377926},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.008223684210526315},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.008210180623973728},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.008291873963515755},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.008223684210526315},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":5.009538950715421},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":5.013377926421405},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.008156606851549755},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.008361204013377926},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.008361204013377926},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.008291873963515755},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.007974481658692184},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.008361204013377926},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.008183306055646482},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.008361204013377926},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.008210180623973728},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.01393188854489164},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.007374631268436578},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.008361204013377926},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.007541478129713424},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0065609622744669215},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01625},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.008291873963515755},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.008064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.008064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.008210180623973728},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.007575757575757576},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.008361204013377926},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.008223684210526315},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.011494252873563218},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.008291873963515755},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.008223684210526315},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.011128775834658187},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.008361204013377926},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.008156606851549755},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.008361204013377926},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.008361204013377926},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.008291873963515755},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.011164274322169059},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.008361204013377926},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.011456628477905073},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.008361204013377926},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.008210180623973728},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.007739938080495356},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.007374631268436578},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.008361204013377926},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.007541478129713424}},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}},"a":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476}}}}}}}}}},")":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005}},"_":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"1":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014598540145985401},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":5.009009009009009},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.07352941176470588},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":5.012269938650307},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082}}}}}},"t":{"docs":{"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}},"s":{"docs":{},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514}}}}}},"p":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.07407407407407407}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.05263157894736842},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.01812688821752266},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0113314447592068},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.013121924548933843},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01625},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.03260869565217391},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.03501945525291829},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.04477611940298507},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.021806853582554516},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.02406417112299465},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.023529411764705882},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.030973451327433628},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.02476780185758514},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.02857142857142857},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.03514376996805112},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.04},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.031914893617021274},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.033707865168539325},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.023195876288659795},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.019184652278177457},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.022587268993839837},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.02766798418972332},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0392156862745098}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01824817518248175},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014598540145985401},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":5.021739130434782},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.028747433264887063},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.03145695364238411},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.03482587064676617},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.03064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.03064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.034482758620689655},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.04946524064171123},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.031818181818181815},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.03177257525083612},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.03125},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.03177257525083612},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.034482758620689655},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.029141104294478526},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.03150912106135987},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.03125},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.033386327503974564},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.03177257525083612},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":5.032626427406199},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.03177257525083612},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.03177257525083612},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.03150912106135987},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.03349282296650718},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.03177257525083612},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.03436988543371522},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.03177257525083612},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.034482758620689655},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.029411764705882353},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.028023598820058997},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.03177257525083612},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.03161397670549085},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.02865761689291101},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}},"y":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01125},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.006134969325153374},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}},"a":{"docs":{"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768}},"l":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006872852233676976},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":5.107142857142857},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"0":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}},"docs":{}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.07142857142857142}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004373974849644614},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0064516129032258064},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0065252854812398045},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}},"u":{"docs":{},"r":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.03067484662576687},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.02252252252252252},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006013745704467354},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.016786570743405275},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.019867549668874173},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.01990049751243781},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.01935483870967742},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.01935483870967742},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.019704433497536946},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0213903743315508},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.021212121212121213},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.020066889632107024},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.019736842105263157},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.020066889632107024},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.019704433497536946},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.018404907975460124},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.01990049751243781},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":5.021381578947368},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.025437201907790145},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.020066889632107024},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.01957585644371941},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.020066889632107024},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.020066889632107024},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.01990049751243781},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.025518341307814992},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.020066889632107024},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.019639934533551555},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.020066889632107024},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.019704433497536946},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.018575851393188854},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.02359882005899705},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.020066889632107024},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.019966722129783693},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.021116138763197588},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.056338028169014086},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0684931506849315},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.07894736842105263},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.03225806451612903},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.07854984894259819},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.038461538461538464},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.04040404040404041},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.009294696555494806},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01375},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.037037037037037035},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.0736196319018405},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0945945945945946},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.03260869565217391},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.07782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.06995884773662552},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.06557377049180328},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.06086956521739131},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.059190031152647975},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.09922480620155039},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.08288770053475936},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.08235294117647059},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.07739938080495357},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.0380952380952381},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.025559105431309903},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.02733485193621868},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.04},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.03608247422680412},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.0815347721822542},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.057494866529774126}}},"s":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"(":{"1":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}},"docs":{}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"m":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}},"u":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}}}}}}}}}},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"\\":{"docs":{},"=":{"docs":{},"\\":{"docs":{},"\"":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"q":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"@":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"f":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}},"l":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.01904761904761905},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"f":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"o":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}},"w":{"docs":{},"o":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}},"l":{"docs":{},"v":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.031914893617021274},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.056179775280898875},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.011857707509881422},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.029411764705882353}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598},"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"modules.html":{"ref":"modules.html","tf":0.023529411764705882},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.05263157894736842},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.044444444444444446},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.021739130434782608},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.029850746268656716},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"routes.html":{"ref":"routes.html","tf":0.07407407407407407},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.07142857142857142},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.07407407407407407},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}},"i":{"docs":{},"z":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"(":{"docs":{},"`":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"=":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.03323262839879154},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.014164305949008499},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.007654455986878075},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0075},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.027237354085603113},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.06172839506172839},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.02459016393442623},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.02608695652173913},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.017054263565891473},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.026737967914438502},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.018823529411764704},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.02476780185758514},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.023809523809523808},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.09904153354632587},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.03644646924829157},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.046357615894039736},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.046357615894039736},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.04},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.0425531914893617},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.054982817869415807},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.07913669064748201},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.11864406779661017},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.043121149897330596},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.023715415019762844},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.016591251885369532}}}}},"r":{"docs":{},"i":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}}}}}}}}}},"f":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.02702702702702703},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.027777777777777776},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.047619047619047616}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.015463917525773196}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.03571428571428571},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.04},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.04225352112676056},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.020833333333333332},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.03529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.03488372093023256},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.03409090909090909},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"routes.html":{"ref":"routes.html","tf":10.037037037037036},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},"e":{"docs":{},"r":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.036036036036036036},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.037037037037037035},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05970149253731343},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"'":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}},"l":{"docs":{},"e":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01804123711340206}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"s":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"j":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.02127659574468085},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}},"s":{"docs":{},"/":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"o":{"docs":{},"f":{"docs":{"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},"'":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}},"d":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.012084592145015106},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.02252252252252252},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.009302325581395349},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0106951871657754},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.009411764705882352},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.006191950464396285},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.008213552361396304},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":5.003344481605351},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"u":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":5.0041067761806985},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"u":{"docs":{},"b":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.05434782608695652},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":5.007782101167315},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.01556420233463035},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":5.033898305084746},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.024691358024691357},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.06779661016949153}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.037037037037037035},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.07377049180327869},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.0782608695652174},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.06521739130434782},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":5.008230452674897},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.03488372093023256},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":5.016393442622951},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.03409090909090909},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":5.017391304347826},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678}},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"t":{"docs":{"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.03278688524590164}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"t":{"docs":{"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.034782608695652174}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}},"n":{"docs":{},"d":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.01038819026790596},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00875},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.009584664536741214}},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03007518796992481}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}},"/":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"1":{"8":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"docs":{}},"docs":{}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"/":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"/":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"/":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"coverage.html":{"ref":"coverage.html","tf":0.006741573033707865}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"coverage.html":{"ref":"coverage.html","tf":0.006741573033707865}},"s":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.06741573033707865}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.01327433628318584},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.02050113895216401}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.019867549668874173},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.019867549668874173}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.03007518796992481}}}}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}},"i":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.022364217252396165}}}},"e":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"g":{"docs":{},"e":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}},"a":{"docs":{},"g":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.07692307692307693},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.01366742596810934},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.012320328542094456}},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"(":{"docs":{},"`":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}}}}}}}},"p":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.028169014084507043},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.01812688821752266},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.007654455986878075},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.024539877300613498},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.02252252252252252},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.01556420233463035},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.024691358024691357},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.06557377049180328},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.05217391304347826},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.024922118380062305},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.018823529411764704},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.01238390092879257},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.04285714285714286},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.009111617312072893},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.059602649006622516},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.059602649006622516},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.024054982817869417},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.03117505995203837},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.01642710472279261},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.13245033112582782},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.13930348258706468},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.14193548387096774},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.13870967741935483},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.13136288998357964},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.13903743315508021},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.15151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.13712374581939799},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.14144736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.13377926421404682},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.13136288998357964},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.1411042944785276},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.13930348258706468},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.14473684210526316},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.13672496025437203},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.13377926421404682},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.14355628058727568},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.13377926421404682},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.13712374581939799},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.13598673300165837},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.1371610845295056},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.13377926421404682},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.1309328968903437},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.13377926421404682},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.13136288998357964},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.12693498452012383},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.14749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.13377926421404682},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.13311148086522462},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.1297134238310709}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006013745704467354}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules.html":{"ref":"modules.html","tf":0.18823529411764706},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}}}}}},"e":{"docs":{},"r":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},".":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.16326530612244897}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224}}}}}}}}}}}}}}}}}},"b":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}},"[":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.038461538461538464},"modules.html":{"ref":"modules.html","tf":0.18823529411764706},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.011904761904761904},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.02631578947368421},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.06666666666666667},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":5.021739130434782}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":5.027397260273973},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.03488372093023256},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.03409090909090909}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":5.029411764705882},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.03529411764705882},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.045454545454545456}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.04},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.04225352112676056},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":5.029850746268656},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04477611940298507},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.03529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.03488372093023256},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.03409090909090909},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.045454545454545456}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.004920721705850191},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0113314447592068},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0032804811372334607},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}},"v":{"docs":{},"e":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"g":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0065252854812398045},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.04225352112676056}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.02564102564102564},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.02416918429003021},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.01646090534979424}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.013121924548933843},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.02112676056338028}}}}}}}}}}}},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.009294696555494806},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":5.003344481605351},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":5.0049751243781095},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.006191950464396285},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.010852713178294573},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.00859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.01026694045174538},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.019762845849802372},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.009933774834437087},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.009950248756218905},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.00967741935483871},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.00967741935483871},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.009852216748768473},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.008021390374331552},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.00909090909090909},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.010033444816053512},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.009868421052631578},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.010033444816053512},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.009852216748768473},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.009202453987730062},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.009950248756218905},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.009868421052631578},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.009538950715421303},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.010033444816053512},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.009787928221859706},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.010033444816053512},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.010033444816053512},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.013266998341625208},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":5.011164274322169},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":5.01505016722408},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.009819967266775777},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.010033444816053512},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.009852216748768473},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.015479876160990712},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.008849557522123894},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.010033444816053512},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.009983361064891847},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.00904977375565611},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.007751937984496124},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.008291873963515755},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.008064516129032258},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.008064516129032258},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.008210180623973728},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.007575757575757576},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.008361204013377926},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.008223684210526315},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.008361204013377926},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.008210180623973728},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.008291873963515755},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.008223684210526315},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.00794912559618442},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.008361204013377926},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.008156606851549755},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.008361204013377926},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.008361204013377926},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.008291873963515755},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.007974481658692184},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.008361204013377926},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":5.009819967266775},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":5.013377926421405},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.008210180623973728},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.01393188854489164},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.007374631268436578},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.008361204013377926},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.007541478129713424},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0547945205479452},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.09722222222222222},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.01366867140513942},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.03},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.018404907975460124},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.023346303501945526},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.04361370716510903},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.020155038759689922},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.016042780748663103},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.01411764705882353},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.02654867256637168},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.007739938080495356},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.01597444089456869},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.0352233676975945},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.019184652278177457},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.03389830508474576},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.06719367588932806},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.018211920529801324},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.01824212271973466},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.017741935483870968},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.017741935483870968},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0180623973727422},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.017379679144385027},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.016666666666666666},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.01839464882943144},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.018092105263157895},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.01839464882943144},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0180623973727422},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.01687116564417178},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.01824212271973466},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.018092105263157895},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.017488076311605722},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.01839464882943144},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.01794453507340946},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.01839464882943144},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.01839464882943144},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.01824212271973466},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.017543859649122806},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.01839464882943144},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.01800327332242226},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.01839464882943144},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":5.019704433497537},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.02631578947368421},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.019174041297935103},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":5.023411371237458},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.018302828618968387},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.02262443438914027},"coverage.html":{"ref":"coverage.html","tf":0.01348314606741573}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.047058823529411764},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":5.003100775193799},"routes.html":{"ref":"routes.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":5.023529411764706}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.046511627906976744},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":5.005347593582887},"routes.html":{"ref":"routes.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":5.023255813953488}}}}}}}}}}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.045454545454545456},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":5.004705882352941},"routes.html":{"ref":"routes.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":5.0227272727272725}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.020833333333333332},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.045454545454545456},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":5.003095975232198},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04477611940298507},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":5.03030303030303}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0015479876160990713},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":5.003327787021631},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.020833333333333332},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":5.019607843137255},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.014598540145985401},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":5.008849557522124},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947}},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"coverage.html":{"ref":"coverage.html","tf":0.008988764044943821}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"injectables/SearchTreksService.html":{"ref":"injectables/SearchTreksService.html","tf":0.01694915254237288},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.015810276679841896},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0392156862745098},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.004966887417218543},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.004010695187165776},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.004601226993865031},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.007739938080495356},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.008319467554076539},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":5.006033182503771},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.006191950464396285},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0066555740432612314},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765}}}}},"'":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0016556291390728477},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.001658374792703151},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0016129032258064516},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0016129032258064516},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0016420361247947454},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.001336898395721925},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0015151515151515152},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0016722408026755853},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.001644736842105263},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0016722408026755853},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0016420361247947454},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.0015337423312883436},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.001658374792703151},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.001644736842105263},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.001589825119236884},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0016722408026755853},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0016313213703099511},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0016722408026755853},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0016722408026755853},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.001658374792703151},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.001594896331738437},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0016722408026755853},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0016366612111292963},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0016722408026755853},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0016420361247947454},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":5.003095975232198},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0014749262536873156},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0016722408026755853},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0016638935108153079},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0015082956259426848},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.010948905109489052},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":5.007905138339921},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.07352941176470588},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":5.006230529595015},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087}}}}}},"t":{"docs":{"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}}}}},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.02577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.009592326139088728},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.011857707509881422}},"}":{"docs":{},".":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"`":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.006568144499178982},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":5.004424778761062},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"u":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.047619047619047616},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.041666666666666664},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.028328611898016998},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.009294696555494806},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.022123893805309734},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.02733485193621868},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.022222222222222223},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0136986301369863},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.014705882352941176},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.015037593984962405},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446},"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.004796163069544364},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"pipes/LowerRoundPipe.html":{"ref":"pipes/LowerRoundPipe.html","tf":0.03571428571428571}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}},"d":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"[":{"docs":{},"'":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}},"i":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.01366742596810934},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}},"a":{"docs":{},"b":{"docs":{"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716},"routes.html":{"ref":"routes.html","tf":0.037037037037037035}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04477611940298507},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":5.029850746268656},"routes.html":{"ref":"routes.html","tf":0.037037037037037035},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":5.029850746268656}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.011764705882352941},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.04477611940298507},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":5.013888888888889}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.006944444444444444}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.029850746268656716}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"(":{"1":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}},"docs":{}}}},"p":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.01904761904761905},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.02247191011235955},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425}}}}}},"u":{"docs":{},"n":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"(":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"`":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"i":{"docs":{},"f":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"e":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"{":{"docs":{},"z":{"docs":{},"}":{"docs":{},"/":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},"/":{"docs":{},"{":{"docs":{},"y":{"docs":{},"}":{"docs":{},".":{"docs":{},"p":{"docs":{},"b":{"docs":{},"f":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.014373716632443531}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}},"s":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.014084507042253521}},"t":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.019417475728155338}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761}},"e":{"docs":{},"(":{"0":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761}}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.009302325581395349}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176}}}}}}}},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732}}}}}}}},"m":{"docs":{},"g":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947}},"e":{"docs":{},"r":{"docs":{},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.01366742596810934},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549}}}}}}}}},"i":{"docs":{},"o":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.01366742596810934},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474},"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.0196078431372549}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"9":{"9":{"9":{"9":{"9":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}},"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}},"[":{"0":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.03067484662576687},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.02252252252252252}},"]":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}},"docs":{}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.022123893805309734}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.024539877300613498},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.018018018018018018}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.017699115044247787}}}}}}}}}}},"'":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}},"h":{"docs":{},"y":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}},"e":{"docs":{},"r":{"docs":{},"$":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"y":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282}},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}},"(":{"docs":{},"`":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"'":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.08163265306122448}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"$":{"docs":{},"$":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"a":{"docs":{},"l":{"docs":{},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.011990407673860911},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"(":{"docs":{},")":{"docs":{},"}":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"$":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}}},"y":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01}}}}}}},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},".":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},"{":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.02112676056338028}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"s":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}},"y":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"$":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.011389521640091117}},"(":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.011389521640091117}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608}},"$":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"[":{"0":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307}},".":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.006201550387596899},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.01646090534979424}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.009111617312072893}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/MoreInformationsService.html":{"ref":"injectables/MoreInformationsService.html","tf":0.02},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.019184652278177457}}}}}},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"injectables/TreksContextResolver.html":{"ref":"injectables/TreksContextResolver.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0046439628482972135}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.017391304347826087}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}},"i":{"docs":{},"d":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552}},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009}}}}},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259}}}}}}}}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.009841443411700382},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0075}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"e":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},"s":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}},"y":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002733734281027884},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"z":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}},"r":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00875}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"s":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}}}}},"n":{"docs":{},"b":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0113314447592068}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}},"r":{"docs":{},"d":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"$":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}},"$":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.020202020202020204},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"s":{"docs":{},"$":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"(":{"docs":{},"'":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.013245033112582781},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.013245033112582781}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391}}}}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514}}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.009708737864077669}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"o":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.009111617312072893}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.004555808656036446}}}}},"o":{"docs":{},"p":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.009111617312072893}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}},"y":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.003115264797507788}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"s":{"docs":{},"[":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.014285714285714285}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}},"(":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"i":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.014925373134328358}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.010869565217391304},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.0038910505836575876}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"}":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},".":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},".":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},".":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082}}}}}}}},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"y":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}},"(":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/MoreResolver.html":{"ref":"injectables/MoreResolver.html","tf":0.011235955056179775},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"n":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.006359300476947536},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.035211267605633804},"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0136986301369863},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.03225806451612903},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0084985835694051},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.03335155822854018},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.01875},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.018404907975460124},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.01639344262295082},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.00859106529209622},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.004106776180698152},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.04470198675496689},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.04311774461028192},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.05},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0467741935483871},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.04926108374384237},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.07352941176470588},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.05909090909090909},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.04180602006688963},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.044407894736842105},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0451505016722408},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.04926108374384237},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.05061349693251534},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.04643449419568822},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.044407894736842105},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.04769475357710652},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0451505016722408},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.04567699836867863},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.04180602006688963},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.04180602006688963},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.04311774461028192},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.04784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0451505016722408},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.049099836333878884},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0451505016722408},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.04926108374384237},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.05417956656346749},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.06047197640117994},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0451505016722408},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.04326123128119801},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0392156862745098},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"k":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"g":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.018404907975460124},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.018404907975460124},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.004651162790697674}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}},"s":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/ConnectErrorComponent.html":{"ref":"components/ConnectErrorComponent.html","tf":0.0273972602739726},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.006622516556291391},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.006633499170812604},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0064516129032258064},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0064516129032258064},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.006568144499178982},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0053475935828877},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.006060606060606061},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.010033444816053512},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.009868421052631578},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.006688963210702341},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.006568144499178982},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.009202453987730062},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.006633499170812604},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.009868421052631578},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.006359300476947536},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.006688963210702341},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0065252854812398045},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.006688963210702341},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.006688963210702341},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.006633499170812604},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.006379585326953748},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.006688963210702341},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.006546644844517185},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.006688963210702341},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.006568144499178982},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.006191950464396285},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0058997050147492625},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.006688963210702341},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0066555740432612314},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.006033182503770739}}}},"l":{"docs":{},"e":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}},"s":{"docs":{},"[":{"0":{"docs":{"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}},"docs":{}}}}},"m":{"docs":{},"e":{"docs":{"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.009523809523809525}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.00683371298405467}}}}}}}},"u":{"docs":{},"r":{"docs":{},"f":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}},"w":{"docs":{},"o":{"docs":{"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.006042296072507553},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.018018018018018018},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.007782101167315175},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.0053475935828877},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.007058823529411765},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0030959752321981426},"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":5.040816326530612},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.002352941176470588}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"classes/UnSubscribe.html":{"ref":"classes/UnSubscribe.html","tf":0.04081632653061224}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.009841443411700382},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.00819672131147541},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.008695652173913044},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0031007751937984496},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.006622516556291391},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.006622516556291391},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.007194244604316547},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.007905138339920948}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.005154639175257732}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007731958762886598},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.012269938650306749},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.009009009009009009},"components/TabsPage.html":{"ref":"components/TabsPage.html","tf":0.05970149253731343},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.006230529595015576},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.0015503875968992248},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.006134969325153374},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.006578947368421052},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.010309278350515464},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502}}}}}}}}},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00375},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.012779552715654952},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"a":{"docs":{},"g":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.008278145695364239},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.004975124378109453},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.004838709677419355},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.004838709677419355},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.0049261083743842365},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.0066844919786096255},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.004545454545454545},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.005016722408026756},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.004934210526315789},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.005016722408026756},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.0049261083743842365},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.007668711656441718},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.004975124378109453},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.004934210526315789},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.0047694753577106515},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.005016722408026756},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.004893964110929853},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.005016722408026756},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.005016722408026756},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.004975124378109453},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.004784688995215311},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.005016722408026756},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.004909983633387889},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.005016722408026756},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.0049261083743842365},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0046439628482972135},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.004424778761061947},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.005016722408026756},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.004991680532445923},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.004524886877828055}}}}},"i":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.013333333333333334},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.014084507042253521},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.014925373134328358},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.011764705882352941},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.011627906976744186},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.011363636363636364},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.015151515151515152}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.014925373134328358}}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.010526315789473684}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0016402405686167304}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.037037037037037035}}}}}}},"l":{"docs":{"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.021739130434782608}},"u":{"docs":{"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.02112676056338028},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.02631578947368421},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.08602150537634409},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.00906344410876133},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0028328611898017},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.009259259259259259},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.0045045045045045045},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.0205761316872428},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.012461059190031152},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.007751937984496124},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.008021390374331552},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.004705882352941176},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.004424778761061947},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.010835913312693499},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.006160164271047228},"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.006633499170812604},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0064516129032258064},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.0030303030303030303},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.037037037037037035}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023}}}}}},"t":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.006389776357827476},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203}}},"docs":{}}}}}}},"i":{"docs":{},"d":{"docs":{"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.0030211480362537764},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.002053388090349076}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738}}}}}}}}},"/":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.010869565217391304},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00411522633744856}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.005263157894736842}}}}}}}}},"e":{"docs":{},"v":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.00823045267489712}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"$":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.021505376344086023}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.012345679012345678}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.005154639175257732}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703}}}}}},"t":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}}}}},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.013513513513513514},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"coverage.html":{"ref":"coverage.html","tf":0.0022471910112359553}}}}}}}}}}},"l":{"docs":{"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.02569710224166211}}}}}},"z":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0010934937124111536},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0025}}}}}},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}}}}}}}}}}},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"coverage.html":{"ref":"coverage.html","tf":0.0044943820224719105}}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0056657223796034}}}}}},"e":{"docs":{},"w":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"v":{"docs":{},"i":{"docs":{},"z":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.0015479876160990713}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.011673151750972763}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.007518796992481203},"components/CollapsibleListComponent.html":{"ref":"components/CollapsibleListComponent.html","tf":0.007042253521126761},"components/FilterComponent.html":{"ref":"components/FilterComponent.html","tf":0.021052631578947368},"components/FilterValueComponent.html":{"ref":"components/FilterValueComponent.html","tf":0.010752688172043012},"components/FiltersComponent.html":{"ref":"components/FiltersComponent.html","tf":0.04833836858006042},"components/GeolocateNotificationsComponent.html":{"ref":"components/GeolocateNotificationsComponent.html","tf":0.0226628895184136},"components/InAppDisclosureComponent.html":{"ref":"components/InAppDisclosureComponent.html","tf":0.01282051282051282},"components/InformationDeskDetailsComponent.html":{"ref":"components/InformationDeskDetailsComponent.html","tf":0.02912621359223301},"components/LayersVisibilityComponent.html":{"ref":"components/LayersVisibilityComponent.html","tf":0.02702702702702703},"components/LoaderComponent.html":{"ref":"components/LoaderComponent.html","tf":0.010101010101010102},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.009294696555494806},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00625},"components/MoreItemPage.html":{"ref":"components/MoreItemPage.html","tf":0.009009009009009009},"components/MorePage.html":{"ref":"components/MorePage.html","tf":0.018518518518518517},"components/PoiComponent.html":{"ref":"components/PoiComponent.html","tf":0.006134969325153374},"components/PoiDetailsComponent.html":{"ref":"components/PoiDetailsComponent.html","tf":0.013513513513513514},"components/ProgressComponent.html":{"ref":"components/ProgressComponent.html","tf":0.043478260869565216},"components/SearchComponent.html":{"ref":"components/SearchComponent.html","tf":0.03501945525291829},"components/SelectFilterComponent.html":{"ref":"components/SelectFilterComponent.html","tf":0.053497942386831275},"components/SelectPoiComponent.html":{"ref":"components/SelectPoiComponent.html","tf":0.04918032786885246},"components/SelectTrekComponent.html":{"ref":"components/SelectTrekComponent.html","tf":0.05217391304347826},"components/TrekCardComponent.html":{"ref":"components/TrekCardComponent.html","tf":0.009345794392523364},"components/TrekDetailsPage.html":{"ref":"components/TrekDetailsPage.html","tf":0.015503875968992248},"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.01871657754010695},"components/TreksMapPage.html":{"ref":"components/TreksMapPage.html","tf":0.02588235294117647},"components/TreksOrderComponent.html":{"ref":"components/TreksOrderComponent.html","tf":0.008849557522123894},"components/TreksPage.html":{"ref":"components/TreksPage.html","tf":0.017027863777089782},"injectables/FilterTreksService.html":{"ref":"injectables/FilterTreksService.html","tf":0.003194888178913738},"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.025056947608200455},"injectables/LoadingInterceptor.html":{"ref":"injectables/LoadingInterceptor.html","tf":0.026490066225165563},"injectables/LoadingService.html":{"ref":"injectables/LoadingService.html","tf":0.026490066225165563},"injectables/MoreItemResolver.html":{"ref":"injectables/MoreItemResolver.html","tf":0.010638297872340425},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.006872852233676976},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.02053388090349076},"injectables/TrekContextResolver.html":{"ref":"injectables/TrekContextResolver.html","tf":0.003952569169960474}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0005467468562055768},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.00125}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866},"injectables/CacheService.html":{"ref":"injectables/CacheService.html","tf":0.004761904761904762}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.002577319587628866}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/TrekMapPage.html":{"ref":"components/TrekMapPage.html","tf":0.00267379679144385}}}}}},"e":{"docs":{},"b":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0036496350364963502},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.000859106529209622}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"interfaces/ContainsFilter.html":{"ref":"interfaces/ContainsFilter.html","tf":0.0033112582781456954},"interfaces/DataSetting.html":{"ref":"interfaces/DataSetting.html","tf":0.003316749585406302},"interfaces/Filter.html":{"ref":"interfaces/Filter.html","tf":0.0032258064516129032},"interfaces/FilterValue.html":{"ref":"interfaces/FilterValue.html","tf":0.0032258064516129032},"interfaces/HydratedTrek.html":{"ref":"interfaces/HydratedTrek.html","tf":0.003284072249589491},"interfaces/HydratedTrekProperties.html":{"ref":"interfaces/HydratedTrekProperties.html","tf":0.00267379679144385},"interfaces/InformationDesk.html":{"ref":"interfaces/InformationDesk.html","tf":0.006060606060606061},"interfaces/InformationIntro.html":{"ref":"interfaces/InformationIntro.html","tf":0.0033444816053511705},"interfaces/InformationItem.html":{"ref":"interfaces/InformationItem.html","tf":0.003289473684210526},"interfaces/IntervalFilter.html":{"ref":"interfaces/IntervalFilter.html","tf":0.0033444816053511705},"interfaces/MinimalTrek.html":{"ref":"interfaces/MinimalTrek.html","tf":0.003284072249589491},"interfaces/MinimalTrekProperties.html":{"ref":"interfaces/MinimalTrekProperties.html","tf":0.003067484662576687},"interfaces/MinimalTreks.html":{"ref":"interfaces/MinimalTreks.html","tf":0.003316749585406302},"interfaces/Picture.html":{"ref":"interfaces/Picture.html","tf":0.003289473684210526},"interfaces/Poi.html":{"ref":"interfaces/Poi.html","tf":0.003179650238473768},"interfaces/Pois.html":{"ref":"interfaces/Pois.html","tf":0.0033444816053511705},"interfaces/Property.html":{"ref":"interfaces/Property.html","tf":0.0032626427406199023},"interfaces/Settings.html":{"ref":"interfaces/Settings.html","tf":0.0033444816053511705},"interfaces/TouristicCategorie.html":{"ref":"interfaces/TouristicCategorie.html","tf":0.0033444816053511705},"interfaces/TouristicCategoryWithFeatures.html":{"ref":"interfaces/TouristicCategoryWithFeatures.html","tf":0.003316749585406302},"interfaces/TouristicContent.html":{"ref":"interfaces/TouristicContent.html","tf":0.003189792663476874},"interfaces/TouristicContents.html":{"ref":"interfaces/TouristicContents.html","tf":0.0033444816053511705},"interfaces/TouristicEvent.html":{"ref":"interfaces/TouristicEvent.html","tf":0.0032733224222585926},"interfaces/TouristicEvents.html":{"ref":"interfaces/TouristicEvents.html","tf":0.0033444816053511705},"interfaces/Trek.html":{"ref":"interfaces/Trek.html","tf":0.003284072249589491},"interfaces/TrekContext.html":{"ref":"interfaces/TrekContext.html","tf":0.0030959752321981426},"interfaces/TrekProperties.html":{"ref":"interfaces/TrekProperties.html","tf":0.0029498525073746312},"interfaces/Treks.html":{"ref":"interfaces/Treks.html","tf":0.0033444816053511705},"interfaces/TreksContext.html":{"ref":"interfaces/TreksContext.html","tf":0.0033277870216306157},"interfaces/TreksService.html":{"ref":"interfaces/TreksService.html","tf":0.0030165912518853697}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"injectables/GeolocateService.html":{"ref":"injectables/GeolocateService.html","tf":0.002277904328018223}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.003436426116838488}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.07692307692307693},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"modules/AppRoutingModule.html":{"ref":"modules/AppRoutingModule.html","tf":0.023809523809523808},"modules/CustomPipesModule.html":{"ref":"modules/CustomPipesModule.html","tf":0.05263157894736842},"modules/FiltersComponentModule.html":{"ref":"modules/FiltersComponentModule.html","tf":0.044444444444444446},"modules/MoreItemPageModule.html":{"ref":"modules/MoreItemPageModule.html","tf":0.02666666666666667},"modules/MorePageModule.html":{"ref":"modules/MorePageModule.html","tf":0.028169014084507043},"modules/SharedFiltersModule.html":{"ref":"modules/SharedFiltersModule.html","tf":0.021739130434782608},"modules/SharedModule.html":{"ref":"modules/SharedModule.html","tf":0.0273972602739726},"modules/SharedTreksModule.html":{"ref":"modules/SharedTreksModule.html","tf":0.029411764705882353},"modules/SharedUiModule.html":{"ref":"modules/SharedUiModule.html","tf":0.029850746268656716},"modules/TabsPageModule.html":{"ref":"modules/TabsPageModule.html","tf":0.029850746268656716},"modules/TabsPageRoutingModule.html":{"ref":"modules/TabsPageRoutingModule.html","tf":0.013888888888888888},"modules/TrekDetailsPageModule.html":{"ref":"modules/TrekDetailsPageModule.html","tf":0.023529411764705882},"modules/TrekMapPageModule.html":{"ref":"modules/TrekMapPageModule.html","tf":0.023255813953488372},"modules/TreksMapPageModule.html":{"ref":"modules/TreksMapPageModule.html","tf":0.022727272727272728},"modules/TreksPageModule.html":{"ref":"modules/TreksPageModule.html","tf":0.030303030303030304},"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.0038272279934390375},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.0075},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244},"injectables/OnlineTreksService.html":{"ref":"injectables/OnlineTreksService.html","tf":0.002398081534772182}}}},"n":{"docs":{},"e":{"docs":{"components/MapTrekVizComponent.html":{"ref":"components/MapTrekVizComponent.html","tf":0.002186987424822307},"components/MapTreksVizComponent.html":{"ref":"components/MapTreksVizComponent.html","tf":0.005},"injectables/SettingsService.html":{"ref":"injectables/SettingsService.html","tf":0.008213552361396304}}}}},"i":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.0072992700729927005},"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.011168384879725086}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.001718213058419244}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/OfflineTreksService.html":{"ref":"injectables/OfflineTreksService.html","tf":0.002577319587628866}}}}}}}}},"length":10974},"corpusTokens":["0","0.1","0.5","0/1","0/10","0/11","0/12","0/13","0/14","0/16","0/18","0/19","0/2","0/3","0/32","0/4","0/5","0/6","0/7","000000","1","1)[0","1/17","1/19","1/3","1/6","10","1000","10000","1024×1024px","12","1200×1200px","13","14","16","17","18","2","2/10","2/19","2/36","2/8","20","200","21","25","2732×2732px","29","3","3/16","3/17","3/25","3/31","30","3000","31","33","3880ff","4","4/19","4/32","5","5/16","50","6","60","8","9","a.geometri","a.indexof(v","a.name.localecompare(b.nam","a.properties.nam","a.properties.name.localecompare(b.properties.nam","abstract/unsubscrib","accept","access","accur","activatedrout","activatedroutesnapshot","activefiltersnumb","actual","add","addsourceslayersev","advic","advised_park","alertcontrol","alertloc","alertlocation.ondiddismiss","alertlocation.pres","alertmsg","allow","alphabet","alreadi","alreadyaskgeolocationpermiss","alway","alwaysdisplayeditem","ambianc","analyt","analytics/ngx","android","androidbuild","androidtest","angular/common","angular/common/http","angular/common/locales/fr","angular/cor","angular/platform","angular/rout","anim","animationc","any).features[0].properties.id","any).indexof(filtervalu","any).properties.id","any).setrotation(head","any).sourc","any).sources['til","any).trekbound","api","apiurl","apiw","apk","app","app.component.html","app/app","app/app.compon","app/components/abstract/unsubscrib","app/components/collaps","app/components/connect","app/components/filt","app/components/filter/filter.compon","app/components/filters/filters.compon","app/components/filters/filters.modul","app/components/geoloc","app/components/in","app/components/inform","app/components/lay","app/components/loader/loader.compon","app/components/map","app/components/poi","app/components/poi/poi.compon","app/components/progress/progress.compon","app/components/search/search.compon","app/components/select","app/components/trek","app/interfaces/interfac","app/map","app/map/${parentid}/${trekid","app/map/${trekid","app/map/:trekid","app/map/:trekid/:stageid","app/pipes/low","app/resolvers/mor","app/resolvers/more.resolv","app/resolvers/trek.resolv","app/resolvers/treks.resolv","app/services/cache/cache.servic","app/services/filt","app/services/geolocate/geolocate.servic","app/services/loading/loading.servic","app/services/mor","app/services/offlin","app/services/onlin","app/services/search","app/services/settings/settings.servic","app/shared/custom","app/shared/shar","app/shared/shared.modul","app/tabs/mor","app/tabs/trek","app/tabs/treks${this.offlin","app/tabs/treks/trek","appcompon","applic","applyfilt","appmodul","appnam","approutingmodul","area","argument","array","array$.pipe(concatal","array$.pipe(count","array.isarray(this.currentpois.featur","array.isarray(touristiccontents.featur","arriv","arrival[0","arrival[1","arrival_c","arrow","artwork","ascent","assets/i18n","assets/map/icons/arrival.png","assets/map/icons/arrow.png","assets/map/icons/departure.png","assets/map/icons/departurearrival.png","assets/map/icons/parking.png","assum","async","author","avail","availablelanguag","availablelanguage[0","await","b","b.geometri","b.properties.nam","background","background'].tiles[0","background'].typ","backgroundgeoloc","backgroundgeolocationconfig","backgroundgeolocationev","backgroundgeolocationlocationprovid","backgroundgeolocationlocationprovider.distance_filter_provid","bar/ngx","baseurl","befor","begin","begin(id","behavior","behaviorsubject","behaviorsubject(0","behaviorsubject([0","behaviorsubject(fals","behaviorsubject(nul","below","best","blob","block","boolean","boolean(await","bootstrap","bound","bounds.extend(coord","broadcast","brows","browser","browser/anim","browseranimationsmodul","browsermodul","bsd","build","button","buttontext","c","cach","cacheservic","cancel","card","card.compon","card.component.html","card.component.scss","card.component.t","card/trek","case","catch","catcherror","catcherror((","catcherror((error","categori","categories.foreach((categoryid","category.id","category.nam","categoryid","center","chang","changecols","changedetect","changedetectionstrategi","changedetectionstrategy.default","changedetectionstrategy.onpush","changedetectorref","changelayervis","changelayervisibility(check","changenotificationsmod","changes.currentpoi","changes.currenttrek","changes.filteredtrek","changes.poi","changes.touristiccategorieswithfeatur","changescurrentpoi","changescurrentpois.currentvalu","changescurrentpois.previousvalu","changescurrenttrek","changescurrenttrek.previousvalu","changescurrenttreks.currentvalu","changescurrenttreks.previousvalu","check","check.cod","checkauthor","checkedvalue.id","checkedvalue.interv","checkifbackgroundgeolocationisrun","checkifcangetcurrenthead","checknetwork","checkstat","checktonotifi","checktonotify(fromcoordin","children","children.properti","children.properties.id","children.properties.index","childrentoremov","childrentoremove.push","childrentrek","childrentrek.properti","childrentrek.properties.id","childrentreks.features.foreach((children","childrentreks.length","childrentrekssourc","childrentrekssource.setdata(childrentrek","circl","circlecolorexpress","circlecolorexpression.push('match","circlecolorexpression.push(['get","circlecolorexpression.push(category.color","circlecolorexpression.push(category.id","circlecolorexpression.push(environment.map.clusterpaint['circl","circlecolorexpression.push(practice.color","circlecolorexpression.push(practice.id","citi","class","click","clickdeleteconfirm","clickdeleteconfirm($ev","clicklocalnotif","clone","clonedeep","clonedeep(context.mapconfig","clonedeep(environment.offlinemapconfig","clonedeep(environment.onlinemapconfig","clonedeep(this.filters$.getvalu","clonedeep(this.treks$.getvalu","clonedeep(this.treks$.valu","clonedeep(trek","close","cluster","clusterid","clusterradiu","clustersourc","clustersource.id","clustersource.translateid","collaps","collapsiblelistcompon","color","colsiz","combinelatest","combinelatest(trek","command","command(if","common","commonmodul","commonsrc","compact","complet","compon","componentprop","components/trek","concat","concatal","concatmap","concatmap((jsontrek","condit","config.xml","configur","connect","connecterrorcompon","connectionerror","console.error('no","const","constructor","constructor(alertcontrol","constructor(backgroundgeoloc","constructor(cach","constructor(filtertrek","constructor(http","constructor(load","constructor(modalcontrol","constructor(modalctrl","constructor(mor","constructor(navparam","constructor(offlinetrek","constructor(onlinetrek","constructor(platform","constructor(priv","constructor(protect","constructor(publ","constructor(rout","constructor(set","contact","contain","containsfilt","containsfilter(filt","containsfiltershoulduseselectabov","content","context","context.commonsrc","context.isstag","context.mapconfig","context.offlin","context.originaltrek","context.parenttrek","context.parenttrek.properties.id","context.poi","context.pois.featur","context.touristiccategorieswithfeatur","context.touristiccont","context.touristicevents.featur","context.trek","context.trek.properties.children","context.trek.properties.children.features.length","context.trek.properties.id","context.trekstool","context.trekstool.filteredtrek","context.trekstool.getcommonimgsrc","context.trekstool.gettrekdetailsurl","context.trekstool.gettrekmapurl","context.trekstool.gettreksmapurl","contour/contour.geojson","coord","coordin","coordinates.push(feature.geometry.coordin","coordinates.reduc","coordinates[0","coordinates[1","copyright","cordova","cordova@9.0.0git","corpu","count","coverag","creat","createdirifnotexist","createdirifnotexists(dirnam","createmap","createnewprogressstream","createtranslateload","createtranslateloader(http","crin","criterionvalu","cssclass","current","currentdataset","currentdatasetting.values.map((valu","currenthead","currentheadingsubscript","currentmaxfiltervalu","currentmaxtrek","currentord","currentpoi","currentpoistonotifi","currentposit","currentposition.latitud","currentposition.longitud","currentpositioninterv","currentprogress","currentprogressdownload","currentsearchvalu","currenttrek","currenttrekid","currenttyp","currenttype.color","currenttype.pictogram","currenttypepoi","currenttypepoi.pictogram","custom","customattribut","customev","custompipesmodul","cypress","cypress:openheadless","cypress:rundocument","data","data.context","data.error","data.id","data.item","data.selectedpoiid","data.selectedtrekid","data.temporaryfilt","data['item","dataset","datasetting.find((data","de","debug","deburr","deburr(searchvalue.tolowercas","deburr(trek.properties.name.tolowercase()).includes(searchvalu","deburr(value.name.tolowercase()).startswith(searchvalu","declar","default","defaultlanguag","defaultset","delay","delaywhen","delaywhen((zipfil","delet","deleteconfirm","deleteconfirm.pres","deletetrek","dep","departur","departure[0","departure[1","departure_c","departurearriv","departurearrivaldata","departurearrivaldata.features.push","departurearrivalsourc","departurearrivalsource.setdata(departurearrivaldata","descript","description_teas","desk","detail","details.compon","details.component.html","details.component.scss","details.component.t","details.module#trekdetailspagemodul","details.module.t","details.pag","details.page.html","details.page.scss","details.page.t","details/${parentid}/${trekid","details/${this.parentid}/${this.trek.properties.id","details/${this.trek.properties.id","details/${trekid","details/:trekid","details/:trekid/:stageid","details/inform","details/poi","details/trek","develop","developmentenvironment.prod.t","devic","deviceorient","deviceorientationcompasshead","deviceorientationcompassheading).hasownproperti","difficulti","dirdataloc","dirnam","disablegeolocationnotif","disclosur","disclosure.compon","disclosure.component.html","disclosure.component.scss","disclosure.component.t","disclosure/in","display","distanc","distance(from","distancefromtreka","distancefromtrekb","distinctuntilchang","docheck","document","document.createelement('div","don't","download","downloadconfirm","downloadconfirm.pres","downloadtrek","durat","dure","e","e.featur","e.features.length","e.features[0","e.features[0].properti","e.features[0].properties.id","each","easier","easili","el","el.classnam","element","element.id","element.properties.id","email","emit","empti","emptytrek","en","enablegeolocationnotif","enablehighaccuraci","end","enough","enter","entrycompon","env/environ","environ","environment.appnam","environment.availablelanguag","environment.availablelanguage.indexof(defaultlanguag","environment.availablelanguage.length","environment.availablelanguage[0","environment.backgroundgeoloc","environment.backgroundgeolocation.interv","environment.cols","environment.containsfiltershoulduseselectabov","environment.initialord","environment.map.attributiontext","environment.map.clusterpaint","environment.map.clustertextpaint","environment.map.departurearrivalicons","environment.map.enablerot","environment.map.globalmapicons","environment.map.informationicons","environment.map.parkingicons","environment.map.pointreferencelayersproperties.circl","environment.map.pointreferencelayersproperties.text","environment.map.poislayersproperties.icons","environment.map.poislayersproperties.vis","environment.map.stagepaint","environment.map.touristiccontentlayersproperties.circle.paint","environment.map.touristiccontentlayersproperties.icon.layout","environment.map.touristiccontentlayersproperties.vis","environment.map.trekarrowlayerproperties.layout","environment.map.trekfitboundsopt","environment.map.treklinelayerproperti","environment.map.treksfitboundsopt","environment.map.zonelayerproperti","environment.map.zoneoutlinelayerproperti","environment.mapbox","environment.mapbox.accesstoken","environment.meterstonotifi","environment.offlinemapconfig","environment.offlinemapconfig.styl","environment.onlinebaseurl","environment.onlinebaseurl.replac","environment.onlinebaseurl}${imgpath","environment.onlinemapconfig","environment.poicollapseinitials","environment.prod.t","environment.t","environment.touristiccontentcollapseinitials","environment.trekdetails.showimgrulesifparkcent","environment.treksbystep","environment.trekzoom.maxzoom","environment.trekzoom.minzoom","environment.trekzoom.zoom","environment.usefirebas","erasefilt","err","error","error('error","error.compon","error.component.html","error.component.scss","error.component.t","error.statu","error/connect","errortransl","errortranslation['confirmbutton","errortranslation['head","errortranslation['messag","errortranslation['subhead","event","event.check","event.detail.check","event.detail.valu","event.filt","event.filter.id","event.load","event.stoppropag","event.tot","event.typ","event.value.id","eventemitt","everyth","evt.detail.valu","exist","expand","expandableitem","expandfiltervalu","expandfiltervalues(infinitescrol","expandtrek","expandtreks(infinitescrol","expans","export","express","extend","extens","external_url","fail","fakemediadl","fals","featur","feature.geometri","feature.geometry.coordin","feature.geometry.coordinates[0","feature.geometry.coordinates[1","feature.properti","feature.properties.categori","feature.properties.id","feature.properties.nam","feature.properties.typ","feature.properties[filter.id","featurecollect","featureproperti","featureproperties.cluster_id","features.find","features.foreach((featur","features[0].geometri","features[0].properti","featuresinclust","field","file","files:appnam","fill","filter","filter((currentposit","filter((loadingid","filter((trek","filter((v","filter((valu","filter(trek","filter.compon","filter.component.html","filter.component.scss","filter.component.t","filter.id","filter.typ","filter.valu","filter.values.filter((valu","filter.values.foreach((valu","filter.values.sort(function(a","filter/select","filtercompon","filteredfeatur","filteredfeatures.filter((featur","filteredtrek","filteredtreks.sort((a","filters.component.html","filters.component.scss","filters.foreach((filt","filters.modul","filters.module.t","filters.push(filt","filterscompon","filterscomponentmodul","filterssubscript","filtertrek","filtertreksservic","filtertreksservice.containsfilt","filtertreksservice.filter(trek","filtertreksservice.getcheckedidforfilt","filtertreksservice.getcheckedidforfilter(filter).indexof","filtertreksservice.getcheckedinterval(filter).foreach","filtertreksservice.getnumberofactivefilters(filt","filtertreksservice.intervalfilt","filtertreksservice.isfilteractive(filt","filtertreksservice.sort","filtervalu","filtervalue.check","filtervaluecompon","filtervaluesbystep","final","find","finish","finish(id","firebas","firebaseanalyt","first","first_pictur","fit","fitbound","fittotrekbound","fli","flytouserloc","folder","font","foreach((clustersourc","foreach((layernam","foreground","forkjoin","forkjoin(tasks).pip","found","fr","frequenc","from(observ","from(storage.remove(`trek","from(storage.set('offlin","from(storage.set(`poi","from(storage.set(`trek","from(this.createdirifnotexists('offlin","from(this.createdirifnotexists('zip","from(this.file.removefile(offlinezipuri","from(this.storage.get('offlin","from(this.storage.get(`trek","from(this.storage.get(path)).pip","fromasset","fromcoordin","full","fulltrek","fulltrek.properties.children","fulltrek.properties.children.featur","fulltrek.properties.children.features.foreach((children","fulltrek.properties.children.features.length","function","g","geograph","geojson","geojsonproperti","geojsonsourc","geojsonsource).getclusterexpansionzoom","geojsonsource).getclusterleav","geojsonsourceraw","geoloc","geolocate.asklocatepermiss","geolocate.cancel","geolocate.open","geolocatenotificationscompon","geolocateservic","geolocation/ngx","geolocationconfig","geometri","geosjon","geotrek","get","get('geolocate.error","get('geolocate.notificationtitl","get('trek.details.touristiccontent.nam","get('trekcard","get(url","getcheckedidforfilt","getcheckedidforfilter(filt","getcheckedinterv","getcheckedinterval(filt","getcommonimgsrc","getcurrentposit","getdirlocaldataloc","getfilt","getfilteredtrek","getfilteredtreks(trek","getfilters(set","gethydratedtrek","gethydratedtrek(trek","getmapconfigfortrekbyid","getmapconfigfortrekbyid(trek","getmdcols","getminimaltrekbyid","getminimaltrekbyid(trekid","getmoreitem","getmoreitembyid","getmoreitembyid(id","getnumberofactivefilt","getnumberofactivefilters(filt","getpicturesrc","getpicturesrc(pictur","getpoisfortrekbyid","getpoisfortrekbyid(children.properties.id","getpoisfortrekbyid(id","getpoisfortrekbyid(this.parenttrek.properties.id","getpoisfortrekbyid(trekid","getset","gettilesdirectoryfortrekbyid","gettilesdirectoryfortrekbyid(trekid","gettouristiccategorieswithfeatur","gettouristiccategorieswithfeatures(touristiccont","gettouristiccontentsfortrekbyid","gettouristiccontentsfortrekbyid(children.properties.id","gettouristiccontentsfortrekbyid(id","gettouristiccontentsfortrekbyid(this.parenttrek.properties.id","gettouristiccontentsfortrekbyid(trekid","gettouristiceventsfortrekbyid","gettouristiceventsfortrekbyid(id","gettouristiceventsfortrekbyid(trekid","gettrek","gettrekbyid","gettrekbyid(children.properties.id","gettrekbyid(id","gettrekbyid(trekid","gettrekdetailsurl","gettrekdetailsurl(trekid","gettrekimagesrc","gettrekimagesrc(trek","gettrekmapurl","gettrekmapurl(trekid","gettreksmapurl","gettreksurl","getvalu","getvalueforpropertybyid","getvalueforpropertybyid(propertynam","getzonefromstorag","getzonefromurl","gi","git@github.com:geotrekce/geotrek","given","gl","global","go","googl","googleservic","gotostep","gotostep(stepid","gradl","handleclustersinteract","handlefiltersst","handlefiltersstate(checkst","handleinitialord","handlenavigatemod","handler","handleselect","handleselect(ev","head","header","here","hide","hidealllabel","hit","htmlionmodalel","http","http://geotrek.fr","http_interceptor","httpclient","httpclientmodul","httperrorrespons","httpevent","httpeventtyp","httpeventtype.downloadprogress","httphandler","httpheader","httpinterceptor","httpoption","httprequest","httprequest('get","httprespons","hydratedtrek","hydratedtrek.properties.advic","hydratedtrek.properties.arrival_c","hydratedtrek.properties.c","hydratedtrek.properties.departure_c","hydratedtrek.properties.descript","hydratedtrek.properties.difficulti","hydratedtrek.properties.id","hydratedtrek.properties.information_desks.foreach((information_desk","hydratedtrek.properties.nam","hydratedtrek.properties.network","hydratedtrek.properties.practic","hydratedtrek.properties.practice.color","hydratedtrek.properties.practice.pictogram","hydratedtrek.properties.rout","hydratedtrek.properties.them","hydratedtrekproperti","icon","id","ideal","identifi","ids.length","ids.push(id","ignor","imag","imagestoload","imagestoload.foreach((imagetoload","imagestoload.length","imagestoload.push","imagetoload.fromasset","imagetoload.pictogram","imgpath","imgpoi","imgpractic","imgpracticesrc","imgsrc","imgtypepoi","implement","import","inappdisclosurecompon","increment","index","infin","infinitescroll.target.complet","info","info.plist","inform","information_desk","information_desk.typ","information_desk_properti","information_desk_property.id","information_desk_property.latitud","information_desk_property.longitud","information_desk_property.typ","information_desk_typ","informationdesk","informationdesk${typeinformationdesk.id","informationdeskdetailscompon","informationdeskpictur","informationdeskproperti","informationdeskproperty.id","informationdesks.features.push","informationdesksourc","informationdesksource.setdata(informationdesk","informationintro","informationitem","informations.servic","informations.service.t","informations/mor","initializeapp","initializelay","initializesourc","initials","initialst","inject","inlin","input","insid","instal","installed.it","installrun","instanc","instanceof","instead","intercept","interfac","internation","interv","intervalfilt","intervalfilter(filt","io","ioncont","ionic","ionic/angular","ionic/cor","ionic/storag","ionic@5.4.11npm","ionicmodul","ionicmodule.forroot","ionicroutestrategi","ionicstoragemodul","ionicstoragemodule.forroot","ionviewdident","ionviewdidleav","ionviewwillent","ionviewwillleav","iosandroid","is_park_cent","isalert","isavailableofflin","isfilteract","isfilteractive(filt","isfirstcheck","isininterv","isinview","isitiner","isload","isloading(id","ismobil","isofflin","isonlin","isstag","it'","item","item.module#moreitempagemodul","item.module.t","item.pag","item.page.html","item.page.scss","item.page.t","item.resolv","item.resolver.t","item/mor","itemtempl","itiner","java","jdk","json","json.pars","json.parse(await","json.parse(jsonpoi","json.parse(jsontouristiccont","json.parse(jsontrek","json.parse(poi.properties.pictur","json.stringify(childrenjson","json.stringify(fulltrek","json.stringify(newtrek","json.stringify(poi","json.stringify(set","json.stringify(touristiccont","json.stringify(trek","json.stringify(tru","json.stringify(zon","key","kilomet","kit","kmtonotifi","languag","last","latest","latitud","launch","layer","layernam","layersnam","layersvisibilitycompon","layervisibilitychang","layervisibilitychange(ev","layout","left","legend","length","licenc","limit","line","linux","list","list.compon","list.component.html","list.component.scss","list.component.t","list/collaps","load","loadchildren","loader","loader.component.html","loader.component.scss","loader.dismiss","loader.pres","loadercompon","loaderstatu","loadimag","loadimages.subscrib","loadingcontrol","loadingid","loadingids.indexof(id","loadinginterceptor","loadingservic","loadset","loadtrek","local","localefr","localnotif","locat","location.latitud","locationprovid","lockscreen","lodash","longitud","lot","lowerround","lowerroundpip","maco","make","makina","map","map((","map(([trek","map((checkedvalu","map((childrenjson","map((data","map((ev","map((filt","map((jsonpoi","map((jsontouristiccont","map((jsontrek","map((loadingid","map((removeresult","map((touristiccont","map((trek","map.module#trekmappagemodul","map.module#treksmappagemodul","map.module.t","map.pag","map.page.html","map.page.scss","map.page.t","map/trek","mapbox","mapboxgl","mapboxgl.accesstoken","mapboxgl.attributioncontrol","mapboxgl.lnglatbounds(coordinates[0","mapboxgl.map","mapboxgl.mark","mapboxgl.navigationcontrol","mapboxgl.scalecontrol","mapboxopt","mapconfig","mapconfig.cent","mapconfig.maxzoom","mapconfig.styl","mapconfig.style.lay","mapconfig.style.layers.push","mapconfig.style.sourc","mapconfig.style.sources['til","mapgener","mapisload","mapisloaded(ev","mapisloaded(load","maplayermouseev","maplink","maptreksvizcompon","maptrekvizcompon","mapviz","marker","markerposit","match","math.floor(valu","math.random","max","maximumag","maxsiz","maxzoom","md","media","media.zip","mediadownloadprogress","mergefilterstrek","mergemap","mergemap((context","messag","metadata","method","metric","min","minimaltrek","minimaltrekproperti","minimum","minzoom","miscellan","mobil","mobile.gitcd","mobilenpm","modal","modal.dismiss","modal.ondiddismiss","modal.pres","modalcontrol","modalctrl","modalpoidetail","modalprogress","modalprogress.dismiss","modalprogress.pres","mode","modul","more","more.pag","more.page.html","more.page.scss","more/mor","more/more.modul","more/more.module#morepagemodul","moreinformationsintro","moreinformationsservic","moreitem","moreitemid","moreitempag","moreitempagemodul","moreitemresolv","morepag","morepagemodul","moreresolv","ms","multi","multipoint","municip","name","nation","native/background","native/devic","native/file/ngx","native/firebas","native/globalization/ngx","native/ion","native/loc","native/network/ngx","native/screen","native/soci","native/splash","native/statu","native/zip/ngx","navanim","navig","navigatemodeisact","navigatetochildren","navigatetochildren(id","navigatetotrek","navigatetotrek(id","navigator.geolocation.getcurrentposit","navigator.geolocation.getcurrentposition((posit","navigator.language.slice(0","navparam","nb","nbofflinetrek","nbprogress","nbtemporaryfilterstrek","nearest","need","network","new","newtrek","newtreks.featur","newtreks.features.filter((featur","newtreks.features.push(simpletrek","next","next.handle(req).pip","nexttrek","ngdocheck","ngmodul","ngonchanges(chang","ngondestroy","ngoninit","ngx","noanim","noanimation(animationc","node.j","none","nonetwork","notif","notifications.compon","notifications.component.html","notifications.component.scss","notifications.component.t","notifications/geoloc","notifications/ngx","notificationsmodeisact","notificationtext","notificationtitl","notifiedindex","npm","null","number","numberofactivefilt","numstag","nvm","object","object.keys(this.cache).length","observ","observable.cr","observable.pip","observer.complet","of('connectionerror","of(1).pipe(delay(1000","of(2).pipe(delay(1000","of(3).pipe(delay(1000","of(4).pipe(delay(1000","of(5).pipe(delay(1000","of(nul","of(tru","of(true).pipe(delay(6000","of(true).pipe(switchmapto(request","offici","offlin","offline/${parentid}/${trekid","offline/${trekid","offline/${trekid}/tiles/{z}/{x}/{y}.png","offline/:trekid","offline/:trekid/:stageid","offline/trek","offlinetrek","offlinetreksservic","offlineuriloc","offlinezipdownloadurl","offlinezipuri","offset","on","on('click","on(backgroundgeolocationevents.loc","on(backgroundgeolocationevents.start","onchang","ondestroy","oninit","onlinebaseurl","onlinetrek","onlinetrekserror","onlinetreksservic","onlineurl","onlineurl}${this.currenttrek.properties.practice.slug}/${this.currenttrek.properties.slug","onsameurlnavig","open","openjdk","openselect","opensourc","option","options).pip","oracl","order","order!.typ","order.compon","order.component.html","order.component.scss","order.component.t","order.typ","order.valu","order/trek","ordervalu","orientation/ngx","originaltrek","other","out","outlin","output","overlap","overview","overwrit","packag","pages/tabs/tabs.module#tabspagemodul","pages/trek","paint","parc","parent","parentid","parenttrek","park","parking.features.push","parking_loc","parkingsourc","parkingsource.setdata(park","path","pathmatch","permiss","persmissionsconfirm","persmissionsconfirm.pres","person","phone","photo_url","pictogram","pictur","picture.url","pipe","pipe(delay(0","pipe(map","pipe(map((id","pipe(switchmapto(ratio","pipes.modul","pipes.module.t","pipetransform","placement","platform","play","plugin","poi","poi.compon","poi.component.html","poi.component.scss","poi.component.t","poi.properti","poi.properties.pictur","poi/select","poi_typ","poicollapseinitials","poicompon","poidetailscompon","poiimg","point","point(a.geometry.coordin","point(b.geometry.coordin","point(feature.coordin","point(fromcoordin","point(userloc","point).coordin","point_count","point_count_abbrevi","point_refer","point_reference[0","point_reference[1","pointer","points_refer","pointsrefer","pointsreference.features.push","pointsreferencesourc","pointsreferencesource.setdata(pointsrefer","pois${poitype.id","poissourc","poissource.setdata(this.currentpoi","poistyp","poityp","poitype.id","poitype.pictogram","popov","popover.dismiss","popover.ondiddismiss","popover.pres","popovercontrol","popoverctrl","posit","position.coords.latitud","position.coords.longitud","postal_cod","practic","practica","practical_info","practices.values.foreach((practic","practices.values.length","presentconfirmfeatur","presentconfirmfeatures(featur","presentdeleteconfirm","presentdeleteconfirm(isalert","presentdownloadconfirm","presentdownloadconfirm(isalert","presentfilt","presentgeolocateerror","presentinappdisclosur","presentinformationdeskdetail","presentinformationdeskdetails(informationdesk","presentpersmissionsconfirm","presentpoidetail","presentpoidetails(poi","presentsearch","prevent","previou","previous","previoustrek","primari","primarycolor","prioriti","privat","problem","proceed","prod","profil","progress","progress$.pip","progress.component.html","progress.component.scss","progressbarwidth","progresscompon","project","promis","promise((resolv","promise.resolve(new","properti","property.values.find((valu","propertynam","propertyvalu","protect","provid","providedin","public","publishreplay","publishreplay(1","puls","radiopoi","radiopois.push(poi","radiotrek","radiotreks.push(trek","radiu","rando","random","raster","ratio","readm","redirectto","ref","refcount","refer","refresh","refreshdelay","regexp","regexp(`src=\"${this.apiurl","registerlocaledata","registerlocaledata(localefr","regular","reject","releas","releaseandroid","releasecustom","reload","remov","removemedia","removemedia(trekid","removeresult","removeresult.success","removetrek","removetrek(trekid","replac","replace(/src\\=\\\"\\//gi","replace(regexp","replaysubject","reportprogress","repres","req","req.method","req.urlwithparam","request","requestf","requestfour","requeston","requestthre","requesttwo","requir","require('@turf/distance').default","require('lodash.clonedeep","require('mapbox","res://ic_stat_panorama","res://icon","reset","resetfilt","resethead","resetposit","resiz","resolv","resolve(rout","resolve(tru","resourc","resources/icon.png","resources/splash.png","resourcesoth","respons","responsetyp","ressourc","result","retri","retur","return","revok","revoking(observ","rm","roboto","role","root","roughli","round.pip","round.pipe.t","rout","route.data['isstag","route.data['offlin","route.parammap.get('moreitemid","route.parammap.get('stageid","route.parammap.get('trekid","router","routereusestrategi","routerlink","routermodul","routermodule.forchild","routermodule.forchild(rout","routermodule.forroot(rout","routing.modul","routing.module.t","run","runguardsandresolv","rxj","rxjs/internal/observ","rxjs/internal/observable/of","rxjs/internal/observable/throwerror","rxjs/internal/subscript","rxjs/oper","same","save","savecommonmedia","savefiltersst","savefiltersstate(filt","savemediafortrek","savemediafortrek(trekid","saveorderst","saveorderstate(ord","saveresult","savetrek","savetrek(simpletrek","scan","scan((curr","screen","screen'","screen/ngx","screenorient","scrolltostag","scrolltostages(stag","sdk","search","search(searchvalu","search(trek","search.component.html","search.component.scss","searchcompon","searchtrek","searchtreksservic","searchvalu","searchvalue.tolowercas","searchvaluesinfilt","searchvaluesinfilter(filt","secondari","select","selectchang","selectedfeatur","selecteditem","selecteditems.join","selecteditems.push(filtervalue.nam","selectedpoichang","selectedpoichange(evt","selectedpoiid","selectedtrekchang","selectedtrekchange(evt","selectedtrekid","selectfiltercompon","selector","selectpoicompon","selecttrekcompon","send","sent","serverun","servic","service.status.getvalu","service.status.next(isload","services.json","set","setlnglat(coordin","setofflineset","setting.id","settings.data","settings.data.find","settings.filt","settings.filters$.pip","settings.filters.foreach((filt","settings.find","settings.find((set","settings.json","settingsservic","settingssub","setup","share","sharedfiltersmodul","sharedmodul","sharedtreksmodul","shareduimodul","sharetrek","sharing/ngx","sharingopt","shouldshowinappdisclosur","showalldata","showalllabel","showappset","showcompass","showimgrulesifparkcent","showlayersvis","showlayersvisibility(ev","showlocationset","showtreksord","showtreksorder(ev","silent","simplechang","simpletrek","simpletrek.properties.id","size","slug","smallicon","smooth","socialshar","sort","sort(filteredtrek","sort(function(a","sourc","splash","splashscreen","split","squar","src","src/app/app","src/app/app.component.t","src/app/app.module.t","src/app/components/abstract/unsubscribe.t","src/app/components/collaps","src/app/components/connect","src/app/components/filt","src/app/components/filter/filter.component.t","src/app/components/filters/filters.component.t","src/app/components/filters/filters.module.t","src/app/components/geoloc","src/app/components/in","src/app/components/inform","src/app/components/lay","src/app/components/loader/loader.component.t","src/app/components/map","src/app/components/poi","src/app/components/poi/poi.component.t","src/app/components/progress/progress.component.t","src/app/components/search/search.component.t","src/app/components/select","src/app/components/trek","src/app/interfaces/interfaces.t","src/app/pages/more/mor","src/app/pages/more/more.module.t","src/app/pages/more/more.page.t","src/app/pages/tabs/tabs.module.t","src/app/pages/tabs/tabs.page.t","src/app/pages/tabs/tabs.routing.module.t","src/app/pages/trek","src/app/pages/treks/treks.module.t","src/app/pages/treks/treks.page.t","src/app/pipes/low","src/app/resolvers/mor","src/app/resolvers/more.resolver.t","src/app/resolvers/trek.resolver.t","src/app/resolvers/treks.resolver.t","src/app/services/cache/cache.service.t","src/app/services/filt","src/app/services/geolocate/geolocate.service.t","src/app/services/loading/loading.service.t","src/app/services/mor","src/app/services/offlin","src/app/services/onlin","src/app/services/search","src/app/services/settings/settings.service.t","src/app/shared/custom","src/app/shared/shar","src/app/shared/shared.module.t","src/assets/i18n","src/assets/map/icon","src/assets/map/zone/zone.geojson","src/environments/environment.prod.t","src/environments/environment.t","src/theme/variables.scss","src=\"${commonsrc","stage","stageid","stageindex","stages.scrollintoview","start","startersrc/environments/environment.t","startforeground","startloc","startlocation.latitud","startlocation.longitud","startnotificationsmodetrack","startnotificationsmodetracking(notificationtext","startonmaptrack","state","statement","static","statu","status.author","status.isrun","statusbar","stepid","stopnotificationsmodetrack","stoponmaptrack","stoponmaptracking(resethead","stopontermin","storag","storage.remov","storage.remove(`poi","storage.set","store","stream","stream.pip","stream.pipe(catcherror","stream.pipe(mergemap","street","string","styleurl","subhead","subject","subscrib","subscribe(([filteredtrek","subscribe((currentprogress","subscribe((data","subscribe((isload","subscribe((loc","subscribe((statu","subscribe(async","subscript","subscription.unsubscrib","success","super","super.ngondestroy","super.ngoninit","support","sure","svg","switch","switchmapto","symbol","system","t","tab","tabs.pag","tabs.page.html","tabs.page.scss","tabs.routing.modul","tabspag","tabspagemodul","tabspageroutingmodul","take","take(1","tap","tap((ev","tap((item","tap((unzipresult","task","tasks.push","tasks.push(from(storage.remove(`poi","tasks.push(from(storage.remove(`touristiccont","tasks.push(from(storage.set('offlin","tasks.push(this.fakemediadl","tasks.push(this.savecommonmedia","tasks.push(this.savemediafortrek(trekid","tempfilt","tempfilter.id","templateref","templateurl","temporaryfilt","temporaryfilter.valu","temporaryfilter.values.find","temporaryfilterindex","temporaryfilters).length","temporaryfilters.find","temporaryfilters.findindex","temporaryfilters.foreach((filt","temporaryfilters[temporaryfilterindex","tempvalu","tempvalue.id","test","text","theme","themepoi","this.activefiltersnumb","this.addsourceslayersev","this.alertcontroller.cr","this.alwaysdisplayeditem","this.apiurl}/${parentid}/pois/${trekid}.geojson","this.apiurl}/${parentid}/touristic_contents/${trekid}.geojson","this.apiurl}/${parentid}/touristic_events/${trekid}.geojson","this.apiurl}/${parentid}/treks/${trekid}.geojson","this.apiurl}/${trekid}/pois.geojson","this.apiurl}/${trekid}/touristic_contents.geojson","this.apiurl}/${trekid}/touristic_events.geojson","this.apiurl}/${trekid}/trek.geojson","this.apiurl}/flatpages.json","this.apiurl}/flatpages/${id}.json","this.apiurl}/treks.geojson","this.backgroundgeoloc","this.backgroundgeolocation.checkstatu","this.backgroundgeolocation.configure(geolocationconfig","this.backgroundgeolocation.getcurrentloc","this.backgroundgeolocation.showappset","this.backgroundgeolocation.showlocationset","this.backgroundgeolocation.start","this.backgroundgeolocation.stop","this.baseurl.replace('mobil","this.baseurl}${this.informationdesk.pictur","this.cach","this.cache.get","this.cache.hasownproperty(url","this.cache[revok","this.cache[url","this.changelayervis","this.changelayervisibility(check","this.changelayervisibility(event.detail.check","this.checkifbackgroundgeolocationisrun","this.checkifcangetcurrenthead","this.checknetwork","this.checktonotify(coordin","this.clicklocalnotif","this.clicklocalnotifications$.unsubscrib","this.clos","this.cols","this.commonsrc","this.commonsrc}${imagetoload.pictogram","this.commonsrc}${practice.pictogram","this.connectionerror","this.content.scrolltotop","this.createmap","this.currentheading$.next(data.truehead","this.currentheading$.next(nul","this.currentheadingsubscript","this.currentheadingsubscription.unsubscrib","this.currentmaxfiltervalu","this.currentmaxtrek","this.currentord","this.currentpoi","this.currentpois.features.find","this.currentpois.features.map((featur","this.currentpoistonotifi","this.currentpoistonotify.findindex","this.currentpoistonotify.length","this.currentpoistonotify.splice(notifiedindex","this.currentpoistonotify[notifiedindex].id","this.currentpoistonotify[notifiedindex].nam","this.currentposit","this.currentposition$.next","this.currentposition$.next([location.longitud","this.currentposition$.next(nul","this.currentposition$.unsubscrib","this.currentpositioninterv","this.currentprogress","this.currentprogress$.unsubscrib","this.currentprogressdownload$.next(0","this.currentprogressdownload$.next(currentprogress","this.currentsearchvalu","this.currenttrek","this.currenttrek.geometry.coordinates.slic","this.currenttrek.geometry.coordinates[0","this.currenttrek.properties.children","this.currenttrek.properties.children.featur","this.currenttrek.properties.children.features.length","this.currenttrek.properties.id","this.currenttrek.properties.information_desk","this.currenttrek.properties.information_desks.find","this.currenttrek.properties.information_desks.foreach","this.currenttrek.properties.information_desks.length","this.currenttrek.properties.nam","this.currenttrek.properties.parking_loc","this.currenttrek.properties.points_refer","this.currenttrek.properties.points_reference.foreach","this.currenttrek.properties.points_reference.length","this.data$.getvalu","this.data$.next(defaultsettings.data","this.data$.next(settings.data","this.datasettings.find","this.deletetrek","this.deviceorient","this.deviceorientation.getcurrenthead","this.disablegeolocationnotif","this.downloadtrek","this.enablegeolocationnotif","this.expand","this.expandableitem","this.file.applicationstoragedirectori","this.file.checkdir(dirdataloc","this.file.createdir(dirdataloc","this.file.removerecursively(offlineuriloc","this.file.writefile(offlinezipuri","this.filt","this.filter.valu","this.filter.values.find((valu","this.filteredtrek","this.filteredtreks.foreach((featur","this.filteredtreks.length","this.filters$.next(filt","this.filters$.next(this.getfilters(defaultset","this.filters$.next(this.getfilters(set","this.filterssubscript","this.filterssubscription.unsubscrib","this.filtertreks.activefiltersnumb","this.filtertreks.getfilteredtreks(this.trek","this.filtervaluesbystep","this.firebaseanalytics.logev","this.firebaseanalytics.setcurrentscreen","this.firebaseanalytics.setcurrentscreen(`${item.titl","this.firebaseanalytics.setcurrentscreen(`inform","this.firebaseanalytics.setcurrentscreen(`trek","this.flytouserloc","this.geolocate.checkauthor","this.geolocate.checkifcangetcurrenthead","this.geolocate.currentheading$.subscribe((head","this.geolocate.currentposit","this.geolocate.currentposition$.subscrib","this.geolocate.getcurrentposit","this.geolocate.shouldshowinappdisclosur","this.geolocate.showappset","this.geolocate.startnotificationsmodetracking(this.treknam","this.geolocate.startonmaptrack","this.geolocate.stopnotificationsmodetrack","this.geolocate.stoponmaptrack","this.geolocate.stoponmaptracking(fals","this.getcommonimgsrc","this.getcurrentposit","this.getdirlocaldataloc","this.getdirlocaldatalocation()}offlin","this.getdirlocaldatalocation()}offline/${imgpath","this.getdirlocaldatalocation()}offline/${trekid}/tiles/{z}/{x}/{y}.pbf","this.getdirlocaldatalocation()}zip","this.getsettings().subscribe(async","this.gettilesdirectoryfortrekbyid","this.gettreks().subscrib","this.gettreks().subscribe((trek","this.getvalueforpropertybyid","this.getvalueforpropertybyid('c","this.getvalueforpropertybyid('network","this.getvalueforpropertybyid('them","this.getzonefromurl().subscrib","this.globalization.getpreferredlanguag","this.handleclustersinteract","this.handleinitialord","this.hit","this.hits[revok","this.hits[url","this.http.get","this.http.get(this.apiurl","this.http.get(url","this.http.request(req).pip","this.hydratedtrek","this.hydratedtrek.properties.practic","this.hydratedtrek.properties.practice.pictogram","this.imgpracticesrc","this.imgsrc","this.informationdesk","this.informationdesk.pictur","this.informationdeskpictur","this.initializeapp","this.initializelay","this.initializesourc","this.initials","this.initialst","this.isavailableofflin","this.isinview","this.isitiner","this.ismobil","this.isonlin","this.isstag","this.items.length","this.items.slic","this.items.slice(0","this.lay","this.loaderstatu","this.loaderstatus$.unsubscrib","this.loading.begin('trek","this.loading.begin(loadingid","this.loading.finish","this.loading.finish('trek","this.loading.finish(loadingid","this.loading.statu","this.loadingcontroller.cr","this.loadingid","this.loadingids.getvalu","this.loadingids.next","this.loadingids.next(id","this.loadingids.pip","this.localnotif","this.localnotifications.haspermiss","this.localnotifications.requestpermiss","this.localnotifications.schedul","this.localnotifications.setdefault","this.location.back","this.map","this.map.addcontrol","this.map.addimage(imagetoload.id.tostr","this.map.addimage(practice.id.tostr","this.map.addlay","this.map.addsource('children","this.map.addsource('departur","this.map.addsource('inform","this.map.addsource('park","this.map.addsource('poi","this.map.addsource('point","this.map.addsource('tourist","this.map.addsource('trek","this.map.addsource('zon","this.map.dragpan.dis","this.map.dragpan.en","this.map.dragrotate.dis","this.map.easeto","this.map.fitbound","this.map.fitbounds(bound","this.map.flyto","this.map.getcanvas().style.cursor","this.map.getlayoutproperti","this.map.getlayoutproperty('poi","this.map.getsourc","this.map.getsource('park","this.map.getsource('poi","this.map.getsource('trek","this.map.getzoom","this.map.loadimag","this.map.on","this.map.on('click","this.map.on('load","this.map.on('mouseent","this.map.on('mouseleav","this.map.panto(coordin","this.map.queryrenderedfeatures(e.point","this.map.remov","this.map.res","this.map.setlayoutproperti","this.map.touchzoomrotate.disablerot","this.mapconfig","this.mapconfig.maxzoom","this.mapconfig.styl","this.mapconfig.trekbound","this.mapisloaded(fals","this.mapisloaded.emit(tru","this.maplink","this.mapviz.nativeelement.mapinst","this.markerposit","this.markerposition.addto(this.map","this.markerposition.remov","this.markerposition.setlnglat(coordin","this.maxs","this.mediadownloadprogress","this.mergefilterstrek","this.modalcontroller.cr","this.modalcontroller.dismiss","this.modalcontroller.gettop","this.modalctrl.dismiss","this.modalctrl.dismiss(id","this.modalctrl.dismiss(tru","this.modalpoidetail","this.modalpoidetails.dismiss","this.modalpoidetails.ondiddismiss().then","this.modalpoidetails.pres","this.more.getmoreitembyid(moreitemid).pip","this.more.getmoreitems().pip","this.moreinformationsintro","this.moreitem","this.navig","this.navigate$.unsubscrib","this.navigatemodeisact","this.navigatetochildren.emit(childrentrek.properties.id","this.navigatetotrek(data","this.navigatetotrek.emit(data.selectedtrekid","this.navigatetotrek.emit(feature.properties.id","this.navparams.get('changelayervis","this.navparams.get('commonsrc","this.navparams.get('informationdesk","this.navparams.get('isonlin","this.navparams.get('lay","this.navparams.get('offlin","this.navparams.get('ord","this.navparams.get('poi","this.nbofflinetrek","this.nbtemporaryfilterstrek","this.network.typ","this.nonetwork","this.notificationsmodeisact","this.numberofactivefilt","this.offlin","this.offlinetrek","this.offlinetreks.createnewprogressstream","this.offlinetreks.currentprogressdownload$.subscrib","this.offlinetreks.getcommonimgsrc","this.offlinetreks.gettrekimagesrc","this.offlinetreks.gettrekimagesrc(this.trek","this.offlinetreks.trek","this.offlinetreks.trekisavailableofflin","this.offlinetreks.treks$.subscribe((trek","this.onlinetrek","this.onlinetreks.getcommonimgsrc","this.onlinetreks.getminimaltrekbyid","this.onlinetreks.gettrekimagesrc","this.onlinetreks.gettrekimagesrc(this.trek","this.onlinetreks.loadtrek","this.onlinetreks.onlinetrekserror$.subscribe((error","this.onlinetreks.trek","this.onlinetrekserror$.next(error","this.onlinetrekserror$.next(nul","this.onlinetreksservic","this.ord","this.order$.next","this.originaltrek","this.parentid","this.parenttrek","this.parenttrek.properties.children.featur","this.parenttrek.properties.children.features.findindex","this.parenttrek.properties.id","this.pictur","this.platform.backbutton.subscribewithpriority(9999","this.platform.backbutton.subscribewithpriority(99999","this.platform.is('android","this.platform.is('io","this.platform.ready().then(async","this.poi","this.poi.properti","this.poi.properties.pictur","this.poi.properties.pictures.length","this.poi.properties.pictures[0","this.poi.properties.pictures[0].url","this.poi.properties.typ","this.poistyp","this.poistype.values.find","this.poistype.values.foreach((poityp","this.popovercontroller.cr","this.popovercontroller.dismiss","this.popoverctrl.gettop","this.practic","this.practices.values.foreach((practic","this.presentconfirmfeatur","this.presentdeleteconfirm","this.presentdeleteconfirm(tru","this.presentdownloadconfirm(tru","this.presentgeolocateerror","this.presentinappdisclosur","this.presentinformationdeskdetails.emit(informationdesk","this.presentpersmissionsconfirm","this.presentpoidetails.emit(poi","this.presentpoidetails.emit(selectedfeatur","this.presentpoidetails.emit(touristiccont","this.previoustrek","this.ref.detectchang","this.ref.markforcheck","this.refreshdelay","this.removemedia(trekid","this.removetrek(trekid","this.revoke.emit","this.revoke.emit(revok","this.revoke.subscribe((revok","this.route.data.pip","this.route.data.subscribe((data","this.route.data.subscribe(async","this.router.navig","this.router.navigate([this.router.url","this.router.navigate([this.trekstool.gettrekdetailsurl(id","this.router.url","this.routerlink","this.savefiltersstate(filt","this.screenorientation.onchange().subscrib","this.searchtreks.search","this.searchtreks.search(this.treks.featur","this.searchvaluesinfilt","this.selectchange.emit","this.selecteditem","this.selectedpoiid","this.selectedtrekid","this.setofflineset","this.settings.data","this.settings.data$.subscribe((set","this.settings.filt","this.settings.filters$.subscribe((filt","this.settings.gethydratedtrek","this.settings.getzonefromstorag","this.settings.loadset","this.settings.ord","this.settings.order$.subscribe((ord","this.settings.order$.valu","this.settings.resetfilt","this.settings.savefiltersstate(this.temporaryfilters$.getvalu","this.settings.saveorderstate('alphabet","this.settings.saveorderstate(environment.initialord","this.settings.saveorderstate(ordervalu","this.settingsservice.gethydratedtrek","this.settingsservice.gettouristiccategorieswithfeatur","this.settingssub","this.settingssub.unsubscrib","this.socialsharing.sharewithoptions(sharingoptions).then","this.splashscreen.hid","this.stageindex","this.status.subscrib","this.statusbar.stylelightcont","this.storag","this.storage.get","this.storage.get('zon","this.storage.get(`set","this.storage.get(`trek","this.storage.remove('zon","this.storage.set","this.storage.set('set","this.storage.set('zon","this.subscript","this.subscriptions$$.foreach((subscript","this.subscriptions$$.push","this.subscriptions$$.push(this.mergefilterstrek","this.temporaryfilt","this.temporaryfilter.values.find","this.temporaryfilters$).subscrib","this.temporaryfilters$.getvalu","this.temporaryfilters$.next(filt","this.temporaryfilters$.next(temporaryfilt","this.touristiccategorieswithfeatur","this.touristiccategorieswithfeatures.foreach","this.touristiccont","this.touristicev","this.touristicscontentcategori","this.touristicscontentcategory.values.find","this.touristicscontentcategory.values.foreach((categori","this.transl","this.translate.get('toolbar.orderbyalphabet').topromis","this.translate.get('toolbar.orderbylocation').topromis","this.translate.get('toolbar.orderbyrandom').topromis","this.translate.get('trek.details.poi.name').topromis","this.translate.get('trek.downloadalert').subscribe(async","this.translate.getdefaultlang","this.translate.getdefaultlang()}/trek","this.translate.setdefaultlang(defaultlanguag","this.trek","this.trek.properties.id","this.trekdownloadprogress","this.treks$.getvalu","this.treks$.next(data","this.treks$.next(newtrek","this.treks$.next(trek","this.treks$.valu","this.treks$.value.features.length","this.treks.featur","this.treksbystep","this.trekstool","this.trekstool.getcommonimgsrc","this.trekstool.gettrekdetailsurl(id","this.trekstool.gettrekimagesrc(this.originaltrek","this.trekstool.gettreksurl","this.treksurl","this.trekurl","this.typeimgsrc","this.typepoi","this.typepois.values.find","this.unsubscribefilt","this.updateprogress(ev","this.updateselecteditems(data.temporaryfilt","this.updateselecteditems(this.filt","this.updatesourc","this.valuechange.emit","this.valuestodisplay","this.valuestodisplay.length","this.viewisload","this.webview.convertfilesrc","this.zip.unzip(`${offlinezipuri}${trekid}.zip","this.zip.unzip(`${offlinezipuri}media.zip","this.zipurl}/${trekid}.zip","throttl","throttle(this.flytouserloc","throttletim","throttletime(environment.backgroundgeolocation.interv","throw","throwerror","throwerror(error","throwerror(fals","throwerror(new","thumbnail","tile","tiles[0","time","timeout","titl","todo","toggleexpand","tool","top","topromis","tostr","tourist","touristiccategori","touristiccategorieswithfeatur","touristiccategorieswithfeatures.previousvalu","touristiccategorieswithfeatures.push","touristiccategorywithfeatur","touristiccategorywithfeatures.featur","touristiccont","touristiccontent${touristiccontent.id","touristiccontent.pictogram","touristiccontent.properti","touristiccontent.properties.categori","touristiccontent.properties.pictur","touristiccontent_categori","touristiccontentcollapseinitials","touristiccontents.featur","touristiccontents.features.filt","touristicev","touristiceventsitem","touristics_cont","touristicscont","touristicscontent.setdata(touristics_cont","touristicscontent.values.foreach((touristiccont","touristicscontentcategori","touristicscontentfeatur","touristicscontentfeatures.concat","trackbyfilterid","trackbyfilterid(index","trackfilt","trackfilters(index","trackfiltervalu","trackfiltervalues(index","tracktrek","tracktrek(index","trad","trad.cancelbutton","trad.confirmbutton","trad.confirmerror","trad.contentitiner","trad.contenttrek","trad.error","trad.success","trad.titletrek","trad['geolocate.asklocatepermiss","trad['geolocate.cancel","trad['geolocate.open","transform(valu","translat","translate/cor","translate/http","translatehttpload","translatehttploader(http","translateid","translateload","translatemodul","translatemodule.forchild","translatemodule.forroot","translateservic","translationtrekcard","translationtrekcard.askdelet","translationtrekcard.cancelbutton","translationtrekcard.confirmbutton","translationtrekcard.deletelabel","translationtrekcard.deletetitl","translationtrekcard.deletioninprogress","translationtrekcard.errorwhiledelet","translationtrekcard.trekisdelet","transluc","trek","trek.bbox","trek.compon","trek.component.html","trek.component.scss","trek.component.t","trek.details.poi.nam","trek.details.touristiccontent.nam","trek.features.find((featur","trek.properties.advic","trek.properties.arrival_c","trek.properties.c","trek.properties.children","trek.properties.children.features.foreach((children","trek.properties.children.features.length","trek.properties.cities.map","trek.properties.departure_c","trek.properties.descript","trek.properties.difficulti","trek.properties.first_pictur","trek.properties.first_picture.url","trek.properties.id","trek.properties.information_desk","trek.properties.nam","trek.properties.network","trek.properties.networks.map","trek.properties.practic","trek.properties.rout","trek.properties.them","trek.properties.themes.map","trek/select","trekcardcompon","trekcontext","trekcontextresolv","trekdetailspag","trekdetailspagemodul","trekdownloadprogress","trekid","trekid}.zip","trekid}`)).pip","trekisavailableofflin","trekisavailableoffline(trekid","trekmappag","trekmappagemodul","treknam","trekproperti","treks')).pip","treks.featur","treks.features.filter((featur","treks.features.length","treks.modul","treks.module.t","treks.pag","treks.page.html","treks.page.scss","treks.servic","treks.service.t","treks.sort(function(a","treks/filt","treks/offlin","treks/onlin","treks/search","treks/treks.modul","treks/treks.pag","treksbystep","trekscontext","trekscontextresolv","trekservic","trekservice.getcommonimgsrc","treksmappag","treksmappagemodul","treksorderchang","treksorderchange(ordervalu","treksordercompon","treksourc","treksource.setdata(this.currenttrek","trekspag","trekspagemodul","treksservic","treksservice.getcommonimgsrc","treksservice.getmapconfigfortrekbyid","treksservice.getpoisfortrekbyid(currenttrekid","treksservice.gettouristiccontentsfortrekbyid(currenttrekid","treksservice.gettouristiceventsfortrekbyid(currenttrekid","treksservice.gettrekbyid(currenttrekid","treksservice.gettrekbyid(parentid","trekssourc","trekssource.setdata","trekstool","trekstool.treks$.subscribe((trek","treksurl","trekurl","tri","true","truehead","turf/help","two","type","typeimgsrc","typeinformationdesk","typeinformationdesk.pictogram","typeinformationdesks.values.foreach((typeinformationdesk","typeof","typepoi","typepoi.id","typepois.values.find","ui.modul","ui.module.t","undefin","unit","unsubscrib","unsubscribe(subscript","unsubscribe(this.mergefilterstrek","unsubscribefilt","unsur","unzip","unzipresult","updat","updateprogress","updateprogress(ev","updateselecteditem","updateselecteditems(temporaryfilt","updatesourc","url","us","usag","useclass","usedth","usefactori","usefirebas","user","userloc","userlocation.latitud","userlocation.longitud","usual","val","valu","value.check","value.checked).length","value.compon","value.component.html","value.component.scss","value.component.t","value.id","value.interv","value.slice(0","value/filt","valuechang","valuechanged(ev","valuechanged(undefin","valuecheckchang","valuecheckchanged($ev","valuestodisplay","variabl","verifi","version","vibrat","view","viewchild","viewchild('cont","viewchild('mapviz","viewisload","visibility.compon","visibility.component.html","visibility.component.scss","visibility.component.t","visibility/lay","visibl","viz","viz.compon","viz.component.html","viz.component.scss","viz.component.t","viz/map","void","watchhead","websit","webview","webview/ngx","window","window.clearinterval(this.currentpositioninterv","window.setinterv","window.settimeout","within","withlatestfrom","withlatestfrom(count","withmedia","without","won't","work","write","zip","zipfil","zipurl","zone","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nGeotrek Mobile\nMobile application of Geotrek Rando (http://geotrek.fr).\nINSTALLATION\nBefore proceeding, make sure the latest version of Node.js and npm are installed.It is usually easier to do with NVM\nnpm install -g ionic@5.4.11npm install -g cordova@9.0.0git clone git@github.com:GeotrekCE/Geotrek-mobile.gitcd Geotrek-mobilenpm installRUN THE APP IN THE BROWSER\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environment.ts' with your personal api url (the one you can create here and configure here)\nionic serveRUN THE APP ON DEVICE\n/!\\ The run argument build the apk, then install it on the device\niOS\nNeed iOS environment setup available only on macOS\nionic cordova run iosAndroid\nNeed Android environment setup available on Windows, macOS and Linux\nionic cordova run androidBUILD RELEASE APP\n/!\\ The build argument just build the apk, but don't install it on the device\nYou will need the android SDK (Command line tools may be enough, to be verified). You will also need the Java Developement Kit (JDK), you can use the openjdk-8-jdk package (this version works, unsure for others) that may already be installed on your linux system (instead of the official Oracle JDK).\nMinimum requirements : Fill in 'onlineBaseUrl' in 'src/environments/environment.prod.ts' with your personal api url\niOS\nionic cordova build ios --prod --releaseAndroid\nionic cordova build android --prod --releaseCUSTOMIZATION OPTIONS\nYou can find below all available options. You can easily overwrite them to customize your app.\nconfig.xml\nApp id\nApp name\nGeotrek Startersrc/environments/environment.ts & environment.prod.ts\nYou can overwrite a lot of options inside these files:AppName (header of the app) , availableLanguage, api url, map options and more\nenvironment.ts will be use for developmentenvironment.prod.ts will be use for release app\nsrc/assets/i18n\nYou can find all the internationalization ressources here (by default Fr and En)\nsrc/assets/map/icons/\nLocal icons to display on the map, like departure or parking icon\nsrc/assets/map/zone/zone.geojson\nGeosjon to display on the mapGenerally represents the limits of the geographical area of the application\nsrc/theme/variables.scss\nColors that will be usedThe most important point here is the primary color to customize your application\nicons and splashscreen\n\nThe source image for icons should ideally be at least 1024×1024px and located in resources/icon.png\n\nThe source image for splash screens should ideally be at least 2732×2732px and located in resources/splash.png. For best results, the splash screen's artwork should roughly fit within a square (1200×1200px) at the center of the image.\n\n\nThen you just have to run\nionic cordova resourcesOther resources\n\nAll others resources are provided by the apiWe download a global package for offline mode when user downloads his first trek\n\nFirebase Analytics Configuration\nIn order to use Firebase analytics, you had to create a Firebase App.\n\nThen store google-services.json and GoogleService-Info.plist in ./Analytics/\nIn config.xml, add\n\n          ...            ...  \nSet true to useFirebase variable in environment files\n\nRemove Firebase Analytics\nIn order to build the app without Firebase you had to\n\nSet false to useFirebase variable in environment files\n\nRun this list of command(If you add platforms previously, be sure to delete them)\n\n\n    ionic cordova platform rm android    ionic cordova platform rm ios    ionic cordova plugin rm cordova-plugin-firebase-analytics    ionic cordova plugin rm cordova-android-play-services-gradle-release    ionic cordova plugin rm cordova-support-google-services    ionic cordova plugin rm cordova-support-android-plugin    ionic cordova platform add android    ionic cordova build androidTests\nEnd-to-end testing\nOpen cypress\nnpm run cypress:openHeadless mode\nnpm run cypress:runDocumentation\nAccess to extensive documentation\nLICENCE\n\nOpenSource - BSD\nCopyright (c) Makina Corpus - Parc National des Écrins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            16 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        29 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        30 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            13 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AppRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    CustomPipesModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    FiltersComponentModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    MoreItemPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    MorePageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SharedFiltersModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SharedModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SharedTreksModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    SharedUiModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TabsPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TabsPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TrekDetailsPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TrekMapPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TreksMapPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TreksPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                PoiDetailsComponent\n                            \n                            \n                                ProgressComponent\n                            \n                            \n                                InformationDeskDetailsComponent\n                            \n                            \n                                LayersVisibilityComponent\n                            \n                            \n                                TreksOrderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                MoreResolver\n                            \n                            \n                                MoreItemResolver\n                            \n                            \n                                TrekContextResolver\n                            \n                            \n                                TreksContextResolver\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { LoadingInterceptor } from '@app/services/loading/loading.service';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { Animation } from '@ionic/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\n\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Network } from '@ionic-native/network/ngx';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { DeviceOrientation } from '@ionic-native/device-orientation/ngx';\n\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { AppComponent } from '@app/app.component';\n\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport { ProgressComponent } from '@app/components/progress/progress.component';\nimport { LayersVisibilityComponent } from '@app/components/layers-visibility/layers-visibility.component';\n\nimport { TreksOrderComponent } from './components/treks-order/treks-order.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function noAnimation(AnimationC: Animation): Promise {\n  return Promise.resolve(new AnimationC());\n}\n\nregisterLocaleData(localeFr, 'fr');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  entryComponents: [\n    PoiDetailsComponent,\n    ProgressComponent,\n    InformationDeskDetailsComponent,\n    LayersVisibilityComponent,\n    TreksOrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    IonicModule.forRoot({\n      mode: 'md',\n      animated: true,\n      navAnimation: noAnimation\n    }),\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    IonicStorageModule.forRoot()\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    File,\n    Zip,\n    WebView,\n    BackgroundGeolocation,\n    LocalNotifications,\n    ScreenOrientation,\n    Globalization,\n    SocialSharing,\n    Network,\n    FirebaseAnalytics,\n    DeviceOrientation,\n    MoreResolver,\n    MoreItemResolver,\n    TrekContextResolver,\n    TreksContextResolver,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n  Modules\n  AppRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'app', pathMatch: 'full' },\n  {\n    path: 'app',\n    loadChildren: './pages/tabs/tabs.module#TabsPageModule'\n  },\n  {\n    path: 'app/map/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule'\n  },\n  {\n    path: 'app/map/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { isStage: true }\n  },\n  {\n    path: 'app/map-offline/:trekId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true }\n  },\n  {\n    path: 'app/map-offline/:trekId/:stageId',\n    loadChildren: './pages/trek-map/trek-map.module#TrekMapPageModule',\n    data: { offline: true, isStage: true }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomPipesModule.html":{"url":"modules/CustomPipesModule.html","title":"module - CustomPipesModule","body":"\n                   \n\n\n  Modules\n  CustomPipesModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/custom-pipes.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LowerRoundPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LowerRoundPipe\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { LowerRoundPipe } from '@app/pipes/lower-round.pipe';\n\n@NgModule({\n  imports: [],\n  declarations: [LowerRoundPipe],\n  exports: [LowerRoundPipe]\n})\nexport class CustomPipesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersComponentModule.html":{"url":"modules/FiltersComponentModule.html","title":"module - FiltersComponentModule","body":"\n                   \n\n\n  Modules\n  FiltersComponentModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/filters/filters.module.ts\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    SharedFiltersModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedFiltersModule } from '@app/shared/shared-filters.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedFiltersModule,\n    TranslateModule.forChild()\n  ]\n})\nexport class FiltersComponentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoreItemPageModule.html":{"url":"modules/MoreItemPageModule.html","title":"module - MoreItemPageModule","body":"\n                   \n\n\n  Modules\n  MoreItemPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/more/more-item/more-item.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MoreItemPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedUiModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MoreItemResolver } from '@app/resolvers/more-item.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { MoreItemPage } from './more-item.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoreItemPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      item: MoreItemResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MoreItemPage]\n})\nexport class MoreItemPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MorePageModule.html":{"url":"modules/MorePageModule.html","title":"module - MorePageModule","body":"\n                   \n\n\n  Modules\n  MorePageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/more/more.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MorePage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedUiModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoreResolver } from '@app/resolvers/more.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MorePage } from './more.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    component: MorePage,\n    resolve: {\n      items: MoreResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [MorePage]\n})\nexport class MorePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedFiltersModule.html":{"url":"modules/SharedFiltersModule.html","title":"module - SharedFiltersModule","body":"\n                   \n\n\n  Modules\n  SharedFiltersModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/shared-filters.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FiltersComponent\n                            \n                            \n                                FilterComponent\n                            \n                            \n                                FilterValueComponent\n                            \n                            \n                                SelectFilterComponent\n                            \n                            \n                                SearchComponent\n                            \n                            \n                                InAppDisclosureComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FiltersComponent\n                            \n                            \n                                    FilterComponent\n                            \n                            \n                                    FilterValueComponent\n                            \n                            \n                                    SelectFilterComponent\n                            \n                            \n                                    SearchComponent\n                            \n                            \n                                    InAppDisclosureComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { FilterComponent } from '@app/components/filter/filter.component';\nimport { FilterValueComponent } from '@app/components/filter-value/filter-value.component';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\n\n@NgModule({\n  declarations: [\n    FiltersComponent,\n    FilterComponent,\n    FilterValueComponent,\n    SelectFilterComponent,\n    SearchComponent,\n    InAppDisclosureComponent\n  ],\n  imports: [CommonModule, TranslateModule.forChild()],\n  entryComponents: [FiltersComponent, SelectFilterComponent],\n  exports: [\n    FiltersComponent,\n    FilterComponent,\n    FilterValueComponent,\n    SelectFilterComponent,\n    SearchComponent,\n    InAppDisclosureComponent\n  ]\n})\nexport class SharedFiltersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n  Modules\n  SharedModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MapTreksVizComponent\n                            \n                            \n                                MapTrekVizComponent\n                            \n                            \n                                GeolocateNotificationsComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MapTreksVizComponent\n                            \n                            \n                                    MapTrekVizComponent\n                            \n                            \n                                    GeolocateNotificationsComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { GeolocateNotificationsComponent } from '@app/components/geolocate-notifications/geolocate-notifications.component';\nimport { MapTrekVizComponent } from '@app/components/map-trek-viz/map-trek-viz.component';\nimport { MapTreksVizComponent } from '@app/components/map-treks-viz/map-treks-viz.component';\n\nimport { IonicModule } from '@ionic/angular';\n\n@NgModule({\n  declarations: [\n    MapTreksVizComponent,\n    MapTrekVizComponent,\n    GeolocateNotificationsComponent\n  ],\n  imports: [CommonModule, IonicModule, TranslateModule.forChild()],\n  exports: [\n    MapTreksVizComponent,\n    MapTrekVizComponent,\n    GeolocateNotificationsComponent\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedTreksModule.html":{"url":"modules/SharedTreksModule.html","title":"module - SharedTreksModule","body":"\n                   \n\n\n  Modules\n  SharedTreksModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/shared-treks.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PoiComponent\n                            \n                            \n                                TrekCardComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    PoiComponent\n                            \n                            \n                                    TrekCardComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { PoiComponent } from '@app/components/poi/poi.component';\nimport { TrekCardComponent } from '@app/components/trek-card/trek-card.component';\nimport { CustomPipesModule } from './custom-pipes.module';\n\n@NgModule({\n  declarations: [PoiComponent, TrekCardComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule,\n    TranslateModule.forChild(),\n    CustomPipesModule\n  ],\n  exports: [PoiComponent, TrekCardComponent]\n})\nexport class SharedTreksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n  Modules\n  SharedUiModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/shared-ui.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CollapsibleListComponent\n                            \n                            \n                                ConnectErrorComponent\n                            \n                            \n                                LoaderComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CollapsibleListComponent\n                            \n                            \n                                    ConnectErrorComponent\n                            \n                            \n                                    LoaderComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapsibleListComponent } from '@app/components/collapsible-list/collapsible-list.component';\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectErrorComponent } from '@app/components/connect-error/connect-error.component';\nimport { LoaderComponent } from '@app/components/loader/loader.component';\n\n@NgModule({\n  declarations: [\n    CollapsibleListComponent,\n    ConnectErrorComponent,\n    LoaderComponent\n  ],\n  imports: [CommonModule, IonicModule, RouterModule],\n  exports: [CollapsibleListComponent, ConnectErrorComponent, LoaderComponent]\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n  Modules\n  TabsPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TabsPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TabsPageRoutingModule\n                            \n                            \n                                    TreksPageModule\n                            \n                            \n                                    MorePageModule\n                            \n                            \n                                    SharedUiModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\nimport { TabsPageRoutingModule } from './tabs.routing.module';\nimport { TreksPageModule } from '../treks/treks.module';\nimport { MorePageModule } from '../more/more.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    TabsPageRoutingModule,\n    TreksPageModule,\n    MorePageModule,\n    TranslateModule.forChild(),\n    SharedUiModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n  Modules\n  TabsPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/tabs/tabs.routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { TreksPage } from '../treks/treks.page';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'treks',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule'\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { isStage: true }\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule'\n          }\n        ]\n      },\n      {\n        path: 'treks-offline',\n        children: [\n          {\n            path: '',\n            component: TreksPage,\n            data: { offline: true },\n            resolve: {\n              context: TreksContextResolver\n            }\n          },\n          {\n            path: 'trek-details/:trekId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true }\n          },\n          {\n            path: 'trek-details/:trekId/:stageId',\n            loadChildren:\n              '../trek-details/trek-details.module#TrekDetailsPageModule',\n            data: { offline: true, isStage: true }\n          },\n          {\n            path: 'treks-map',\n            loadChildren: '../treks-map/treks-map.module#TreksMapPageModule',\n            data: { offline: true }\n          }\n        ]\n      },\n      {\n        path: 'more',\n        children: [\n          {\n            path: '',\n            loadChildren: '../more/more.module#MorePageModule'\n          },\n          {\n            path: ':moreItemId',\n            loadChildren:\n              '../more/more-item/more-item.module#MoreItemPageModule'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/app/tabs/treks',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekDetailsPageModule.html":{"url":"modules/TrekDetailsPageModule.html","title":"module - TrekDetailsPageModule","body":"\n                   \n\n\n  Modules\n  TrekDetailsPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/trek-details/trek-details.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TrekDetailsPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedTreksModule\n                            \n                            \n                                    SharedUiModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TrekDetailsPage } from './trek-details.page';\nimport { CustomPipesModule } from '@app/shared/custom-pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    },\n    component: TrekDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedTreksModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n    CustomPipesModule\n  ],\n  declarations: [TrekDetailsPage]\n})\nexport class TrekDetailsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrekMapPageModule.html":{"url":"modules/TrekMapPageModule.html","title":"module - TrekMapPageModule","body":"\n                   \n\n\n  Modules\n  TrekMapPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/trek-map/trek-map.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TrekMapPage\n                            \n                            \n                                SelectPoiComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    SharedUiModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrekContextResolver } from '@app/resolvers/trek.resolver';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TrekMapPage } from './trek-map.page';\nimport { SelectPoiComponent } from '@app/components/select-poi/select-poi.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TrekMapPage,\n    runGuardsAndResolvers: 'always',\n    resolve: {\n      context: TrekContextResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [TrekMapPage, SelectPoiComponent]\n})\nexport class TrekMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksMapPageModule.html":{"url":"modules/TreksMapPageModule.html","title":"module - TreksMapPageModule","body":"\n                   \n\n\n  Modules\n  TreksMapPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/treks-map/treks-map.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TreksMapPage\n                            \n                            \n                                SelectTrekComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    SharedUiModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TreksContextResolver } from '@app/resolvers/treks.resolver';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FiltersComponentModule } from '@app/components/filters/filters.module';\n\nimport { TreksMapPage } from './treks-map.page';\nimport { SelectTrekComponent } from '@app/components/select-trek/select-trek.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TreksMapPage,\n    resolve: {\n      context: TreksContextResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule,\n    SharedUiModule,\n    TranslateModule.forChild(),\n    FiltersComponentModule\n  ],\n  declarations: [TreksMapPage, SelectTrekComponent]\n})\nexport class TreksMapPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TreksPageModule.html":{"url":"modules/TreksPageModule.html","title":"module - TreksPageModule","body":"\n                   \n\n\n  Modules\n  TreksPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/treks/treks.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TreksPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedTreksModule\n                            \n                            \n                                    SharedUiModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedTreksModule } from '@app/shared/shared-treks.module';\nimport { SharedUiModule } from '@app/shared/shared-ui.module';\n\nimport { FiltersComponentModule } from '@app/components/filters/filters.module';\n\nimport { RouterModule } from '@angular/router';\nimport { TreksPage } from './treks.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedTreksModule,\n    SharedUiModule,\n    FiltersComponentModule,\n    RouterModule.forChild([]),\n    TranslateModule.forChild()\n  ],\n  declarations: [TreksPage]\n})\nexport class TreksPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(platform: any, splashScreen: any, statusBar: any, translate: any, globalization: any, onlineTreks: any, settings: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             initializeApp\n                        \n                    \n    \n                    \n                        \n    initializeApp()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { environment } from '@env/environment';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Globalization } from '@ionic-native/globalization/ngx';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar,\n    private translate: TranslateService,\n    private globalization: Globalization,\n    private onlineTreks: OnlineTreksService,\n    private settings: SettingsService\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(async () => {\n      let defaultLanguage;\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        defaultLanguage = (\n          await this.globalization.getPreferredLanguage()\n        ).value.slice(0, 2);\n        this.statusBar.styleLightContent();\n        this.splashScreen.hide();\n      } else {\n        defaultLanguage = navigator.language.slice(0, 2);\n      }\n\n      // we assume that availableLanguage[0] is default language if user language is not available\n      if (\n        environment.availableLanguage &&\n        environment.availableLanguage.length > 0\n      ) {\n        if (environment.availableLanguage.indexOf(defaultLanguage) === -1) {\n          defaultLanguage = environment.availableLanguage[0];\n        }\n      } else {\n        // or 'fr' if array is empty\n        defaultLanguage = 'fr';\n      }\n\n      this.translate.setDefaultLang(defaultLanguage);\n\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    });\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsibleListComponent.html":{"url":"components/CollapsibleListComponent.html","title":"component - CollapsibleListComponent","body":"\n                   \n\n\n\n  Components\n  CollapsibleListComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/collapsible-list/collapsible-list.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collapsible-list\n            \n\n            \n                styleUrls\n                collapsible-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                collapsible-list.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            hideAllLabel\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            initialSize\n                        \n                        \n                            \n                              Default value: 5\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            initialState\n                        \n                        \n                              \n                                Type:    \"expanded\" | \"collapsed\"\n\n                              \n                            \n                              Default value: collapsed\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            items\n                        \n                        \n                              \n                                Type:    T[]\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            itemTemplate\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            showAllLabel\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public toggleExpandables\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            toggleExpandables()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public alwaysDisplayedItems\n                        \n                    \n                    \n                        \n                            alwaysDisplayedItems:     T[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public expandableItems\n                        \n                    \n                    \n                        \n                            expandableItems:     T[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public expanded\n                        \n                    \n                    \n                        \n                            expanded:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n    \n\n        \n            import {\n  Component,\n  Input,\n  OnInit,\n  TemplateRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'app-collapsible-list',\n  templateUrl: './collapsible-list.component.html',\n  styleUrls: ['./collapsible-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollapsibleListComponent implements OnInit {\n  @Input() items: T[];\n  @Input() showAllLabel: string;\n  @Input() hideAllLabel: string;\n  @Input() initialSize = 5;\n  @Input() initialState: 'expanded' | 'collapsed' = 'collapsed';\n  @Input() itemTemplate: TemplateRef;\n\n  public alwaysDisplayedItems: T[] = [];\n  public expandableItems: T[] = [];\n  public expanded = false;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.expanded = this.initialState === 'expanded';\n    this.alwaysDisplayedItems = this.items.slice(0, this.initialSize);\n    this.expandableItems = this.items.slice(\n      this.initialSize,\n      this.items.length\n    );\n  }\n\n  public toggleExpandables() {\n    this.expanded = !this.expanded;\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnectErrorComponent.html":{"url":"components/ConnectErrorComponent.html","title":"component - ConnectErrorComponent","body":"\n                   \n\n\n\n  Components\n  ConnectErrorComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/connect-error/connect-error.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connect-error\n            \n\n            \n                styleUrls\n                connect-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                connect-error.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            buttonText\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            content\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            icon\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            title\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            retry\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-connect-error',\n  templateUrl: './connect-error.component.html',\n  styleUrls: ['./connect-error.component.scss']\n})\nexport class ConnectErrorComponent {\n  @Input() public title = '';\n  @Input() public content = '';\n  @Input() public icon = '';\n  @Input() public buttonText = '';\n  @Output() public retry = new EventEmitter();\n\n  constructor() {}\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n  Components\n  FilterComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/filter/filter.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n            \n                styleUrls\n                filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                filter.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            commonSrc\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            filter\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            selectChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            valueChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalController: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public valueChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            valueChanged(undefined: { checked: boolean; value: any; })\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public openSelect\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            openSelect()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public updateSelectedItems\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updateSelectedItems(temporaryFilter: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public containsFilterShouldUseSelectAbove\n                        \n                    \n                    \n                        \n                            containsFilterShouldUseSelectAbove:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public selectedItems\n                        \n                    \n                    \n                        \n                            selectedItems:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  DoCheck\n} from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { SelectFilterComponent } from '@app/components/select-filter/select-filter.component';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss']\n})\nexport class FilterComponent implements OnInit, DoCheck {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n  @Output() public selectChange = new EventEmitter();\n  public selectedItems = '';\n  public containsFilterShouldUseSelectAbove =\n    environment.containsFilterShouldUseSelectAbove;\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {\n    this.updateSelectedItems(this.filter);\n  }\n\n  ngDoCheck() {\n    if (\n      !this.filter.values.find((value) => {\n        return value.checked;\n      })\n    ) {\n      this.updateSelectedItems(this.filter);\n    }\n  }\n\n  public valueChanged({\n    checked,\n    value\n  }: {\n    checked: boolean;\n    value: FilterValue;\n  }): void {\n    this.valueChange.emit({ checked: checked, value: value });\n  }\n\n  public async openSelect(): Promise {\n    const modal = await this.modalController.create({\n      component: SelectFilterComponent,\n      componentProps: { filter: this.filter, commonSrc: this.commonSrc },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.temporaryFilter) {\n      this.updateSelectedItems(data.temporaryFilter);\n      this.selectChange.emit({ filter: data.temporaryFilter });\n    }\n  }\n\n  public updateSelectedItems(temporaryFilter: Filter) {\n    const selectedItems: string[] = [];\n\n    for (const filterValue of temporaryFilter.values) {\n      if (filterValue.checked) {\n        selectedItems.push(filterValue.name);\n      }\n    }\n    this.selectedItems = selectedItems.join(', ');\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterValueComponent.html":{"url":"components/FilterValueComponent.html","title":"component - FilterValueComponent","body":"\n                   \n\n\n\n  Components\n  FilterValueComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/filter-value/filter-value.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-value\n            \n\n            \n                styleUrls\n                filter-value.component.scss\n            \n\n\n\n            \n                templateUrl\n                filter-value.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            commonSrc\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            value\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            valueChange\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public valueCheckChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            valueCheckChanged($event: CustomEvent, value: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n        \n            import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FilterValue } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-filter-value',\n  templateUrl: './filter-value.component.html',\n  styleUrls: ['./filter-value.component.scss']\n})\nexport class FilterValueComponent implements OnInit {\n  @Input() value: FilterValue;\n  @Input() commonSrc: string;\n  @Output() public valueChange = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public valueCheckChanged($event: CustomEvent, value: FilterValue) {\n    this.valueChange.emit({ checked: $event.detail.checked, value: value });\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n  Components\n  FiltersComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/filters/filters.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filters\n            \n\n            \n                styleUrls\n                filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                filters.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            isOnline\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: any, settings: any, onlineTreks: any, offlineTreks: any, platform: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewDidEnter\n                        \n                    \n    \n                    \n                        \n    ionViewDidEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public handleFiltersState\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            handleFiltersState(checkState: boolean, filter: any, value: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public handleSelect\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            handleSelect(event: { filter: any; })\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public applyFilters\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            applyFilters()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public eraseFilters\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            eraseFilters()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public close\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public trackFilters\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            trackFilters(index: number, element: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     string\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public unsubscribeFilters\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            unsubscribeFilters()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public trackByFilterId\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            trackByFilterId(index: number, element: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     string\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public commonSrc\n                        \n                    \n                    \n                        \n                            commonSrc:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public filters\n                        \n                    \n                    \n                        \n                            filters:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private filtersSubscription\n                        \n                    \n                    \n                        \n                            filtersSubscription:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public nbTemporaryFiltersTreks\n                        \n                    \n                    \n                        \n                            nbTemporaryFiltersTreks:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             settings\n                        \n                    \n                    \n                        \n                            settings:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public temporaryFilters$\n                        \n                    \n                    \n                        \n                            temporaryFilters$:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnDestroy, OnInit, Input } from '@angular/core';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { BehaviorSubject, combineLatest, Subscription } from 'rxjs';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { Filter, FilterValue, MinimalTreks } from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-filters',\n  templateUrl: './filters.component.html',\n  styleUrls: ['./filters.component.scss']\n})\nexport class FiltersComponent extends UnSubscribe implements OnInit, OnDestroy {\n  public temporaryFilters$ = new BehaviorSubject([]);\n  public nbTemporaryFiltersTreks = 0;\n  public commonSrc: string;\n  public filters: Filter[];\n  private filtersSubscription: Subscription;\n  @Input() public isOnline: boolean;\n\n  constructor(\n    private modalCtrl: ModalController,\n    public settings: SettingsService,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const treks$ = this.isOnline\n      ? this.onlineTreks.treks$\n      : this.offlineTreks.treks$;\n    this.commonSrc = this.isOnline\n      ? this.onlineTreks.getCommonImgSrc()\n      : this.offlineTreks.getCommonImgSrc();\n\n    this.filtersSubscription = this.settings.filters$.subscribe((filters) => {\n      this.filters = filters || [];\n      this.temporaryFilters$.next(filters || []);\n    });\n\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n\n      combineLatest(treks$, this.temporaryFilters$).subscribe(\n        ([treks, temporaryFilters]: [MinimalTreks | null, Filter[]]) => {\n          this.nbTemporaryFiltersTreks = !!treks\n            ? FilterTreksService.filter(treks, temporaryFilters).length\n            : 0;\n        }\n      )\n    );\n  }\n\n  public handleFiltersState(\n    checkState: boolean,\n    filter: Filter,\n    value: FilterValue\n  ): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    const temporaryFilter = temporaryFilters.find(\n      (tempFilter) => tempFilter.id === filter.id\n    ) as Filter;\n    const filterValue = temporaryFilter.values.find(\n      (tempValue) => tempValue.id === value.id\n    ) as FilterValue;\n    filterValue.checked = checkState;\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public handleSelect(event: { filter: Filter }): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    let temporaryFilterIndex = temporaryFilters.findIndex(\n      (tempFilter) => tempFilter.id === event.filter.id\n    );\n    if (temporaryFilterIndex !== -1) {\n      temporaryFilters[temporaryFilterIndex] = event.filter;\n      this.temporaryFilters$.next(temporaryFilters);\n    }\n  }\n\n  public applyFilters(): void {\n    this.unsubscribeFilters();\n    this.settings.saveFiltersState(this.temporaryFilters$.getValue());\n    this.modalCtrl.dismiss(true);\n  }\n\n  public eraseFilters(): void {\n    const temporaryFilters = [...this.temporaryFilters$.getValue()];\n    temporaryFilters.forEach((filter) => {\n      filter.values.forEach((value) => (value.checked = false));\n    });\n    this.temporaryFilters$.next(temporaryFilters);\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public trackFilters(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n\n  public unsubscribeFilters(): void {\n    if (this.filtersSubscription) {\n      this.filtersSubscription.unsubscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.unsubscribeFilters();\n  }\n\n  public trackByFilterId(index: number, element: Filter): string | null {\n    return element ? element.id : null;\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeolocateNotificationsComponent.html":{"url":"components/GeolocateNotificationsComponent.html","title":"component - GeolocateNotificationsComponent","body":"\n                   \n\n\n\n  Components\n  GeolocateNotificationsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-geolocate-notifications\n            \n\n            \n                styleUrls\n                geolocate-notifications.component.scss\n            \n\n\n\n            \n                templateUrl\n                geolocate-notifications.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            currentPois\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            trekName\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            presentPoiDetails\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(platform: any, localNotifications: any, alertController: any, geolocate: any, translate: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             changeNotificationsMode\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            changeNotificationsMode()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             enableGeolocationNotification\n                        \n                    \n    \n                    \n                        \n    enableGeolocationNotification()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             disableGeolocationNotification\n                        \n                    \n    \n                    \n                        \n    disableGeolocationNotification()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             checkToNotify\n                        \n                    \n    \n                    \n                        \n    checkToNotify(fromCoordinates: number[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentPersmissionsConfirm\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentPersmissionsConfirm()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             alertController\n                        \n                    \n                    \n                        \n                            alertController:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             clicklocalNotifications$\n                        \n                    \n                    \n                        \n                            clicklocalNotifications$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentPoisToNotify\n                        \n                    \n                    \n                        \n                            currentPoisToNotify:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private currentPosition$\n                        \n                    \n                    \n                        \n                            currentPosition$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             localNotifications\n                        \n                    \n                    \n                        \n                            localNotifications:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             notificationsModeIsActive\n                        \n                    \n                    \n                        \n                            notificationsModeIsActive:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             platform\n                        \n                    \n                    \n                        \n                            platform:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Subscription } from 'rxjs';\nimport { point } from '@turf/helpers';\nimport { TranslateService } from '@ngx-translate/core';\n\nconst distance = require('@turf/distance').default;\n\nimport { Pois } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-geolocate-notifications',\n  templateUrl: './geolocate-notifications.component.html',\n  styleUrls: ['./geolocate-notifications.component.scss']\n})\nexport class GeolocateNotificationsComponent\n  implements OnInit, OnChanges, OnDestroy {\n  currentPoisToNotify: any[] = [];\n  clicklocalNotifications$: Subscription;\n  notificationsModeIsActive = false;\n  @Input() currentPois: Pois;\n  @Input() trekName: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  private currentPosition$: Subscription;\n\n  constructor(\n    public platform: Platform,\n    public localNotifications: LocalNotifications,\n    public alertController: AlertController,\n    private geolocate: GeolocateService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.localNotifications.setDefaults({\n        icon: 'res://icon',\n        smallIcon: 'res://ic_stat_panorama',\n        vibrate: true,\n        foreground: true,\n        priority: 2,\n        silent: false,\n        launch: true,\n        lockscreen: true\n      });\n      this.clicklocalNotifications$ = this.localNotifications\n        .on('click')\n        .subscribe(({ data }) => {\n          const poi = this.currentPois.features.find(\n            (feature) => feature.properties.id === data.id\n          );\n          this.presentPoiDetails.emit(poi);\n        });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    if (changesCurrentPois.currentValue && !changesCurrentPois.previousValue) {\n      if (this.currentPois && Array.isArray(this.currentPois.features)) {\n        this.currentPoisToNotify = this.currentPois.features.map((feature) => ({\n          id: feature.properties.id,\n          name: feature.properties.name,\n          coordinates: feature.geometry.coordinates\n        }));\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.clicklocalNotifications$) {\n      this.clicklocalNotifications$.unsubscribe();\n    }\n\n    if (this.currentPosition$) {\n      this.disableGeolocationNotification();\n    }\n  }\n\n  async changeNotificationsMode() {\n    if (!this.notificationsModeIsActive) {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        if (!(await this.geolocate.checkAuthorization())) {\n          this.presentPersmissionsConfirm();\n        } else {\n          this.geolocate.stopOnMapTracking(false, false);\n          this.geolocate.startNotificationsModeTracking(this.trekName);\n          if (await this.localNotifications.hasPermission()) {\n            this.notificationsModeIsActive = true;\n            this.enableGeolocationNotification();\n          } else {\n            await this.localNotifications.requestPermission();\n          }\n        }\n      } else {\n        this.geolocate.stopOnMapTracking(false, false);\n        this.geolocate.startNotificationsModeTracking(this.trekName);\n        this.notificationsModeIsActive = true;\n        this.enableGeolocationNotification();\n      }\n    } else {\n      this.notificationsModeIsActive = false;\n      this.geolocate.stopNotificationsModeTracking();\n      this.geolocate.startOnMapTracking();\n      this.disableGeolocationNotification();\n    }\n  }\n\n  enableGeolocationNotification(): void {\n    this.currentPosition$ = this.geolocate.currentPosition$.subscribe(\n      (coordinates) => this.checkToNotify(coordinates)\n    );\n  }\n\n  disableGeolocationNotification(): void {\n    this.currentPosition$.unsubscribe();\n  }\n\n  checkToNotify(fromCoordinates: number[]) {\n    if (\n      fromCoordinates &&\n      this.currentPoisToNotify &&\n      this.currentPoisToNotify.length > 0\n    ) {\n      const kmToNotify = environment.metersToNotify / 1000;\n      const options = {\n        units: 'kilometers'\n      };\n      const from = point(fromCoordinates);\n      const notifiedIndex = this.currentPoisToNotify.findIndex(\n        (feature) =>\n          distance(from, point(feature.coordinates), options)  {\n            this.localNotifications.schedule({\n              id: this.currentPoisToNotify[notifiedIndex].id,\n              title: trad,\n              text: this.currentPoisToNotify[notifiedIndex].name,\n              data: {\n                id: this.currentPoisToNotify[notifiedIndex].id\n              },\n              icon: 'res://icon',\n              smallIcon: 'res://ic_stat_panorama',\n              vibrate: true,\n              foreground: true,\n              priority: 2,\n              silent: false,\n              launch: true,\n              lockscreen: true\n            });\n\n            this.currentPoisToNotify.splice(notifiedIndex, 1);\n          });\n        }\n      }\n    }\n  }\n\n  async presentPersmissionsConfirm() {\n    await this.translate\n      .get([\n        'geolocate.askLocatePermission',\n        'geolocate.cancel',\n        'geolocate.open'\n      ])\n      .subscribe(async (trad) => {\n        const persmissionsConfirm = await this.alertController.create({\n          header: 'Permissions',\n          message: trad['geolocate.askLocatePermission'],\n          buttons: [\n            {\n              text: trad['geolocate.cancel'],\n              role: 'cancel',\n              cssClass: 'secondary'\n            },\n            {\n              text: trad['geolocate.open'],\n              handler: () => {\n                this.geolocate.showAppSettings();\n              }\n            }\n          ]\n        });\n\n        await persmissionsConfirm.present();\n      });\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InAppDisclosureComponent.html":{"url":"components/InAppDisclosureComponent.html","title":"component - InAppDisclosureComponent","body":"\n                   \n\n\n\n  Components\n  InAppDisclosureComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/in-app-disclosure/in-app-disclosure.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-in-app-disclosure\n            \n\n            \n                styleUrls\n                in-app-disclosure.component.scss\n            \n\n\n\n            \n                templateUrl\n                in-app-disclosure.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: any, storage: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public close\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             storage\n                        \n                    \n                    \n                        \n                            storage:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-in-app-disclosure',\n  templateUrl: './in-app-disclosure.component.html',\n  styleUrls: ['./in-app-disclosure.component.scss']\n})\nexport class InAppDisclosureComponent implements OnInit {\n  constructor(private modalCtrl: ModalController, public storage: Storage) {}\n\n  ngOnInit() {}\n\n  public async close() {\n    await this.storage.set(\n      'alreadyAskGeolocationPermission',\n      JSON.stringify(true)\n    );\n    this.modalCtrl.dismiss();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationDeskDetailsComponent.html":{"url":"components/InformationDeskDetailsComponent.html","title":"component - InformationDeskDetailsComponent","body":"\n                   \n\n\n\n  Components\n  InformationDeskDetailsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/information-desk-details/information-desk-details.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-information-desk-details\n            \n\n            \n                styleUrls\n                information-desk-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                information-desk-details.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: any, navParams: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewWillEnter\n                        \n                    \n    \n                    \n                        \n    ionViewWillEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             baseUrl\n                        \n                    \n                    \n                        \n                            baseUrl:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             informationDesk\n                        \n                    \n                    \n                        \n                            informationDesk:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             informationDeskPicture\n                        \n                    \n                    \n                        \n                            informationDeskPicture:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             modalCtrl\n                        \n                    \n                    \n                        \n                            modalCtrl:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navParams\n                        \n                    \n                    \n                        \n                            navParams:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { InformationDesk } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-information-desk-details',\n  templateUrl: './information-desk-details.component.html',\n  styleUrls: ['./information-desk-details.component.scss']\n})\nexport class InformationDeskDetailsComponent {\n  baseUrl = environment.onlineBaseUrl;\n  informationDesk: InformationDesk;\n  informationDeskPicture = '';\n\n  constructor(public modalCtrl: ModalController, public navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.informationDesk = this.navParams.get('informationDesk');\n    if (this.informationDesk && this.informationDesk.picture) {\n      this.informationDeskPicture = `${this.baseUrl}${this.informationDesk.picture}`;\n    }\n  }\n\n  close(): void {\n    this.modalCtrl.dismiss();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayersVisibilityComponent.html":{"url":"components/LayersVisibilityComponent.html","title":"component - LayersVisibilityComponent","body":"\n                   \n\n\n\n  Components\n  LayersVisibilityComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/layers-visibility/layers-visibility.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layers-visibility\n            \n\n            \n                styleUrls\n                layers-visibility.component.scss\n            \n\n\n\n            \n                templateUrl\n                layers-visibility.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(navParams: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewWillEnter\n                        \n                    \n    \n                    \n                        \n    ionViewWillEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public layerVisibilityChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            layerVisibilityChange(event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             changeLayerVisibility\n                        \n                    \n                    \n                        \n                            changeLayerVisibility:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             layers\n                        \n                    \n                    \n                        \n                            layers:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\nimport { NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-layers-visibility',\n  templateUrl: './layers-visibility.component.html',\n  styleUrls: ['./layers-visibility.component.scss']\n})\nexport class LayersVisibilityComponent {\n  changeLayerVisibility: any;\n  layers: any;\n\n  constructor(private navParams: NavParams) {}\n\n  ionViewWillEnter() {\n    this.changeLayerVisibility = this.navParams.get('changeLayerVisibility');\n    this.layers = this.navParams.get('layers');\n  }\n\n  public layerVisibilityChange(event: any) {\n    this.changeLayerVisibility(event.detail.checked, event.detail.value);\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n  Components\n  LoaderComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                loader.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            condition\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            progressBarWidth\n                        \n                        \n                            \n                              Default value: 50%\n                            \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(loading: any)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public loaderStatus\n                        \n                    \n                    \n                        \n                            loaderStatus:     Boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private loaderStatus$\n                        \n                    \n                    \n                        \n                            loaderStatus$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loading\n                        \n                    \n                    \n                        \n                            loading:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { delay } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnDestroy {\n  @Input() public progressBarWidth = '50%';\n  @Input() public condition: boolean | null = null;\n  public loaderStatus: Boolean;\n  private loaderStatus$: Subscription;\n\n  constructor(public loading: LoadingService) {\n    // add delay to prevent expression has changed after it was checked\n    this.loaderStatus$ = this.loading.status\n      .pipe(delay(0))\n      .subscribe((status) => (this.loaderStatus = status));\n  }\n\n  ngOnDestroy(): void {\n    this.loaderStatus$.unsubscribe();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTrekVizComponent.html":{"url":"components/MapTrekVizComponent.html","title":"component - MapTrekVizComponent","body":"\n                   \n\n\n\n  Components\n  MapTrekVizComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/map-trek-viz/map-trek-viz.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-trek-viz\n            \n\n            \n                styleUrls\n                map-trek-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                map-trek-viz.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            commonSrc\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            currentPois\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            currentTrek\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            dataSettings\n                        \n                        \n                              \n                                Type:    any[]\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            mapConfig\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            touristicCategoriesWithFeatures\n                        \n                        \n                              \n                                Type:    any[]\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            mapIsLoaded\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            navigateToChildren\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            presentInformationDeskDetails\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            presentPoiDetails\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(settings: any, screenOrientation: any, platform: any, geolocate: any, popoverController: any, translate: any, alertController: any, modalController: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             createMap\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            createMap()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private initializeSources\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            initializeSources()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private initializeLayers\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            initializeLayers()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private updateSources\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            updateSources()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public flyToUserLocation\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            flyToUserLocation()\n                        \n                    \n    \n                    \n                        \n                                Fly to user location else fitbounds to trek\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public FitToTrekBounds\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            FitToTrekBounds()\n                        \n                    \n    \n                    \n                        \n                                Fit to trek bounds\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             showLayersVisibility\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            showLayersVisibility(event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public changeLayerVisibility\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            changeLayerVisibility(checked: boolean, layersName: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public handleClustersInteraction\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            handleClustersInteraction()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentConfirmFeatures\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentConfirmFeatures(features: any[], clusterSource: { id: string; translateId: string; })\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public handleNavigateMode\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            handleNavigateMode()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentInAppDisclosure\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentInAppDisclosure()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Private map\n                        \n                    \n                    \n                        \n                            map:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mapViz\n                        \n                    \n                    \n                        \n                            mapViz:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private markerPosition\n                        \n                    \n                    \n                        \n                            markerPosition:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private navigate$\n                        \n                    \n                    \n                        \n                            navigate$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public navigateModeIsActive\n                        \n                    \n                    \n                        \n                            navigateModeIsActive:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Private poisType\n                        \n                    \n                    \n                        \n                            poisType:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             popoverController\n                        \n                    \n                    \n                        \n                            popoverController:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private touristicsContentCategory\n                        \n                    \n                    \n                        \n                            touristicsContentCategory:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, distinctUntilChanged, throttleTime } from 'rxjs/operators';\nimport {\n  PopoverController,\n  AlertController,\n  ModalController\n} from '@ionic/angular';\nimport { SelectPoiComponent } from '@app/components/select-poi/select-poi.component';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport {\n  Pois,\n  DataSetting,\n  HydratedTrek,\n  TouristicCategoryWithFeatures,\n  TouristicContent\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { Platform } from '@ionic/angular';\nimport { FeatureCollection } from 'geojson';\nimport { GeoJSONSource, Map, MapLayerMouseEvent, Marker } from 'mapbox-gl';\nimport { LayersVisibilityComponent } from '@app/components/layers-visibility/layers-visibility.component';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { throttle } from 'lodash';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-trek-viz',\n  templateUrl: './map-trek-viz.component.html',\n  styleUrls: ['./map-trek-viz.component.scss']\n})\nexport class MapTrekVizComponent extends UnSubscribe\n  implements OnDestroy, OnChanges {\n  private map: Map;\n  private markerPosition: Marker | undefined;\n  private poisType: DataSetting | undefined;\n  private touristicsContentCategory: DataSetting | undefined;\n  private navigate$: Subscription;\n  public navigateModeIsActive: boolean = false;\n\n  @ViewChild('mapViz', { static: false }) mapViz: any;\n\n  @Input() currentTrek: HydratedTrek | null = null;\n  @Input() currentPois: Pois;\n  @Input() touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  @Input() public dataSettings: DataSetting[];\n  @Input() public mapConfig: any;\n  @Input() private commonSrc: string;\n  @Output() presentPoiDetails = new EventEmitter();\n  @Output() presentInformationDeskDetails = new EventEmitter();\n  @Output() mapIsLoaded = new EventEmitter();\n  @Output() navigateToChildren = new EventEmitter();\n\n  constructor(\n    private settings: SettingsService,\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private geolocate: GeolocateService,\n    public popoverController: PopoverController,\n    private translate: TranslateService,\n    private alertController: AlertController,\n    private modalController: ModalController\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n\n    this.flyToUserLocation = throttle(this.flyToUserLocation, 3000);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTrek: SimpleChange = changes.currentTrek;\n    const changesCurrentPois: SimpleChange = changes.currentPois;\n    const touristicCategoriesWithFeatures: SimpleChange =\n      changes.touristicCategoriesWithFeatures;\n    if (\n      !!this.currentTrek &&\n      !!this.currentPois &&\n      !!this.touristicCategoriesWithFeatures &&\n      ((changesCurrentTrek && !changesCurrentTrek.previousValue) ||\n        (changesCurrentPois && !changesCurrentPois.previousValue) ||\n        (touristicCategoriesWithFeatures &&\n          !touristicCategoriesWithFeatures.previousValue))\n    ) {\n      this.createMap();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.markerPosition) {\n      this.markerPosition.remove();\n      this.markerPosition = undefined;\n    }\n\n    if (this.map) {\n      this.map.remove();\n    }\n\n    if (this.navigate$) {\n      this.navigate$.unsubscribe();\n    }\n\n    this.geolocate.stopNotificationsModeTracking();\n    this.geolocate.stopOnMapTracking();\n\n    super.ngOnDestroy();\n  }\n\n  async createMap() {\n    if (this.mapConfig && this.mapConfig.style) {\n      this.map = new Map({\n        ...this.mapConfig,\n        container: 'map-trek'\n      });\n\n      this.map.fitBounds(\n        this.mapConfig.trekBounds,\n        environment.map.TrekfitBoundsOptions\n      );\n      this.map.addControl(\n        new mapboxgl.NavigationControl({ showCompass: false }),\n        'top-left'\n      );\n\n      this.map.addControl(\n        new mapboxgl.ScaleControl({\n          unit: 'metric'\n        })\n      );\n\n      this.map.addControl(\n        new mapboxgl.AttributionControl({\n          compact: false,\n          customAttribution: environment.map.attributionText\n        })\n      );\n\n      if (!environment.map.enableRotation) {\n        this.map.dragRotate.disable();\n        this.map.touchZoomRotate.disableRotation();\n      }\n\n      this.map.on('click', 'pois-icon', (e: MapLayerMouseEvent) => {\n        if (!!e.features && e.features.length > 0) {\n          const poi = { ...e.features[0] };\n          if (poi.properties && poi.properties.pictures) {\n            poi.properties.pictures = JSON.parse(poi.properties.pictures);\n          }\n          this.presentPoiDetails.emit(poi);\n        }\n      });\n\n      this.map.on('click', 'information-desk-icon', (e: MapLayerMouseEvent) => {\n        const childrenTreks = this.map.queryRenderedFeatures(e.point, {\n          layers: [`children-treks-circle`]\n        });\n\n        if (\n          !!e.features &&\n          e.features.length > 0 &&\n          (!childrenTreks || !(childrenTreks.length > 0))\n        ) {\n          if (\n            e.features[0] &&\n            e.features[0].properties &&\n            e.features[0].properties.id &&\n            this.currentTrek\n          ) {\n            const informationDesk = this.currentTrek.properties.information_desks.find(\n              (informationDeskProperty) =>\n                informationDeskProperty.id ===\n                (e as any).features[0].properties.id\n            );\n            this.presentInformationDeskDetails.emit(informationDesk);\n          }\n        }\n      });\n\n      this.map.on(\n        'click',\n        'touristics-content-icon',\n        (e: MapLayerMouseEvent) => {\n          if (!!e.features && e.features.length > 0) {\n            const touristicContent = { ...e.features[0] };\n            if (\n              touristicContent.properties &&\n              touristicContent.properties.pictures\n            ) {\n              touristicContent.properties.pictures = JSON.parse(\n                touristicContent.properties.pictures\n              );\n            }\n            this.presentPoiDetails.emit(touristicContent);\n          }\n        }\n      );\n\n      this.map.on('click', 'children-treks-circle', (e: MapLayerMouseEvent) => {\n        if (!!e.features && e.features.length > 0) {\n          const childrenTrek = { ...e.features[0] };\n          if (childrenTrek.properties && childrenTrek.properties.id) {\n            // go to trek\n            this.navigateToChildren.emit(childrenTrek.properties.id);\n          }\n        }\n      });\n\n      this.handleClustersInteraction();\n\n      this.map.on('load', () => {\n        if (this.platform.is('ios') || this.platform.is('android')) {\n          this.subscriptions$$.push(\n            this.screenOrientation.onChange().subscribe(() => {\n              // Need to delay before resize\n              window.setTimeout(() => {\n                this.map.resize();\n              }, 50);\n            })\n          );\n        }\n\n        const loadImages: Observable = Observable.create(\n          (observer: any) => {\n            const imagesToLoad: any[] = [];\n            this.poisType = this.dataSettings.find(\n              (data) => data.id === 'poi_types'\n            );\n\n            if (this.poisType) {\n              this.poisType.values.forEach((poiType) => {\n                if (poiType.pictogram) {\n                  imagesToLoad.push({\n                    id: `pois${poiType.id}`,\n                    pictogram: poiType.pictogram\n                  });\n                }\n              });\n            }\n\n            const typeInformationDesks:\n              | DataSetting\n              | undefined = this.dataSettings.find(\n              (data) => data.id === 'information_desk_types'\n            );\n\n            if (typeInformationDesks) {\n              typeInformationDesks.values.forEach((typeInformationDesk) => {\n                if (typeInformationDesk.pictogram) {\n                  imagesToLoad.push({\n                    id: `informationDesk${typeInformationDesk.id}`,\n                    pictogram: typeInformationDesk.pictogram\n                  });\n                }\n              });\n            }\n\n            const touristicsContent:\n              | DataSetting\n              | undefined = this.dataSettings.find(\n              (data) => data.id === 'touristiccontent_categories'\n            );\n\n            if (touristicsContent) {\n              touristicsContent.values.forEach((touristicContent) => {\n                if (touristicContent.pictogram) {\n                  imagesToLoad.push({\n                    id: `touristicContent${touristicContent.id}`,\n                    pictogram: touristicContent.pictogram\n                  });\n                }\n              });\n            }\n\n            imagesToLoad.push({\n              id: 'arrival',\n              pictogram: './assets/map/icons/departure.png',\n              fromAssets: true\n            });\n            imagesToLoad.push({\n              id: 'departure',\n              pictogram: './assets/map/icons/arrival.png',\n              fromAssets: true\n            });\n            imagesToLoad.push({\n              id: 'departureArrival',\n              pictogram: './assets/map/icons/departureArrival.png',\n              fromAssets: true\n            });\n            imagesToLoad.push({\n              id: 'parking',\n              pictogram: './assets/map/icons/parking.png',\n              fromAssets: true\n            });\n            imagesToLoad.push({\n              id: 'arrow',\n              pictogram: './assets/map/icons/arrow.png',\n              fromAssets: true\n            });\n\n            imagesToLoad.forEach((imageToLoad: any, index: number) => {\n              this.map.loadImage(\n                imageToLoad.fromAssets\n                  ? imageToLoad.pictogram\n                  : `${this.commonSrc}${imageToLoad.pictogram}`,\n                (error: any, image: any) => {\n                  this.map.addImage(imageToLoad.id.toString(), image);\n                  if (index + 1 === imagesToLoad.length) {\n                    observer.complete();\n                  }\n                }\n              );\n            });\n          }\n        );\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$\n            .pipe(\n              filter((currentPosition) => currentPosition !== null),\n              distinctUntilChanged(),\n              throttleTime(environment.backgroundGeolocation.interval)\n            )\n            .subscribe(async (coordinates) => {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates);\n              } else {\n                const el = document.createElement('div');\n                const currentHeading = await this.geolocate.checkIfCanGetCurrentHeading();\n                el.className = currentHeading ? 'pulse-and-view' : 'pulse';\n\n                this.markerPosition = new mapboxgl.Marker({\n                  element: el\n                }).setLngLat(coordinates);\n                if (this.markerPosition) {\n                  this.markerPosition.addTo(this.map);\n                }\n              }\n            }),\n          this.geolocate.currentHeading$.subscribe((heading) => {\n            if (this.markerPosition && heading) {\n              (this.markerPosition as any).setRotation(heading);\n            }\n          }),\n          loadImages.subscribe({\n            complete: async () => {\n              // map instance for cypress test\n              this.mapViz.nativeElement.mapInstance = this.map;\n\n              await this.initializeSources();\n              this.initializeLayers();\n              this.updateSources();\n              this.mapIsLoaded.emit(true);\n\n              const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n              if (shouldShowInAppDisclosure) {\n                await this.presentInAppDisclosure();\n              }\n              this.geolocate.startOnMapTracking();\n            }\n          })\n        );\n      });\n    }\n  }\n\n  private async initializeSources() {\n    const data: FeatureCollection = {\n      type: 'FeatureCollection',\n      features: []\n    };\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: await this.settings.getZoneFromStorage()\n    });\n\n    this.map.addSource('trek', {\n      type: 'geojson',\n      data\n    });\n\n    this.map.addSource('departure-arrival', {\n      type: 'geojson',\n      data\n    });\n\n    this.map.addSource('pois', {\n      type: 'geojson',\n      data,\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50\n    });\n\n    this.map.addSource('touristics-content', {\n      type: 'geojson',\n      data,\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50\n    });\n\n    this.map.addSource('information-desk', {\n      type: 'geojson',\n      data\n    });\n\n    this.map.addSource('parking', {\n      type: 'geojson',\n      data\n    });\n\n    this.map.addSource('points-reference', {\n      type: 'geojson',\n      data\n    });\n\n    this.map.addSource('children-treks', {\n      type: 'geojson',\n      data\n    });\n  }\n\n  private initializeLayers(): void {\n    // Itinerancy hide POIs by default\n    const visibility: 'none' | 'visible' | undefined =\n      this.currentTrek &&\n      this.currentTrek.properties.children &&\n      this.currentTrek.properties.children.features.length > 0\n        ? 'none'\n        : 'visible';\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'trek-line',\n      type: 'line',\n      source: 'trek',\n      ...(environment.map.trekLineLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'arrow-layer',\n      type: 'symbol',\n      source: 'trek',\n      layout: {\n        'icon-image': 'arrow',\n        ...(environment.map.trekArrowLayerProperties.layout as any)\n      }\n    });\n\n    this.map.addLayer({\n      id: 'points-reference-circle',\n      type: 'circle',\n      source: 'points-reference',\n      ...(environment.map.pointReferenceLayersProperties.circle as any)\n    });\n\n    this.map.addLayer({\n      id: 'points-reference-text',\n      type: 'symbol',\n      source: 'points-reference',\n      ...(environment.map.pointReferenceLayersProperties.text as any)\n    });\n\n    this.map.addLayer({\n      id: 'pois-icon',\n      type: 'symbol',\n      source: 'pois',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['concat', 'pois', ['get', 'type']],\n        'icon-size': environment.map.poisLayersProperties.iconSize,\n        'icon-allow-overlap': true,\n        visibility:\n          visibility === 'visible'\n            ? (environment.map.poisLayersProperties.visibility as\n                | 'visible'\n                | 'none'\n                | undefined)\n            : visibility\n      }\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle-pois',\n      type: 'circle',\n      source: 'pois',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint,\n      layout: {\n        visibility:\n          visibility === 'visible'\n            ? (environment.map.poisLayersProperties.visibility as\n                | 'visible'\n                | 'none'\n                | undefined)\n            : visibility\n      }\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count-pois',\n      type: 'symbol',\n      source: 'pois',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterTextPaint,\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 18,\n        'text-offset': [0, 0.1],\n        'text-ignore-placement': true,\n        'text-allow-overlap': true,\n        visibility:\n          visibility === 'visible'\n            ? (environment.map.poisLayersProperties.visibility as\n                | 'visible'\n                | 'none'\n                | undefined)\n            : visibility\n      }\n    });\n\n    this.touristicsContentCategory = this.dataSettings.find(\n      (data) => data.id === 'touristiccontent_categories'\n    );\n\n    const circleColorExpression: any[] = [];\n\n    if (this.touristicsContentCategory) {\n      circleColorExpression.push('match');\n      circleColorExpression.push(['get', 'category']);\n      this.touristicsContentCategory.values.forEach((category) => {\n        circleColorExpression.push(category.id);\n        circleColorExpression.push(category.color);\n      });\n      circleColorExpression.push(environment.map.clusterPaint['circle-color']);\n    }\n\n    this.map.addLayer({\n      id: 'touristics-content-circle',\n      type: 'circle',\n      source: 'touristics-content',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        ...environment.map.touristicContentLayersProperties.circle.paint,\n        'circle-color': this.touristicsContentCategory\n          ? (circleColorExpression as any)\n          : '#000000'\n      },\n      layout: {\n        visibility:\n          visibility === 'visible'\n            ? (environment.map.touristicContentLayersProperties.visibility as\n                | 'visible'\n                | 'none'\n                | undefined)\n            : visibility\n      }\n    });\n\n    this.map.addLayer({\n      id: 'touristics-content-icon',\n      type: 'symbol',\n      source: 'touristics-content',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        visibility:\n          visibility === 'visible'\n            ? (environment.map.touristicContentLayersProperties.visibility as\n                | 'visible'\n                | 'none'\n                | undefined)\n            : visibility,\n        ...(environment.map.touristicContentLayersProperties.icon.layout as any)\n      }\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle-touristics-content',\n      type: 'circle',\n      source: 'touristics-content',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint,\n      layout: {\n        visibility:\n          visibility === 'visible'\n            ? (environment.map.touristicContentLayersProperties.visibility as\n                | 'visible'\n                | 'none'\n                | undefined)\n            : visibility\n      }\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count-touristics-content',\n      type: 'symbol',\n      source: 'touristics-content',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterTextPaint,\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 18,\n        'text-offset': [0, 0.1],\n        'text-allow-overlap': true,\n        'text-ignore-placement': true,\n        visibility:\n          visibility === 'visible'\n            ? (environment.map.touristicContentLayersProperties.visibility as\n                | 'visible'\n                | 'none'\n                | undefined)\n            : visibility\n      }\n    });\n\n    this.map.addLayer({\n      id: 'information-desk-icon',\n      type: 'symbol',\n      source: 'information-desk',\n      layout: {\n        'icon-image': [\n          'concat',\n          'informationDesk',\n          ['get', 'id', ['object', ['get', 'type']]]\n        ],\n        'icon-size': environment.map.informationIconSize,\n        'icon-allow-overlap': true\n      }\n    });\n\n    this.map.addLayer({\n      id: 'parking-icon',\n      type: 'symbol',\n      source: 'parking',\n      layout: {\n        'icon-image': 'parking',\n        'icon-size': environment.map.parkingIconSize,\n        'icon-allow-overlap': true\n      }\n    });\n\n    this.map.addLayer({\n      id: 'departure-arrival-icon',\n      type: 'symbol',\n      source: 'departure-arrival',\n      layout: {\n        'icon-image': [\n          'case',\n          ['==', ['get', 'type'], 'departure'],\n          'departure',\n          ['==', ['get', 'type'], 'arrival'],\n          'arrival',\n          'departureArrival'\n        ],\n        'icon-size': environment.map.departureArrivalIconSize\n      }\n    });\n\n    this.map.addLayer({\n      id: 'children-treks-circle',\n      type: 'circle',\n      source: 'children-treks',\n      paint: environment.map.stagePaint\n    });\n\n    this.map.addLayer({\n      id: 'children-treks-index',\n      type: 'symbol',\n      source: 'children-treks',\n      paint: {\n        'text-color': '#000000'\n      },\n      layout: {\n        'text-field': '{index}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 18,\n        'text-offset': [0, 0.1],\n        'text-allow-overlap': true,\n        'text-ignore-placement': true\n      }\n    });\n  }\n\n  private updateSources(): void {\n    if (!!this.map && !!this.currentTrek) {\n      const trekSource = this.map.getSource('trek') as GeoJSONSource;\n      if (trekSource) {\n        trekSource.setData(this.currentTrek);\n      }\n      const departureArrivalSource = this.map.getSource(\n        'departure-arrival'\n      ) as GeoJSONSource;\n\n      if (\n        departureArrivalSource &&\n        (!this.currentTrek.properties.children ||\n          !this.currentTrek.properties.children.features ||\n          !(this.currentTrek.properties.children.features.length > 0))\n      ) {\n        const departure = this.currentTrek.geometry.coordinates[0];\n        const arrival = this.currentTrek.geometry.coordinates.slice(-1)[0];\n        const departureArrivalData: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: []\n        };\n        if (departure[0] === arrival[0] && departure[1] === arrival[1]) {\n          // same departure arrival\n          departureArrivalData.features.push({\n            type: 'Feature',\n            geometry: { type: 'Point', coordinates: departure },\n            properties: {\n              type: 'departure-arrival'\n            }\n          });\n        } else {\n          departureArrivalData.features.push({\n            type: 'Feature',\n            geometry: { type: 'Point', coordinates: departure },\n            properties: {\n              type: 'departure'\n            }\n          });\n          departureArrivalData.features.push({\n            type: 'Feature',\n            geometry: { type: 'Point', coordinates: arrival },\n            properties: {\n              type: 'arrival'\n            }\n          });\n        }\n        departureArrivalSource.setData(departureArrivalData);\n      }\n      const poisSource = this.map.getSource('pois') as GeoJSONSource;\n      if (poisSource) {\n        poisSource.setData(this.currentPois);\n      }\n\n      const touristicsContent = this.map.getSource(\n        'touristics-content'\n      ) as GeoJSONSource;\n      if (touristicsContent) {\n        let touristicsContentFeatures: TouristicContent[] = [];\n        this.touristicCategoriesWithFeatures.forEach(\n          (touristicCategoryWithFeatures) => {\n            touristicsContentFeatures = touristicsContentFeatures.concat(\n              touristicCategoryWithFeatures.features\n            );\n          }\n        );\n\n        const touristics_content: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: touristicsContentFeatures\n        };\n        touristicsContent.setData(touristics_content);\n      }\n\n      const parkingSource = this.map.getSource('parking') as GeoJSONSource;\n      if (parkingSource && this.currentTrek.properties.parking_location) {\n        const parking: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: []\n        };\n        parking.features.push({\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: this.currentTrek.properties.parking_location\n          },\n          properties: {}\n        });\n        parkingSource.setData(parking);\n      }\n\n      const informationDeskSource = this.map.getSource(\n        'information-desk'\n      ) as GeoJSONSource;\n      if (\n        informationDeskSource &&\n        this.currentTrek.properties.information_desks &&\n        this.currentTrek.properties.information_desks.length > 0\n      ) {\n        const informationDesks: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: []\n        };\n\n        this.currentTrek.properties.information_desks.forEach(\n          (information_desk_property) => {\n            if (\n              information_desk_property.longitude &&\n              information_desk_property.latitude\n            ) {\n              informationDesks.features.push({\n                type: 'Feature',\n                geometry: {\n                  type: 'Point',\n                  coordinates: [\n                    information_desk_property.longitude,\n                    information_desk_property.latitude\n                  ]\n                },\n                properties: {\n                  type: information_desk_property.type,\n                  id: information_desk_property.id\n                }\n              });\n            }\n          }\n        );\n\n        informationDeskSource.setData(informationDesks);\n      }\n\n      const pointsReferenceSource = this.map.getSource(\n        'points-reference'\n      ) as GeoJSONSource;\n      if (\n        pointsReferenceSource &&\n        this.currentTrek.properties.points_reference &&\n        this.currentTrek.properties.points_reference.length > 0\n      ) {\n        const pointsReference: FeatureCollection = {\n          type: 'FeatureCollection',\n          features: []\n        };\n\n        this.currentTrek.properties.points_reference.forEach(\n          (point_reference, index) => {\n            pointsReference.features.push({\n              type: 'Feature',\n              geometry: {\n                type: 'Point',\n                coordinates: [point_reference[0], point_reference[1]]\n              },\n              properties: {\n                index: index + 1\n              }\n            });\n          }\n        );\n        pointsReferenceSource.setData(pointsReference);\n      }\n\n      const childrenTreksSource = this.map.getSource(\n        'children-treks'\n      ) as GeoJSONSource;\n      if (\n        childrenTreksSource &&\n        this.currentTrek.properties.children &&\n        this.currentTrek.properties.children.features.length > 0\n      ) {\n        const childrenTreks: FeatureCollection = {\n          ...this.currentTrek.properties.children\n        };\n\n        childrenTreks.features.forEach((children, index) => {\n          if (children.properties) {\n            children.properties.index = index + 1;\n          }\n        });\n\n        childrenTreksSource.setData(childrenTreks);\n      }\n    }\n  }\n\n  /**\n   * Fly to user location else fitbounds to trek\n   */\n  public async flyToUserLocation() {\n    const userLocation = await this.geolocate.getCurrentPosition();\n    if (userLocation) {\n      this.map.flyTo({\n        center: [userLocation.longitude, userLocation.latitude],\n        animate: false,\n        zoom: environment.trekZoom.zoom\n      });\n    } else {\n      const errorTranslation: any = await this.translate\n        .get('geolocate.error')\n        .toPromise();\n      // Inform user about problem\n      const alertLocation = await this.alertController.create({\n        header: errorTranslation['header'],\n        subHeader: errorTranslation['subHeader'],\n        message: errorTranslation['message'],\n        buttons: [errorTranslation['confirmButton']]\n      });\n\n      await alertLocation.present();\n    }\n  }\n\n  /**\n   * Fit to trek bounds\n   */\n  public FitToTrekBounds(): void {\n    this.map.fitBounds(\n      this.mapConfig.trekBounds,\n      environment.map.TrekfitBoundsOptions\n    );\n  }\n\n  async showLayersVisibility(event: any) {\n    const layers: {\n      name: string;\n      visibility: boolean;\n      layersName: string;\n    }[] = [\n      {\n        name: await this.translate.get('trek.details.poi.name').toPromise(),\n        visibility:\n          this.map.getLayoutProperty('pois-icon', 'visibility') === 'visible',\n        layersName: [\n          'pois-icon',\n          'cluster-text-count-pois',\n          'clusters-circle-pois'\n        ].toString()\n      },\n      {\n        name: await this.translate\n          .get('trek.details.touristicContent.name')\n          .toPromise(),\n        visibility:\n          this.map.getLayoutProperty(\n            'touristics-content-circle',\n            'visibility'\n          ) === 'visible',\n        layersName: [\n          'touristics-content-circle',\n          'touristics-content-icon',\n          'cluster-text-count-touristics-content',\n          'clusters-circle-touristics-content'\n        ].toString()\n      }\n    ];\n\n    const popover = await this.popoverController.create({\n      component: LayersVisibilityComponent,\n      event: event,\n      translucent: true,\n      componentProps: {\n        changeLayerVisibility: (checked: boolean, layersName: string) =>\n          this.changeLayerVisibility(checked, layersName),\n        layers\n      }\n    });\n    return await popover.present();\n  }\n\n  public changeLayerVisibility(checked: boolean, layersName: string): void {\n    layersName\n      .split(',')\n      .forEach((layerName) =>\n        this.map.setLayoutProperty(\n          layerName,\n          'visibility',\n          checked ? 'visible' : 'none'\n        )\n      );\n  }\n\n  public handleClustersInteraction(): void {\n    [\n      { id: 'pois', translateId: 'trek.details.poi.name' },\n      {\n        id: 'touristics-content',\n        translateId: 'trek.details.touristicContent.name'\n      }\n    ].forEach((clusterSource) => {\n      this.map.on('click', `clusters-circle-${clusterSource.id}`, (e: any) => {\n        const features = this.map.queryRenderedFeatures(e.point, {\n          layers: [`clusters-circle-${clusterSource.id}`]\n        });\n\n        const featureProperties = features[0].properties;\n        if (!!featureProperties) {\n          const clusterId = featureProperties.cluster_id;\n\n          if (this.map.getZoom() === this.mapConfig.maxZoom) {\n            // no more zoom, display features inside cluster\n            (this.map.getSource(\n              clusterSource.id\n            ) as GeoJSONSource).getClusterLeaves(\n              featureProperties.cluster_id,\n              Infinity,\n              0,\n              (\n                err: any,\n                featuresInCluster: Feature[]\n              ) => {\n                if (err) {\n                  throw err;\n                }\n                this.presentConfirmFeatures(\n                  featuresInCluster as Feature[],\n                  clusterSource\n                );\n              }\n            );\n          } else {\n            // zoom to next cluster expansion\n            (this.map.getSource(\n              clusterSource.id\n            ) as GeoJSONSource).getClusterExpansionZoom(\n              clusterId,\n              (err: any, zoom: number) => {\n                if (err) {\n                  return;\n                }\n                const coordinates = (features[0].geometry as Point).coordinates;\n                this.map.easeTo({\n                  center: [coordinates[0], coordinates[1]],\n                  zoom: zoom\n                });\n              }\n            );\n          }\n        }\n      });\n\n      // on browser only\n      // this.map.on('mouseenter', `clusters-circle-${clusterSource.id}`, () => {\n      //   this.map.getCanvas().style.cursor = 'pointer';\n      // });\n      // this.map.on('mouseleave', `clusters-circle-${clusterSource.id}`, () => {\n      //   this.map.getCanvas().style.cursor = '';\n      // });\n    });\n  }\n\n  async presentConfirmFeatures(\n    features: Feature[],\n    clusterSource: { id: string; translateId: string }\n  ) {\n    const radioPois: {\n      id: number;\n      name: string;\n      imgTypePoi: { src: string | undefined; color: string | undefined };\n    }[] = [];\n\n    if (clusterSource.id === 'pois') {\n    } else {\n    }\n\n    features.forEach((feature) => {\n      let currentType;\n      if (\n        this.poisType &&\n        feature.properties.type &&\n        clusterSource.id === 'pois'\n      ) {\n        currentType = this.poisType.values.find(\n          (poiType) => poiType.id === feature.properties.type\n        );\n      } else if (\n        this.touristicsContentCategory &&\n        feature.properties.category &&\n        clusterSource.id === 'touristics-content'\n      ) {\n        currentType = this.touristicsContentCategory.values.find(\n          (category) => category.id === feature.properties.category\n        );\n      }\n      const poi = {\n        id: feature.properties.id,\n        name: feature.properties.name,\n        imgTypePoi: {\n          src:\n            currentType && currentType.pictogram\n              ? this.commonSrc + currentType.pictogram\n              : undefined,\n          color:\n            currentType && currentType.color ? currentType.color : undefined\n        }\n      };\n\n      radioPois.push(poi);\n    });\n\n    const modal = await this.modalController.create({\n      component: SelectPoiComponent,\n      componentProps: { radioPois, themePois: clusterSource.translateId },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.selectedPoiId) {\n      const selectedFeature = features.find(\n        (feature) => feature.properties.id === data.selectedPoiId\n      );\n      if (selectedFeature) {\n        this.presentPoiDetails.emit(selectedFeature);\n      }\n    }\n  }\n\n  public async handleNavigateMode() {\n    this.navigateModeIsActive = !this.navigateModeIsActive;\n\n    if (this.navigateModeIsActive) {\n      const userLocation = await this.geolocate.getCurrentPosition();\n      if (userLocation) {\n        this.map.flyTo({\n          center: [userLocation.longitude, userLocation.latitude],\n          animate: false,\n          zoom: environment.trekZoom.maxZoom\n        });\n        this.navigate$ = this.geolocate.currentPosition$.subscribe(\n          async (coordinates) => {\n            if (coordinates) {\n              this.map.panTo(coordinates);\n            }\n          }\n        );\n        this.map.dragPan.disable();\n      } else {\n        const errorTranslation: any = await this.translate\n          .get('geolocate.error')\n          .toPromise();\n        // Inform user about problem\n        const alertLocation = await this.alertController.create({\n          header: errorTranslation['header'],\n          subHeader: errorTranslation['subHeader'],\n          message: errorTranslation['message'],\n          buttons: [errorTranslation['confirmButton']]\n        });\n\n        await alertLocation.present();\n      }\n    } else {\n      if (this.navigate$) {\n        this.navigate$.unsubscribe();\n      }\n      this.map.dragPan.enable();\n    }\n  }\n\n  public async presentInAppDisclosure(): Promise {\n    const modal = await this.modalController.create({\n      component: InAppDisclosureComponent,\n      componentProps: {},\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    await modal.onDidDismiss();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapTreksVizComponent.html":{"url":"components/MapTreksVizComponent.html","title":"component - MapTreksVizComponent","body":"\n                   \n\n\n\n  Components\n  MapTreksVizComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/map-treks-viz/map-treks-viz.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-treks-viz\n            \n\n            \n                styleUrls\n                map-treks-viz.component.scss\n            \n\n\n\n            \n                templateUrl\n                map-treks-viz.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            commonSrc\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            dataSettings\n                        \n                        \n                              \n                                Type:    any[]\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            filteredTreks\n                        \n                        \n                              \n                                Type:    any[]\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            mapConfig\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            offline\n                        \n                        \n                              \n                                Type:    Boolean\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            mapIsLoaded\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            navigateToTrek\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(settings: any, screenOrientation: any, platform: any, geolocate: any, modalController: any, alertController: any, translate: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             createMap\n                        \n                    \n    \n                    \n                        \n    createMap()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addSourcesLayersEvents\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            addSourcesLayersEvents()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentConfirmFeatures\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentConfirmFeatures(features: any[])\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public flyToUserLocation\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            flyToUserLocation()\n                        \n                    \n    \n                    \n                        \n                                Fly to user location else fitbounds to trek\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentInAppDisclosure\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentInAppDisclosure()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Private map\n                        \n                    \n                    \n                        \n                            map:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mapViz\n                        \n                    \n                    \n                        \n                            mapViz:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private markerPosition\n                        \n                    \n                    \n                        \n                            markerPosition:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private practices\n                        \n                    \n                    \n                        \n                            practices:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ScreenOrientation } from '@ionic-native/screen-orientation/ngx';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Platform, ModalController, AlertController } from '@ionic/angular';\nimport { Feature, GeoJsonProperties, Geometry, Point } from 'geojson';\nimport {\n  GeoJSONSource,\n  GeoJSONSourceRaw,\n  Map,\n  MapboxOptions,\n  Marker\n} from 'mapbox-gl';\nimport { Observable } from 'rxjs';\nimport { filter, distinctUntilChanged, throttleTime } from 'rxjs/operators';\nimport { SelectTrekComponent } from '@app/components/select-trek/select-trek.component';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\n\nimport { MinimalTrek, DataSetting, Trek } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '../abstract/unsubscribe';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { throttle } from 'lodash';\n\nconst mapboxgl = require('mapbox-gl');\n\n@Component({\n  selector: 'app-map-treks-viz',\n  templateUrl: './map-treks-viz.component.html',\n  styleUrls: ['./map-treks-viz.component.scss']\n})\nexport class MapTreksVizComponent extends UnSubscribe\n  implements OnChanges, OnDestroy {\n  private map: Map;\n  private markerPosition: Marker | undefined;\n  private practices: DataSetting;\n\n  @ViewChild('mapViz', { static: false }) mapViz: any;\n\n  @Input() public filteredTreks: MinimalTrek[] | null = null;\n  @Input() public mapConfig: MapboxOptions;\n  @Input() public dataSettings: DataSetting[];\n  @Input() public commonSrc: string;\n  @Input() public offline: Boolean;\n\n  @Output() public navigateToTrek = new EventEmitter();\n  @Output() public mapIsLoaded = new EventEmitter();\n\n  constructor(\n    private settings: SettingsService,\n    private screenOrientation: ScreenOrientation,\n    private platform: Platform,\n    private geolocate: GeolocateService,\n    private modalController: ModalController,\n    private alertController: AlertController,\n    private translate: TranslateService\n  ) {\n    super();\n    if (environment && environment.mapbox && environment.mapbox.accessToken) {\n      mapboxgl.accessToken = environment.mapbox.accessToken;\n    }\n\n    this.flyToUserLocation = throttle(this.flyToUserLocation, 3000);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const changesCurrentTreks: SimpleChange = changes.filteredTreks;\n    if (\n      changesCurrentTreks.currentValue &&\n      !changesCurrentTreks.previousValue\n    ) {\n      this.createMap();\n    } else {\n      if (this.map) {\n        const treksSource = this.map.getSource('treks-points') as GeoJSONSource;\n        if (treksSource && this.filteredTreks) {\n          treksSource.setData({\n            type: 'FeatureCollection',\n            features: this.filteredTreks\n          });\n        }\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.markerPosition) {\n      this.markerPosition.remove();\n      this.markerPosition = undefined;\n    }\n\n    if (this.map) {\n      this.map.remove();\n    }\n\n    this.geolocate.stopOnMapTracking();\n\n    super.ngOnDestroy();\n  }\n\n  createMap() {\n    if (this.mapConfig && this.mapConfig.style && this.filteredTreks) {\n      if (\n        this.offline &&\n        (this.platform.is('ios') || this.platform.is('android'))\n      ) {\n        (this.mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.commonSrc +\n          (environment.offlineMapConfig.style as any).sources[\n            'tiles-background'\n          ].tiles[0];\n      }\n\n      const coordinates: number[][] = [];\n\n      this.filteredTreks.forEach((feature) => {\n        if (\n          feature &&\n          feature.geometry &&\n          feature.geometry.coordinates &&\n          feature.geometry.coordinates[0] &&\n          feature.geometry.coordinates[1]\n        ) {\n          coordinates.push(feature.geometry.coordinates);\n        }\n      });\n\n      const bounds: any = coordinates.reduce(\n        (bounds, coord) => bounds.extend(coord),\n        new mapboxgl.LngLatBounds(coordinates[0], coordinates[0])\n      );\n\n      this.map = new mapboxgl.Map({\n        ...this.mapConfig,\n        container: 'map-treks'\n      });\n\n      this.map.fitBounds(bounds, environment.map.TreksfitBoundsOptions);\n\n      this.map.addControl(\n        new mapboxgl.NavigationControl({ showCompass: false }),\n        'top-left'\n      );\n\n      this.map.addControl(\n        new mapboxgl.ScaleControl({\n          unit: 'metric'\n        })\n      );\n\n      this.map.addControl(\n        new mapboxgl.AttributionControl({\n          compact: false,\n          customAttribution: environment.map.attributionText\n        })\n      );\n\n      if (!environment.map.enableRotation) {\n        this.map.dragRotate.disable();\n        this.map.touchZoomRotate.disableRotation();\n      }\n\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        this.subscriptions$$.push(\n          this.screenOrientation.onChange().subscribe(() => {\n            // Need to delay before resize\n            window.setTimeout(() => {\n              this.map.resize();\n            }, 50);\n          })\n        );\n      }\n\n      this.map.on('load', () => {\n        const loadImages: Observable = Observable.create(\n          (observer: any) => {\n            const practices: DataSetting | undefined = this.dataSettings.find(\n              (data) => data.id === 'practice'\n            );\n            if (practices) {\n              this.practices = practices;\n              practices.values.forEach((practice, index: number) => {\n                this.map.loadImage(\n                  `${this.commonSrc}${practice.pictogram}`,\n                  (error: any, image: any) => {\n                    this.map.addImage(practice.id.toString(), image);\n                    if (index + 1 === practices.values.length) {\n                      observer.complete();\n                    }\n                  }\n                );\n              });\n            }\n          }\n        );\n\n        this.subscriptions$$.push(\n          this.geolocate.currentPosition$\n            .pipe(\n              filter((currentPosition) => currentPosition !== null),\n              distinctUntilChanged(),\n              throttleTime(environment.backgroundGeolocation.interval)\n            )\n            .subscribe(async (coordinates: any) => {\n              if (this.markerPosition) {\n                this.markerPosition.setLngLat(coordinates);\n              } else {\n                const el = document.createElement('div');\n                const currentHeading = await this.geolocate.checkIfCanGetCurrentHeading();\n                el.className = currentHeading ? 'pulse-and-view' : 'pulse';\n\n                this.markerPosition = new mapboxgl.Marker({\n                  element: el\n                }).setLngLat(coordinates);\n                if (this.markerPosition) {\n                  this.markerPosition.addTo(this.map);\n                }\n              }\n            }),\n          this.geolocate.currentHeading$.subscribe((heading) => {\n            if (this.markerPosition && heading) {\n              (this.markerPosition as any).setRotation(heading);\n            }\n          }),\n          loadImages.subscribe({\n            complete: async () => {\n              this.addSourcesLayersEvents();\n\n              const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n              if (shouldShowInAppDisclosure) {\n                await this.presentInAppDisclosure();\n              }\n              this.geolocate.startOnMapTracking();\n            }\n          })\n        );\n      });\n    }\n  }\n\n  async addSourcesLayersEvents() {\n    this.map.addSource('treks-points', {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: this.filteredTreks\n      },\n      maxzoom: this.mapConfig.maxZoom ? this.mapConfig.maxZoom + 1 : 18,\n      cluster: true,\n      clusterRadius: 50\n    } as GeoJSONSourceRaw);\n\n    this.map.addSource('zone', {\n      type: 'geojson',\n      data: await this.settings.getZoneFromStorage()\n    });\n\n    this.map.addLayer({\n      id: 'zone',\n      source: 'zone',\n      ...(environment.map.zoneLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'zone-outline',\n      source: 'zone',\n      ...(environment.map.zoneOutlineLayerProperties as any)\n    });\n\n    this.map.addLayer({\n      id: 'clusters-circle',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterPaint\n    });\n\n    this.map.addLayer({\n      id: 'cluster-text-count',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['has', 'point_count'],\n      paint: environment.map.clusterTextPaint,\n      layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['Roboto Regular'],\n        'text-size': 16,\n        'text-offset': [0, 0.1]\n      }\n    });\n\n    const circleColorExpression: any[] = [];\n    circleColorExpression.push('match');\n    circleColorExpression.push(['get', 'practice']);\n    this.practices.values.forEach((practice) => {\n      circleColorExpression.push(practice.id);\n      circleColorExpression.push(practice.color);\n    });\n    circleColorExpression.push(environment.map.clusterPaint['circle-color']);\n\n    this.map.addLayer({\n      id: 'trek-point',\n      type: 'circle',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      paint: {\n        ...environment.map.clusterPaint,\n        'circle-color': circleColorExpression as any,\n        'circle-radius': 16\n      }\n    });\n\n    this.map.addLayer({\n      id: 'trek-point-icon',\n      type: 'symbol',\n      source: 'treks-points',\n      filter: ['!', ['has', 'point_count']],\n      layout: {\n        'icon-image': ['get', 'practice'],\n        'icon-size': environment.map.globalMapIconSize\n      }\n    });\n\n    this.map.on('click', 'clusters-circle', (e) => {\n      const features = this.map.queryRenderedFeatures(e.point, {\n        layers: ['clusters-circle']\n      });\n\n      const featureProperties = features[0].properties;\n      if (!!featureProperties) {\n        const clusterId = featureProperties.cluster_id;\n\n        if (this.map.getZoom() === this.mapConfig.maxZoom) {\n          // no more zoom, display features inside cluster\n          (this.map.getSource(\n            'treks-points'\n          ) as GeoJSONSource).getClusterLeaves(\n            featureProperties.cluster_id,\n            Infinity,\n            0,\n            (\n              err: any,\n              featuresInCluster: Feature[]\n            ) => {\n              if (err) {\n                throw err;\n              }\n              this.presentConfirmFeatures(\n                featuresInCluster as Feature[]\n              );\n            }\n          );\n        } else {\n          // zoom to next cluster expansion\n          (this.map.getSource(\n            'treks-points'\n          ) as GeoJSONSource).getClusterExpansionZoom(\n            clusterId,\n            (err: any, zoom: number) => {\n              if (err) {\n                return;\n              }\n              const coordinates = (features[0].geometry as Point).coordinates;\n              this.map.easeTo({\n                center: [coordinates[0], coordinates[1]],\n                zoom: zoom\n              });\n            }\n          );\n        }\n      }\n    });\n\n    this.map.on('click', 'trek-point', (e) => {\n      const feature = this.map.queryRenderedFeatures(e.point, {\n        layers: ['trek-point']\n      })[0];\n      if (!!feature.properties) {\n        this.navigateToTrek.emit(feature.properties.id);\n      }\n    });\n\n    // map instance for cypress test\n    this.mapViz.nativeElement.mapInstance = this.map;\n\n    this.mapIsLoaded.emit(true);\n  }\n\n  async presentConfirmFeatures(\n    features: Feature[]\n  ) {\n    const radioTreks: {\n      id: number;\n      name: string;\n      imgPractice: { src: string; color: string | undefined };\n    }[] = [];\n\n    features.forEach((feature) => {\n      const hydratedTrek = this.settings.getHydratedTrek(\n        feature as Trek,\n        this.commonSrc\n      );\n      const trek = {\n        id: hydratedTrek.properties.id,\n        name: hydratedTrek.properties.name,\n        imgPractice: {\n          src: this.commonSrc + hydratedTrek.properties.practice.pictogram,\n          color: hydratedTrek.properties.practice.color\n        }\n      };\n      radioTreks.push(trek);\n    });\n\n    const modal = await this.modalController.create({\n      component: SelectTrekComponent,\n      componentProps: { radioTreks },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data && data.selectedTrekId) {\n      this.navigateToTrek.emit(data.selectedTrekId);\n    }\n  }\n\n  /**\n   * Fly to user location else fitbounds to trek\n   */\n  public async flyToUserLocation() {\n    const userLocation = await this.geolocate.getCurrentPosition();\n    if (userLocation) {\n      this.map.flyTo({\n        center: [userLocation.longitude, userLocation.latitude],\n        animate: false,\n        zoom: environment.trekZoom.zoom\n      });\n    } else {\n      const errorTranslation: any = await this.translate\n        .get('geolocate.error')\n        .toPromise();\n      // Inform user about problem\n      const alertLocation = await this.alertController.create({\n        header: errorTranslation['header'],\n        subHeader: errorTranslation['subHeader'],\n        message: errorTranslation['message'],\n        buttons: [errorTranslation['confirmButton']]\n      });\n\n      await alertLocation.present();\n    }\n  }\n\n  public async presentInAppDisclosure(): Promise {\n    const modal = await this.modalController.create({\n      component: InAppDisclosureComponent,\n      componentProps: {},\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    await modal.onDidDismiss();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MoreItemPage.html":{"url":"components/MoreItemPage.html","title":"component - MoreItemPage","body":"\n                   \n\n\n\n  Components\n  MoreItemPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/more/more-item/more-item.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more-item\n            \n\n            \n                styleUrls\n                more-item.page.scss\n            \n\n\n\n            \n                templateUrl\n                more-item.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(route: any, router: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             refresh\n                        \n                    \n    \n                    \n                        \n    refresh()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             connectionError\n                        \n                    \n                    \n                        \n                            connectionError:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             moreItem\n                        \n                    \n                    \n                        \n                            moreItem:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             moreItemId\n                        \n                    \n                    \n                        \n                            moreItemId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationItem } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more-item',\n  templateUrl: './more-item.page.html',\n  styleUrls: ['./more-item.page.scss']\n})\nexport class MoreItemPage extends UnSubscribe implements OnInit, OnDestroy {\n  moreItem: InformationItem;\n  moreItemId: number;\n  connectionError = false;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data) => {\n        const item = data['item'] as (InformationItem | 'connectionError');\n        if (item === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreItem = item;\n        }\n      })\n    );\n  }\n\n  refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorePage.html":{"url":"components/MorePage.html","title":"component - MorePage","body":"\n                   \n\n\n\n  Components\n  MorePage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/more/more.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-more\n            \n\n            \n                styleUrls\n                more.page.scss\n            \n\n\n\n            \n                templateUrl\n                more.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(route: any, router: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public refresh\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            refresh()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public appName\n                        \n                    \n                    \n                        \n                            appName:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             connectionError\n                        \n                    \n                    \n                        \n                            connectionError:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             moreInformationsIntro\n                        \n                    \n                    \n                        \n                            moreInformationsIntro:     any[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '@env/environment';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InformationIntro } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-more',\n  templateUrl: './more.page.html',\n  styleUrls: ['./more.page.scss']\n})\nexport class MorePage extends UnSubscribe implements OnInit {\n  moreInformationsIntro: InformationIntro[];\n  connectionError = false;\n  public appName: string = environment.appName;\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const items: InformationIntro[] | 'connectionError' = data.items;\n        if (items === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          this.moreInformationsIntro = items;\n        }\n      })\n    );\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiComponent.html":{"url":"components/PoiComponent.html","title":"component - PoiComponent","body":"\n                   \n\n\n\n  Components\n  PoiComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/poi/poi.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi\n            \n\n            \n                styleUrls\n                poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                poi.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            commonSrc\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            offline\n                        \n                        \n                            \n                              Default value: false\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            poi\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            typePois\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(offlineTreks: any, onlineTreks: any)\n                        \n                    \n    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public baseUrl\n                        \n                    \n                    \n                        \n                            baseUrl:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             offlineTreks\n                        \n                    \n                    \n                        \n                            offlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onlineTreks\n                        \n                    \n                    \n                        \n                            onlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public picture\n                        \n                    \n                    \n                        \n                            picture:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public typeImgSrc\n                        \n                    \n                    \n                        \n                            typeImgSrc:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { Picture, Poi, Trek, DataSetting } from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-poi',\n  templateUrl: './poi.component.html',\n  styleUrls: ['./poi.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PoiComponent implements OnChanges {\n  @Input() public poi: Poi;\n  @Input() public offline = false;\n  @Input() public commonSrc: string;\n  @Input() public typePois: DataSetting | undefined;\n\n  public baseUrl = environment.onlineBaseUrl;\n  public picture: Picture | null = null;\n  public typeImgSrc: string | null = null;\n\n  constructor(\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.poi) {\n      if (this.typePois && this.poi.properties.type) {\n        const currentTypePoi = this.typePois.values.find(\n          (typePoi) => typePoi.id === this.poi.properties.type\n        );\n        if (currentTypePoi) {\n          this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n        }\n      }\n\n      if (this.poi.properties.pictures.length > 0) {\n        this.picture = this.poi.properties.pictures[0];\n        if (this.offline) {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.offlineTreks.getTrekImageSrc(\n              {} as Trek,\n              this.poi.properties.pictures[0]\n            )\n          };\n        } else {\n          this.picture = {\n            ...this.poi.properties.pictures[0],\n            url: this.onlineTreks.getTrekImageSrc(\n              {} as Trek,\n              this.poi.properties.pictures[0]\n            )\n          };\n        }\n      } else {\n        this.picture = null;\n      }\n    }\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PoiDetailsComponent.html":{"url":"components/PoiDetailsComponent.html","title":"component - PoiDetailsComponent","body":"\n                   \n\n\n\n  Components\n  PoiDetailsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/poi-details/poi-details.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poi-details\n            \n\n            \n                styleUrls\n                poi-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                poi-details.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: any, navParams: any, settings: any, offlineTreks: any, onlineTreks: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewWillEnter\n                        \n                    \n    \n                    \n                        \n    ionViewWillEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public baseUrl\n                        \n                    \n                    \n                        \n                            baseUrl:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public commonSrc\n                        \n                    \n                    \n                        \n                            commonSrc:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             modalCtrl\n                        \n                    \n                    \n                        \n                            modalCtrl:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navParams\n                        \n                    \n                    \n                        \n                            navParams:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public offline\n                        \n                    \n                    \n                        \n                            offline:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             offlineTreks\n                        \n                    \n                    \n                        \n                            offlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onlineTreks\n                        \n                    \n                    \n                        \n                            onlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public picture\n                        \n                    \n                    \n                        \n                            picture:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public poi\n                        \n                    \n                    \n                        \n                            poi:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public poiImg\n                        \n                    \n                    \n                        \n                            poiImg:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             settings\n                        \n                    \n                    \n                        \n                            settings:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public settingsSub\n                        \n                    \n                    \n                        \n                            settingsSub:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public typeImgSrc\n                        \n                    \n                    \n                        \n                            typeImgSrc:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { Poi, Picture, Trek } from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-poi-details',\n  templateUrl: './poi-details.component.html',\n  styleUrls: ['./poi-details.component.scss']\n})\nexport class PoiDetailsComponent {\n  public offline = false;\n  public baseUrl = environment.onlineBaseUrl;\n  public poi: Poi;\n  public poiImg = '';\n  public typeImgSrc: string | null = null;\n  public settingsSub: Subscription;\n  public picture: Picture | null = null;\n  public commonSrc: string;\n\n  constructor(\n    public modalCtrl: ModalController,\n    public navParams: NavParams,\n    public settings: SettingsService,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService\n  ) {}\n\n  ionViewWillEnter() {\n    this.poi = this.navParams.get('poi');\n    this.offline = this.navParams.get('offline');\n    this.commonSrc = this.navParams.get('commonSrc');\n\n    if (\n      this.poi &&\n      this.poi.properties &&\n      this.poi.properties.pictures &&\n      this.poi.properties.pictures.length > 0 &&\n      this.poi.properties.pictures[0].url\n    ) {\n      this.picture = this.poi.properties.pictures[0];\n      if (this.offline) {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.offlineTreks.getTrekImageSrc(\n            {} as Trek,\n            this.poi.properties.pictures[0]\n          )\n        };\n      } else {\n        this.picture = {\n          ...this.poi.properties.pictures[0],\n          url: this.onlineTreks.getTrekImageSrc(\n            {} as Trek,\n            this.poi.properties.pictures[0]\n          )\n        };\n      }\n    } else {\n      this.picture = null;\n    }\n\n    this.settingsSub = this.settings.data$.subscribe((settings) => {\n      if (settings) {\n        const typePois = settings.find((setting) => setting.id === 'poi_types');\n\n        if (typePois && this.poi.properties.type) {\n          const currentTypePoi = typePois.values.find(\n            (typePoi) => typePoi.id === this.poi.properties.type\n          );\n          if (currentTypePoi) {\n            this.typeImgSrc = this.commonSrc + currentTypePoi.pictogram;\n          }\n        }\n      }\n    });\n  }\n\n  close(): void {\n    this.settingsSub.unsubscribe();\n    this.modalCtrl.dismiss();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressComponent.html":{"url":"components/ProgressComponent.html","title":"component - ProgressComponent","body":"\n                   \n\n\n\n  Components\n  ProgressComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/progress/progress.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.Default\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress\n            \n\n            \n                styleUrls\n                progress.component.scss\n            \n\n\n\n            \n                templateUrl\n                progress.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(offlineTreks: any, ref: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewWillEnter\n                        \n                    \n    \n                    \n                        \n    ionViewWillEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ionViewWillLeave\n                        \n                    \n    \n                    \n                        \n    ionViewWillLeave()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public currentProgress\n                        \n                    \n                    \n                        \n                            currentProgress:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private currentProgress$\n                        \n                    \n                    \n                        \n                            currentProgress$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             offlineTreks\n                        \n                    \n                    \n                        \n                            offlineTreks:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-progress',\n  changeDetection: ChangeDetectionStrategy.Default,\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss']\n})\nexport class ProgressComponent {\n  public currentProgress: number;\n  private currentProgress$: Subscription;\n\n  constructor(\n    public offlineTreks: OfflineTreksService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  ionViewWillEnter(): void {\n    this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(\n      (val) => {\n        this.currentProgress = val;\n        this.ref.detectChanges();\n      }\n    );\n  }\n\n  ionViewWillLeave(): void {\n    this.currentProgress$.unsubscribe();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n  Components\n  SearchComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/search/search.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                    \n                        SearchTreksService\n                    \n                \n            \n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                search.component.scss\n            \n\n\n\n            \n                templateUrl\n                search.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalCtrl: any, onlineTreks: any, offlineTreks: any, searchTreks: any, navParams: any, platform: any, ref: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewDidEnter\n                        \n                    \n    \n                    \n                        \n    ionViewDidEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public close\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            close()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public search\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            search(searchValue: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public navigateToTrek\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            navigateToTrek(id: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public trackTrek\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            trackTrek(index: number, element: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     number\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public expandTreks\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            expandTreks(infiniteScroll: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public currentMaxTreks\n                        \n                    \n                    \n                        \n                            currentMaxTreks:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 30\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public currentSearchValue\n                        \n                    \n                    \n                        \n                            currentSearchValue:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public filteredTreks\n                        \n                    \n                    \n                        \n                            filteredTreks:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private treks\n                        \n                    \n                    \n                        \n                            treks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public treksByStep\n                        \n                    \n                    \n                        \n                            treksByStep:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 30\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public viewIsLoad\n                        \n                    \n                    \n                        \n                            viewIsLoad:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n    \n\n        \n            import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\n\nimport { MinimalTrek, MinimalTreks, Trek } from '@app/interfaces/interfaces';\nimport { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\n\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { ModalController, NavParams, Platform } from '@ionic/angular';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  providers: [SearchTreksService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent extends UnSubscribe implements OnInit {\n  public filteredTreks: MinimalTrek[] = [];\n  public currentSearchValue: string;\n  public viewIsLoad = false;\n  private treks: MinimalTreks | null = null;\n  public treksByStep = 30;\n  public currentMaxTreks = 30;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private searchTreks: SearchTreksService,\n    private navParams: NavParams,\n    private platform: Platform,\n    private ref: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  ionViewDidEnter(): void {\n    const isOnline = this.navParams.get('isOnline');\n    const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n    this.subscriptions$$.push(\n      this.platform.backButton.subscribeWithPriority(99999, () => {\n        this.close();\n      }),\n      treksTool.treks$.subscribe((treks) => {\n        this.treks = treks;\n        if (this.treks) {\n          this.filteredTreks = this.searchTreks.search(this.treks.features, '');\n        }\n        this.viewIsLoad = true;\n        this.ref.detectChanges();\n      })\n    );\n  }\n\n  public close(): void {\n    this.modalCtrl.dismiss();\n  }\n\n  public search(searchValue: string): void {\n    this.currentSearchValue = searchValue;\n    if (this.treks) {\n      this.filteredTreks = this.searchTreks.search(\n        this.treks.features,\n        searchValue\n      );\n    } else {\n      this.filteredTreks = [];\n    }\n  }\n\n  public navigateToTrek(id: number) {\n    this.modalCtrl.dismiss(id);\n  }\n\n  public trackTrek(index: number, element: Trek): number | null {\n    return element ? element.properties.id : null;\n  }\n\n  public expandTreks(infiniteScroll: any) {\n    if (this.currentMaxTreks  this.filteredTreks.length) {\n        this.currentMaxTreks = this.filteredTreks.length;\n      } else {\n        this.currentMaxTreks += this.treksByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectFilterComponent.html":{"url":"components/SelectFilterComponent.html","title":"component - SelectFilterComponent","body":"\n                   \n\n\n\n  Components\n  SelectFilterComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/select-filter/select-filter.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-filter\n            \n\n            \n                styleUrls\n                select-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                select-filter.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            commonSrc\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            filter\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalController: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewDidEnter\n                        \n                    \n    \n                    \n                        \n    ionViewDidEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public cancel\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            cancel()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public select\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            select()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public expandFilterValues\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            expandFilterValues(infiniteScroll: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public trackFilterValues\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            trackFilterValues(index: number, element: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     number\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public valueChanged\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            valueChanged(event: { checked: boolean; value: any; })\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public search\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            search(searchValue: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public searchValuesInFilter\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            searchValuesInFilter(filter: any, searchValue: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any[]\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             currentMaxFilterValues\n                        \n                    \n                    \n                        \n                            currentMaxFilterValues:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 20\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             filterValuesByStep\n                        \n                    \n                    \n                        \n                            filterValuesByStep:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 20\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             selectedItems\n                        \n                    \n                    \n                        \n                            selectedItems:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             temporaryFilter\n                        \n                    \n                    \n                        \n                            temporaryFilter:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             valuesToDisplay\n                        \n                    \n                    \n                        \n                            valuesToDisplay:     any[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Filter, FilterValue } from '@app/interfaces/interfaces';\nimport { deburr } from 'lodash';\n\n@Component({\n  selector: 'app-select-filter',\n  templateUrl: './select-filter.component.html',\n  styleUrls: ['./select-filter.component.scss']\n})\nexport class SelectFilterComponent implements OnInit {\n  @Input() public filter: Filter;\n  @Input() public commonSrc: string;\n  selectedItems: any[];\n  currentMaxFilterValues = 20;\n  filterValuesByStep = 20;\n  temporaryFilter: Filter;\n  valuesToDisplay: FilterValue[];\n\n  constructor(private modalController: ModalController) {}\n\n  public ngOnInit(): void {}\n\n  ionViewDidEnter(): void {\n    this.temporaryFilter = this.filter;\n    this.valuesToDisplay = [...this.filter.values];\n  }\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ temporaryFilter: this.temporaryFilter });\n  }\n\n  public expandFilterValues(infiniteScroll: any): void {\n    if (this.currentMaxFilterValues \n        this.valuesToDisplay.length\n      ) {\n        this.currentMaxFilterValues = this.valuesToDisplay.length;\n      } else {\n        this.currentMaxFilterValues += this.filterValuesByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n\n  public trackFilterValues(index: number, element: FilterValue): number | null {\n    return element ? element.id : null;\n  }\n\n  public valueChanged(event: { checked: boolean; value: FilterValue }): void {\n    const filterValue = this.temporaryFilter.values.find(\n      (value) => value.id === event.value.id\n    );\n    if (filterValue) {\n      filterValue.checked = event.checked;\n    }\n  }\n\n  public search(searchValue: string): void {\n    if (searchValue) {\n      this.valuesToDisplay = this.searchValuesInFilter(\n        this.filter,\n        searchValue\n      );\n    } else {\n      this.valuesToDisplay = [...this.filter.values];\n    }\n    this.currentMaxFilterValues = this.filterValuesByStep;\n  }\n\n  public searchValuesInFilter(\n    filter: Filter,\n    searchValue: string\n  ): FilterValue[] {\n    if (!filter) {\n      return [];\n    }\n\n    if (!!!searchValue) {\n      return filter.values.sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    }\n    searchValue = searchValue.toLowerCase();\n    return filter.values\n      .filter((value) => {\n        return deburr(value.name.toLowerCase()).startsWith(searchValue);\n      })\n      .sort(function(a, b) {\n        return a.name.localeCompare(b.name);\n      });\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectPoiComponent.html":{"url":"components/SelectPoiComponent.html","title":"component - SelectPoiComponent","body":"\n                   \n\n\n\n  Components\n  SelectPoiComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/select-poi/select-poi.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-poi\n            \n\n            \n                styleUrls\n                select-poi.component.scss\n            \n\n\n\n            \n                templateUrl\n                select-poi.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            radioPois\n                        \n                        \n                              \n                                Type:    { id: number; name: string; imgPoi: { src: string; color: string; }; }[]\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            themePois\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalController: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public cancel\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            cancel()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public select\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            select()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public selectedPoiChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            selectedPoiChange(evt: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             selectedPoiId\n                        \n                    \n                    \n                        \n                            selectedPoiId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-select-poi',\n  templateUrl: './select-poi.component.html',\n  styleUrls: ['./select-poi.component.scss']\n})\nexport class SelectPoiComponent implements OnInit {\n  @Input() public themePois: string;\n  @Input() public radioPois: {\n    id: number;\n    name: string;\n    imgPoi: { src: string; color: string | undefined };\n  }[];\n  selectedPoiId: number;\n\n  constructor(private modalController: ModalController) {}\n\n  ngOnInit() {}\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ selectedPoiId: this.selectedPoiId });\n  }\n\n  public selectedPoiChange(evt: any): void {\n    this.selectedPoiId = evt.detail.value;\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectTrekComponent.html":{"url":"components/SelectTrekComponent.html","title":"component - SelectTrekComponent","body":"\n                   \n\n\n\n  Components\n  SelectTrekComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/select-trek/select-trek.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-trek\n            \n\n            \n                styleUrls\n                select-trek.component.scss\n            \n\n\n\n            \n                templateUrl\n                select-trek.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            radioTreks\n                        \n                        \n                              \n                                Type:    { id: number; name: string; imgPractice: { src: string; color: string; }; }[]\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(modalController: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public cancel\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            cancel()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public select\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            select()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public selectedTrekChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            selectedTrekChange(evt: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             selectedTrekId\n                        \n                    \n                    \n                        \n                            selectedTrekId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-select-trek',\n  templateUrl: './select-trek.component.html',\n  styleUrls: ['./select-trek.component.scss']\n})\nexport class SelectTrekComponent implements OnInit {\n  @Input() public radioTreks: {\n    id: number;\n    name: string;\n    imgPractice: { src: string; color: string | undefined };\n  }[];\n  selectedTrekId: number;\n\n  constructor(private modalController: ModalController) {}\n\n  ngOnInit() {}\n\n  public cancel(): void {\n    this.modalController.dismiss();\n  }\n\n  public select(): void {\n    this.modalController.dismiss({ selectedTrekId: this.selectedTrekId });\n  }\n\n  public selectedTrekChange(evt: any): void {\n    this.selectedTrekId = evt.detail.value;\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n  Components\n  TabsPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                tabs.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(platform: any, router: any, location: any)\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss']\n})\nexport class TabsPage {\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private location: Location\n  ) {\n    this.platform.backButton.subscribeWithPriority(9999, () => {\n      const url = this.router.url;\n      if (\n        url !== '/app/tabs/treks' &&\n        url !== '/app/tabs/treks-offline' &&\n        url !== '/app/tabs/more'\n      ) {\n        this.location.back();\n      }\n    });\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekCardComponent.html":{"url":"components/TrekCardComponent.html","title":"component - TrekCardComponent","body":"\n                   \n\n\n\n  Components\n  TrekCardComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/trek-card/trek-card.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-card\n            \n\n            \n                styleUrls\n                trek-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                trek-card.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            isStage\n                        \n                        \n                            \n                              Default value: false\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            numStage\n                        \n                        \n                            \n                              Default value: 0\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            offline\n                        \n                        \n                            \n                              Default value: false\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            parentId\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: undefined\n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            showAllData\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            trek\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(alertController: any, loadingController: any, offlineTreks: any, onlineTreks: any, settings: any, translate: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public clickDeleteConfirm\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            clickDeleteConfirm($event: Event)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private deleteTrek\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            deleteTrek()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private presentDeleteConfirm\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentDeleteConfirm(isAlert: boolean, alertMsg: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public hydratedTrek\n                        \n                    \n                    \n                        \n                            hydratedTrek:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public imgPracticeSrc\n                        \n                    \n                    \n                        \n                            imgPracticeSrc:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public imgSrc\n                        \n                    \n                    \n                        \n                            imgSrc:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             offlineTreks\n                        \n                    \n                    \n                        \n                            offlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onlineTreks\n                        \n                    \n                    \n                        \n                            onlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public routerLink\n                        \n                    \n                    \n                        \n                            routerLink:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             settings\n                        \n                    \n                    \n                        \n                            settings:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  Input,\n  OnInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Trek, HydratedTrek, Picture } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-trek-card',\n  templateUrl: './trek-card.component.html',\n  styleUrls: ['./trek-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrekCardComponent implements OnInit {\n  @Input() public trek: Trek;\n  @Input() public offline = false;\n  @Input() public showAllData: boolean;\n  @Input() public isStage = false;\n  @Input() public numStage = 0;\n  @Input() public parentId: number | undefined = undefined;\n\n  public hydratedTrek: HydratedTrek;\n  public imgSrc: string;\n  public routerLink: string;\n  public imgPracticeSrc: string;\n\n  constructor(\n    private alertController: AlertController,\n    private loadingController: LoadingController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    public settings: SettingsService,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    const trekService = this.offline ? this.offlineTreks : this.onlineTreks;\n    this.hydratedTrek = this.settings.getHydratedTrek(\n      this.trek,\n      trekService.getCommonImgSrc()\n    );\n    if (this.offline) {\n      this.imgSrc = this.offlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.offlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram\n          } as Picture\n        );\n      }\n    } else {\n      this.imgSrc = this.onlineTreks.getTrekImageSrc(this.trek);\n      if (this.hydratedTrek.properties.practice) {\n        this.imgPracticeSrc = this.onlineTreks.getTrekImageSrc(\n          {} as Trek,\n          {\n            url: this.hydratedTrek.properties.practice.pictogram\n          } as Picture\n        );\n      }\n    }\n\n    if (this.isStage) {\n      this.routerLink = `/app/tabs/treks${\n        this.offline ? '-offline' : ''\n      }/trek-details/${this.parentId}/${this.trek.properties.id}`;\n    } else {\n      this.routerLink = `/app/tabs/treks${\n        this.offline ? '-offline' : ''\n      }/trek-details/${this.trek.properties.id}`;\n    }\n  }\n\n  public clickDeleteConfirm($event: Event) {\n    $event.stopPropagation();\n    this.presentDeleteConfirm();\n  }\n\n  private async deleteTrek() {\n    const translationTrekCard = await this.translate\n      .get('trekCard')\n      .toPromise();\n\n    const loader = await this.loadingController.create({\n      message: translationTrekCard.deletionInProgress\n    });\n    await loader.present();\n\n    this.offlineTreks\n      .removeTrek(\n        this.isStage && this.parentId ? this.parentId : this.trek.properties.id,\n        true\n      )\n      .subscribe(\n        () => {},\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(\n            true,\n            translationTrekCard.errorWhileDeleting\n          );\n        },\n        () => {\n          loader.dismiss();\n          this.presentDeleteConfirm(true, translationTrekCard.trekIsDelete);\n        }\n      );\n  }\n\n  private async presentDeleteConfirm(isAlert?: boolean, alertMsg?: string) {\n    const translationTrekCard = await this.translate\n      .get('trekCard')\n      .toPromise();\n    const deleteConfirm = await this.alertController.create({\n      header: translationTrekCard.deleteTitle,\n      message: isAlert ? alertMsg : translationTrekCard.askDelete,\n      buttons: isAlert\n        ? [translationTrekCard.confirmButton]\n        : [\n            {\n              text: translationTrekCard.cancelButton,\n              role: 'cancel',\n              cssClass: 'secondary'\n            },\n            {\n              text: translationTrekCard.deleteLabel,\n              handler: () => {\n                this.deleteTrek();\n              }\n            }\n          ]\n    });\n\n    await deleteConfirm.present();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekDetailsPage.html":{"url":"components/TrekDetailsPage.html","title":"component - TrekDetailsPage","body":"\n                   \n\n\n\n  Components\n  TrekDetailsPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/trek-details/trek-details.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-details\n            \n\n            \n                styleUrls\n                trek-details.page.scss\n            \n\n\n\n            \n                templateUrl\n                trek-details.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(onlineTreks: any, offlineTreks: any, route: any, alertController: any, translate: any, router: any, modalController: any, socialSharing: any, platform: any, settings: any, firebaseAnalytics: any, ref: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewDidEnter\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            ionViewDidEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             downloadTrek\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            downloadTrek()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentDownloadConfirm\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentDownloadConfirm(isAlert: boolean, success: boolean)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public getPictureSrc\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            getPictureSrc(picture: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     string\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public refresh\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            refresh()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public shareTrek\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            shareTrek()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public scrollToStages\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            scrollToStages(stages: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public goToStep\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            goToStep(stepId: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     string\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public apiUrl\n                        \n                    \n                    \n                        \n                            apiUrl:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public baseUrl\n                        \n                    \n                    \n                        \n                            baseUrl:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public commonSrc\n                        \n                    \n                    \n                        \n                            commonSrc:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public connectionError\n                        \n                    \n                    \n                        \n                            connectionError:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public currentPois\n                        \n                    \n                    \n                        \n                            currentPois:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public currentTrek\n                        \n                    \n                    \n                        \n                            currentTrek:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public isAvailableOffline\n                        \n                    \n                    \n                        \n                            isAvailableOffline:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public isItinerancy\n                        \n                    \n                    \n                        \n                            isItinerancy:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public isStage\n                        \n                    \n                    \n                        \n                            isStage:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public mapLink\n                        \n                    \n                    \n                        \n                            mapLink:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             modalController\n                        \n                    \n                    \n                        \n                            modalController:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public nextTrek\n                        \n                    \n                    \n                        \n                            nextTrek:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public offline\n                        \n                    \n                    \n                        \n                            offline:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public originalTrek\n                        \n                    \n                    \n                        \n                            originalTrek:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public parentTrek\n                        \n                    \n                    \n                        \n                            parentTrek:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public poiCollapseInitialSize\n                        \n                    \n                    \n                        \n                            poiCollapseInitialSize:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public previousTrek\n                        \n                    \n                    \n                        \n                            previousTrek:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             settings\n                        \n                    \n                    \n                        \n                            settings:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public showImgRulesIfParkCentered\n                        \n                    \n                    \n                        \n                            showImgRulesIfParkCentered:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public stageIndex\n                        \n                    \n                    \n                        \n                            stageIndex:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public touristicCategoriesWithFeatures\n                        \n                    \n                    \n                        \n                            touristicCategoriesWithFeatures:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public touristicContentCollapseInitialSize\n                        \n                    \n                    \n                        \n                            touristicContentCollapseInitialSize:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public touristicContents\n                        \n                    \n                    \n                        \n                            touristicContents:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public touristicEvents\n                        \n                    \n                    \n                        \n                            touristicEvents:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public treksTool\n                        \n                    \n                    \n                        \n                            treksTool:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public treksUrl\n                        \n                    \n                    \n                        \n                            treksUrl:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public typePois\n                        \n                    \n                    \n                        \n                            typePois:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {\n  Component,\n  OnDestroy,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { AlertController, Platform } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport {\n  HydratedTrek,\n  Picture,\n  Poi,\n  Trek,\n  TrekContext,\n  TreksService,\n  TouristicEvent,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  DataSetting\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { ModalController } from '@ionic/angular';\nimport { ProgressComponent } from '@app/components/progress/progress.component';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\n@Component({\n  selector: 'app-trek-details',\n  templateUrl: './trek-details.page.html',\n  styleUrls: ['./trek-details.page.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrekDetailsPage extends UnSubscribe implements OnInit, OnDestroy {\n  public originalTrek: Trek;\n  public currentTrek: HydratedTrek;\n  public offline = false;\n  public currentPois: Poi[];\n  public touristicEvents: TouristicEvent[];\n  public touristicContents: TouristicContents;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public baseUrl = environment.onlineBaseUrl;\n  public showImgRulesIfParkCentered =\n    environment.trekDetails.showImgRulesIfParkCentered;\n  public mapLink: string;\n  public treksTool: TreksService; // the accurate treks service\n  public treksUrl = '';\n  public connectionError = false;\n  public commonSrc: string;\n  public typePois: DataSetting | undefined;\n  public poiCollapseInitialSize = environment.poiCollapseInitialSize;\n  public touristicContentCollapseInitialSize =\n    environment.touristicContentCollapseInitialSize;\n  public isItinerancy = false;\n  public isStage = false;\n  public stageIndex: number;\n  public parentTrek: Trek;\n  public previousTrek: Trek;\n  public nextTrek: Trek;\n  public isAvailableOffline = false;\n  public apiUrl = `${environment.onlineBaseUrl.replace(\n    'mobile',\n    'api'\n  )}/${this.translate.getDefaultLang()}/treks`;\n\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private route: ActivatedRoute,\n    private alertController: AlertController,\n    private translate: TranslateService,\n    private router: Router,\n    public modalController: ModalController,\n    private socialSharing: SocialSharing,\n    private platform: Platform,\n    public settings: SettingsService,\n    private firebaseAnalytics: FirebaseAnalytics,\n    private ref: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n  }\n\n  async ionViewDidEnter() {\n    this.subscriptions$$.push(\n      this.route.data.subscribe(async (data: Data) => {\n        const context: TrekContext | null | 'connectionError' = data.context;\n        if (context === 'connectionError') {\n          this.connectionError = true;\n        } else {\n          this.connectionError = false;\n          if (context !== null) {\n            this.isItinerancy = !!(\n              context.trek.properties.children &&\n              context.trek.properties.children.features.length > 0\n            );\n\n            this.offline = context.offline;\n            this.currentTrek = context.trek;\n            this.originalTrek = context.originalTrek;\n            this.currentPois = context.pois.features;\n            this.treksTool = context.treksTool;\n            this.touristicContents = context.touristicContents;\n            this.touristicCategoriesWithFeatures =\n              context.touristicCategoriesWithFeatures;\n            this.touristicEvents = context.touristicEvents.features;\n            this.treksUrl = this.treksTool.getTreksUrl();\n            this.commonSrc = context.commonSrc;\n            this.mapLink = context.treksTool.getTrekMapUrl(\n              context.trek.properties.id,\n              context.parentTrek ? context.parentTrek.properties.id : undefined\n            );\n            this.isAvailableOffline = await this.offlineTreks.trekIsAvailableOffline(\n              context.trek.properties.id\n            );\n            this.isStage = context.isStage;\n            if (context.isStage && context.parentTrek) {\n              this.parentTrek = context.parentTrek;\n\n              this.stageIndex = this.parentTrek.properties.children.features.findIndex(\n                (children) =>\n                  children.properties.id === this.currentTrek.properties.id\n              );\n\n              if (this.stageIndex > 0) {\n                this.previousTrek = this.parentTrek.properties.children.features[\n                  this.stageIndex - 1\n                ];\n              }\n\n              if (\n                this.stageIndex  {\n        if (settings) {\n          this.typePois = settings.find(\n            (setting) => setting.id === 'poi_types'\n          );\n          this.ref.markForCheck();\n        }\n      })\n    );\n    if (this.currentTrek) {\n      this.isAvailableOffline = await this.offlineTreks.trekIsAvailableOffline(\n        this.currentTrek.properties.id\n      );\n    }\n  }\n\n  async downloadTrek() {\n    const simpleTrek = this.onlineTreks.getMinimalTrekById(\n      !this.isStage\n        ? this.currentTrek.properties.id\n        : this.parentTrek.properties.id\n    );\n    const pois: any = !this.isStage\n      ? this.currentPois\n      : await this.onlineTreks\n          .getPoisForTrekById(this.parentTrek.properties.id)\n          .toPromise();\n    const touristicContents: any = !this.isStage\n      ? this.currentPois\n      : await this.onlineTreks\n          .getTouristicContentsForTrekById(this.parentTrek.properties.id)\n          .toPromise();\n\n    if (!simpleTrek) {\n      return;\n    }\n\n    this.offlineTreks.createNewProgressStream();\n\n    const modalProgress = await this.modalController.create({\n      component: ProgressComponent,\n      cssClass: 'progress-modal'\n    });\n    await modalProgress.present();\n\n    this.offlineTreks\n      .saveTrek(\n        simpleTrek,\n        !this.isStage ? this.originalTrek : this.parentTrek,\n        pois,\n        touristicContents\n      )\n      .subscribe(\n        async (saveResult) => {\n          modalProgress.dismiss();\n          this.presentDownloadConfirm(true, saveResult);\n          if (\n            (this.platform.is('ios') || this.platform.is('android')) &&\n            environment.useFirebase\n          ) {\n            this.firebaseAnalytics.logEvent(\n              `Download ${this.currentTrek.properties.name}`,\n              {\n                download: this.currentTrek.properties.name\n              }\n            );\n          }\n          this.isAvailableOffline = await this.offlineTreks.trekIsAvailableOffline(\n            this.currentTrek.properties.id\n          );\n          this.ref.markForCheck();\n        },\n        (saveResult) => {\n          modalProgress.dismiss();\n          this.presentDownloadConfirm(true, saveResult);\n        }\n      );\n  }\n\n  public async presentDownloadConfirm(isAlert?: boolean, success?: boolean) {\n    await this.translate.get('trek.downloadAlert').subscribe(async (trad) => {\n      const downloadConfirm = await this.alertController.create({\n        header: trad.titleTrek,\n        message: isAlert\n          ? success\n            ? trad.success\n            : trad.error\n          : !this.isItinerancy && !this.isStage\n          ? trad.contentTrek\n          : trad.contentItinerancy,\n        buttons: isAlert\n          ? [trad.confirmError]\n          : [\n              {\n                text: trad.cancelButton,\n                role: 'cancel',\n                cssClass: 'secondary'\n              },\n              {\n                text: trad.confirmButton,\n                handler: () => {\n                  this.downloadTrek();\n                }\n              }\n            ]\n      });\n\n      await downloadConfirm.present();\n    });\n  }\n\n  public getPictureSrc(picture: Picture): string {\n    return this.treksTool.getTrekImageSrc(this.originalTrek, picture);\n  }\n\n  public refresh(): void {\n    this.router.navigate([this.router.url]);\n  }\n\n  public shareTrek(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const onlineUrl = this.baseUrl.replace('mobile', '');\n      const sharingOptions = {\n        message: this.currentTrek.properties.name,\n        subject: environment.appName,\n        url: `${onlineUrl}${this.currentTrek.properties.practice.slug}/${this.currentTrek.properties.slug}/`\n      };\n      this.socialSharing.shareWithOptions(sharingOptions).then(() => {\n        if (\n          (this.platform.is('ios') || this.platform.is('android')) &&\n          environment.useFirebase\n        ) {\n          this.firebaseAnalytics.logEvent(\n            `Share ${this.currentTrek.properties.name}`,\n            {\n              name: this.currentTrek.properties.name\n            }\n          );\n        }\n      });\n    }\n  }\n\n  public scrollToStages(stages: any): void {\n    stages.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n      inline: 'nearest'\n    });\n  }\n\n  public goToStep(stepId: number): string {\n    return `/app/tabs/treks${this.offline ? '-offline' : ''}/trek-details/${\n      this.parentTrek.properties.id\n    }/${stepId}`;\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrekMapPage.html":{"url":"components/TrekMapPage.html","title":"component - TrekMapPage","body":"\n                   \n\n\n\n  Components\n  TrekMapPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/trek-map/trek-map.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trek-map\n            \n\n            \n                styleUrls\n                trek-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                trek-map.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(loading: any, modalController: any, route: any, router: any, settings: any, platform: any, popoverCtrl: any, location: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewDidEnter\n                        \n                    \n    \n                    \n                        \n    ionViewDidEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentPoiDetails\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentPoiDetails(poi: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentInformationDeskDetails\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentInformationDeskDetails(informationDesk: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public mapIsLoaded\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            mapIsLoaded(event: Event)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public refresh\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            refresh()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public navigateToChildren\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            navigateToChildren(id: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public commonSrc\n                        \n                    \n                    \n                        \n                            commonSrc:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public connectionError\n                        \n                    \n                    \n                        \n                            connectionError:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public currentPois\n                        \n                    \n                    \n                        \n                            currentPois:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public currentTrek\n                        \n                    \n                    \n                        \n                            currentTrek:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public loader\n                        \n                    \n                    \n                        \n                            loader:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public mapConfig\n                        \n                    \n                    \n                        \n                            mapConfig:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public modalPoiDetails\n                        \n                    \n                    \n                        \n                            modalPoiDetails:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public offline\n                        \n                    \n                    \n                        \n                            offline:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             settings\n                        \n                    \n                    \n                        \n                            settings:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public touristicCategoriesWithFeatures\n                        \n                    \n                    \n                        \n                            touristicCategoriesWithFeatures:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private treksTool\n                        \n                    \n                    \n                        \n                            treksTool:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public trekUrl\n                        \n                    \n                    \n                        \n                            trekUrl:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { ModalController, Platform, PopoverController } from '@ionic/angular';\n\nimport { MapboxOptions } from 'mapbox-gl';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { PoiDetailsComponent } from '@app/components/poi-details/poi-details.component';\nimport { InformationDeskDetailsComponent } from '@app/components/information-desk-details/information-desk-details.component';\n\nimport {\n  HydratedTrek,\n  Poi,\n  Pois,\n  TrekContext,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TreksService\n} from '@app/interfaces/interfaces';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-trek-map',\n  templateUrl: './trek-map.page.html',\n  styleUrls: ['./trek-map.page.scss']\n})\nexport class TrekMapPage extends UnSubscribe implements OnDestroy {\n  public currentTrek: HydratedTrek | null = null;\n  public currentPois: Pois;\n  public touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  public loader = true;\n  public trekUrl = '';\n  public connectionError = false;\n  public modalPoiDetails: HTMLIonModalElement | null;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public offline = false;\n  private treksTool: TreksService;\n\n  constructor(\n    private loading: LoadingService,\n    private modalController: ModalController,\n    private route: ActivatedRoute,\n    private router: Router,\n    public settings: SettingsService,\n    private platform: Platform,\n    private popoverCtrl: PopoverController,\n    private location: Location\n  ) {\n    super();\n  }\n\n  ionViewDidEnter(): void {\n    this.loading.begin('trek-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data: Data): void => {\n        const context: TrekContext | 'connectionError' = data.context;\n        if (context === 'connectionError') {\n          this.connectionError = true;\n          this.loading.finish('trek-map'); // if there is a connection error, map won't be loaded\n        } else {\n          this.connectionError = false;\n          this.offline = context.offline;\n          this.currentTrek = context.trek;\n          this.currentPois = context.pois;\n          this.touristicCategoriesWithFeatures =\n            context.touristicCategoriesWithFeatures;\n          this.mapConfig = context.mapConfig;\n          this.treksTool = context.treksTool;\n          this.commonSrc = context.treksTool.getCommonImgSrc();\n          this.trekUrl = context.treksTool.getTrekDetailsUrl(\n            (this.currentTrek as any).properties.id\n          );\n        }\n      })\n    );\n\n    if (this.platform.is('android')) {\n      this.subscriptions$$.push(\n        this.platform.backButton.subscribeWithPriority(99999, async () => {\n          // close popover\n          try {\n            const popover = await this.popoverCtrl.getTop();\n            if (popover) {\n              popover.dismiss();\n              return;\n            }\n\n            const modal = await this.modalController.getTop();\n            if (modal) {\n              modal.dismiss();\n              return;\n            }\n\n            this.location.back();\n          } catch (error) {}\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n\n  public async presentPoiDetails(poi: Poi): Promise {\n    if (this.modalPoiDetails) {\n      await this.modalPoiDetails.dismiss();\n    }\n\n    this.modalPoiDetails = await this.modalController.create({\n      component: PoiDetailsComponent,\n      componentProps: { poi, offline: this.offline, commonSrc: this.commonSrc },\n      cssClass: 'full-size'\n    });\n\n    this.modalPoiDetails.onDidDismiss().then(() => {\n      this.modalPoiDetails = null;\n    });\n\n    return await this.modalPoiDetails.present();\n  }\n\n  public async presentInformationDeskDetails(\n    informationDesk: InformationDesk\n  ): Promise {\n    const modal = await this.modalController.create({\n      component: InformationDeskDetailsComponent,\n      componentProps: { informationDesk }\n    });\n    return await modal.present();\n  }\n\n  public mapIsLoaded(event: Event): void {\n    this.loading.finish('trek-map');\n  }\n\n  public refresh() {\n    this.router.navigate([this.router.url]);\n  }\n\n  public navigateToChildren(id: number) {\n    if (this.currentTrek) {\n      this.router.navigate([\n        this.treksTool.getTrekDetailsUrl(id, this.currentTrek.properties.id)\n      ]);\n    }\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksMapPage.html":{"url":"components/TreksMapPage.html","title":"component - TreksMapPage","body":"\n                   \n\n\n\n  Components\n  TreksMapPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/treks-map/treks-map.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                    \n                        FilterTreksService\n                    \n                \n            \n\n\n            \n                selector\n                app-treks-map\n            \n\n            \n                styleUrls\n                treks-map.page.scss\n            \n\n\n\n            \n                templateUrl\n                treks-map.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(loading: any, filterTreks: any, modalController: any, onlineTreks: any, router: any, route: any, settings: any, network: any, platform: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewDidEnter\n                        \n                    \n    \n                    \n                        \n    ionViewDidEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             ionViewDidLeave\n                        \n                    \n    \n                    \n                        \n    ionViewDidLeave()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentFilters\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentFilters()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentSearch\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentSearch()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             navigateToTrek\n                        \n                    \n    \n                    \n                        \n    navigateToTrek(id: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public mapIsLoaded\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            mapIsLoaded(loaded: boolean)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public loadTreks\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            loadTreks()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public checkNetwork\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            checkNetwork()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public appName\n                        \n                    \n                    \n                        \n                            appName:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public commonSrc\n                        \n                    \n                    \n                        \n                            commonSrc:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public currentPosition$\n                        \n                    \n                    \n                        \n                            currentPosition$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public filteredTreks\n                        \n                    \n                    \n                        \n                            filteredTreks:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public isInView\n                        \n                    \n                    \n                        \n                            isInView:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public loaderStatus\n                        \n                    \n                    \n                        \n                            loaderStatus:     Boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loading\n                        \n                    \n                    \n                        \n                            loading:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public mapConfig\n                        \n                    \n                    \n                        \n                            mapConfig:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private mergeFiltersTreks$\n                        \n                    \n                    \n                        \n                            mergeFiltersTreks$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public noNetwork\n                        \n                    \n                    \n                        \n                            noNetwork:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public numberOfActiveFilters\n                        \n                    \n                    \n                        \n                            numberOfActiveFilters:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public offline\n                        \n                    \n                    \n                        \n                            offline:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onlineTreks\n                        \n                    \n                    \n                        \n                            onlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             settings\n                        \n                    \n                    \n                        \n                            settings:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private treksTool\n                        \n                    \n                    \n                        \n                            treksTool:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public treksUrl\n                        \n                    \n                    \n                        \n                            treksUrl:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { environment } from '@env/environment';\nimport { unsubscribe, UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport {\n  MinimalTrek,\n  TreksContext,\n  TreksService\n} from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { map, mergeMap, first, delay } from 'rxjs/operators';\nimport { cloneDeep } from 'lodash';\nimport { Network } from '@ionic-native/network/ngx';\n\n@Component({\n  selector: 'app-treks-map',\n  templateUrl: './treks-map.page.html',\n  styleUrls: ['./treks-map.page.scss'],\n  providers: [FilterTreksService]\n})\nexport class TreksMapPage extends UnSubscribe implements OnInit, OnDestroy {\n  private mergeFiltersTreks$: Subscription;\n  public filteredTreks: MinimalTrek[];\n  public numberOfActiveFilters: string;\n  public offline: boolean;\n  private treksTool: TreksService;\n  public isInView = false;\n  public treksUrl: string;\n  public appName: string = environment.appName;\n  public mapConfig: MapboxOptions;\n  public commonSrc: string;\n  public currentPosition$: Subscription;\n  public noNetwork = false;\n  public loaderStatus: Boolean;\n\n  constructor(\n    public loading: LoadingService,\n    private filterTreks: FilterTreksService,\n    private modalController: ModalController,\n    public onlineTreks: OnlineTreksService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public settings: SettingsService,\n    private network: Network,\n    private platform: Platform\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.checkNetwork();\n\n    this.loading.begin('treks-map');\n    this.subscriptions$$.push(\n      this.route.data.subscribe((data) => {\n        const context: TreksContext = data.context;\n        this.offline = context.offline;\n        this.treksTool = context.treksTool;\n        this.treksUrl = this.treksTool.getTreksUrl();\n        this.mapConfig = cloneDeep(context.mapConfig);\n        this.commonSrc = this.treksTool.getCommonImgSrc();\n      }),\n      this.onlineTreks.onlineTreksError$.subscribe((error) => {\n        if (!!error) {\n          this.loading.finish(); // if there was a connection error, map could not be loaded\n        }\n      }),\n      this.loading.status\n        .pipe(delay(0))\n        .subscribe((status) => (this.loaderStatus = status))\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.loading.finish();\n  }\n  ionViewDidEnter(): void {\n    this.mapIsLoaded(false);\n    this.mergeFiltersTreks$ = combineLatest([\n      this.route.data.pipe(\n        first(),\n        map((data) => data.context),\n        mergeMap((context: TreksContext) => context.treksTool.filteredTreks$)\n      ),\n      this.filterTreks.activeFiltersNumber$\n    ]).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n      this.numberOfActiveFilters =\n        numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n      this.filteredTreks = filteredTreks;\n      this.isInView = true;\n    });\n    this.subscriptions$$.push(this.mergeFiltersTreks$);\n  }\n\n  ionViewDidLeave(): void {\n    this.isInView = false;\n    unsubscribe(this.mergeFiltersTreks$);\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public mapIsLoaded(loaded: boolean): void {\n    if (loaded) {\n      this.loading.finish('treks-map');\n    }\n  }\n\n  public loadTreks(): void {\n    this.checkNetwork();\n    if (!this.noNetwork) {\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    }\n  }\n\n  public checkNetwork(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksOrderComponent.html":{"url":"components/TreksOrderComponent.html","title":"component - TreksOrderComponent","body":"\n                   \n\n\n\n  Components\n  TreksOrderComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/components/treks-order/treks-order.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-treks-order\n            \n\n            \n                styleUrls\n                treks-order.component.scss\n            \n\n\n\n            \n                templateUrl\n                treks-order.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(navParams: any, settings: any, platform: any, backgroundGeolocation: any, popoverController: any, modalController: any, geolocate: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             ionViewWillEnter\n                        \n                    \n    \n                    \n                        \n    ionViewWillEnter()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public treksOrderChange\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            treksOrderChange(orderValue: string)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentInAppDisclosure\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentInAppDisclosure()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             currentOrder\n                        \n                    \n                    \n                        \n                            currentOrder:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isFirstCheck\n                        \n                    \n                    \n                        \n                            isFirstCheck:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             orders\n                        \n                    \n                    \n                        \n                            orders:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\nimport { BackgroundGeolocation } from '@ionic-native/background-geolocation/ngx';\nimport {\n  NavParams,\n  Platform,\n  PopoverController,\n  ModalController\n} from '@ionic/angular';\n\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { Order } from '@app/interfaces/interfaces';\n\n@Component({\n  selector: 'app-treks-order',\n  templateUrl: './treks-order.component.html',\n  styleUrls: ['./treks-order.component.scss']\n})\nexport class TreksOrderComponent extends UnSubscribe {\n  orders: any;\n  currentOrder: Order;\n  isFirstCheck = true;\n\n  constructor(\n    private navParams: NavParams,\n    private settings: SettingsService,\n    private platform: Platform,\n    private backgroundGeolocation: BackgroundGeolocation,\n    private popoverController: PopoverController,\n    private modalController: ModalController,\n    private geolocate: GeolocateService\n  ) {\n    super();\n  }\n\n  ionViewWillEnter() {\n    this.orders = this.navParams.get('orders');\n\n    this.subscriptions$$.push(\n      this.settings.order$.subscribe((order) => {\n        this.currentOrder = order!.type;\n      })\n    );\n  }\n\n  public async treksOrderChange(orderValue: string) {\n    let error = false;\n    if (orderValue === 'location') {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        let startLocation;\n        try {\n          const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n          if (shouldShowInAppDisclosure) {\n            await this.presentInAppDisclosure();\n          }\n          startLocation = await this.backgroundGeolocation.getCurrentLocation();\n        } catch (catchError) {\n          error = true;\n        }\n        if (startLocation) {\n          this.settings.saveOrderState(orderValue, [\n            startLocation.longitude,\n            startLocation.latitude\n          ]);\n        } else {\n          error = true;\n        }\n        await this.popoverController.dismiss({ error });\n      } else if ('geolocation' in navigator) {\n        const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n        if (shouldShowInAppDisclosure) {\n          await this.presentInAppDisclosure();\n        }\n        navigator.geolocation.getCurrentPosition(\n          async (position) => {\n            this.settings.saveOrderState(orderValue, [\n              position.coords.longitude,\n              position.coords.latitude\n            ]);\n            await this.popoverController.dismiss();\n          },\n          async () => {\n            await this.popoverController.dismiss({ error: true });\n          }\n        );\n      }\n    } else if (orderValue === 'alphabetical') {\n      this.settings.saveOrderState(orderValue);\n      await this.popoverController.dismiss();\n    } else if (orderValue === 'random') {\n      this.settings.saveOrderState(orderValue);\n      await this.popoverController.dismiss();\n    }\n  }\n\n  public async presentInAppDisclosure(): Promise {\n    const modal = await this.modalController.create({\n      component: InAppDisclosureComponent,\n      componentProps: {},\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    await modal.onDidDismiss();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreksPage.html":{"url":"components/TreksPage.html","title":"component - TreksPage","body":"\n                   \n\n\n\n  Components\n  TreksPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/treks/treks.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                    \n                        FilterTreksService\n                    \n                \n            \n\n\n            \n                selector\n                app-treks\n            \n\n            \n                styleUrls\n                treks.page.scss\n            \n\n\n\n            \n                templateUrl\n                treks.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(filterTreks: any, loading: any, modalController: any, offlineTreks: any, onlineTreks: any, geolocate: any, settings: any, route: any, router: any, network: any, platform: any, popoverController: any, translate: any, alertController: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                            Public handleInitialOrder\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            handleInitialOrder()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public expandTreks\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            expandTreks(infiniteScroll: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public changeColSize\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            changeColSize()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public getMdColSize\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            getMdColSize()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     number\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentFilters\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentFilters()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentSearch\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentSearch()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private navigateToTrek\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            navigateToTrek(id: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public resetFilters\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            resetFilters()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public trackTrek\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            trackTrek(index: number, element: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     number\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             showTreksOrder\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            showTreksOrder(event: any)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentGeolocateError\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentGeolocateError()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public loadTreks\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            loadTreks()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public checkNetwork\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            checkNetwork()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public presentInAppDisclosure\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentInAppDisclosure()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     any\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public appName\n                        \n                    \n                    \n                        \n                            appName:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public colSize\n                        \n                    \n                    \n                        \n                            colSize:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private content\n                        \n                    \n                    \n                        \n                            content:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public currentMaxTreks\n                        \n                    \n                    \n                        \n                            currentMaxTreks:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public filteredTreks\n                        \n                    \n                    \n                        \n                            filteredTreks:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public loaderStatus\n                        \n                    \n                    \n                        \n                            loaderStatus:     Boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loading\n                        \n                    \n                    \n                        \n                            loading:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public mapLink\n                        \n                    \n                    \n                        \n                            mapLink:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public nbOfflineTreks\n                        \n                    \n                    \n                        \n                            nbOfflineTreks:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public noNetwork\n                        \n                    \n                    \n                        \n                            noNetwork:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public numberOfActiveFilters\n                        \n                    \n                    \n                        \n                            numberOfActiveFilters:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public offline\n                        \n                    \n                    \n                        \n                            offline:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             offlineTreks\n                        \n                    \n                    \n                        \n                            offlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onlineTreks\n                        \n                    \n                    \n                        \n                            onlineTreks:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             platform\n                        \n                    \n                    \n                        \n                            platform:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public treksByStep\n                        \n                    \n                    \n                        \n                            treksByStep:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private treksTool\n                        \n                    \n                    \n                        \n                            treksTool:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport {\n  IonContent,\n  ModalController,\n  PopoverController,\n  AlertController\n} from '@ionic/angular';\nimport { combineLatest } from 'rxjs';\nimport { map, mergeMap, delay, first } from 'rxjs/operators';\nimport { Network } from '@ionic-native/network/ngx';\nimport { Platform } from '@ionic/angular';\n\nimport { environment } from '@env/environment';\nimport { UnSubscribe } from '@app/components/abstract/unsubscribe';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport {\n  MinimalTrek,\n  TreksContext,\n  TreksService,\n  Order\n} from '@app/interfaces/interfaces';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { GeolocateService } from '@app/services/geolocate/geolocate.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TreksOrderComponent } from '@app/components/treks-order/treks-order.component';\n\n@Component({\n  selector: 'app-treks',\n  templateUrl: 'treks.page.html',\n  styleUrls: ['treks.page.scss'],\n  providers: [FilterTreksService]\n})\nexport class TreksPage extends UnSubscribe implements OnInit {\n  public noNetwork = false;\n  public appName: string = environment.appName;\n  public treksByStep: number = environment.treksByStep;\n  public colSize = environment.colSize;\n  public filteredTreks: MinimalTrek[];\n  public mapLink: string;\n  public nbOfflineTreks = 0;\n  public numberOfActiveFilters: string;\n  public offline = false;\n  public currentMaxTreks: number = environment.treksByStep;\n  public loaderStatus: Boolean;\n\n  private treksTool: TreksService;\n  @ViewChild('content', { static: true }) private content: IonContent;\n\n  constructor(\n    private filterTreks: FilterTreksService,\n    public loading: LoadingService,\n    private modalController: ModalController,\n    public offlineTreks: OfflineTreksService,\n    public onlineTreks: OnlineTreksService,\n    private geolocate: GeolocateService,\n    private settings: SettingsService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private network: Network,\n    public platform: Platform,\n    private popoverController: PopoverController,\n    private translate: TranslateService,\n    private alertController: AlertController\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    this.checkNetwork();\n    await this.handleInitialOrder();\n    this.subscriptions$$.push(\n      // load tools when enter route\n      this.route.data.subscribe((data) => {\n        const context: TreksContext = data.context;\n        this.treksTool = context.treksTool;\n        this.mapLink = context.treksTool.getTreksMapUrl();\n        this.offline = context.offline;\n      }),\n\n      // select treks when filter change or when we enter route\n      combineLatest([\n        this.route.data.pipe(\n          first(),\n          map((data) => data.context),\n          mergeMap((context: TreksContext) => context.treksTool.filteredTreks$)\n        ),\n        this.filterTreks.activeFiltersNumber$,\n        this.settings.data$\n      ]).subscribe(([filteredTreks, numberOfActiveFilters, settings]) => {\n        if (settings) {\n          this.numberOfActiveFilters = !!numberOfActiveFilters\n            ? `(${numberOfActiveFilters})`\n            : '';\n          this.filteredTreks = [...filteredTreks];\n          this.content.scrollToTop();\n        }\n      }),\n\n      // get number of offline treks\n      this.offlineTreks.treks$.subscribe((treks) => {\n        if (!treks) {\n          this.nbOfflineTreks = 0;\n        } else {\n          this.nbOfflineTreks = treks.features.length;\n        }\n      }),\n      this.loading.status\n        .pipe(delay(0))\n        .subscribe((status) => (this.loaderStatus = status))\n    );\n  }\n\n  public async handleInitialOrder() {\n    if (!this.settings.order$.value) {\n      if (environment.initialOrder === 'location') {\n        let currentPosition;\n        const shouldShowInAppDisclosure = await this.geolocate.shouldShowInAppDisclosure();\n        try {\n          if (shouldShowInAppDisclosure) {\n            await this.presentInAppDisclosure();\n          }\n          currentPosition = await this.geolocate.getCurrentPosition();\n        } finally {\n          if (currentPosition) {\n            this.settings.saveOrderState(environment.initialOrder, [\n              currentPosition.longitude,\n              currentPosition.latitude\n            ]);\n          } else {\n            if (shouldShowInAppDisclosure) {\n              await this.presentGeolocateError();\n            }\n            this.settings.saveOrderState('alphabetical');\n          }\n        }\n      } else {\n        this.settings.saveOrderState(environment.initialOrder as Order);\n      }\n    }\n  }\n\n  public expandTreks(infiniteScroll: any) {\n    if (this.currentMaxTreks  this.filteredTreks.length) {\n        this.currentMaxTreks = this.filteredTreks.length;\n      } else {\n        this.currentMaxTreks += this.treksByStep;\n      }\n    }\n    infiniteScroll.target.complete();\n  }\n\n  public changeColSize(): void {\n    this.colSize = this.colSize === 12 ? 6 : 12;\n    this.content.scrollToTop();\n  }\n\n  public getMdColSize(): number {\n    return this.colSize / 2;\n  }\n\n  public async presentFilters(): Promise {\n    const modal = await this.modalController.create({\n      component: FiltersComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n    await modal.present();\n  }\n\n  public async presentSearch(): Promise {\n    const modal = await this.modalController.create({\n      component: SearchComponent,\n      componentProps: { isOnline: !this.offline },\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n\n    if (data) {\n      this.navigateToTrek(data);\n    }\n  }\n\n  private navigateToTrek(id: number) {\n    this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n  }\n\n  public resetFilters() {\n    this.settings.resetFilters();\n  }\n\n  public trackTrek(index: number, element: MinimalTrek): number | null {\n    return element ? element.properties.id : null;\n  }\n\n  async showTreksOrder(event: any) {\n    const orders: { name: string; value: string }[] = [\n      {\n        name: await this.translate.get('toolbar.orderByAlphabet').toPromise(),\n        value: 'alphabetical'\n      },\n      {\n        name: await this.translate.get('toolbar.orderByLocation').toPromise(),\n        value: 'location'\n      },\n      {\n        name: await this.translate.get('toolbar.orderByRandom').toPromise(),\n        value: 'random'\n      }\n    ];\n\n    const popover = await this.popoverController.create({\n      component: TreksOrderComponent,\n      event: event,\n      translucent: true,\n      componentProps: {\n        orders\n      }\n    });\n    await popover.present();\n\n    const { data } = await popover.onDidDismiss();\n\n    if (data && data.error) {\n      this.presentGeolocateError();\n    }\n  }\n\n  public async presentGeolocateError(): Promise {\n    const errorTranslation: any = await this.translate\n      .get('geolocate.error')\n      .toPromise();\n\n    // Inform user about problem\n    const alertLocation = await this.alertController.create({\n      header: errorTranslation['header'],\n      subHeader: errorTranslation['subHeader'],\n      message: errorTranslation['message'],\n      buttons: [errorTranslation['confirmButton']]\n    });\n\n    await alertLocation.present();\n\n    await alertLocation.onDidDismiss();\n  }\n\n  public loadTreks(): void {\n    this.checkNetwork();\n    if (!this.noNetwork) {\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    }\n  }\n\n  public checkNetwork(): void {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      this.noNetwork = this.network.type === 'none';\n    }\n  }\n\n  public async presentInAppDisclosure(): Promise {\n    const modal = await this.modalController.create({\n      component: InAppDisclosureComponent,\n      componentProps: {},\n      cssClass: 'full-size'\n    });\n\n    await modal.present();\n\n    await modal.onDidDismiss();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cache/cache.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public get\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    get(url: string, options: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public revoking\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    revoking(observable: any, revoked: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private cache\n                                \n                            \n                            \n                                \n                                    cache:     { [key: string]: any; }\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public hits\n                                \n                            \n                            \n                                \n                                    hits:     { [key: string]: number; }\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private maxSize\n                                \n                            \n                            \n                                \n                                    maxSize:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 200\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private refreshDelay\n                                \n                            \n                            \n                                \n                                    refreshDelay:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public revoke\n                                \n                            \n                            \n                                \n                                    revoke:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, publishReplay, refCount, take, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CacheService {\n  private cache: { [key: string]: Observable } = {};\n  private refreshDelay = 4 * 60 * 60 * 1000;\n  private maxSize = 200;\n  public revoke: EventEmitter = new EventEmitter();\n  public hits: { [key: string]: number } = {};\n\n  constructor(private http: HttpClient) {\n    this.revoke.subscribe((revoked: string | null) => {\n      if (!revoked) {\n        this.cache = {};\n        this.hits = {};\n      } else {\n        delete this.cache[revoked];\n        delete this.hits[revoked];\n      }\n    });\n  }\n\n  /*\n   * gets an observable\n   * that broadcasts a ReplaySubject\n   * which emits the response of a get request\n   * during this.refreshDelay ms without sending a new http request\n   */\n  public get(url: string, options: any): Observable {\n    if (!this.cache.hasOwnProperty(url)) {\n      if (Object.keys(this.cache).length >= this.maxSize) {\n        // TODO: do not revoke everything\n        this.revoke.emit();\n      }\n      this.cache[url] = this.http.get(url, options).pipe(\n        // set hits to 0 each time request is actually sent\n        tap(() => {\n          this.hits[url] = 0;\n        }),\n        // create a ReplaySubject that stores and emit last response during delay\n        publishReplay(1, this.refreshDelay),\n        // broadcast ReplaySubject\n        refCount(),\n        // complete each observer after response has been emitted\n        take(1),\n        // increment hits each time request is subscribed\n        tap(() => {\n          const hits = this.hits[url];\n          this.hits[url] = hits ? hits + 1 : 1;\n        }),\n        catchError((error) => {\n          delete this.cache[url];\n          return throwError(error);\n        })\n      );\n    }\n    return this.cache[url];\n  }\n\n  /*\n   Make the observable revoke the cache when it emits\n   */\n  public revoking(\n    observable: Observable,\n    revoked?: string | null\n  ): Observable {\n    return observable.pipe(\n      tap(() => {\n        this.revoke.emit(revoked);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterTreksService.html":{"url":"injectables/FilterTreksService.html","title":"injectable - FilterTreksService","body":"\n                   \n\n\n\n\n\n  Injectables\n  FilterTreksService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter-treks/filter-treks.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(settings: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public filter\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    filter(treks: any, filters: any[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public sort\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    sort(filteredTreks: any[], order: any, userLocation: number[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private isFilterActive\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    isFilterActive(filter: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getNumberOfActiveFilters\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getNumberOfActiveFilters(filters: any[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private intervalFilter\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    intervalFilter(filter: any, feature: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private containsFilter\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    containsFilter(filter: any, feature: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     boolean\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getCheckedIdForFilter\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getCheckedIdForFilter(filter: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     number[]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getCheckedInterval\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getCheckedInterval(filter: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     [number, number][]\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getFilteredTreks\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getFilteredTreks(treks$: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Public activeFiltersNumber$\n                                \n                            \n                            \n                                \n                                    activeFiltersNumber$:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Observable, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { point } from '@turf/helpers';\n\nimport {\n  ContainsFilter,\n  Filter,\n  IntervalFilter,\n  MinimalTrek,\n  MinimalTreks,\n  Order\n} from '@app/interfaces/interfaces';\nimport { SettingsService } from '@app/services/settings/settings.service';\n\nconst distance = require('@turf/distance').default;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilterTreksService {\n  public activeFiltersNumber$: Observable;\n\n  public static filter(\n    treks: MinimalTreks | null,\n    filters: Filter[] | null\n  ): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n\n    let filteredFeatures = treks.features;\n\n    if (filters) {\n      filters.forEach((filter) => {\n        filteredFeatures = filteredFeatures.filter((feature) => {\n          if (!FilterTreksService.isFilterActive(filter)) {\n            return true;\n          }\n\n          if (filter.type === 'contains') {\n            return FilterTreksService.containsFilter(\n              filter as ContainsFilter,\n              feature\n            );\n          } else if (filter.type === 'interval') {\n            return FilterTreksService.intervalFilter(\n              filter as IntervalFilter,\n              feature\n            );\n          }\n\n          return false;\n        });\n      });\n    }\n\n    return filteredFeatures;\n  }\n\n  public static sort(\n    filteredTreks: MinimalTrek[],\n    order: Order,\n    userLocation?: number[]\n  ): MinimalTrek[] {\n    return filteredTreks.sort((a: MinimalTrek, b: MinimalTrek) => {\n      // Sort by user location\n      if (order === 'location' && userLocation && userLocation !== null) {\n        if (!a.geometry || !b.geometry) {\n          return !a.geometry ? 1 : -1;\n        }\n\n        const distanceFromTrekA = distance(\n          point(a.geometry.coordinates),\n          point(userLocation)\n        );\n        const distanceFromTrekB = distance(\n          point(b.geometry.coordinates),\n          point(userLocation)\n        );\n\n        if (distanceFromTrekA  distanceFromTrekB) {\n          return 1;\n        }\n        return 0;\n      }\n      if (order === 'alphabetical') {\n        if (a.properties.name  b.properties.name) {\n          return 1;\n        }\n        return 0;\n      }\n      if (order === 'random') {\n        return 0.5 - Math.random();\n      }\n      return 0;\n    });\n  }\n\n  private static isFilterActive(filter: Filter): boolean {\n    return filter.values.filter((value) => value.checked).length > 0;\n  }\n\n  private static getNumberOfActiveFilters(filters: Filter[] | null): number {\n    let numberOfActiveFilters = 0;\n    if (!!filters) {\n      filters.forEach((filter) => {\n        numberOfActiveFilters += FilterTreksService.getCheckedIdForFilter(\n          filter\n        ).length;\n      });\n    }\n    return numberOfActiveFilters;\n  }\n\n  private static intervalFilter(filter: IntervalFilter, feature: MinimalTrek) {\n    let isInInterval = false;\n    FilterTreksService.getCheckedInterval(filter).forEach(\n      ([min, max]: [number, number]) => {\n        const criterionValue: number = feature.properties[filter.id];\n        if (criterionValue >= min && criterionValue \n            (feature.properties[filter.id] as any).indexOf(filterValue) !== -1\n        ) !== undefined\n      );\n    } else {\n      return (\n        FilterTreksService.getCheckedIdForFilter(filter).indexOf(\n          feature.properties[filter.id] as any\n        ) !== -1\n      );\n    }\n  }\n\n  private static getCheckedIdForFilter(filter: Filter): number[] {\n    return filter.values\n      .filter((value) => value.checked)\n      .map((checkedValue) => checkedValue.id);\n  }\n\n  private static getCheckedInterval(filter: Filter): [number, number][] {\n    return filter.values\n      .filter((value) => !!value.interval && value.checked)\n      .map((checkedValue) => checkedValue.interval) as [number, number][];\n  }\n\n  constructor(private settings: SettingsService) {\n    this.activeFiltersNumber$ = settings.filters$.pipe(\n      map((filters) => FilterTreksService.getNumberOfActiveFilters(filters))\n    );\n  }\n\n  public getFilteredTreks(\n    treks$: Observable\n  ): Observable {\n    return combineLatest([\n      treks$,\n      this.settings.filters$,\n      this.settings.order$\n    ]).pipe(\n      map(([treks, filters, order]) => {\n        if (treks && filters && order) {\n          return FilterTreksService.sort(\n            FilterTreksService.filter(treks, filters),\n            order.type,\n            order.value\n          );\n        } else {\n          return [];\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeolocateService.html":{"url":"injectables/GeolocateService.html","title":"injectable - GeolocateService","body":"\n                   \n\n\n\n\n\n  Injectables\n  GeolocateService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geolocate/geolocate.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(backgroundGeolocation: any, deviceOrientation: any, storage: any, platform: any, translate: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     shouldShowInAppDisclosure\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    shouldShowInAppDisclosure()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     checkAuthorization\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    checkAuthorization()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     checkIfBackgroundGeolocationIsRunning\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    checkIfBackgroundGeolocationIsRunning()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     startOnMapTracking\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    startOnMapTracking()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     stopOnMapTracking\n                                \n                            \n            \n                            \n                                \n            stopOnMapTracking(resetHeading: boolean, resetPosition: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     startNotificationsModeTracking\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    startNotificationsModeTracking(notificationText: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     stopNotificationsModeTracking\n                                \n                            \n            \n                            \n                                \n            stopNotificationsModeTracking()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     checkIfCanGetCurrentHeading\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    checkIfCanGetCurrentHeading()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     showAppSettings\n                                \n                            \n            \n                            \n                                \n            showAppSettings()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     showLocationSettings\n                                \n                            \n            \n                            \n                                \n            showLocationSettings()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getCurrentPosition\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getCurrentPosition()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     backgroundGeolocation\n                                \n                            \n                            \n                                \n                                    backgroundGeolocation:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public currentHeading$\n                                \n                            \n                            \n                                \n                                    currentHeading$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public currentHeadingSubscription\n                                \n                            \n                            \n                                \n                                    currentHeadingSubscription:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public currentPosition$\n                                \n                            \n                            \n                                \n                                    currentPosition$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public currentPositionInterval\n                                \n                            \n                            \n                                \n                                    currentPositionInterval:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deviceOrientation\n                                \n                            \n                            \n                                \n                                    deviceOrientation:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     platform\n                                \n                            \n                            \n                                \n                                    platform:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     storage\n                                \n                            \n                            \n                                \n                                    storage:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  BackgroundGeolocation,\n  BackgroundGeolocationConfig,\n  BackgroundGeolocationEvents,\n  BackgroundGeolocationLocationProvider\n} from '@ionic-native/background-geolocation/ngx';\nimport { Storage } from '@ionic/storage';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\nimport {\n  DeviceOrientation,\n  DeviceOrientationCompassHeading\n} from '@ionic-native/device-orientation/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocateService {\n  public currentPosition$: BehaviorSubject = new BehaviorSubject(null);\n  public currentHeading$: BehaviorSubject = new BehaviorSubject(null);\n  public currentHeadingSubscription: Subscription | null = null;\n  public currentPositionInterval: number | null;\n\n  constructor(\n    public backgroundGeolocation: BackgroundGeolocation,\n    public deviceOrientation: DeviceOrientation,\n    public storage: Storage,\n    public platform: Platform,\n    private translate: TranslateService\n  ) {}\n\n  async shouldShowInAppDisclosure() {\n    const alreadyAskGeolocationPermission = await this.storage.get(\n      'alreadyAskGeolocationPermission'\n    );\n    return !!!alreadyAskGeolocationPermission;\n  }\n\n  async checkAuthorization() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.authorization !== 0;\n  }\n\n  async checkIfBackgroundGeolocationIsRunning() {\n    const status = await this.backgroundGeolocation.checkStatus();\n    return status.isRunning;\n  }\n\n  async startOnMapTracking() {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      if (\n        (await this.checkIfCanGetCurrentHeading()) &&\n        this.currentHeadingSubscription === null\n      ) {\n        this.currentHeadingSubscription = this.deviceOrientation\n          .watchHeading({ frequency: 16 })\n          .subscribe((data: DeviceOrientationCompassHeading) =>\n            this.currentHeading$.next(data.trueHeading)\n          );\n      }\n\n      const notificationTitle: string = await this.translate\n        .get('geolocate.notificationTitle')\n        .toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider:\n          BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        startForeground: false,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText: 'Geolocation',\n        ...environment.backgroundGeolocation\n      };\n\n      if (await this.checkIfBackgroundGeolocationIsRunning()) {\n        this.backgroundGeolocation.stop();\n      }\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.start)\n        .subscribe(async () => {\n          try {\n            const startLocation = await this.backgroundGeolocation.getCurrentLocation(\n              {\n                timeout: 10000,\n                maximumAge: 0,\n                enableHighAccuracy: true\n              }\n            );\n            this.currentPosition$.next([\n              startLocation.longitude,\n              startLocation.latitude\n            ]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.location)\n        .subscribe((location) => {\n          try {\n            this.currentPosition$.next([location.longitude, location.latitude]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation.start();\n    } else {\n      navigator.geolocation.getCurrentPosition((position) =>\n        this.currentPosition$.next([\n          position.coords.longitude,\n          position.coords.latitude\n        ])\n      );\n    }\n\n    // this.getCurrentPosition();\n    // this.currentPositionInterval = window.setInterval(() => {\n    //   this.getCurrentPosition();\n    // }, environment.backgroundGeolocation.interval);\n    //\n  }\n\n  stopOnMapTracking(\n    resetHeading: boolean = true,\n    resetPosition: boolean = true\n  ) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      if (resetHeading && this.currentHeadingSubscription) {\n        this.currentHeadingSubscription.unsubscribe();\n        this.currentHeadingSubscription = null;\n        this.currentHeading$.next(null);\n      }\n      this.backgroundGeolocation.stop();\n    }\n\n    if (resetPosition) {\n      this.currentPosition$.next(null);\n    }\n\n    // if (this.currentPositionInterval !== null) {\n    //   window.clearInterval(this.currentPositionInterval);\n    //   this.currentPositionInterval = null;\n    // }\n  }\n\n  async startNotificationsModeTracking(notificationText: string) {\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      const notificationTitle: string = await this.translate\n        .get('geolocate.notificationTitle')\n        .toPromise();\n      const geolocationConfig: BackgroundGeolocationConfig = {\n        locationProvider:\n          BackgroundGeolocationLocationProvider.DISTANCE_FILTER_PROVIDER,\n        startForeground: true,\n        stopOnTerminate: true,\n        debug: false,\n        notificationTitle,\n        notificationText,\n        ...environment.backgroundGeolocation\n      };\n\n      if (await this.checkIfBackgroundGeolocationIsRunning()) {\n        this.backgroundGeolocation.stop();\n      }\n\n      await this.backgroundGeolocation.configure(geolocationConfig);\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.start)\n        .subscribe(async () => {\n          try {\n            const startLocation = await this.backgroundGeolocation.getCurrentLocation(\n              {\n                timeout: 10000,\n                maximumAge: 0,\n                enableHighAccuracy: true\n              }\n            );\n            this.currentPosition$.next([\n              startLocation.longitude,\n              startLocation.latitude\n            ]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation\n        .on(BackgroundGeolocationEvents.location)\n        .subscribe((location) => {\n          try {\n            this.currentPosition$.next([location.longitude, location.latitude]);\n          } catch (error) {\n            this.currentPosition$.next(null);\n            error = true;\n          }\n        });\n\n      this.backgroundGeolocation.start();\n    } else {\n      navigator.geolocation.getCurrentPosition((position) =>\n        this.currentPosition$.next([\n          position.coords.longitude,\n          position.coords.latitude\n        ])\n      );\n    }\n  }\n\n  stopNotificationsModeTracking() {\n    if (\n      (this.platform.is('ios') || this.platform.is('android')) &&\n      this.checkIfBackgroundGeolocationIsRunning()\n    ) {\n      this.backgroundGeolocation.stop();\n    }\n  }\n\n  async checkIfCanGetCurrentHeading() {\n    let currentHeading: DeviceOrientationCompassHeading | null = null;\n    try {\n      currentHeading =\n        this.platform.is('ios') || this.platform.is('android')\n          ? await this.deviceOrientation.getCurrentHeading()\n          : null;\n    } finally {\n      return (\n        currentHeading !== null &&\n        typeof currentHeading === 'object' &&\n        (currentHeading as DeviceOrientationCompassHeading).hasOwnProperty(\n          'trueHeading'\n        )\n      );\n    }\n  }\n\n  showAppSettings() {\n    this.backgroundGeolocation.showAppSettings();\n  }\n\n  showLocationSettings() {\n    this.backgroundGeolocation.showLocationSettings();\n  }\n\n  async getCurrentPosition() {\n    let startLocation;\n    try {\n      if (this.platform.is('ios') || this.platform.is('android')) {\n        startLocation = await this.backgroundGeolocation.getCurrentLocation({\n          timeout: 10000,\n          maximumAge: 0,\n          enableHighAccuracy: true\n        });\n      } else {\n        await new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(\n            (position) => {\n              if (position) {\n                startLocation = {\n                  longitude: position.coords.longitude,\n                  latitude: position.coords.latitude\n                };\n              }\n              resolve(true);\n            },\n            () => reject()\n          );\n        });\n      }\n    } catch (error) {\n      startLocation = null;\n    } finally {\n      this.currentPosition$.next(\n        startLocation\n          ? [startLocation.longitude, startLocation.latitude]\n          : startLocation\n      );\n\n      return startLocation;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingInterceptor.html":{"url":"injectables/LoadingInterceptor.html","title":"injectable - LoadingInterceptor","body":"\n                   \n\n\n\n\n\n  Injectables\n  LoadingInterceptor\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     begin\n                                \n                            \n            \n                            \n                                \n            begin(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     finish\n                                \n                            \n            \n                            \n                                \n            finish(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isLoading\n                                \n                            \n            \n                            \n                                \n            isLoading(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private loadingIds\n                                \n                            \n                            \n                                \n                                    loadingIds:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public status\n                                \n                            \n                            \n                                \n                                    status:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public status = new BehaviorSubject(false); // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds\n      .pipe(map((ids: string[]) => ids.length > 0))\n      .subscribe((isLoading: boolean) => {\n        if (isLoading !== service.status.getValue()) {\n          service.status.next(isLoading);\n        }\n      });\n    this.status.subscribe();\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds\n        .getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(\n      map((loadingIds: string[]) => {\n        return loadingIds.indexOf(id) >= 0;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next.handle(req).pipe(\n      tap((event: HttpEvent) => {\n        if (event instanceof HttpResponse) {\n          this.loading.finish(loadingId);\n        }\n      }),\n      catchError((error: any) => {\n        this.loading.finish(loadingId);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingService.html":{"url":"injectables/LoadingService.html","title":"injectable - LoadingService","body":"\n                   \n\n\n\n\n\n  Injectables\n  LoadingService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/loading/loading.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     begin\n                                \n                            \n            \n                            \n                                \n            begin(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     finish\n                                \n                            \n            \n                            \n                                \n            finish(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isLoading\n                                \n                            \n            \n                            \n                                \n            isLoading(id: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private loadingIds\n                                \n                            \n                            \n                                \n                                    loadingIds:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public status\n                                \n                            \n                            \n                                \n                                    status:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public status = new BehaviorSubject(false); // loading state\n\n  private loadingIds = new BehaviorSubject([]); // list of ids\n\n  constructor() {\n    const service = this;\n    this.loadingIds\n      .pipe(map((ids: string[]) => ids.length > 0))\n      .subscribe((isLoading: boolean) => {\n        if (isLoading !== service.status.getValue()) {\n          service.status.next(isLoading);\n        }\n      });\n    this.status.subscribe();\n  }\n\n  begin(id: string): void {\n    const ids = this.loadingIds.getValue();\n    ids.push(id);\n    this.loadingIds.next(ids);\n  }\n\n  finish(id?: string): void {\n    if (id === undefined) {\n      this.loadingIds.next([]);\n    } else {\n      const ids = this.loadingIds\n        .getValue()\n        .filter((loadingId: string) => loadingId !== id);\n      this.loadingIds.next(ids);\n    }\n  }\n\n  isLoading(id: string): Observable {\n    return this.loadingIds.pipe(\n      map((loadingIds: string[]) => {\n        return loadingIds.indexOf(id) >= 0;\n      })\n    );\n  }\n}\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  constructor(protected loading: LoadingService) {}\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const loadingId = `${req.method}-${req.urlWithParams}`;\n    this.loading.begin(loadingId);\n    return next.handle(req).pipe(\n      tap((event: HttpEvent) => {\n        if (event instanceof HttpResponse) {\n          this.loading.finish(loadingId);\n        }\n      }),\n      catchError((error: any) => {\n        this.loading.finish(loadingId);\n        return throwError(error);\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreInformationsService.html":{"url":"injectables/MoreInformationsService.html","title":"injectable - MoreInformationsService","body":"\n                   \n\n\n\n\n\n  Injectables\n  MoreInformationsService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/more-informations/more-informations.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(cache: any, translate: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public getMoreItems\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMoreItems()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getMoreItemById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMoreItemById(id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private apiUrl\n                                \n                            \n                            \n                                \n                                    apiUrl:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InformationIntro, InformationItem } from '@app/interfaces/interfaces';\nimport { Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoreInformationsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  constructor(\n    private cache: CacheService,\n    private translate: TranslateService\n  ) {}\n\n  public getMoreItems(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.cache.get(\n      `${this.apiUrl}/flatpages.json`,\n      httpOptions\n    );\n  }\n\n  public getMoreItemById(id: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.cache.get(\n      `${this.apiUrl}/flatpages/${id}.json`,\n      httpOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreItemResolver.html":{"url":"injectables/MoreItemResolver.html","title":"injectable - MoreItemResolver","body":"\n                   \n\n\n\n\n\n  Injectables\n  MoreItemResolver\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/resolvers/more-item.resolver.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(more: any, platform: any, firebaseAnalytics: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     resolve\n                                \n                            \n            \n                            \n                                \n            resolve(route: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\n\nimport { InformationItem } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreItemResolver\n  implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const moreItemId = +(route.paramMap.get('moreItemId'));\n    return this.more.getMoreItemById(moreItemId).pipe(\n      tap((item) => {\n        if (\n          (this.platform.is('ios') || this.platform.is('android')) &&\n          environment.useFirebase\n        ) {\n          this.firebaseAnalytics.setCurrentScreen(`${item.title}`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoreResolver.html":{"url":"injectables/MoreResolver.html","title":"injectable - MoreResolver","body":"\n                   \n\n\n\n\n\n  Injectables\n  MoreResolver\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/resolvers/more.resolver.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(more: any, platform: any, firebaseAnalytics: any)\n                                \n                            \n            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     resolve\n                                \n                            \n                            \n                                \n                                    resolve:     (route: any) => any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\nimport { InformationIntro } from '@app/interfaces/interfaces';\nimport { MoreInformationsService } from '@app/services/more-informations/more-informations.service';\nimport { of } from 'rxjs/internal/observable/of';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Platform } from '@ionic/angular';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class MoreResolver\n  implements Resolve {\n  constructor(\n    private more: MoreInformationsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve = (route: ActivatedRouteSnapshot) =>\n    this.more.getMoreItems().pipe(\n      tap(() => {\n        if (\n          (this.platform.is('ios') || this.platform.is('android')) &&\n          environment.useFirebase\n        ) {\n          this.firebaseAnalytics.setCurrentScreen(`Information`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OfflineTreksService.html":{"url":"injectables/OfflineTreksService.html","title":"injectable - OfflineTreksService","body":"\n                   \n\n\n\n\n\n  Injectables\n  OfflineTreksService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/offline-treks/offline-treks.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(platform: any, file: any, filterTreks: any, zip: any, http: any, storage: any, webview: any, onlineTreksService: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public getTrekImageSrc\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekImageSrc(trek: any, picture: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getCommonImgSrc\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getCommonImgSrc()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTreksUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTreksUrl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTrekDetailsUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekDetailsUrl(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTrekMapUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekMapUrl(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTreksMapUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTreksMapUrl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getTreks\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTreks()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public createNewProgressStream\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createNewProgressStream()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public saveTrek\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveTrek(simpleTrek: any, fullTrek: any, pois: any[], touristicContents: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     fakeMediaDl\n                                \n                            \n            \n                            \n                                \n            fakeMediaDl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private updateProgress\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    updateProgress(event: any, progress: any, type: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private saveCommonMedia\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveCommonMedia()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private saveMediaForTrek\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveMediaForTrek(trekId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public removeTrek\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    removeTrek(trekId: number, withMedia: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private removeMedia\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    removeMedia(trekId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getPoisForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getPoisForTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTouristicContentsForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTouristicContentsForTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTouristicEventsForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTouristicEventsForTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private createDirIfNotExists\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    createDirIfNotExists(dirName: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getDirLocalDataLocation\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getDirLocalDataLocation()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getMapConfigForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMapConfigForTrekById(trek: any, isOffline: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getTilesDirectoryForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTilesDirectoryForTrekById(trekId: number, type: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public trekIsAvailableOffline\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    trekIsAvailableOffline(trekId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Public currentProgressDownload$\n                                \n                            \n                            \n                                \n                                    currentProgressDownload$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public filteredTreks$\n                                \n                            \n                            \n                                \n                                    filteredTreks$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private isMobile\n                                \n                            \n                            \n                                \n                                    isMobile:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public mediaDownloadProgress\n                                \n                            \n                            \n                                \n                                    mediaDownloadProgress:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public offline\n                                \n                            \n                            \n                                \n                                    offline:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: false\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public trekDownloadProgress\n                                \n                            \n                            \n                                \n                                    trekDownloadProgress:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 0\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public treks$\n                                \n                            \n                            \n                                \n                                    treks$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private zipUrl\n                                \n                            \n                            \n                                \n                                    zipUrl:     string\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpClient, HttpEventType, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { Zip } from '@ionic-native/zip/ngx';\nimport { Platform } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport {\n  BehaviorSubject,\n  from,\n  Observable,\n  throwError,\n  of,\n  forkJoin\n} from 'rxjs';\nimport {\n  catchError,\n  map,\n  mergeMap,\n  tap,\n  delayWhen,\n  last,\n  delay,\n  concatAll,\n  switchMapTo,\n  share,\n  count,\n  scan,\n  withLatestFrom,\n  concatMap\n} from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Poi,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents\n} from '@app/interfaces/interfaces';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfflineTreksService implements TreksService {\n  public offline = false;\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public currentProgressDownload$: BehaviorSubject = new BehaviorSubject(0);\n\n  public mediaDownloadProgress = 0;\n  public trekDownloadProgress = 0;\n\n  private zipUrl = `${environment.onlineBaseUrl}`;\n  private isMobile: boolean;\n\n  constructor(\n    private platform: Platform,\n    private file: File,\n    private filterTreks: FilterTreksService,\n    private zip: Zip,\n    private http: HttpClient,\n    private storage: Storage,\n    private webview: WebView,\n    private onlineTreksService: OnlineTreksService\n  ) {\n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n    this.getTreks().subscribe((treks) => {\n      this.treks$.next(treks);\n    });\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      const imgPath = !!picture\n        ? picture.url\n        : trek.properties.first_picture.url;\n      if (this.isMobile) {\n        return this.webview.convertFileSrc(\n          `${this.getDirLocalDataLocation()}offline/${imgPath}`\n        );\n      } else {\n        return `${environment.onlineBaseUrl}${imgPath}`;\n      }\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    if (this.isMobile) {\n      return this.webview.convertFileSrc(\n        `${this.getDirLocalDataLocation()}offline`\n      );\n    } else {\n      return `${environment.onlineBaseUrl}`;\n    }\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks-offline';\n  }\n\n  public getTrekDetailsUrl(trekId: number, parentId?: number): string {\n    return !parentId\n      ? `/app/tabs/treks-offline/trek-details/${trekId}`\n      : `/app/tabs/treks-offline/trek-details/${parentId}/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number, parentId?: number): string {\n    return !parentId\n      ? `/app/map-offline/${trekId}`\n      : `/app/map-offline/${parentId}/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks-offline/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const emptyTreks = {\n      type: 'FeatureCollection',\n      name: 'OFFLINE-TREKS',\n      features: []\n    };\n\n    return from(this.storage.get('offline-treks')).pipe(\n      map((jsonTreks: string): MinimalTreks => JSON.parse(jsonTreks)),\n      map((treks: MinimalTreks) => (!!treks ? treks : emptyTreks))\n    );\n  }\n\n  public createNewProgressStream() {\n    this.trekDownloadProgress = 0;\n    this.mediaDownloadProgress = 0;\n    this.currentProgressDownload$.next(0);\n  }\n\n  public saveTrek(\n    simpleTrek: MinimalTrek,\n    fullTrek: Trek,\n    pois: Poi[],\n    touristicContents: TouristicContents\n  ): Observable {\n    const trekId = simpleTrek.properties.id;\n    const newTreks: MinimalTreks = cloneDeep(this.treks$.getValue());\n    newTreks.features = [\n      ...newTreks.features.filter((feature) => feature.properties.id !== trekId)\n    ];\n    newTreks.features.push(simpleTrek);\n\n    // update treks\n    this.treks$.next(newTreks);\n    const storage = this.storage;\n    const tasks: Observable[] = [\n      from(storage.set('offline-treks', JSON.stringify(newTreks))),\n      // save full trek\n      from(storage.set(`trek-${trekId}`, JSON.stringify(fullTrek))),\n      // save json poi\n      from(storage.set(`pois-trek-${trekId}`, JSON.stringify(pois))),\n      // save touristic contents\n      from(\n        storage.set(\n          `touristicContents-trek-${trekId}`,\n          JSON.stringify(touristicContents)\n        )\n      )\n    ];\n\n    if (\n      fullTrek.properties.children &&\n      fullTrek.properties.children.features &&\n      fullTrek.properties.children.features.length > 0\n    ) {\n      // save all json for children treks\n      // trek pois touristicContents\n      fullTrek.properties.children.features.forEach((children) => {\n        tasks.push(\n          this.onlineTreksService\n            .getTrekById(children.properties.id, trekId)\n            .pipe(\n              map((childrenJson) => {\n                return from(\n                  storage.set(\n                    `trek-${trekId}-${children.properties.id}`,\n                    JSON.stringify(childrenJson)\n                  )\n                );\n              })\n            )\n        );\n        tasks.push(\n          this.onlineTreksService\n            .getPoisForTrekById(children.properties.id, trekId)\n            .pipe(\n              map((childrenJson) => {\n                return from(\n                  storage.set(\n                    `pois-trek-${trekId}-${children.properties.id}`,\n                    JSON.stringify(childrenJson)\n                  )\n                );\n              })\n            )\n        );\n\n        tasks.push(\n          this.onlineTreksService\n            .getTouristicContentsForTrekById(children.properties.id, trekId)\n            .pipe(\n              map((childrenJson) => {\n                return from(\n                  storage.set(\n                    `touristicContents-trek-${trekId}-${children.properties.id}`,\n                    JSON.stringify(childrenJson)\n                  )\n                );\n              })\n            )\n        );\n      });\n    }\n\n    if (this.isMobile) {\n      if (this.treks$.value && this.treks$.value.features.length === 1) {\n        // download common media too if it's first downloaded trek\n        tasks.push(this.saveCommonMedia());\n      }\n      tasks.push(this.saveMediaForTrek(trekId));\n    } else {\n      tasks.push(this.fakeMediaDl());\n    }\n\n    return forkJoin(tasks).pipe(\n      map((e) => {\n        return true;\n      }),\n      catchError((e) => {\n        this.removeTrek(trekId, false);\n        return throwError(false);\n      })\n    );\n  }\n\n  fakeMediaDl() {\n    const requestOne = of(1).pipe(delay(1000));\n    const requestTwo = of(2).pipe(delay(1000));\n    const requestThree = of(3).pipe(delay(1000));\n    const requestFour = of(4).pipe(delay(1000));\n    const requestFive = of(5).pipe(delay(1000));\n    const observables: Array> = [\n      requestOne,\n      requestTwo,\n      requestThree,\n      requestFour,\n      requestFive\n    ];\n    const array$ = from(observables);\n    const requests$ = array$.pipe(concatAll());\n    const progress$ = of(true).pipe(switchMapTo(requests$), share());\n\n    const count$ = array$.pipe(count());\n\n    const ratio$ = progress$.pipe(\n      scan((current) => current + 1, 0),\n      withLatestFrom(count$, (current, nb) => current / nb)\n    );\n\n    of(true)\n      .pipe(switchMapTo(ratio$))\n      .subscribe((currentProgress) => {\n        this.currentProgressDownload$.next(currentProgress);\n      });\n\n    return of(true).pipe(delay(6000));\n  }\n\n  private updateProgress(event: any, progress: any, type: string) {\n    switch (event.type) {\n      case HttpEventType.DownloadProgress:\n        if (type === 'media') {\n          this.mediaDownloadProgress = event.loaded / event.total;\n        } else {\n          this.trekDownloadProgress = event.loaded / event.total;\n        }\n\n        const nbProgress =\n          this.trekDownloadProgress > 0 && this.mediaDownloadProgress > 0\n            ? 2\n            : 1;\n        const currentProgress =\n          this.trekDownloadProgress + this.mediaDownloadProgress;\n        if (currentProgress / nbProgress  this.updateProgress(event, file, 'media')),\n      last(),\n      delayWhen(() => {\n        return from(this.createDirIfNotExists('zip'));\n      }),\n\n      // create offline folder if not exist\n      delayWhen(() => {\n        return from(this.createDirIfNotExists('offline'));\n      }),\n\n      // write zip file inside zip folder\n      delayWhen((zipFile) => {\n        return from(\n          this.file.writeFile(offlineZipUri, `media.zip`, zipFile, {\n            replace: true\n          })\n        ).pipe(\n          tap(() => {}),\n          catchError((error) =>\n            throwError(new Error('Error while writing zip'))\n          )\n        );\n      }),\n\n      // unzip file inside offline folder\n      delayWhen(() => {\n        return from(\n          this.zip.unzip(`${offlineZipUri}media.zip`, offlineUriLocation)\n        ).pipe(\n          tap((unzipResult) => {\n            if (unzipResult === -1) {\n              throw new Error('Error while unziping');\n            }\n          }),\n          catchError((error) => throwError(new Error('Error while unziping')))\n        );\n      }),\n\n      // delete zip file\n      delayWhen(() => {\n        return from(this.file.removeFile(offlineZipUri, `media.zip`));\n      }),\n      map(() => {})\n    );\n  }\n\n  private saveMediaForTrek(trekId: number) {\n    const offlineZipDownloadUrl = `${this.zipUrl}/${trekId}.zip`;\n    const offlineUriLocation = `${this.getDirLocalDataLocation()}offline/`;\n    const offlineZipUri = `${this.getDirLocalDataLocation()}zip/`;\n\n    const req = new HttpRequest('GET', offlineZipDownloadUrl, {\n      responseType: 'blob',\n      reportProgress: true\n    });\n\n    return this.http.request(req).pipe(\n      map((event, file) => this.updateProgress(event, file, 'trek')),\n      last(),\n      // create zip folder if not exist\n      delayWhen(() => from(this.createDirIfNotExists('zip'))),\n\n      // create offline folder if not exist\n      delayWhen(() => from(this.createDirIfNotExists('offline'))),\n\n      // write zip file inside zip folder\n      delayWhen((zipFile) =>\n        from(\n          this.file.writeFile(offlineZipUri, `${trekId}.zip`, zipFile, {\n            replace: true\n          })\n        ).pipe(\n          catchError((error) =>\n            throwError(new Error('Error while writing zip'))\n          )\n        )\n      ),\n\n      // unzip file inside offline folder\n      delayWhen(() =>\n        from(\n          this.zip.unzip(`${offlineZipUri}${trekId}.zip`, offlineUriLocation)\n        ).pipe(\n          tap((unzipResult) => {\n            if (unzipResult === -1) {\n              throw new Error('Error while unziping');\n            }\n          }),\n          catchError((error) => throwError(new Error('Error while unziping')))\n        )\n      ),\n\n      // delete zip file\n      delayWhen(() =>\n        from(this.file.removeFile(offlineZipUri, `${trekId}.zip`))\n      ),\n      map(() => {})\n    );\n  }\n\n  public removeTrek(trekId: number, withMedia: boolean): Observable {\n    const treks = cloneDeep(this.treks$.value);\n    const storage = this.storage;\n    treks.features = [\n      ...treks.features.filter((feature) => feature.properties.id !== trekId)\n    ];\n\n    // update treks\n    this.treks$.next(treks);\n\n    const tasks: Observable[] = [];\n    tasks.push(from(storage.set('offline-treks', JSON.stringify(treks))));\n    tasks.push(from(storage.remove(`pois-trek-${trekId}`)));\n    tasks.push(from(storage.remove(`touristicContents-trek-${trekId}`)));\n\n    let stream: Observable = forkJoin(\n      // remove json data\n      tasks\n    ).pipe(map(() => true));\n\n    if (this.isMobile && withMedia) {\n      stream = stream.pipe(mergeMap(() => this.removeMedia(trekId)));\n    }\n\n    stream = stream.pipe(\n      mergeMap(() => from(this.storage.get(`trek-${trekId}`)))\n    );\n\n    stream = stream.pipe(\n      concatMap((jsonTrek: any) => {\n        const trek: Trek = JSON.parse(jsonTrek);\n        if (\n          trek.properties.children &&\n          trek.properties.children.features.length > 0\n        ) {\n          const childrenToRemove: Observable[] = [];\n          trek.properties.children.features.forEach((children) => {\n            childrenToRemove.push(\n              from(storage.remove(`trek-${trekId}-${children.properties.id}`))\n            );\n            childrenToRemove.push(\n              from(\n                storage.remove(`pois-trek-${trekId}-${children.properties.id}`)\n              )\n            );\n            childrenToRemove.push(\n              from(\n                storage.remove(\n                  `touristicContents-trek-${trekId}-${children.properties.id}`\n                )\n              )\n            );\n          });\n          return childrenToRemove;\n        } else {\n          return of(true);\n        }\n      })\n    );\n\n    stream = stream.pipe(\n      mergeMap(() => {\n        return from(storage.remove(`trek-${trekId}`));\n      })\n    );\n    stream = stream.pipe(catchError(() => throwError(false)));\n\n    return stream;\n  }\n\n  private removeMedia(trekId: number): Observable {\n    const offlineUriLocation = `${this.getDirLocalDataLocation()}offline/`;\n    return from(\n      this.file.removeRecursively(offlineUriLocation, `${trekId}`)\n    ).pipe(\n      map((removeResult) => {\n        if (!removeResult || !removeResult.success) {\n          throw new Error('Error while deleting media');\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n\n  public getTrekById(trekId: number, parentId?: number): Observable {\n    if (parentId) {\n      return from(this.storage.get(`trek-${parentId}-${trekId}`)).pipe(\n        map((jsonTrek: string) => JSON.parse(jsonTrek))\n      );\n    } else {\n      return from(this.storage.get(`trek-${trekId}`)).pipe(\n        map((jsonTrek: string) => JSON.parse(jsonTrek))\n      );\n    }\n  }\n\n  public getPoisForTrekById(\n    trekId: number,\n    parentId: number\n  ): Observable {\n    const path = parentId\n      ? `pois-trek-${parentId}-${trekId}`\n      : `pois-trek-${trekId}`;\n    return from(this.storage.get(path)).pipe(\n      map((jsonPois: string) => {\n        return JSON.parse(jsonPois) as Poi[];\n      }),\n      map(\n        (pois: Poi[]) =>\n          ({\n            type: 'FeatureCollection',\n            features: pois ? pois : []\n          } as Pois)\n      )\n    );\n  }\n\n  public getTouristicContentsForTrekById(\n    trekId: number,\n    parentId: number\n  ): Observable {\n    const path = parentId\n      ? `touristicContents-trek-${parentId}-${trekId}`\n      : `touristicContents-trek-${trekId}`;\n\n    return from(this.storage.get(path)).pipe(\n      map((jsonTouristicContents: string) => JSON.parse(jsonTouristicContents))\n    );\n  }\n\n  public getTouristicEventsForTrekById(\n    trekId: number,\n    parentId: number\n  ): Observable {\n    const path = parentId\n      ? `pois-trek-${parentId}-${trekId}`\n      : `pois-trek-${trekId}`;\n\n    return from(this.storage.get(path)).pipe(\n      map((jsonPois: string) => JSON.parse(jsonPois)),\n      map(\n        (TouristicEventsItems) =>\n          ({\n            type: 'FeatureCollection',\n            features: TouristicEventsItems ? TouristicEventsItems : []\n          } as TouristicEvents)\n      )\n    );\n  }\n\n  private async createDirIfNotExists(dirName: string) {\n    const dirDataLocation = this.getDirLocalDataLocation();\n\n    try {\n      await this.file.checkDir(dirDataLocation, dirName);\n    } catch (check) {\n      if (check.code === 1) {\n        await this.file.createDir(dirDataLocation, dirName, false);\n      }\n    }\n  }\n\n  private getDirLocalDataLocation() {\n    return `${this.file.applicationStorageDirectory}${\n      this.platform.is('ios') ? 'Documents/' : ''\n    }`;\n  }\n\n  public getMapConfigForTrekById(\n    trek: Trek,\n    isOffline: boolean\n  ): MapboxOptions {\n    let mapConfig: MapboxOptions;\n\n    if (isOffline && this.isMobile) {\n      mapConfig = {\n        ...cloneDeep(environment.offlineMapConfig),\n        zoom: environment.trekZoom.zoom\n      };\n\n      if (\n        mapConfig.style &&\n        typeof mapConfig.style !== 'string' &&\n        mapConfig.style.sources\n      ) {\n        (mapConfig.style as any).sources['tiles-background'].tiles[0] =\n          this.getCommonImgSrc() +\n          (environment.offlineMapConfig.style as any).sources[\n            'tiles-background'\n          ].tiles[0];\n\n        if (mapConfig.style.layers) {\n          mapConfig.style.sources['tiles-background-trek'] = {\n            ...mapConfig.style.sources['tiles-background'],\n            tiles: [\n              this.getTilesDirectoryForTrekById(\n                trek.properties.id,\n                mapConfig.style.sources['tiles-background'].type\n              )\n            ]\n          } as any;\n\n          mapConfig.style.layers.push({\n            id: 'tiles-background-trek',\n            type: 'raster',\n            source: 'tiles-background-trek',\n            minzoom: environment.trekZoom.minZoom,\n            maxzoom: environment.trekZoom.maxZoom\n          });\n\n          mapConfig.maxZoom = environment.trekZoom.maxZoom - 1;\n        }\n      }\n    } else {\n      mapConfig = {\n        ...cloneDeep(environment.onlineMapConfig),\n        zoom: environment.trekZoom.zoom\n      };\n    }\n\n    (mapConfig as any).trekBounds = trek.bbox as [\n      number,\n      number,\n      number,\n      number\n    ];\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n\n  private getTilesDirectoryForTrekById(trekId: number, type: string): string {\n    if (type === 'raster') {\n      return `${this.webview.convertFileSrc(\n        this.getDirLocalDataLocation()\n      )}offline/${trekId}/tiles/{z}/{x}/{y}.png`;\n    } else {\n      return `${this.getDirLocalDataLocation()}offline/${trekId}/tiles/{z}/{x}/{y}.pbf`;\n    }\n  }\n\n  public async trekIsAvailableOffline(trekId: number) {\n    return Boolean(await this.storage.get(`trek-${trekId}`));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineTreksService.html":{"url":"injectables/OnlineTreksService.html","title":"injectable - OnlineTreksService","body":"\n                   \n\n\n\n\n\n  Injectables\n  OnlineTreksService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/online-treks/online-treks.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: any, cache: any, filterTreks: any, translate: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public loadTreks\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    loadTreks()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTrekImageSrc\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekImageSrc(trek: any, picture: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getCommonImgSrc\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getCommonImgSrc()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTreksUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTreksUrl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTrekDetailsUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekDetailsUrl(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTrekMapUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekMapUrl(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTreksMapUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTreksMapUrl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getTreks\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTreks()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getPoisForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getPoisForTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTouristicContentsForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTouristicContentsForTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTouristicEventsForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTouristicEventsForTrekById(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getMinimalTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMinimalTrekById(trekId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getMapConfigForTrekById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getMapConfigForTrekById(trek: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private apiUrl\n                                \n                            \n                            \n                                \n                                    apiUrl:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public filteredTreks$\n                                \n                            \n                            \n                                \n                                    filteredTreks$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public offline\n                                \n                            \n                            \n                                \n                                    offline:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: false\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public onlineTreksError$\n                                \n                            \n                            \n                                \n                                    onlineTreksError$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public treks$\n                                \n                            \n                            \n                                \n                                    treks$:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  MinimalTrek,\n  MinimalTreks,\n  Picture,\n  Pois,\n  Trek,\n  TreksService,\n  TouristicContents,\n  TouristicEvents\n} from '@app/interfaces/interfaces';\nimport { CacheService } from '@app/services/cache/cache.service';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { environment } from '@env/environment';\n\nconst cloneDeep = require('lodash.clonedeep');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnlineTreksService implements TreksService {\n  public offline = false;\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public treks$ = new BehaviorSubject(null);\n  public filteredTreks$: Observable;\n  public onlineTreksError$ = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private cache: CacheService,\n    private filterTreks: FilterTreksService,\n    private translate: TranslateService\n  ) {\n    this.filteredTreks$ = this.filterTreks.getFilteredTreks(this.treks$);\n  }\n\n  public loadTreks() {\n    this.onlineTreksError$.next(null);\n    this.getTreks().subscribe(\n      (data) => {\n        this.treks$.next(data);\n      },\n      (error) => {\n        this.onlineTreksError$.next(error);\n      }\n    );\n  }\n\n  /* get the src of the image. if picture is not given, it returs the thumbnail */\n  public getTrekImageSrc(trek: Trek, picture?: Picture): string {\n    if (picture || trek.properties.first_picture) {\n      return (\n        environment.onlineBaseUrl +\n        (!!picture ? picture.url : trek.properties.first_picture.url)\n      );\n    }\n    return '';\n  }\n\n  public getCommonImgSrc(): string {\n    return `${environment.onlineBaseUrl}`;\n  }\n\n  public getTreksUrl(): string {\n    return '/app/tabs/treks';\n  }\n\n  public getTrekDetailsUrl(trekId: number, parentId?: number): string {\n    return !parentId\n      ? `/app/tabs/treks/trek-details/${trekId}`\n      : `/app/tabs/treks/trek-details/${parentId}/${trekId}`;\n  }\n\n  public getTrekMapUrl(trekId: number, parentId?: number): string {\n    return !parentId ? `/app/map/${trekId}` : `/app/map/${parentId}/${trekId}`;\n  }\n\n  public getTreksMapUrl(): string {\n    return `/app/tabs/treks/treks-map/`;\n  }\n\n  private getTreks(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n\n    return this.http.get(\n      `${this.apiUrl}/treks.geojson`,\n      httpOptions\n    );\n  }\n\n  public getTrekById(trekId: number, parentId?: number): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/treks/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/trek.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getPoisForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/pois/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/pois.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getTouristicContentsForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_contents/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/touristic_contents.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getTouristicEventsForTrekById(\n    trekId: number,\n    parentId?: number\n  ): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    if (parentId) {\n      return this.cache.get(\n        `${this.apiUrl}/${parentId}/touristic_events/${trekId}.geojson`,\n        httpOptions\n      );\n    } else {\n      return this.cache.get(\n        `${this.apiUrl}/${trekId}/touristic_events.geojson`,\n        httpOptions\n      );\n    }\n  }\n\n  public getMinimalTrekById(trekId: number): MinimalTrek | undefined {\n    const trek = this.treks$.getValue();\n    if (!!trek) {\n      return trek.features.find((feature) => feature.properties.id === trekId);\n    } else {\n      return undefined;\n    }\n  }\n\n  public getMapConfigForTrekById(trek: Trek): MapboxOptions {\n    const mapConfig: MapboxOptions = {\n      ...cloneDeep(environment.onlineMapConfig),\n      zoom: environment.trekZoom.zoom\n    };\n    (mapConfig as any).trekBounds = trek.bbox as [\n      number,\n      number,\n      number,\n      number\n    ];\n    mapConfig.center = undefined;\n\n    return mapConfig;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchTreksService.html":{"url":"injectables/SearchTreksService.html","title":"injectable - SearchTreksService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SearchTreksService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search-treks/search-treks.service.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public search\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    search(treks: any[], searchValue: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { MinimalTrek } from '@app/interfaces/interfaces';\nimport { deburr } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchTreksService {\n  public search(treks: MinimalTrek[], searchValue: string): MinimalTrek[] {\n    if (!treks) {\n      return [];\n    }\n    if (!!!searchValue) {\n      return treks.sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n    }\n    searchValue = deburr(searchValue.toLowerCase());\n    return treks\n      .filter((trek) => {\n        return deburr(trek.properties.name.toLowerCase()).includes(searchValue);\n      })\n      .sort(function(a, b) {\n        return a.properties.name.localeCompare(b.properties.name);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings/settings.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: any, storage: any, platform: any, network: any, translate: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                    Public loadSettings\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    loadSettings()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private setOfflineSettings\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    setOfflineSettings()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getFilters\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getFilters(settings: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getSettings\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getSettings()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getZoneFromUrl\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getZoneFromUrl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getZoneFromStorage\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getZoneFromStorage()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public saveFiltersState\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveFiltersState(filters: any[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public saveOrderState\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    saveOrderState(order: any, geolocation: number[])\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public resetFilters\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    resetFilters()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private getValueForPropertyById\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getValueForPropertyById(propertyName: string, id: string | number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getHydratedTrek\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getHydratedTrek(trek: any, commonSrc: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public getTouristicCategoriesWithFeatures\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    getTouristicCategoriesWithFeatures(touristicContents: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private apiUrl\n                                \n                            \n                            \n                                \n                                    apiUrl:     string\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public data$\n                                \n                            \n                            \n                                \n                                    data$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public filters$\n                                \n                            \n                            \n                                \n                                    filters$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     http\n                                \n                            \n                            \n                                \n                                    http:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public order$\n                                \n                            \n                            \n                                \n                                    order$:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     storage\n                                \n                            \n                            \n                                \n                                    storage:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Public userLocation$\n                                \n                            \n                            \n                                \n                                    userLocation$:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GeoJSON } from 'geojson';\n\nimport { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { Platform } from '@ionic/angular';\nimport { Network } from '@ionic-native/network/ngx';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport {\n  Trek,\n  Filter,\n  Settings,\n  DataSetting,\n  HydratedTrek,\n  Property,\n  InformationDesk,\n  TouristicCategoryWithFeatures,\n  TouristicContents,\n  TouristicCategorie,\n  Order\n} from '@app/interfaces/interfaces';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  private apiUrl = `${environment.onlineBaseUrl}`;\n\n  public filters$ = new BehaviorSubject(null);\n  public order$ = new BehaviorSubject(null);\n  // User location, used for ordering treks by distance\n  public userLocation$ = new BehaviorSubject([0, 0]);\n  public data$ = new BehaviorSubject(null);\n\n  constructor(\n    public http: HttpClient,\n    public storage: Storage,\n    private platform: Platform,\n    private network: Network,\n    private translate: TranslateService\n  ) {}\n\n  public loadSettings() {\n    this.setOfflineSettings();\n\n    this.getSettings().subscribe(async (settings) => {\n      await this.storage.set('settings', JSON.stringify(settings));\n      this.filters$.next(this.getFilters(settings));\n      this.data$.next(settings.data);\n    });\n\n    this.getZoneFromUrl().subscribe(\n      async (zone) => {\n        await this.storage.set('zone', JSON.stringify(zone));\n      },\n      async () => {\n        if (\n          ((this.platform.is('ios') || this.platform.is('android')) &&\n            this.network.type !== 'none') ||\n          (!this.platform.is('ios') && !this.platform.is('android'))\n        ) {\n          await this.storage.remove('zone');\n        }\n      }\n    );\n  }\n\n  private async setOfflineSettings() {\n    const defaultSettings = JSON.parse(await this.storage.get(`settings`));\n    if (defaultSettings) {\n      this.filters$.next(this.getFilters(defaultSettings));\n      this.data$.next(defaultSettings.data);\n    }\n  }\n\n  private getFilters(settings: Settings) {\n    const filters: Filter[] = [];\n    if (settings && settings.filters && settings.data) {\n      settings.filters.forEach((filter) => {\n        const currentDataSetting = settings.data.find(\n          (data: DataSetting) => data.id === filter.id\n        );\n        if (currentDataSetting) {\n          filter = { ...filter, ...currentDataSetting, values: [] };\n          filter.values = currentDataSetting.values.map((value) => ({\n            ...value,\n            checked: false\n          }));\n          filters.push(filter);\n        }\n      });\n    }\n\n    return filters;\n  }\n\n  public getSettings(): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Accept-Language': this.translate.getDefaultLang()\n      })\n    };\n    return this.http.get(this.apiUrl + '/settings.json', httpOptions);\n  }\n\n  public getZoneFromUrl(): Observable {\n    return this.http.get(this.apiUrl + '/contour/contour.geojson');\n  }\n\n  public async getZoneFromStorage() {\n    const zone = JSON.parse(await this.storage.get('zone'));\n    return zone\n      ? zone\n      : {\n          type: 'FeatureCollection',\n          features: []\n        };\n  }\n\n  public saveFiltersState(filters: Filter[]): void {\n    this.filters$.next(filters);\n  }\n\n  public saveOrderState(order: Order, geolocation?: number[]): void {\n    this.order$.next({ type: order, value: geolocation });\n  }\n\n  public resetFilters(): void {\n    let filters = cloneDeep(this.filters$.getValue());\n    if (!!filters) {\n      filters.forEach((filter) => {\n        filter.values.forEach((value) => (value.checked = false));\n      });\n    } else {\n      filters = [];\n    }\n    this.saveFiltersState(filters);\n  }\n\n  private getValueForPropertyById(\n    propertyName: string,\n    id: number | string\n  ): Property | InformationDesk | TouristicCategorie | string {\n    const dataSetting = this.data$.getValue();\n\n    if (dataSetting) {\n      const property = dataSetting.find((data) => data.id === propertyName);\n      if (property) {\n        const propertyValue = property.values.find((value) => value.id === id);\n        if (propertyValue) {\n          return propertyValue;\n        } else {\n          return { id: -1, name: '' };\n        }\n      }\n    }\n\n    return { id: -1, name: '' };\n  }\n\n  public getHydratedTrek(trek: Trek, commonSrc: string): HydratedTrek {\n    const hydratedTrek: HydratedTrek = cloneDeep(trek) as any;\n\n    if (trek.properties.difficulty) {\n      hydratedTrek.properties.difficulty = this.getValueForPropertyById(\n        'difficulty',\n        trek.properties.difficulty\n      ) as Property;\n    }\n\n    if (trek.properties.practice) {\n      hydratedTrek.properties.practice = this.getValueForPropertyById(\n        'practice',\n        trek.properties.practice\n      ) as Property;\n    }\n\n    if (trek.properties.route) {\n      hydratedTrek.properties.route = this.getValueForPropertyById(\n        'route',\n        trek.properties.route\n      ) as Property;\n    }\n\n    if (trek.properties.departure_city) {\n      hydratedTrek.properties.departure_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.departure_city\n      ) as Property;\n    }\n\n    if (trek.properties.arrival_city) {\n      hydratedTrek.properties.arrival_city = this.getValueForPropertyById(\n        'cities',\n        trek.properties.arrival_city\n      ) as Property;\n    }\n\n    if (trek.properties.cities) {\n      hydratedTrek.properties.cities = trek.properties.cities.map(\n        (city) => this.getValueForPropertyById('cities', city) as Property\n      );\n    }\n\n    if (trek.properties.networks) {\n      hydratedTrek.properties.networks = trek.properties.networks.map(\n        (network) =>\n          this.getValueForPropertyById('networks', network) as Property\n      );\n    }\n\n    if (trek.properties.themes) {\n      hydratedTrek.properties.themes = trek.properties.themes.map(\n        (theme) => this.getValueForPropertyById('themes', theme) as Property\n      );\n    }\n\n    if (trek.properties.information_desks) {\n      hydratedTrek.properties.information_desks.forEach((information_desk) => {\n        information_desk.type = this.getValueForPropertyById(\n          'information_desk_types',\n          information_desk.type as number\n        ) as Property;\n      });\n    }\n\n    const regexp = new RegExp(`src=\"${this.apiUrl}`, 'gi');\n\n    if (trek.properties.description) {\n      hydratedTrek.properties.description = trek.properties.description\n        .replace(regexp, 'src=\"')\n        .replace(/src\\=\\\"\\//gi, `src=\"${commonSrc}/`);\n    }\n\n    if (trek.properties.advice) {\n      hydratedTrek.properties.advice = trek.properties.advice\n        .replace(regexp, 'src=\"')\n        .replace(/src\\=\\\"\\//gi, `src=\"${commonSrc}/`);\n    }\n\n    return hydratedTrek;\n  }\n\n  public getTouristicCategoriesWithFeatures(\n    touristicContents: TouristicContents\n  ): TouristicCategoryWithFeatures[] {\n    const touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[] = [];\n    if (touristicContents && Array.isArray(touristicContents.features)) {\n      const categories = touristicContents.features\n        .map((touristicContent) => touristicContent.properties.category)\n        .filter((v, i, a) => a.indexOf(v) === i);\n      categories.forEach((categoryId) => {\n        const category = this.getValueForPropertyById(\n          'touristiccontent_categories',\n          categoryId\n        ) as TouristicCategorie;\n        touristicCategoriesWithFeatures.push({\n          id: categoryId,\n          name: category ? category.name : '',\n          features: touristicContents.features.filter(\n            (touristicContent) =>\n              touristicContent.properties.category === categoryId\n          )\n        });\n      });\n    }\n\n    return touristicCategoriesWithFeatures;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrekContextResolver.html":{"url":"injectables/TrekContextResolver.html","title":"injectable - TrekContextResolver","body":"\n                   \n\n\n\n\n\n  Injectables\n  TrekContextResolver\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/resolvers/trek.resolver.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(loading: any, offlineTreks: any, onlineTreks: any, router: any, settingsService: any, platform: any, firebaseAnalytics: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     resolve\n                                \n                            \n            \n                            \n                                \n            resolve(route: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\nimport { MapboxOptions } from 'mapbox-gl';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  Pois,\n  Trek,\n  HydratedTrek,\n  TrekContext,\n  TreksService,\n  TouristicContents,\n  TouristicEvents\n} from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { SettingsService } from '@app/services/settings/settings.service';\nimport { LoadingService } from '@app/services/loading/loading.service';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\nimport { Platform } from '@ionic/angular';\nimport { environment } from '@env/environment';\n\n@Injectable()\nexport class TrekContextResolver\n  implements Resolve {\n  constructor(\n    private loading: LoadingService,\n    private offlineTreks: OfflineTreksService,\n    private onlineTreks: OnlineTreksService,\n    private router: Router,\n    private settingsService: SettingsService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const offline = !!route.data['offline'];\n    const isStage = !!route.data['isStage'];\n    const trekId = +(route.paramMap.get('trekId'));\n    const stageId = +(route.paramMap.get('stageId'));\n    const currentTrekId = isStage ? stageId : trekId;\n    const parentId: number | undefined = isStage ? trekId : undefined;\n\n    const treksService: TreksService = offline\n      ? this.offlineTreks\n      : this.onlineTreks;\n\n    return forkJoin(\n      treksService.getTrekById(currentTrekId, parentId),\n      treksService.getPoisForTrekById(currentTrekId, parentId),\n      treksService.getTouristicContentsForTrekById(currentTrekId, parentId),\n      treksService.getTouristicEventsForTrekById(currentTrekId, parentId),\n      isStage && parentId ? treksService.getTrekById(parentId) : of(null)\n    ).pipe(\n      map(\n        ([trek, pois, touristicContents, touristicEvents, parentTrek]: [\n          Trek | null,\n          Pois,\n          TouristicContents,\n          TouristicEvents,\n          Trek | null\n        ]): TrekContext | null => {\n          if (trek === null) {\n            this.router.navigate(['/']);\n            console.error('No trek found: ', currentTrekId);\n            return null;\n          } else {\n            const mapConfig: MapboxOptions = treksService.getMapConfigForTrekById(\n              isStage && parentId ? (parentTrek as Trek) : (trek as Trek),\n              offline\n            );\n            const commonSrc = treksService.getCommonImgSrc();\n            const hydratedTrek: HydratedTrek = this.settingsService.getHydratedTrek(\n              trek,\n              commonSrc\n            );\n            const touristicCategoriesWithFeatures = this.settingsService.getTouristicCategoriesWithFeatures(\n              touristicContents\n            );\n\n            if (\n              (this.platform.is('ios') || this.platform.is('android')) &&\n              environment.useFirebase\n            ) {\n              this.firebaseAnalytics.setCurrentScreen(\n                `${trek.properties.name}`\n              );\n            }\n\n            // get parent trek to display trek name\n            // trek stage\n            // trek previous\n            // trek next\n\n            return {\n              treksTool: treksService,\n              offline: offline,\n              originalTrek: trek,\n              trek: hydratedTrek,\n              pois,\n              touristicContents,\n              touristicCategoriesWithFeatures,\n              touristicEvents,\n              mapConfig,\n              commonSrc,\n              isStage,\n              parentTrek\n            };\n          }\n        }\n      ),\n      catchError((error: HttpErrorResponse) => {\n        this.loading.finish(); // there are two requests. finish loading if one fails\n        if (!error.status) {\n          return of('connectionError' as 'connectionError');\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TreksContextResolver.html":{"url":"injectables/TreksContextResolver.html","title":"injectable - TreksContextResolver","body":"\n                   \n\n\n\n\n\n  Injectables\n  TreksContextResolver\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/resolvers/treks.resolver.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(onlineTreks: any, offlineTreks: any, platform: any, firebaseAnalytics: any)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     resolve\n                                \n                            \n            \n                            \n                                \n            resolve(route: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nimport { TreksContext, TreksService } from '@app/interfaces/interfaces';\nimport { OfflineTreksService } from '@app/services/offline-treks/offline-treks.service';\nimport { OnlineTreksService } from '@app/services/online-treks/online-treks.service';\nimport { environment } from '@env/environment';\nimport { FirebaseAnalytics } from '@ionic-native/firebase-analytics/ngx';\n\n@Injectable()\nexport class TreksContextResolver implements Resolve {\n  constructor(\n    private onlineTreks: OnlineTreksService,\n    private offlineTreks: OfflineTreksService,\n    private platform: Platform,\n    private firebaseAnalytics: FirebaseAnalytics\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable {\n    const offline = !!route.data['offline'];\n    const treksService: TreksService = offline\n      ? this.offlineTreks\n      : this.onlineTreks;\n    const mapConfig =\n      offline && (this.platform.is('ios') || this.platform.is('android'))\n        ? environment.offlineMapConfig\n        : environment.onlineMapConfig;\n\n    if (\n      (this.platform.is('ios') || this.platform.is('android')) &&\n      environment.useFirebase\n    ) {\n      this.firebaseAnalytics.setCurrentScreen(`Treks`);\n    }\n\n    return of({\n      treksTool: treksService,\n      offline: offline,\n      mapConfig\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\nRoutes\n\n    \n        \n            path\n            pathMatch\n            component\n            redirectTo\n        \n\n        \n            \n                    \" \"\n            \n            full\n            \n            app\n        \n        \n            \n                    app\n            \n            \n            \n            \n        \n        \n            \n                    app/map/:trekId\n            \n            \n            \n            \n        \n        \n            \n                    app/map/:trekId/:stageId\n            \n            \n            \n            \n        \n        \n            \n                    app/map-offline/:trekId\n            \n            \n            \n            \n        \n        \n            \n                    app/map-offline/:trekId/:stageId\n            \n            \n            \n            \n        \n        \n            \n                    \" \"\n            \n            \n            MoreItemPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            MorePage\n            \n        \n        \n            \n                    tabs\n            \n            \n            TabsPage\n            \n        \n        \n            \n                    \" \"\n            \n            full\n            \n            /app/tabs/treks\n        \n        \n            \n                    \" \"\n            \n            \n            TrekDetailsPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            TrekMapPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            TreksMapPage\n            \n        \n\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/LowerRoundPipe.html":{"url":"pipes/LowerRoundPipe.html","title":"pipe - LowerRoundPipe","body":"\n                   \n\n\n\n\n\n\n  Pipes\n  LowerRoundPipe\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pipes/lower-round.pipe.ts\n        \n\n\n\n    \n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'lowerRound' })\nexport class LowerRoundPipe implements PipeTransform {\n  transform(value: number): number {\n    return Math.floor(value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnSubscribe.html":{"url":"classes/UnSubscribe.html","title":"class - UnSubscribe","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  UnSubscribe\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/abstract/unsubscribe.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Protected subscriptions$$\n                                \n                            \n                            \n                                \n                                    subscriptions$$:     any[]\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\nexport class UnSubscribe implements OnInit, OnDestroy {\n  protected subscriptions$$: Subscription[];\n\n  constructor() {\n    this.subscriptions$$ = [];\n  }\n\n  ngOnInit() {\n    if (!!this.subscriptions$$) {\n      this.subscriptions$$ = [];\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions$$.forEach((subscription: Subscription) =>\n      unsubscribe(subscription)\n    );\n    this.subscriptions$$ = [];\n  }\n}\n\nexport function unsubscribe(subscription: Subscription) {\n  if (subscription && subscription.unsubscribe) {\n    subscription.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainsFilter.html":{"url":"interfaces/ContainsFilter.html","title":"interface - ContainsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ContainsFilter\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"difficulty\" | \"themes\" | \"usages\" | \"accessibilities\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSetting.html":{"url":"interfaces/DataSetting.html","title":"interface - DataSetting","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  DataSetting\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Filter.html":{"url":"interfaces/Filter.html","title":"interface - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Filter\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        hideAllLabel\n                                    \n                                \n                                \n                                    \n                                        hideAllLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showAllLabel\n                                    \n                                \n                                \n                                    \n                                        showAllLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"contains\" | \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"contains\" | \"interval\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     FilterValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterValue[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterValue.html":{"url":"interfaces/FilterValue.html","title":"interface - FilterValue","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  FilterValue\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        interval\n                                    \n                                \n                                \n                                    \n                                        interval:     [number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrek.html":{"url":"interfaces/HydratedTrek.html","title":"interface - HydratedTrek","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrek\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     { type: \"MultiPoint\"; coordinates: number[][]; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { type: \"MultiPoint\"; coordinates: number[][]; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     HydratedTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HydratedTrekProperties\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"Feature\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Feature\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HydratedTrekProperties.html":{"url":"interfaces/HydratedTrekProperties.html","title":"interface - HydratedTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  HydratedTrekProperties\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        ambiance\n                                    \n                                \n                                \n                                    \n                                        ambiance:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:     Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Treks\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:     Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:     Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:     InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InformationDesk[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        parking_location\n                                    \n                                \n                                \n                                    \n                                        parking_location:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:     Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Picture[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        points_reference\n                                    \n                                \n                                \n                                    \n                                        points_reference:     number[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[][]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:     Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:     Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     Property[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Property[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationDesk.html":{"url":"interfaces/InformationDesk.html","title":"interface - InformationDesk","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InformationDesk\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        municipality\n                                    \n                                \n                                \n                                    \n                                        municipality:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        photo_url\n                                    \n                                \n                                \n                                    \n                                        photo_url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        picture\n                                    \n                                \n                                \n                                    \n                                        picture:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        postal_code\n                                    \n                                \n                                \n                                    \n                                        postal_code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     number | Property\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | Property\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        website\n                                    \n                                \n                                \n                                    \n                                        website:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationIntro.html":{"url":"interfaces/InformationIntro.html","title":"interface - InformationIntro","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InformationIntro\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InformationItem.html":{"url":"interfaces/InformationItem.html","title":"interface - InformationItem","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  InformationItem\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        external_url\n                                    \n                                \n                                \n                                    \n                                        external_url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntervalFilter.html":{"url":"interfaces/IntervalFilter.html","title":"interface - IntervalFilter","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  IntervalFilter\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     \"length\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"length\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"interval\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"interval\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrek.html":{"url":"interfaces/MinimalTrek.html","title":"interface - MinimalTrek","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrek\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     { type: \"Point\"; coordinates: number[]; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { type: \"Point\"; coordinates: number[]; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     MinimalTrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrekProperties\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"Feature\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Feature\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTrekProperties.html":{"url":"interfaces/MinimalTrekProperties.html","title":"interface - MinimalTrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTrekProperties\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        accessibilities\n                                    \n                                \n                                \n                                    \n                                        accessibilities:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        difficulty\n                                    \n                                \n                                \n                                    \n                                        difficulty:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        first_picture\n                                    \n                                \n                                \n                                    \n                                        first_picture:     { author: string; legend: string; title: string; url: string; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { author: string; legend: string; title: string; url: string; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        length\n                                    \n                                \n                                \n                                    \n                                        length:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        practice\n                                    \n                                \n                                \n                                    \n                                        practice:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        themes\n                                    \n                                \n                                \n                                    \n                                        themes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        usages\n                                    \n                                \n                                \n                                    \n                                        usages:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MinimalTreks.html":{"url":"interfaces/MinimalTreks.html","title":"interface - MinimalTreks","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  MinimalTreks\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     MinimalTrek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinimalTrek[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Picture.html":{"url":"interfaces/Picture.html","title":"interface - Picture","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Picture\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        author\n                                    \n                                \n                                \n                                    \n                                        author:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        legend\n                                    \n                                \n                                \n                                    \n                                        legend:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Poi.html":{"url":"interfaces/Poi.html","title":"interface - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Poi\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     { type: \"Point\"; coordinates: number[]; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { type: \"Point\"; coordinates: number[]; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     { id: number; pictures: Picture[]; name: string; description: string; thumbnail: string; practica...\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { id: number; pictures: Picture[]; name: string; description: string; thumbnail: string; practica...\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"Feature\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Feature\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pois.html":{"url":"interfaces/Pois.html","title":"interface - Pois","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Pois\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     Poi[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Poi[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"FeatureCollection\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"FeatureCollection\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Property.html":{"url":"interfaces/Property.html","title":"interface - Property","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Property\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pictogram\n                                    \n                                \n                                \n                                    \n                                        pictogram:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        slug\n                                    \n                                \n                                \n                                    \n                                        slug:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Settings.html":{"url":"interfaces/Settings.html","title":"interface - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Settings\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     DataSetting[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DataSetting[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     Filter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Filter[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategorie.html":{"url":"interfaces/TouristicCategorie.html","title":"interface - TouristicCategorie","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategorie\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicCategoryWithFeatures.html":{"url":"interfaces/TouristicCategoryWithFeatures.html","title":"interface - TouristicCategoryWithFeatures","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicCategoryWithFeatures\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TouristicContent[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContent.html":{"url":"interfaces/TouristicContent.html","title":"interface - TouristicContent","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContent\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     { type: \"Point\"; coordinates: number[]; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { type: \"Point\"; coordinates: number[]; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     { id: number; pictures: Picture[]; name: string; description: string; description_teaser: string;...\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { id: number; pictures: Picture[]; name: string; description: string; description_teaser: string;...\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"Feature\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Feature\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicContents.html":{"url":"interfaces/TouristicContents.html","title":"interface - TouristicContents","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicContents\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     TouristicContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TouristicContent[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"FeatureCollection\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"FeatureCollection\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvent.html":{"url":"interfaces/TouristicEvent.html","title":"interface - TouristicEvent","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvent\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     { type: \"Point\"; coordinates: number[]; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { type: \"Point\"; coordinates: number[]; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     { id: number; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { id: number; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"Feature\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Feature\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TouristicEvents.html":{"url":"interfaces/TouristicEvents.html","title":"interface - TouristicEvents","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TouristicEvents\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     TouristicEvent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TouristicEvent[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"FeatureCollection\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"FeatureCollection\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Trek.html":{"url":"interfaces/Trek.html","title":"interface - Trek","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Trek\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        geometry\n                                    \n                                \n                                \n                                    \n                                        geometry:     { type: \"MultiPoint\"; coordinates: number[][]; }\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     { type: \"MultiPoint\"; coordinates: number[][]; }\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     TrekProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TrekProperties\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"Feature\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Feature\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekContext.html":{"url":"interfaces/TrekContext.html","title":"interface - TrekContext","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TrekContext\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        commonSrc\n                                    \n                                \n                                \n                                    \n                                        commonSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        isStage\n                                    \n                                \n                                \n                                    \n                                        isStage:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        originalTrek\n                                    \n                                \n                                \n                                    \n                                        originalTrek:     Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Trek\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        parentTrek\n                                    \n                                \n                                \n                                    \n                                        parentTrek:     Trek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Trek\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pois\n                                    \n                                \n                                \n                                    \n                                        pois:     Pois\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Pois\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        touristicCategoriesWithFeatures\n                                    \n                                \n                                \n                                    \n                                        touristicCategoriesWithFeatures:     TouristicCategoryWithFeatures[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TouristicCategoryWithFeatures[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        touristicContents\n                                    \n                                \n                                \n                                    \n                                        touristicContents:     TouristicContents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TouristicContents\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        touristicEvents\n                                    \n                                \n                                \n                                    \n                                        touristicEvents:     TouristicEvents\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TouristicEvents\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        trek\n                                    \n                                \n                                \n                                    \n                                        trek:     HydratedTrek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HydratedTrek\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:     TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreksService\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrekProperties.html":{"url":"interfaces/TrekProperties.html","title":"interface - TrekProperties","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TrekProperties\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        access\n                                    \n                                \n                                \n                                    \n                                        access:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        advice\n                                    \n                                \n                                \n                                    \n                                        advice:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        advised_parking\n                                    \n                                \n                                \n                                    \n                                        advised_parking:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        arrival\n                                    \n                                \n                                \n                                    \n                                        arrival:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        arrival_city\n                                    \n                                \n                                \n                                    \n                                        arrival_city:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        ascent\n                                    \n                                \n                                \n                                    \n                                        ascent:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:     Treks\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Treks\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        cities\n                                    \n                                \n                                \n                                    \n                                        cities:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        departure\n                                    \n                                \n                                \n                                    \n                                        departure:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        departure_city\n                                    \n                                \n                                \n                                    \n                                        departure_city:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        description_teaser\n                                    \n                                \n                                \n                                    \n                                        description_teaser:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        information_desks\n                                    \n                                \n                                \n                                    \n                                        information_desks:     InformationDesk[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InformationDesk[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        is_park_centered\n                                    \n                                \n                                \n                                    \n                                        is_park_centered:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        networks\n                                    \n                                \n                                \n                                    \n                                        networks:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        pictures\n                                    \n                                \n                                \n                                    \n                                        pictures:     Picture[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Picture[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Treks.html":{"url":"interfaces/Treks.html","title":"interface - Treks","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Treks\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        features\n                                    \n                                \n                                \n                                    \n                                        features:     Trek[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Trek[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"FeatureCollection\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"FeatureCollection\"\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksContext.html":{"url":"interfaces/TreksContext.html","title":"interface - TreksContext","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TreksContext\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        mapConfig\n                                    \n                                \n                                \n                                    \n                                        mapConfig:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        treksTool\n                                    \n                                \n                                \n                                    \n                                        treksTool:     TreksService\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TreksService\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TreksService.html":{"url":"interfaces/TreksService.html","title":"interface - TreksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  TreksService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/interfaces.ts\n        \n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getTrekById\n                                \n                            \n            \n                            \n                                \n            getTrekById(id: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getPoisForTrekById\n                                \n                            \n            \n                            \n                                \n            getPoisForTrekById(id: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTouristicContentsForTrekById\n                                \n                            \n            \n                            \n                                \n            getTouristicContentsForTrekById(id: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTouristicEventsForTrekById\n                                \n                            \n            \n                            \n                                \n            getTouristicEventsForTrekById(id: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTreksUrl\n                                \n                            \n            \n                            \n                                \n            getTreksUrl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTrekDetailsUrl\n                                \n                            \n            \n                            \n                                \n            getTrekDetailsUrl(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTrekImageSrc\n                                \n                            \n            \n                            \n                                \n            getTrekImageSrc(trek: Trek, picture: Picture)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTreksMapUrl\n                                \n                            \n            \n                            \n                                \n            getTreksMapUrl()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTrekMapUrl\n                                \n                            \n            \n                            \n                                \n            getTrekMapUrl(trekId: number, parentId: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getMapConfigForTrekById\n                                \n                            \n            \n                            \n                                \n            getMapConfigForTrekById(trek: Trek, isOffline: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getCommonImgSrc\n                                \n                            \n            \n                            \n                                \n            getCommonImgSrc()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        filteredTreks$\n                                    \n                                \n                                \n                                    \n                                        filteredTreks$:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        offline\n                                    \n                                \n                                \n                                    \n                                        offline:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        treks$\n                                    \n                                \n                                \n                                    \n                                        treks$:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import { Feature, FeatureCollection, MultiPoint, Point } from 'geojson';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MapboxOptions } from 'mapbox-gl';\n\nexport interface MinimalTreks {\n  type: string;\n  name: string;\n  features: MinimalTrek[];\n}\n\nexport interface MinimalTrekProperties {\n  id: number;\n  first_picture: { author: string; legend: string; title: string; url: string };\n  name: string;\n  departure: string;\n  accessibilities: number[];\n  difficulty: number;\n  practice: number;\n  themes: number[];\n  usages: number[];\n  length: number;\n}\n\nexport interface MinimalTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: MinimalTrekProperties;\n}\n\nexport interface TrekProperties extends MinimalTrekProperties {\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  route: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  networks: number[];\n  cities: string[];\n  information_desks: InformationDesk[];\n  departure_city?: string;\n  arrival_city?: string;\n  children: Treks;\n}\n\nexport interface Trek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: TrekProperties;\n}\n\nexport interface HydratedTrek extends Feature {\n  type: 'Feature';\n  geometry: { type: 'MultiPoint'; coordinates: number[][] };\n  properties: HydratedTrekProperties;\n}\n\nexport interface HydratedTrekProperties {\n  id: number;\n  thumbnail: string;\n  name: string;\n  usages: number[];\n  length: number;\n  departure: string;\n  pictures: Picture[];\n  description_teaser: string;\n  duration: number;\n  arrival: string;\n  ascent: number;\n  description: string;\n  is_park_centered: boolean;\n  access: string;\n  advised_parking: string;\n  advice: string;\n  difficulty: Property;\n  practice: Property;\n  route: Property;\n  accessibilities: Property[];\n  cities: Property[];\n  networks: Property[];\n  themes: Property[];\n  information_desks: InformationDesk[];\n  departure_city?: Property;\n  arrival_city?: Property;\n  parking_location: number[];\n  profile: string;\n  slug?: string;\n  points_reference?: number[][];\n  ambiance: string;\n  children: Treks;\n}\n\nexport interface InformationDesk {\n  id: number;\n  description: string;\n  email: string;\n  latitude: number;\n  longitude: number;\n  municipality: string;\n  name: string;\n  phone: string;\n  photo_url: string;\n  postal_code: string;\n  street: string;\n  website: string;\n  type: number | Property;\n  picture: string;\n}\n\nexport interface Picture {\n  author: string;\n  legend: string;\n  title: string;\n  url: string;\n}\n\nexport interface Filter {\n  id: string;\n  name: string;\n  type: 'contains' | 'interval';\n  values: FilterValue[];\n  showAllLabel: string;\n  hideAllLabel: string;\n}\n\nexport type Order = 'alphabetical' | 'location' | 'random' | null;\n\nexport interface IntervalFilter extends Filter {\n  id: 'length'; // TODO: complete this\n  type: 'interval';\n}\n\nexport interface ContainsFilter extends Filter {\n  id: 'difficulty' | 'themes' | 'usages' | 'accessibilities'; // TODO: complete this or change this\n  type: 'contains';\n}\n\nexport interface FilterValue {\n  id: number;\n  name: string;\n  checked: boolean;\n  interval?: [number, number];\n  pictogram?: string;\n  color?: string;\n}\n\nexport interface InformationIntro {\n  id: number;\n  title: string;\n}\n\nexport interface InformationItem {\n  id: number;\n  title: string;\n  content: string;\n  external_url: string;\n}\n\nexport interface Settings {\n  data: DataSetting[];\n  filters: Filter[];\n}\n\nexport interface DataSetting {\n  id: string;\n  name: string;\n  values: Property[];\n}\n\nexport interface Property {\n  id: number;\n  name: string;\n  pictogram?: string;\n  color?: string;\n  slug?: string;\n}\n\nexport interface Pois extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Poi[];\n}\n\nexport interface Poi extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    thumbnail: string;\n    practical_info?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n    type?: number;\n  };\n}\n\nexport interface TouristicContents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicContent[];\n}\n\nexport interface TouristicContent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n    pictures: Picture[];\n    name: string;\n    description: string;\n    description_teaser: string;\n    category: number;\n  };\n}\n\nexport interface TouristicCategorie {\n  id: number;\n  name: string;\n}\n\nexport interface TouristicCategoryWithFeatures {\n  id: number;\n  name: string;\n  features: TouristicContent[];\n}\n\nexport interface TouristicEvents extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: TouristicEvent[];\n}\n\nexport interface TouristicEvent extends Feature {\n  type: 'Feature';\n  geometry: { type: 'Point'; coordinates: number[] };\n  properties: {\n    id: number;\n  };\n}\n\nexport interface Treks extends FeatureCollection {\n  type: 'FeatureCollection';\n  features: Trek[];\n}\n\nexport interface TreksService {\n  offline: boolean;\n  treks$: Observable;\n  filteredTreks$: Observable;\n  getTrekById(id: number, parentId?: number): Observable;\n  getPoisForTrekById(id: number, parentId?: number): Observable;\n  getTouristicContentsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTouristicEventsForTrekById(\n    id: number,\n    parentId?: number\n  ): Observable;\n  getTreksUrl(): string;\n  getTrekDetailsUrl(trekId: number, parentId?: number): string;\n  getTrekImageSrc(trek: Trek, picture?: Picture): string;\n  getTreksMapUrl(): string;\n  getTrekMapUrl(trekId: number, parentId?: number): string;\n  getMapConfigForTrekById(trek: Trek, isOffline: boolean): MapboxOptions;\n  getCommonImgSrc(): string;\n}\n\n/* Navigation contexts */\n\nexport interface TrekContext {\n  offline: boolean;\n  pois: Pois;\n  originalTrek: Trek;\n  trek: HydratedTrek;\n  treksTool: TreksService;\n  mapConfig: MapboxOptions;\n  touristicContents: TouristicContents;\n  touristicCategoriesWithFeatures: TouristicCategoryWithFeatures[];\n  touristicEvents: TouristicEvents;\n  commonSrc: string;\n  isStage: boolean;\n  parentTrek: Trek | null;\n}\n\nexport interface TreksContext {\n  offline: boolean;\n  treksTool: TreksService;\n  mapConfig: any;\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             distance\n                        \n                    \n                    \n                        \n                            distance:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mapboxgl\n                        \n                    \n                    \n                        \n                            mapboxgl:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mapboxgl\n                        \n                    \n                    \n                        \n                            mapboxgl:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             distance\n                        \n                    \n                    \n                        \n                            distance:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cloneDeep\n                        \n                    \n                    \n                        \n                            cloneDeep:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cloneDeep\n                        \n                    \n                    \n                        \n                            cloneDeep:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             primaryColor\n                        \n                    \n                    \n                        \n                            primaryColor:     \n    \n                        \n                    \n                        \n                            \n                                Default value: #3880ff\n                            \n                        \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    3%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/components/abstract/unsubscribe.ts\n            \n            \n                classe\n            \n            \n                UnSubscribe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/components/collapsible-list/collapsible-list.component.ts\n            \n            \n                component\n            \n            \n                CollapsibleListComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                src/app/components/connect-error/connect-error.component.ts\n            \n            \n                component\n            \n            \n                ConnectErrorComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/components/filter-value/filter-value.component.ts\n            \n            \n                component\n            \n            \n                FilterValueComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/components/filter/filter.component.ts\n            \n            \n                component\n            \n            \n                FilterComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/components/filters/filters.component.ts\n            \n            \n                component\n            \n            \n                FiltersComponent\n            \n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                src/app/components/geolocate-notifications/geolocate-notifications.component.ts\n            \n            \n                component\n            \n            \n                GeolocateNotificationsComponent\n            \n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                src/app/components/in-app-disclosure/in-app-disclosure.component.ts\n            \n            \n                component\n            \n            \n                InAppDisclosureComponent\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                src/app/components/information-desk-details/information-desk-details.component.ts\n            \n            \n                component\n            \n            \n                InformationDeskDetailsComponent\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                src/app/components/layers-visibility/layers-visibility.component.ts\n            \n            \n                component\n            \n            \n                LayersVisibilityComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/components/loader/loader.component.ts\n            \n            \n                component\n            \n            \n                LoaderComponent\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                src/app/components/map-trek-viz/map-trek-viz.component.ts\n            \n            \n                component\n            \n            \n                MapTrekVizComponent\n            \n            \n                9 %\n                (3/31)\n            \n        \n        \n            \n                src/app/components/map-treks-viz/map-treks-viz.component.ts\n            \n            \n                component\n            \n            \n                MapTreksVizComponent\n            \n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                src/app/components/poi-details/poi-details.component.ts\n            \n            \n                component\n            \n            \n                PoiDetailsComponent\n            \n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                src/app/components/poi/poi.component.ts\n            \n            \n                component\n            \n            \n                PoiComponent\n            \n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                src/app/components/progress/progress.component.ts\n            \n            \n                component\n            \n            \n                ProgressComponent\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                src/app/components/search/search.component.ts\n            \n            \n                component\n            \n            \n                SearchComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                src/app/components/select-filter/select-filter.component.ts\n            \n            \n                component\n            \n            \n                SelectFilterComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                src/app/components/select-poi/select-poi.component.ts\n            \n            \n                component\n            \n            \n                SelectPoiComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/components/select-trek/select-trek.component.ts\n            \n            \n                component\n            \n            \n                SelectTrekComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/components/trek-card/trek-card.component.ts\n            \n            \n                component\n            \n            \n                TrekCardComponent\n            \n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                src/app/components/treks-order/treks-order.component.ts\n            \n            \n                component\n            \n            \n                TreksOrderComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                ContainsFilter\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                DataSetting\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Filter\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                FilterValue\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                HydratedTrek\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                HydratedTrekProperties\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                InformationDesk\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                InformationIntro\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                InformationItem\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                IntervalFilter\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                MinimalTrek\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                MinimalTrekProperties\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                MinimalTreks\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Picture\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Poi\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Pois\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Property\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Settings\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TouristicCategorie\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TouristicCategoryWithFeatures\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TouristicContent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TouristicContents\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TouristicEvent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TouristicEvents\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Trek\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TrekContext\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TrekProperties\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                Treks\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TreksContext\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/interfaces/interfaces.ts\n            \n            \n                interface\n            \n            \n                TreksService\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                src/app/pages/more/more-item/more-item.page.ts\n            \n            \n                component\n            \n            \n                MoreItemPage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/pages/more/more.page.ts\n            \n            \n                component\n            \n            \n                MorePage\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/pages/tabs/tabs.page.ts\n            \n            \n                component\n            \n            \n                TabsPage\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/pages/trek-details/trek-details.page.ts\n            \n            \n                component\n            \n            \n                TrekDetailsPage\n            \n            \n                5 %\n                (2/36)\n            \n        \n        \n            \n                src/app/pages/trek-map/trek-map.page.ts\n            \n            \n                component\n            \n            \n                TrekMapPage\n            \n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                src/app/pages/treks-map/treks-map.page.ts\n            \n            \n                component\n            \n            \n                TreksMapPage\n            \n            \n                12 %\n                (3/25)\n            \n        \n        \n            \n                src/app/pages/treks/treks.page.ts\n            \n            \n                component\n            \n            \n                TreksPage\n            \n            \n                12 %\n                (4/32)\n            \n        \n        \n            \n                src/app/pipes/lower-round.pipe.ts\n            \n            \n                pipe\n            \n            \n                LowerRoundPipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/resolvers/more-item.resolver.ts\n            \n            \n                injectable\n            \n            \n                MoreItemResolver\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/resolvers/more.resolver.ts\n            \n            \n                injectable\n            \n            \n                MoreResolver\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/resolvers/trek.resolver.ts\n            \n            \n                injectable\n            \n            \n                TrekContextResolver\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/resolvers/treks.resolver.ts\n            \n            \n                injectable\n            \n            \n                TreksContextResolver\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/services/cache/cache.service.ts\n            \n            \n                injectable\n            \n            \n                CacheService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/app/services/filter-treks/filter-treks.service.ts\n            \n            \n                injectable\n            \n            \n                FilterTreksService\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/services/geolocate/geolocate.service.ts\n            \n            \n                injectable\n            \n            \n                GeolocateService\n            \n            \n                21 %\n                (4/19)\n            \n        \n        \n            \n                src/app/services/loading/loading.service.ts\n            \n            \n                injectable\n            \n            \n                LoadingInterceptor\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/services/loading/loading.service.ts\n            \n            \n                injectable\n            \n            \n                LoadingService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/services/more-informations/more-informations.service.ts\n            \n            \n                injectable\n            \n            \n                MoreInformationsService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                src/app/services/offline-treks/offline-treks.service.ts\n            \n            \n                injectable\n            \n            \n                OfflineTreksService\n            \n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                src/app/services/online-treks/online-treks.service.ts\n            \n            \n                injectable\n            \n            \n                OnlineTreksService\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                src/app/services/search-treks/search-treks.service.ts\n            \n            \n                injectable\n            \n            \n                SearchTreksService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/services/settings/settings.service.ts\n            \n            \n                injectable\n            \n            \n                SettingsService\n            \n            \n                10 %\n                (2/19)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
